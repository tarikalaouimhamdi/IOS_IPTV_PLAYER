Directory structure:
└── tarikalaouimhamdi-ios_iptv_player/
    ├── README.md
    ├── LICENSE
    └── sources/
        ├── Cartfile
        ├── Cartfile.resolved
        ├── .swiftformat
        ├── Components/
        │   ├── Package.swift
        │   ├── Library/
        │   │   ├── CircularProgressView.swift
        │   │   ├── CustomButton.swift
        │   │   ├── FoldSnappingScrollTargetBehavior.swift
        │   │   ├── HeroHeaderView.swift
        │   │   ├── Thumbnail.swift
        │   │   ├── Extensions/
        │   │   │   └── String+extension.swift
        │   │   ├── Shelf/
        │   │   │   ├── FavoriLiveShelf.swift
        │   │   │   ├── FavoriMovieShelf.swift
        │   │   │   ├── FavoriSerieShelf.swift
        │   │   │   ├── LiveSearchShelf.swift
        │   │   │   ├── LiveShelf.swift
        │   │   │   ├── MovieSearchShelf.swift
        │   │   │   ├── MovieShelf.swift
        │   │   │   ├── SerieSearchShelf.swift
        │   │   │   └── SerieShelf.swift
        │   │   └── SnackBar/
        │   │       ├── AlertToast.swift
        │   │       ├── BlurView.swift
        │   │       ├── ColorExtension.swift
        │   │       ├── Snackbar.swift
        │   │       ├── SnackbarStore.swift
        │   │       ├── SnackbarStyle.swift
        │   │       └── SnackbarViewExtension.swift
        │   ├── Models/
        │   │   ├── ServerInfo.swift
        │   │   ├── UserInfo.swift
        │   │   ├── Categories/
        │   │   │   ├── Category.swift
        │   │   │   └── CategoryEntity.swift
        │   │   ├── Common/
        │   │   │   └── KindMedia.swift
        │   │   ├── Favorites/
        │   │   │   └── FavoriEntity.swift
        │   │   ├── Series/
        │   │   │   ├── CachedSeries.swift
        │   │   │   └── Series.swift
        │   │   ├── Stream/
        │   │   │   ├── CachedStream.swift
        │   │   │   └── Stream.swift
        │   │   └── TMDB/
        │   │       └── TMDBImages.swift
        │   ├── Protocols/
        │   │   ├── APIManagerProtocol.swift
        │   │   └── CacheManagerProtocol.swift
        │   └── Resources/
        │       └── Fonts/
        │           ├── Font Awesome 5 Brands-Regular-400.otf
        │           ├── Font Awesome 5 Free-Regular-400.otf
        │           └── Font Awesome 5 Free-Solid-900.otf
        ├── GoogleCast.xcframework/
        │   ├── Info.plist
        │   ├── ios-arm64/
        │   │   └── GoogleCast.framework/
        │   │       ├── GoogleCast
        │   │       ├── Info.plist
        │   │       ├── PrivacyInfo.xcprivacy
        │   │       ├── GoogleCastCoreResources.bundle/
        │   │       │   ├── af.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── ar.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── bg.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── bn.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── ca.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── CastFrameworkDB.momd/
        │   │       │   │   ├── CastFrameworkDB.mom
        │   │       │   │   ├── CastFrameworkDB01.mom
        │   │       │   │   ├── CastFrameworkDB02.mom
        │   │       │   │   ├── CastFrameworkDB03.mom
        │   │       │   │   ├── CastFrameworkDB04.mom
        │   │       │   │   ├── CastFrameworkDB05.mom
        │   │       │   │   ├── CastFrameworkDB06.mom
        │   │       │   │   ├── CastFrameworkDB07.mom
        │   │       │   │   ├── CastFrameworkDB08.mom
        │   │       │   │   ├── CastFrameworkDB09.mom
        │   │       │   │   ├── CastFrameworkDB10.mom
        │   │       │   │   ├── CastFrameworkDB11.mom
        │   │       │   │   ├── CastFrameworkDB11.omo
        │   │       │   │   └── VersionInfo.plist
        │   │       │   ├── cs.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── da.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── de.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── el.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── en.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── en_GB.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── es.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── es_419.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── et.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── fa.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── fi.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── fil.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── fr.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── hi.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── hr.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── hu.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── hy.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── id.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── is.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── it.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── iw.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── ja.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── ka.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── km.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── ko.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── lo.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── lt.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── lv.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── mk.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── mn.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── mr.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── ms.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── my.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── ne.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── nl.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── no.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── pl.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── pt.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── pt_PT.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── ro.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── ru.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── si.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── sk.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── sl.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── sr.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── sv.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── sw.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── ta.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── th.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── tr.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── uk.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── vi.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── zh.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   ├── zh_CN.lproj/
        │   │       │   │   └── CoreLocalizable.strings
        │   │       │   └── zh_TW.lproj/
        │   │       │       └── CoreLocalizable.strings
        │   │       ├── GoogleCastUIResources.bundle/
        │   │       │   ├── af.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── ar.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── Base.lproj/
        │   │       │   │   └── CastComponents.storyboardc/
        │   │       │   │       ├── 4HD-aa-FNo-view-1HP-BM-J3I.nib
        │   │       │   │       ├── 6is-ze-qoP-view-Vah-jq-ZgN.nib
        │   │       │   │       ├── 9V7-ce-5KJ-view-WQF-my-40r.nib
        │   │       │   │       ├── a4H-bv-VbH-view-Xbz-9K-eDJ.nib
        │   │       │   │       ├── C87-rF-Kff-view-Z93-bw-eCT.nib
        │   │       │   │       ├── CastContainer.nib
        │   │       │   │       ├── CastInstructions.nib
        │   │       │   │       ├── DeviceConnectionNavigation.nib
        │   │       │   │       ├── egs-hj-bEX-view-MTY-Nw-q8O.nib
        │   │       │   │       ├── ExpandedMediaControlsViewController.nib
        │   │       │   │       ├── Info.plist
        │   │       │   │       ├── MediaTrackSelectionController.nib
        │   │       │   │       ├── MediaTrackSelectionNavigation.nib
        │   │       │   │       ├── MiniMediaControlsViewController.nib
        │   │       │   │       └── mzQ-08-M2L-view-QcC-yO-nhF.nib
        │   │       │   ├── bg.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── bn.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── ca.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── cs.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── da.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── de.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── el.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── en.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── en_GB.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── es.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── es_419.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── et.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── fa.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── fi.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── fil.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── fr.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── hi.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── hr.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── hu.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── hy.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── id.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── is.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── it.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── iw.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── ja.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── ka.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── km.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── ko.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── lo.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── lt.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── lv.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── mk.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── mn.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── mr.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── ms.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── my.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── ne.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── nl.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── no.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── pl.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── pt.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── pt_PT.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── ro.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── ru.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── si.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── sk.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── sl.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── sr.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── sv.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── sw.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── ta.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── th.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── tr.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── uk.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── vi.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── zh.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   ├── zh_CN.lproj/
        │   │       │   │   ├── CastComponents.strings
        │   │       │   │   └── UILocalizable.strings
        │   │       │   └── zh_TW.lproj/
        │   │       │       ├── CastComponents.strings
        │   │       │       └── UILocalizable.strings
        │   │       ├── Headers/
        │   │       │   ├── GCKAdBreakClipInfo.h
        │   │       │   ├── GCKAdBreakInfo.h
        │   │       │   ├── GCKAdBreakStatus.h
        │   │       │   ├── GCKApplicationMetadata.h
        │   │       │   ├── GCKCastChannel.h
        │   │       │   ├── GCKCastContext+UI.h
        │   │       │   ├── GCKCastContext.h
        │   │       │   ├── GCKCastOptions.h
        │   │       │   ├── GCKCastSession.h
        │   │       │   ├── GCKColor.h
        │   │       │   ├── GCKCommon.h
        │   │       │   ├── GCKCredentialsData.h
        │   │       │   ├── GCKDefines.h
        │   │       │   ├── GCKDevice.h
        │   │       │   ├── GCKDeviceProvider+Protected.h
        │   │       │   ├── GCKDeviceProvider.h
        │   │       │   ├── GCKDiscoveryCriteria.h
        │   │       │   ├── GCKDiscoveryManager.h
        │   │       │   ├── GCKDynamicDevice.h
        │   │       │   ├── GCKError.h
        │   │       │   ├── GCKGenericChannel.h
        │   │       │   ├── GCKHLSSegmentFormat.h
        │   │       │   ├── GCKHLSVideoSegmentFormat.h
        │   │       │   ├── GCKImage.h
        │   │       │   ├── GCKJSONUtils.h
        │   │       │   ├── GCKLaunchOptions.h
        │   │       │   ├── GCKLogger.h
        │   │       │   ├── GCKLoggerCommon.h
        │   │       │   ├── GCKLoggerFilter.h
        │   │       │   ├── GCKMediaCommon.h
        │   │       │   ├── GCKMediaInformation.h
        │   │       │   ├── GCKMediaLiveSeekableRange.h
        │   │       │   ├── GCKMediaLoadOptions.h
        │   │       │   ├── GCKMediaLoadRequestData.h
        │   │       │   ├── GCKMediaMetadata.h
        │   │       │   ├── GCKMediaQueue.h
        │   │       │   ├── GCKMediaQueueContainerMetadata.h
        │   │       │   ├── GCKMediaQueueData.h
        │   │       │   ├── GCKMediaQueueItem.h
        │   │       │   ├── GCKMediaQueueLoadOptions.h
        │   │       │   ├── GCKMediaRequestItem.h
        │   │       │   ├── GCKMediaSeekOptions.h
        │   │       │   ├── GCKMediaStatus.h
        │   │       │   ├── GCKMediaTextTrackStyle.h
        │   │       │   ├── GCKMediaTrack.h
        │   │       │   ├── GCKMultizoneDevice.h
        │   │       │   ├── GCKMultizoneStatus.h
        │   │       │   ├── GCKNetworkAddress.h
        │   │       │   ├── GCKOpenURLOptions.h
        │   │       │   ├── GCKRemoteMediaClient+Protected.h
        │   │       │   ├── GCKRemoteMediaClient.h
        │   │       │   ├── GCKRequest.h
        │   │       │   ├── GCKSenderApplicationInfo.h
        │   │       │   ├── GCKSession+Protected.h
        │   │       │   ├── GCKSession.h
        │   │       │   ├── GCKSessionManager.h
        │   │       │   ├── GCKSessionOptions.h
        │   │       │   ├── GCKSessionTraits.h
        │   │       │   ├── GCKUIButton.h
        │   │       │   ├── GCKUICastButton.h
        │   │       │   ├── GCKUICastContainerViewController.h
        │   │       │   ├── GCKUIDeviceVolumeController.h
        │   │       │   ├── GCKUIExpandedMediaControlsViewController.h
        │   │       │   ├── GCKUIImageCache.h
        │   │       │   ├── GCKUIImageHints.h
        │   │       │   ├── GCKUIImagePicker.h
        │   │       │   ├── GCKUIMediaButtonBarProtocol.h
        │   │       │   ├── GCKUIMediaController.h
        │   │       │   ├── GCKUIMediaTrackSelectionViewController.h
        │   │       │   ├── GCKUIMiniMediaControlsViewController.h
        │   │       │   ├── GCKUIMultistateButton.h
        │   │       │   ├── GCKUIPlaybackRateController.h
        │   │       │   ├── GCKUIPlayPauseToggleController.h
        │   │       │   ├── GCKUIStreamPositionController.h
        │   │       │   ├── GCKUIStyle.h
        │   │       │   ├── GCKUIStyleAttributes.h
        │   │       │   ├── GCKUIUtils.h
        │   │       │   ├── GCKVastAdsRequest.h
        │   │       │   ├── GCKVideoInfo.h
        │   │       │   ├── GoogleCast.h
        │   │       │   ├── NSDictionary+GCKAdditions.h
        │   │       │   ├── NSMutableDictionary+GCKAdditions.h
        │   │       │   └── NSTimer+GCKAdditions.h
        │   │       ├── MaterialDialogs.bundle/
        │   │       │   └── Resources/
        │   │       │       ├── am.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── ar.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── az.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── be.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── bg.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── bn.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── bs.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── ca.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── cs.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── cy.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── da.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── de.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── el.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── en.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── en_AU.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── en_GB.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── en_IN.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── es.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── es_419.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── es_MX.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── et.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── eu.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── fa.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── fi.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── fil.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── fr.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── fr_CA.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── ga.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── gl.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── gu.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── he.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── hi.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── hr.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── hu.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── hy.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── id.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── is.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── it.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── ja.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── jv.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── ka.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── kk.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── km.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── kn.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── ko.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── ky.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── lo.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── lt.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── lv.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── mk.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── ml.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── mn.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── mr.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── ms.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── my.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── nb.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── ne.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── nl.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── pa.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── pl.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── ps.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── pt.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── pt_BR.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── pt_PT.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── ro.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── ru.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── si.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── sk.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── sl.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── so.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── sq.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── sr.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── sr_Latn.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── sv.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── sw.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── ta.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── te.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── th.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── tk.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── tr.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── uk.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── ur.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── uz.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── vi.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── yue_HK.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── zh_CN.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── zh_HK.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       ├── zh_TW.lproj/
        │   │       │       │   └── MaterialDialogs.strings
        │   │       │       └── zu.lproj/
        │   │       │           └── MaterialDialogs.strings
        │   │       └── Modules/
        │   │           └── module.modulemap
        │   └── ios-arm64_x86_64-simulator/
        │       └── GoogleCast.framework/
        │           ├── GoogleCast
        │           ├── Info.plist
        │           ├── PrivacyInfo.xcprivacy
        │           ├── GoogleCastCoreResources.bundle/
        │           │   ├── af.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── ar.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── bg.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── bn.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── ca.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── CastFrameworkDB.momd/
        │           │   │   ├── CastFrameworkDB.mom
        │           │   │   ├── CastFrameworkDB01.mom
        │           │   │   ├── CastFrameworkDB02.mom
        │           │   │   ├── CastFrameworkDB03.mom
        │           │   │   ├── CastFrameworkDB04.mom
        │           │   │   ├── CastFrameworkDB05.mom
        │           │   │   ├── CastFrameworkDB06.mom
        │           │   │   ├── CastFrameworkDB07.mom
        │           │   │   ├── CastFrameworkDB08.mom
        │           │   │   ├── CastFrameworkDB09.mom
        │           │   │   ├── CastFrameworkDB10.mom
        │           │   │   ├── CastFrameworkDB11.mom
        │           │   │   ├── CastFrameworkDB11.omo
        │           │   │   └── VersionInfo.plist
        │           │   ├── cs.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── da.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── de.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── el.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── en.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── en_GB.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── es.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── es_419.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── et.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── fa.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── fi.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── fil.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── fr.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── hi.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── hr.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── hu.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── hy.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── id.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── is.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── it.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── iw.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── ja.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── ka.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── km.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── ko.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── lo.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── lt.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── lv.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── mk.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── mn.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── mr.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── ms.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── my.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── ne.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── nl.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── no.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── pl.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── pt.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── pt_PT.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── ro.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── ru.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── si.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── sk.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── sl.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── sr.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── sv.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── sw.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── ta.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── th.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── tr.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── uk.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── vi.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── zh.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   ├── zh_CN.lproj/
        │           │   │   └── CoreLocalizable.strings
        │           │   └── zh_TW.lproj/
        │           │       └── CoreLocalizable.strings
        │           ├── GoogleCastUIResources.bundle/
        │           │   ├── af.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── ar.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── Base.lproj/
        │           │   │   └── CastComponents.storyboardc/
        │           │   │       ├── 4HD-aa-FNo-view-1HP-BM-J3I.nib
        │           │   │       ├── 6is-ze-qoP-view-Vah-jq-ZgN.nib
        │           │   │       ├── 9V7-ce-5KJ-view-WQF-my-40r.nib
        │           │   │       ├── a4H-bv-VbH-view-Xbz-9K-eDJ.nib
        │           │   │       ├── C87-rF-Kff-view-Z93-bw-eCT.nib
        │           │   │       ├── CastContainer.nib
        │           │   │       ├── CastInstructions.nib
        │           │   │       ├── DeviceConnectionNavigation.nib
        │           │   │       ├── egs-hj-bEX-view-MTY-Nw-q8O.nib
        │           │   │       ├── ExpandedMediaControlsViewController.nib
        │           │   │       ├── Info.plist
        │           │   │       ├── MediaTrackSelectionController.nib
        │           │   │       ├── MediaTrackSelectionNavigation.nib
        │           │   │       ├── MiniMediaControlsViewController.nib
        │           │   │       └── mzQ-08-M2L-view-QcC-yO-nhF.nib
        │           │   ├── bg.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── bn.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── ca.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── cs.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── da.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── de.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── el.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── en.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── en_GB.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── es.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── es_419.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── et.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── fa.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── fi.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── fil.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── fr.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── hi.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── hr.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── hu.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── hy.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── id.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── is.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── it.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── iw.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── ja.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── ka.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── km.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── ko.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── lo.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── lt.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── lv.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── mk.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── mn.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── mr.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── ms.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── my.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── ne.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── nl.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── no.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── pl.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── pt.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── pt_PT.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── ro.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── ru.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── si.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── sk.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── sl.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── sr.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── sv.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── sw.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── ta.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── th.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── tr.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── uk.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── vi.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── zh.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   ├── zh_CN.lproj/
        │           │   │   ├── CastComponents.strings
        │           │   │   └── UILocalizable.strings
        │           │   └── zh_TW.lproj/
        │           │       ├── CastComponents.strings
        │           │       └── UILocalizable.strings
        │           ├── Headers/
        │           │   ├── GCKAdBreakClipInfo.h
        │           │   ├── GCKAdBreakInfo.h
        │           │   ├── GCKAdBreakStatus.h
        │           │   ├── GCKApplicationMetadata.h
        │           │   ├── GCKCastChannel.h
        │           │   ├── GCKCastContext+UI.h
        │           │   ├── GCKCastContext.h
        │           │   ├── GCKCastOptions.h
        │           │   ├── GCKCastSession.h
        │           │   ├── GCKColor.h
        │           │   ├── GCKCommon.h
        │           │   ├── GCKCredentialsData.h
        │           │   ├── GCKDefines.h
        │           │   ├── GCKDevice.h
        │           │   ├── GCKDeviceProvider+Protected.h
        │           │   ├── GCKDeviceProvider.h
        │           │   ├── GCKDiscoveryCriteria.h
        │           │   ├── GCKDiscoveryManager.h
        │           │   ├── GCKDynamicDevice.h
        │           │   ├── GCKError.h
        │           │   ├── GCKGenericChannel.h
        │           │   ├── GCKHLSSegmentFormat.h
        │           │   ├── GCKHLSVideoSegmentFormat.h
        │           │   ├── GCKImage.h
        │           │   ├── GCKJSONUtils.h
        │           │   ├── GCKLaunchOptions.h
        │           │   ├── GCKLogger.h
        │           │   ├── GCKLoggerCommon.h
        │           │   ├── GCKLoggerFilter.h
        │           │   ├── GCKMediaCommon.h
        │           │   ├── GCKMediaInformation.h
        │           │   ├── GCKMediaLiveSeekableRange.h
        │           │   ├── GCKMediaLoadOptions.h
        │           │   ├── GCKMediaLoadRequestData.h
        │           │   ├── GCKMediaMetadata.h
        │           │   ├── GCKMediaQueue.h
        │           │   ├── GCKMediaQueueContainerMetadata.h
        │           │   ├── GCKMediaQueueData.h
        │           │   ├── GCKMediaQueueItem.h
        │           │   ├── GCKMediaQueueLoadOptions.h
        │           │   ├── GCKMediaRequestItem.h
        │           │   ├── GCKMediaSeekOptions.h
        │           │   ├── GCKMediaStatus.h
        │           │   ├── GCKMediaTextTrackStyle.h
        │           │   ├── GCKMediaTrack.h
        │           │   ├── GCKMultizoneDevice.h
        │           │   ├── GCKMultizoneStatus.h
        │           │   ├── GCKNetworkAddress.h
        │           │   ├── GCKOpenURLOptions.h
        │           │   ├── GCKRemoteMediaClient+Protected.h
        │           │   ├── GCKRemoteMediaClient.h
        │           │   ├── GCKRequest.h
        │           │   ├── GCKSenderApplicationInfo.h
        │           │   ├── GCKSession+Protected.h
        │           │   ├── GCKSession.h
        │           │   ├── GCKSessionManager.h
        │           │   ├── GCKSessionOptions.h
        │           │   ├── GCKSessionTraits.h
        │           │   ├── GCKUIButton.h
        │           │   ├── GCKUICastButton.h
        │           │   ├── GCKUICastContainerViewController.h
        │           │   ├── GCKUIDeviceVolumeController.h
        │           │   ├── GCKUIExpandedMediaControlsViewController.h
        │           │   ├── GCKUIImageCache.h
        │           │   ├── GCKUIImageHints.h
        │           │   ├── GCKUIImagePicker.h
        │           │   ├── GCKUIMediaButtonBarProtocol.h
        │           │   ├── GCKUIMediaController.h
        │           │   ├── GCKUIMediaTrackSelectionViewController.h
        │           │   ├── GCKUIMiniMediaControlsViewController.h
        │           │   ├── GCKUIMultistateButton.h
        │           │   ├── GCKUIPlaybackRateController.h
        │           │   ├── GCKUIPlayPauseToggleController.h
        │           │   ├── GCKUIStreamPositionController.h
        │           │   ├── GCKUIStyle.h
        │           │   ├── GCKUIStyleAttributes.h
        │           │   ├── GCKUIUtils.h
        │           │   ├── GCKVastAdsRequest.h
        │           │   ├── GCKVideoInfo.h
        │           │   ├── GoogleCast.h
        │           │   ├── NSDictionary+GCKAdditions.h
        │           │   ├── NSMutableDictionary+GCKAdditions.h
        │           │   └── NSTimer+GCKAdditions.h
        │           ├── MaterialDialogs.bundle/
        │           │   └── Resources/
        │           │       ├── am.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── ar.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── az.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── be.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── bg.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── bn.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── bs.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── ca.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── cs.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── cy.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── da.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── de.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── el.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── en.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── en_AU.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── en_GB.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── en_IN.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── es.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── es_419.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── es_MX.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── et.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── eu.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── fa.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── fi.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── fil.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── fr.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── fr_CA.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── ga.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── gl.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── gu.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── he.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── hi.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── hr.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── hu.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── hy.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── id.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── is.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── it.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── ja.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── jv.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── ka.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── kk.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── km.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── kn.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── ko.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── ky.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── lo.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── lt.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── lv.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── mk.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── ml.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── mn.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── mr.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── ms.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── my.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── nb.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── ne.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── nl.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── pa.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── pl.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── ps.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── pt.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── pt_BR.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── pt_PT.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── ro.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── ru.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── si.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── sk.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── sl.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── so.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── sq.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── sr.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── sr_Latn.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── sv.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── sw.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── ta.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── te.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── th.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── tk.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── tr.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── uk.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── ur.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── uz.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── vi.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── yue_HK.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── zh_CN.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── zh_HK.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       ├── zh_TW.lproj/
        │           │       │   └── MaterialDialogs.strings
        │           │       └── zu.lproj/
        │           │           └── MaterialDialogs.strings
        │           └── Modules/
        │               └── module.modulemap
        ├── IPTV/
        │   ├── AppDelegate.swift
        │   ├── ContentView.swift
        │   ├── Info.plist
        │   ├── IPTVApp.swift
        │   ├── IPTVDebug.entitlements
        │   ├── Assets.xcassets/
        │   │   ├── Contents.json
        │   │   ├── AccentColor.colorset/
        │   │   │   └── Contents.json
        │   │   ├── App Icon & Top Shelf Image.brandassets/
        │   │   │   ├── Contents.json
        │   │   │   ├── App Icon - App Store.imagestack/
        │   │   │   │   ├── Contents.json
        │   │   │   │   ├── Back.imagestacklayer/
        │   │   │   │   │   ├── Contents.json
        │   │   │   │   │   └── Content.imageset/
        │   │   │   │   │       └── Contents.json
        │   │   │   │   ├── Front.imagestacklayer/
        │   │   │   │   │   ├── Contents.json
        │   │   │   │   │   └── Content.imageset/
        │   │   │   │   │       └── Contents.json
        │   │   │   │   └── Middle.imagestacklayer/
        │   │   │   │       ├── Contents.json
        │   │   │   │       └── Content.imageset/
        │   │   │   │           └── Contents.json
        │   │   │   ├── App Icon.imagestack/
        │   │   │   │   ├── Contents.json
        │   │   │   │   ├── Back.imagestacklayer/
        │   │   │   │   │   ├── Contents.json
        │   │   │   │   │   └── Content.imageset/
        │   │   │   │   │       └── Contents.json
        │   │   │   │   ├── Front.imagestacklayer/
        │   │   │   │   │   ├── Contents.json
        │   │   │   │   │   └── Content.imageset/
        │   │   │   │   │       └── Contents.json
        │   │   │   │   └── Middle.imagestacklayer/
        │   │   │   │       ├── Contents.json
        │   │   │   │       └── Content.imageset/
        │   │   │   │           └── Contents.json
        │   │   │   ├── Top Shelf Image Wide.imageset/
        │   │   │   │   └── Contents.json
        │   │   │   └── Top Shelf Image.imageset/
        │   │   │       └── Contents.json
        │   │   ├── AppIcon.appiconset/
        │   │   │   └── Contents.json
        │   │   ├── beach_landscape.imageset/
        │   │   │   └── Contents.json
        │   │   ├── beach_portrait.imageset/
        │   │   │   └── Contents.json
        │   │   └── yucca_portrait.imageset/
        │   │       └── Contents.json
        │   ├── AsyncImage/
        │   │   ├── AsyncImage.swift
        │   │   ├── ImageCache.swift
        │   │   └── ImageLoader.swift
        │   ├── Configs/
        │   │   ├── AppConfig.swift
        │   │   └── default.xcconfig
        │   ├── Extensions/
        │   │   ├── Array+extension.swift
        │   │   ├── CachedSeries+url.swift
        │   │   ├── CachedStream+url.swift
        │   │   ├── Episode+url.swift
        │   │   ├── FavoryEntity+url.swift
        │   │   ├── UIView+resize.swift
        │   │   └── URL.extension.swift
        │   ├── Fonts/
        │   │   ├── Font Awesome 5 Brands-Regular-400.otf
        │   │   ├── Font Awesome 5 Free-Regular-400.otf
        │   │   └── Font Awesome 5 Free-Solid-900.otf
        │   ├── Player/
        │   │   ├── VideoPlayerView.swift
        │   │   ├── ViewPlayerContent.swift
        │   │   └── VPlayerController.swift
        │   ├── Preview Content/
        │   │   └── Preview Assets.xcassets/
        │   │       └── Contents.json
        │   ├── Services/
        │   │   ├── APIManager.swift
        │   │   ├── CacheManager.swift
        │   │   └── TMDBAPIManager.swift
        │   ├── UseCases/
        │   │   └── LiveUseCase.swift
        │   └── Views/
        │       ├── LiveView.swift
        │       ├── SearchView.swift
        │       ├── SerieDetailView.swift
        │       ├── SeriesView.swift
        │       ├── SettingsView.swift
        │       └── VodView.swift
        ├── IPTV.xcodeproj/
        │   ├── project.pbxproj
        │   ├── project.xcworkspace/
        │   │   ├── contents.xcworkspacedata
        │   │   └── xcshareddata/
        │   │       └── swiftpm/
        │   │           └── Package.resolved
        │   └── xcshareddata/
        │       └── xcschemes/
        │           ├── IPTV-iOS.xcscheme
        │           ├── IPTV-PROD.xcscheme
        │           ├── IPTV-tvos.xcscheme
        │           └── IPTV.xcscheme
        ├── IPTV.xcworkspace/
        │   ├── contents.xcworkspacedata
        │   └── xcshareddata/
        │       └── swiftpm/
        │           └── Package.resolved
        └── IPTVTestsTests/
            └── Generated/
                └── AutoMockableIPTV.generated.swift

================================================
FILE: README.md
================================================
# IOS_IPTV_PLAYER
IOS_IPTV_PLAYER is an open source player for IPTV channels / vods. I don't provide any stream link nor accounts.



================================================
FILE: LICENSE
================================================
                    GNU GENERAL PUBLIC LICENSE
                       Version 3, 29 June 2007

 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.

                            Preamble

  The GNU General Public License is a free, copyleft license for
software and other kinds of works.

  The licenses for most software and other practical works are designed
to take away your freedom to share and change the works.  By contrast,
the GNU General Public License is intended to guarantee your freedom to
share and change all versions of a program--to make sure it remains free
software for all its users.  We, the Free Software Foundation, use the
GNU General Public License for most of our software; it applies also to
any other work released this way by its authors.  You can apply it to
your programs, too.

  When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
them if you wish), that you receive source code or can get it if you
want it, that you can change the software or use pieces of it in new
free programs, and that you know you can do these things.

  To protect your rights, we need to prevent others from denying you
these rights or asking you to surrender the rights.  Therefore, you have
certain responsibilities if you distribute copies of the software, or if
you modify it: responsibilities to respect the freedom of others.

  For example, if you distribute copies of such a program, whether
gratis or for a fee, you must pass on to the recipients the same
freedoms that you received.  You must make sure that they, too, receive
or can get the source code.  And you must show them these terms so they
know their rights.

  Developers that use the GNU GPL protect your rights with two steps:
(1) assert copyright on the software, and (2) offer you this License
giving you legal permission to copy, distribute and/or modify it.

  For the developers' and authors' protection, the GPL clearly explains
that there is no warranty for this free software.  For both users' and
authors' sake, the GPL requires that modified versions be marked as
changed, so that their problems will not be attributed erroneously to
authors of previous versions.

  Some devices are designed to deny users access to install or run
modified versions of the software inside them, although the manufacturer
can do so.  This is fundamentally incompatible with the aim of
protecting users' freedom to change the software.  The systematic
pattern of such abuse occurs in the area of products for individuals to
use, which is precisely where it is most unacceptable.  Therefore, we
have designed this version of the GPL to prohibit the practice for those
products.  If such problems arise substantially in other domains, we
stand ready to extend this provision to those domains in future versions
of the GPL, as needed to protect the freedom of users.

  Finally, every program is threatened constantly by software patents.
States should not allow patents to restrict development and use of
software on general-purpose computers, but in those that do, we wish to
avoid the special danger that patents applied to a free program could
make it effectively proprietary.  To prevent this, the GPL assures that
patents cannot be used to render the program non-free.

  The precise terms and conditions for copying, distribution and
modification follow.

                       TERMS AND CONDITIONS

  0. Definitions.

  "This License" refers to version 3 of the GNU General Public License.

  "Copyright" also means copyright-like laws that apply to other kinds of
works, such as semiconductor masks.

  "The Program" refers to any copyrightable work licensed under this
License.  Each licensee is addressed as "you".  "Licensees" and
"recipients" may be individuals or organizations.

  To "modify" a work means to copy from or adapt all or part of the work
in a fashion requiring copyright permission, other than the making of an
exact copy.  The resulting work is called a "modified version" of the
earlier work or a work "based on" the earlier work.

  A "covered work" means either the unmodified Program or a work based
on the Program.

  To "propagate" a work means to do anything with it that, without
permission, would make you directly or secondarily liable for
infringement under applicable copyright law, except executing it on a
computer or modifying a private copy.  Propagation includes copying,
distribution (with or without modification), making available to the
public, and in some countries other activities as well.

  To "convey" a work means any kind of propagation that enables other
parties to make or receive copies.  Mere interaction with a user through
a computer network, with no transfer of a copy, is not conveying.

  An interactive user interface displays "Appropriate Legal Notices"
to the extent that it includes a convenient and prominently visible
feature that (1) displays an appropriate copyright notice, and (2)
tells the user that there is no warranty for the work (except to the
extent that warranties are provided), that licensees may convey the
work under this License, and how to view a copy of this License.  If
the interface presents a list of user commands or options, such as a
menu, a prominent item in the list meets this criterion.

  1. Source Code.

  The "source code" for a work means the preferred form of the work
for making modifications to it.  "Object code" means any non-source
form of a work.

  A "Standard Interface" means an interface that either is an official
standard defined by a recognized standards body, or, in the case of
interfaces specified for a particular programming language, one that
is widely used among developers working in that language.

  The "System Libraries" of an executable work include anything, other
than the work as a whole, that (a) is included in the normal form of
packaging a Major Component, but which is not part of that Major
Component, and (b) serves only to enable use of the work with that
Major Component, or to implement a Standard Interface for which an
implementation is available to the public in source code form.  A
"Major Component", in this context, means a major essential component
(kernel, window system, and so on) of the specific operating system
(if any) on which the executable work runs, or a compiler used to
produce the work, or an object code interpreter used to run it.

  The "Corresponding Source" for a work in object code form means all
the source code needed to generate, install, and (for an executable
work) run the object code and to modify the work, including scripts to
control those activities.  However, it does not include the work's
System Libraries, or general-purpose tools or generally available free
programs which are used unmodified in performing those activities but
which are not part of the work.  For example, Corresponding Source
includes interface definition files associated with source files for
the work, and the source code for shared libraries and dynamically
linked subprograms that the work is specifically designed to require,
such as by intimate data communication or control flow between those
subprograms and other parts of the work.

  The Corresponding Source need not include anything that users
can regenerate automatically from other parts of the Corresponding
Source.

  The Corresponding Source for a work in source code form is that
same work.

  2. Basic Permissions.

  All rights granted under this License are granted for the term of
copyright on the Program, and are irrevocable provided the stated
conditions are met.  This License explicitly affirms your unlimited
permission to run the unmodified Program.  The output from running a
covered work is covered by this License only if the output, given its
content, constitutes a covered work.  This License acknowledges your
rights of fair use or other equivalent, as provided by copyright law.

  You may make, run and propagate covered works that you do not
convey, without conditions so long as your license otherwise remains
in force.  You may convey covered works to others for the sole purpose
of having them make modifications exclusively for you, or provide you
with facilities for running those works, provided that you comply with
the terms of this License in conveying all material for which you do
not control copyright.  Those thus making or running the covered works
for you must do so exclusively on your behalf, under your direction
and control, on terms that prohibit them from making any copies of
your copyrighted material outside their relationship with you.

  Conveying under any other circumstances is permitted solely under
the conditions stated below.  Sublicensing is not allowed; section 10
makes it unnecessary.

  3. Protecting Users' Legal Rights From Anti-Circumvention Law.

  No covered work shall be deemed part of an effective technological
measure under any applicable law fulfilling obligations under article
11 of the WIPO copyright treaty adopted on 20 December 1996, or
similar laws prohibiting or restricting circumvention of such
measures.

  When you convey a covered work, you waive any legal power to forbid
circumvention of technological measures to the extent such circumvention
is effected by exercising rights under this License with respect to
the covered work, and you disclaim any intention to limit operation or
modification of the work as a means of enforcing, against the work's
users, your or third parties' legal rights to forbid circumvention of
technological measures.

  4. Conveying Verbatim Copies.

  You may convey verbatim copies of the Program's source code as you
receive it, in any medium, provided that you conspicuously and
appropriately publish on each copy an appropriate copyright notice;
keep intact all notices stating that this License and any
non-permissive terms added in accord with section 7 apply to the code;
keep intact all notices of the absence of any warranty; and give all
recipients a copy of this License along with the Program.

  You may charge any price or no price for each copy that you convey,
and you may offer support or warranty protection for a fee.

  5. Conveying Modified Source Versions.

  You may convey a work based on the Program, or the modifications to
produce it from the Program, in the form of source code under the
terms of section 4, provided that you also meet all of these conditions:

    a) The work must carry prominent notices stating that you modified
    it, and giving a relevant date.

    b) The work must carry prominent notices stating that it is
    released under this License and any conditions added under section
    7.  This requirement modifies the requirement in section 4 to
    "keep intact all notices".

    c) You must license the entire work, as a whole, under this
    License to anyone who comes into possession of a copy.  This
    License will therefore apply, along with any applicable section 7
    additional terms, to the whole of the work, and all its parts,
    regardless of how they are packaged.  This License gives no
    permission to license the work in any other way, but it does not
    invalidate such permission if you have separately received it.

    d) If the work has interactive user interfaces, each must display
    Appropriate Legal Notices; however, if the Program has interactive
    interfaces that do not display Appropriate Legal Notices, your
    work need not make them do so.

  A compilation of a covered work with other separate and independent
works, which are not by their nature extensions of the covered work,
and which are not combined with it such as to form a larger program,
in or on a volume of a storage or distribution medium, is called an
"aggregate" if the compilation and its resulting copyright are not
used to limit the access or legal rights of the compilation's users
beyond what the individual works permit.  Inclusion of a covered work
in an aggregate does not cause this License to apply to the other
parts of the aggregate.

  6. Conveying Non-Source Forms.

  You may convey a covered work in object code form under the terms
of sections 4 and 5, provided that you also convey the
machine-readable Corresponding Source under the terms of this License,
in one of these ways:

    a) Convey the object code in, or embodied in, a physical product
    (including a physical distribution medium), accompanied by the
    Corresponding Source fixed on a durable physical medium
    customarily used for software interchange.

    b) Convey the object code in, or embodied in, a physical product
    (including a physical distribution medium), accompanied by a
    written offer, valid for at least three years and valid for as
    long as you offer spare parts or customer support for that product
    model, to give anyone who possesses the object code either (1) a
    copy of the Corresponding Source for all the software in the
    product that is covered by this License, on a durable physical
    medium customarily used for software interchange, for a price no
    more than your reasonable cost of physically performing this
    conveying of source, or (2) access to copy the
    Corresponding Source from a network server at no charge.

    c) Convey individual copies of the object code with a copy of the
    written offer to provide the Corresponding Source.  This
    alternative is allowed only occasionally and noncommercially, and
    only if you received the object code with such an offer, in accord
    with subsection 6b.

    d) Convey the object code by offering access from a designated
    place (gratis or for a charge), and offer equivalent access to the
    Corresponding Source in the same way through the same place at no
    further charge.  You need not require recipients to copy the
    Corresponding Source along with the object code.  If the place to
    copy the object code is a network server, the Corresponding Source
    may be on a different server (operated by you or a third party)
    that supports equivalent copying facilities, provided you maintain
    clear directions next to the object code saying where to find the
    Corresponding Source.  Regardless of what server hosts the
    Corresponding Source, you remain obligated to ensure that it is
    available for as long as needed to satisfy these requirements.

    e) Convey the object code using peer-to-peer transmission, provided
    you inform other peers where the object code and Corresponding
    Source of the work are being offered to the general public at no
    charge under subsection 6d.

  A separable portion of the object code, whose source code is excluded
from the Corresponding Source as a System Library, need not be
included in conveying the object code work.

  A "User Product" is either (1) a "consumer product", which means any
tangible personal property which is normally used for personal, family,
or household purposes, or (2) anything designed or sold for incorporation
into a dwelling.  In determining whether a product is a consumer product,
doubtful cases shall be resolved in favor of coverage.  For a particular
product received by a particular user, "normally used" refers to a
typical or common use of that class of product, regardless of the status
of the particular user or of the way in which the particular user
actually uses, or expects or is expected to use, the product.  A product
is a consumer product regardless of whether the product has substantial
commercial, industrial or non-consumer uses, unless such uses represent
the only significant mode of use of the product.

  "Installation Information" for a User Product means any methods,
procedures, authorization keys, or other information required to install
and execute modified versions of a covered work in that User Product from
a modified version of its Corresponding Source.  The information must
suffice to ensure that the continued functioning of the modified object
code is in no case prevented or interfered with solely because
modification has been made.

  If you convey an object code work under this section in, or with, or
specifically for use in, a User Product, and the conveying occurs as
part of a transaction in which the right of possession and use of the
User Product is transferred to the recipient in perpetuity or for a
fixed term (regardless of how the transaction is characterized), the
Corresponding Source conveyed under this section must be accompanied
by the Installation Information.  But this requirement does not apply
if neither you nor any third party retains the ability to install
modified object code on the User Product (for example, the work has
been installed in ROM).

  The requirement to provide Installation Information does not include a
requirement to continue to provide support service, warranty, or updates
for a work that has been modified or installed by the recipient, or for
the User Product in which it has been modified or installed.  Access to a
network may be denied when the modification itself materially and
adversely affects the operation of the network or violates the rules and
protocols for communication across the network.

  Corresponding Source conveyed, and Installation Information provided,
in accord with this section must be in a format that is publicly
documented (and with an implementation available to the public in
source code form), and must require no special password or key for
unpacking, reading or copying.

  7. Additional Terms.

  "Additional permissions" are terms that supplement the terms of this
License by making exceptions from one or more of its conditions.
Additional permissions that are applicable to the entire Program shall
be treated as though they were included in this License, to the extent
that they are valid under applicable law.  If additional permissions
apply only to part of the Program, that part may be used separately
under those permissions, but the entire Program remains governed by
this License without regard to the additional permissions.

  When you convey a copy of a covered work, you may at your option
remove any additional permissions from that copy, or from any part of
it.  (Additional permissions may be written to require their own
removal in certain cases when you modify the work.)  You may place
additional permissions on material, added by you to a covered work,
for which you have or can give appropriate copyright permission.

  Notwithstanding any other provision of this License, for material you
add to a covered work, you may (if authorized by the copyright holders of
that material) supplement the terms of this License with terms:

    a) Disclaiming warranty or limiting liability differently from the
    terms of sections 15 and 16 of this License; or

    b) Requiring preservation of specified reasonable legal notices or
    author attributions in that material or in the Appropriate Legal
    Notices displayed by works containing it; or

    c) Prohibiting misrepresentation of the origin of that material, or
    requiring that modified versions of such material be marked in
    reasonable ways as different from the original version; or

    d) Limiting the use for publicity purposes of names of licensors or
    authors of the material; or

    e) Declining to grant rights under trademark law for use of some
    trade names, trademarks, or service marks; or

    f) Requiring indemnification of licensors and authors of that
    material by anyone who conveys the material (or modified versions of
    it) with contractual assumptions of liability to the recipient, for
    any liability that these contractual assumptions directly impose on
    those licensors and authors.

  All other non-permissive additional terms are considered "further
restrictions" within the meaning of section 10.  If the Program as you
received it, or any part of it, contains a notice stating that it is
governed by this License along with a term that is a further
restriction, you may remove that term.  If a license document contains
a further restriction but permits relicensing or conveying under this
License, you may add to a covered work material governed by the terms
of that license document, provided that the further restriction does
not survive such relicensing or conveying.

  If you add terms to a covered work in accord with this section, you
must place, in the relevant source files, a statement of the
additional terms that apply to those files, or a notice indicating
where to find the applicable terms.

  Additional terms, permissive or non-permissive, may be stated in the
form of a separately written license, or stated as exceptions;
the above requirements apply either way.

  8. Termination.

  You may not propagate or modify a covered work except as expressly
provided under this License.  Any attempt otherwise to propagate or
modify it is void, and will automatically terminate your rights under
this License (including any patent licenses granted under the third
paragraph of section 11).

  However, if you cease all violation of this License, then your
license from a particular copyright holder is reinstated (a)
provisionally, unless and until the copyright holder explicitly and
finally terminates your license, and (b) permanently, if the copyright
holder fails to notify you of the violation by some reasonable means
prior to 60 days after the cessation.

  Moreover, your license from a particular copyright holder is
reinstated permanently if the copyright holder notifies you of the
violation by some reasonable means, this is the first time you have
received notice of violation of this License (for any work) from that
copyright holder, and you cure the violation prior to 30 days after
your receipt of the notice.

  Termination of your rights under this section does not terminate the
licenses of parties who have received copies or rights from you under
this License.  If your rights have been terminated and not permanently
reinstated, you do not qualify to receive new licenses for the same
material under section 10.

  9. Acceptance Not Required for Having Copies.

  You are not required to accept this License in order to receive or
run a copy of the Program.  Ancillary propagation of a covered work
occurring solely as a consequence of using peer-to-peer transmission
to receive a copy likewise does not require acceptance.  However,
nothing other than this License grants you permission to propagate or
modify any covered work.  These actions infringe copyright if you do
not accept this License.  Therefore, by modifying or propagating a
covered work, you indicate your acceptance of this License to do so.

  10. Automatic Licensing of Downstream Recipients.

  Each time you convey a covered work, the recipient automatically
receives a license from the original licensors, to run, modify and
propagate that work, subject to this License.  You are not responsible
for enforcing compliance by third parties with this License.

  An "entity transaction" is a transaction transferring control of an
organization, or substantially all assets of one, or subdividing an
organization, or merging organizations.  If propagation of a covered
work results from an entity transaction, each party to that
transaction who receives a copy of the work also receives whatever
licenses to the work the party's predecessor in interest had or could
give under the previous paragraph, plus a right to possession of the
Corresponding Source of the work from the predecessor in interest, if
the predecessor has it or can get it with reasonable efforts.

  You may not impose any further restrictions on the exercise of the
rights granted or affirmed under this License.  For example, you may
not impose a license fee, royalty, or other charge for exercise of
rights granted under this License, and you may not initiate litigation
(including a cross-claim or counterclaim in a lawsuit) alleging that
any patent claim is infringed by making, using, selling, offering for
sale, or importing the Program or any portion of it.

  11. Patents.

  A "contributor" is a copyright holder who authorizes use under this
License of the Program or a work on which the Program is based.  The
work thus licensed is called the contributor's "contributor version".

  A contributor's "essential patent claims" are all patent claims
owned or controlled by the contributor, whether already acquired or
hereafter acquired, that would be infringed by some manner, permitted
by this License, of making, using, or selling its contributor version,
but do not include claims that would be infringed only as a
consequence of further modification of the contributor version.  For
purposes of this definition, "control" includes the right to grant
patent sublicenses in a manner consistent with the requirements of
this License.

  Each contributor grants you a non-exclusive, worldwide, royalty-free
patent license under the contributor's essential patent claims, to
make, use, sell, offer for sale, import and otherwise run, modify and
propagate the contents of its contributor version.

  In the following three paragraphs, a "patent license" is any express
agreement or commitment, however denominated, not to enforce a patent
(such as an express permission to practice a patent or covenant not to
sue for patent infringement).  To "grant" such a patent license to a
party means to make such an agreement or commitment not to enforce a
patent against the party.

  If you convey a covered work, knowingly relying on a patent license,
and the Corresponding Source of the work is not available for anyone
to copy, free of charge and under the terms of this License, through a
publicly available network server or other readily accessible means,
then you must either (1) cause the Corresponding Source to be so
available, or (2) arrange to deprive yourself of the benefit of the
patent license for this particular work, or (3) arrange, in a manner
consistent with the requirements of this License, to extend the patent
license to downstream recipients.  "Knowingly relying" means you have
actual knowledge that, but for the patent license, your conveying the
covered work in a country, or your recipient's use of the covered work
in a country, would infringe one or more identifiable patents in that
country that you have reason to believe are valid.

  If, pursuant to or in connection with a single transaction or
arrangement, you convey, or propagate by procuring conveyance of, a
covered work, and grant a patent license to some of the parties
receiving the covered work authorizing them to use, propagate, modify
or convey a specific copy of the covered work, then the patent license
you grant is automatically extended to all recipients of the covered
work and works based on it.

  A patent license is "discriminatory" if it does not include within
the scope of its coverage, prohibits the exercise of, or is
conditioned on the non-exercise of one or more of the rights that are
specifically granted under this License.  You may not convey a covered
work if you are a party to an arrangement with a third party that is
in the business of distributing software, under which you make payment
to the third party based on the extent of your activity of conveying
the work, and under which the third party grants, to any of the
parties who would receive the covered work from you, a discriminatory
patent license (a) in connection with copies of the covered work
conveyed by you (or copies made from those copies), or (b) primarily
for and in connection with specific products or compilations that
contain the covered work, unless you entered into that arrangement,
or that patent license was granted, prior to 28 March 2007.

  Nothing in this License shall be construed as excluding or limiting
any implied license or other defenses to infringement that may
otherwise be available to you under applicable patent law.

  12. No Surrender of Others' Freedom.

  If conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot convey a
covered work so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you may
not convey it at all.  For example, if you agree to terms that obligate you
to collect a royalty for further conveying from those to whom you convey
the Program, the only way you could satisfy both those terms and this
License would be to refrain entirely from conveying the Program.

  13. Use with the GNU Affero General Public License.

  Notwithstanding any other provision of this License, you have
permission to link or combine any covered work with a work licensed
under version 3 of the GNU Affero General Public License into a single
combined work, and to convey the resulting work.  The terms of this
License will continue to apply to the part which is the covered work,
but the special requirements of the GNU Affero General Public License,
section 13, concerning interaction through a network will apply to the
combination as such.

  14. Revised Versions of this License.

  The Free Software Foundation may publish revised and/or new versions of
the GNU General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.

  Each version is given a distinguishing version number.  If the
Program specifies that a certain numbered version of the GNU General
Public License "or any later version" applies to it, you have the
option of following the terms and conditions either of that numbered
version or of any later version published by the Free Software
Foundation.  If the Program does not specify a version number of the
GNU General Public License, you may choose any version ever published
by the Free Software Foundation.

  If the Program specifies that a proxy can decide which future
versions of the GNU General Public License can be used, that proxy's
public statement of acceptance of a version permanently authorizes you
to choose that version for the Program.

  Later license versions may give you additional or different
permissions.  However, no additional obligations are imposed on any
author or copyright holder as a result of your choosing to follow a
later version.

  15. Disclaimer of Warranty.

  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

  16. Limitation of Liability.

  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
SUCH DAMAGES.

  17. Interpretation of Sections 15 and 16.

  If the disclaimer of warranty and limitation of liability provided
above cannot be given local legal effect according to their terms,
reviewing courts shall apply local law that most closely approximates
an absolute waiver of all civil liability in connection with the
Program, unless a warranty or assumption of liability accompanies a
copy of the Program in return for a fee.

                     END OF TERMS AND CONDITIONS

            How to Apply These Terms to Your New Programs

  If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these terms.

  To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
state the exclusion of warranty; and each file should have at least
the "copyright" line and a pointer to where the full notice is found.

    <one line to give the program's name and a brief idea of what it does.>
    Copyright (C) <year>  <name of author>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.

Also add information on how to contact you by electronic and paper mail.

  If the program does terminal interaction, make it output a short
notice like this when it starts in an interactive mode:

    <program>  Copyright (C) <year>  <name of author>
    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
    This is free software, and you are welcome to redistribute it
    under certain conditions; type `show c' for details.

The hypothetical commands `show w' and `show c' should show the appropriate
parts of the General Public License.  Of course, your program's commands
might be different; for a GUI interface, you would use an "about box".

  You should also get your employer (if you work as a programmer) or school,
if any, to sign a "copyright disclaimer" for the program, if necessary.
For more information on this, and how to apply and follow the GNU GPL, see
<https://www.gnu.org/licenses/>.

  The GNU General Public License does not permit incorporating your program
into proprietary programs.  If your program is a subroutine library, you
may consider it more useful to permit linking proprietary applications with
the library.  If this is what you want to do, use the GNU Lesser General
Public License instead of this License.  But first, please read
<https://www.gnu.org/licenses/why-not-lgpl.html>.



================================================
FILE: sources/Cartfile
================================================
binary "https://code.videolan.org/videolan/VLCKit/raw/master/Packaging/TVVLCKit.json" ~> 3.6.0
binary "https://code.videolan.org/videolan/VLCKit/raw/master/Packaging/MobileVLCKit.json" ~> 3.6.0



================================================
FILE: sources/Cartfile.resolved
================================================
binary "https://code.videolan.org/videolan/VLCKit/raw/master/Packaging/MobileVLCKit.json" "3.6.0"
binary "https://code.videolan.org/videolan/VLCKit/raw/master/Packaging/TVVLCKit.json" "3.6.0"



================================================
FILE: sources/.swiftformat
================================================
--swiftversion 5.9
--binarygrouping 4,8
--commas always
--comments indent
--decimalgrouping 3,6
--elseposition same-line
--empty void
--exponentcase uppercase
--exponentgrouping disabled
--fractiongrouping disabled
--header ignore
--hexgrouping 4,8
--hexliteralcase lowercase
--ifdef outdent
--indent 2
--indentcase false
--linebreaks lf
--octalgrouping 4,8
--operatorfunc spaced
--patternlet hoist
--ranges spaced
--semicolons never
--stripunusedargs always
--trimwhitespace always
--wraparguments before-first
--wrapparameters before-first
--wrapcollections beforefirst
--enable linebreakAtEndOfFile
--disable blankLinesAtStartOfScope,redundantReturn
--emptybraces linebreak
--self init-only
--allman false
--disable wrapMultilineStatementBraces
--exclude **/Generated/*.swift,**/AppDelegate.swift,BuildTools/Package.swift,**/*Tests.swift



================================================
FILE: sources/Components/Package.swift
================================================
// swift-tools-version: 6.1

import PackageDescription

// MARK: - Dependencies

let dependencies: [Package.Dependency] = [
  .package(url: "https://github.com/realm/realm-swift.git", exact: "20.0.1"),
  .package(url: "https://github.com/Alamofire/Alamofire.git", exact: "5.10.1"),
]

// MARK: - Targets

let targetInterfaces: Target = .target(
  name: "IPTVInterfaces",
  dependencies: [
    .product(name: "RealmSwift", package: "realm-swift"),
    .product(name: "Alamofire", package: "Alamofire"),
    "IPTVModels",
  ],
  path: "./Protocols",
)

let targetModels: Target = .target(
  name: "IPTVModels",
  dependencies: [
    .product(name: "RealmSwift", package: "realm-swift"),
  ],
  path: "./Models",
)

let targetComponents: Target = .target(
  name: "IPTVComponents",
  dependencies: [
    .product(name: "RealmSwift", package: "realm-swift"),
    .product(name: "Alamofire", package: "Alamofire"),
    "IPTVInterfaces",
    "IPTVModels",
  ],
  path: "./Library"
)

var targets: [Target] = [
  targetInterfaces,
  targetModels,
  targetComponents,
]

// MARK: - Package

let package = Package(
  name: "IPTVLibrary",
  defaultLocalization: "en",
  platforms: [
    .iOS(.v18),
    .tvOS(.v18),
  ],
  products: [
    .library(
      name: "IPTVComponents",
      targets: ["IPTVComponents"]
    ),
    .library(
      name: "IPTVModels",
      targets: ["IPTVModels"]
    ),
    .library(
      name: "IPTVInterfaces",
      targets: ["IPTVInterfaces"]
    ),
  ],
  dependencies: dependencies,
  targets: targets
)



================================================
FILE: sources/Components/Library/CircularProgressView.swift
================================================
//
//  CircularProgressView.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 12/11/2024.
//

import SwiftUI

struct CircularProgressView: View {
  @Binding var progress: Double

  var body: some View {
    ZStack {
      Circle()
        .stroke(
          Color.orange.opacity(0.5),
          lineWidth: 8
        )
      Circle()
        .trim(from: 0, to: progress)
        .stroke(
          Color.blue,
          style: StrokeStyle(
            lineWidth: 8,
            lineCap: .round
          )
        )
        .rotationEffect(.degrees(-90))
        .animation(.easeOut, value: progress)
    }
  }
}

#Preview {
  CircularProgressView(progress: .constant(6.0 / 12.0))
    .frame(width: 50, height: 50)
}



================================================
FILE: sources/Components/Library/CustomButton.swift
================================================
//
//  CustomButton.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 12/11/2024.
//
import SwiftUI

public struct CustomButton<Content>: View where Content: View {
  @State
  private var focused = false
  @State
  private var pressed = false

  public let action: () -> Void
  public let longPressAction: () -> Void

  @ViewBuilder
  public let content: () -> Content

  public init(focused: Bool = false, pressed: Bool = false, action: @escaping () -> Void, longPressAction: @escaping () -> Void, content: @escaping () -> Content) {
    self.focused = focused
    self.pressed = pressed
    self.action = action
    self.longPressAction = longPressAction
    self.content = content
  }

  public var body: some View {
    contentView
      .background(focused ? .white.opacity(0.5) : .clear.opacity(0.5))
      .cornerRadius(8)
      .scaleEffect(pressed || focused ? 1.1 : 1)
      .animation(.linear(duration: 0.2), value: focused)
      .animation(.default, value: pressed)
  }

  var contentView: some View {
#if os(tvOS)
    ZStack {
      ClickableHack(focused: $focused, pressed: $pressed, action: action)
        .onLongPressGesture(minimumDuration: 0.3) {
          longPressAction()
        }
        .onTapGesture {
          action()
        }
      content()
        .padding(8)
        .layoutPriority(1)
    }
#else
    Button(action: action, label: content)
#endif
  }
}

class ClickableHackView: UIView {
  weak var delegate: ClickableHackDelegate?

  override init(frame: CGRect) {
    super.init(frame: frame)
  }

  override func pressesBegan(_ presses: Set<UIPress>, with event: UIPressesEvent?) {
    if validatePress(event: event) {
      delegate?.pressesBegan()
    } else {
      super.pressesBegan(presses, with: event)
    }
  }

  override func pressesEnded(_ presses: Set<UIPress>, with event: UIPressesEvent?) {
    if validatePress(event: event) {
      delegate?.pressesEnded()
    } else {
      super.pressesEnded(presses, with: event)
    }
  }

  override func pressesCancelled(_ presses: Set<UIPress>, with event: UIPressesEvent?) {
    if validatePress(event: event) {
      delegate?.pressesEnded()
    } else {
      super.pressesCancelled(presses, with: event)
    }
  }

  private func validatePress(event: UIPressesEvent?) -> Bool {
    event?.allPresses.map(\.type).contains(.select) ?? false
  }

  override func didUpdateFocus(in _: UIFocusUpdateContext, with _: UIFocusAnimationCoordinator) {
    delegate?.focus(focused: isFocused)
  }

  @available(*, unavailable)
  required init?(coder _: NSCoder) {
    fatalError("init(coder:) has not been implemented")
  }

  override var canBecomeFocused: Bool {
    return true
  }
}

protocol ClickableHackDelegate: AnyObject {
  func focus(focused: Bool)
  func pressesBegan()
  func pressesEnded()
}

struct ClickableHack: UIViewRepresentable {
  @Binding var focused: Bool
  @Binding var pressed: Bool
  let action: () -> Void

  func makeUIView(context: UIViewRepresentableContext<ClickableHack>) -> UIView {
    let clickableView = ClickableHackView()
    clickableView.delegate = context.coordinator
    return clickableView
  }

  func updateUIView(_: UIView, context _: UIViewRepresentableContext<ClickableHack>) {
  }

  func makeCoordinator() -> Coordinator {
    return Coordinator(self)
  }

  class Coordinator: NSObject, @preconcurrency ClickableHackDelegate {
    private let control: ClickableHack

    init(_ control: ClickableHack) {
      self.control = control
      super.init()
    }

    @MainActor
    func focus(focused: Bool) {
      control.focused = focused
    }

    @MainActor
    func pressesBegan() {
      control.pressed = true
    }

    @MainActor
    func pressesEnded() {
      control.pressed = false
      // control.action()
    }
  }
}



================================================
FILE: sources/Components/Library/FoldSnappingScrollTargetBehavior.swift
================================================
//
//  FoldSnappingScrollTargetBehavior.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//
import Foundation
import SwiftUI

/// Implements an above- or below-the-fold snapping behavior.
///
/// This behavior uses the expected height of the header to determine the
/// snapping behavior, depending on whether the view is currently above the fold
/// (showing the header) or below (showing only the shelves).  When a scroll
/// event moves the scroll view's content bounds beyond a certain threshold, it
/// changes the target of the scroll so that it either snaps to the top of the
/// scroll view, or snaps to a point below the header.
struct FoldSnappingScrollTargetBehavior: ScrollTargetBehavior {
  var aboveFold: Bool
  var showcaseHeight: CGFloat

  /// This takes a `ScrollTarget` that contains the proposed end point of
  /// the current scroll event.  In tvOS, this is the target of a scroll
  /// that the focus engine triggers when attempting to bring a newly focused
  /// item into view.
  func updateTarget(_ target: inout ScrollTarget, context _: TargetContext) {
    // If the current scroll offset is near the top of the view and the
    // target is not lower than 30% of the header's height, all is good.
    // This allows a little flexibility when moving toward any buttons that
    // might be part of the header view.
    if aboveFold && target.rect.minY < showcaseHeight * 0.3 {
      // The target isn't moving enough to pass the snap point.
      return
    }

    // If the header isn't visible and the target isn't high enough to
    // reveal any of the header, the scroll can land anywhere the system
    // determines within this area.
    if !aboveFold && target.rect.minY > showcaseHeight {
      // The target isn't far enough up to reveal the showcase.
      return
    }

    // The view needs to snap upward to reveal the header only if the
    // target is more than 30% of the way up from the bottom edge of the
    // showcase.
    let showcaseRevealThreshold = showcaseHeight * 0.7

    // If the target of the scroll is anywhere between the header's bottom
    // edge and that threshold, the view needs to snap to hide the header.
    let snapToHideRange = showcaseRevealThreshold ... showcaseHeight

    if aboveFold || snapToHideRange.contains(target.rect.origin.y) {
      // The view is either above the fold and scrolling more than 30% of
      // the way down, or it's below the fold and isn't moving up far
      // enough to reveal the showcase.

      // This case likely triggers every time you move focus among the
      // items on the top content shelf, as the focus system brings them a
      // little farther onto the screen.  It's very likely that this code
      // is setting the target origin to it's current position here,
      // effectively denying any scrolling at all.
      target.rect.origin.y = showcaseHeight
    } else {
      // The view is below the fold and it's moving up beyond the bottom
      // 30% of the header view.  Snap to the view's origin to reveal the
      // entire header.
      target.rect.origin.y = 0
    }
  }
}



================================================
FILE: sources/Components/Library/HeroHeaderView.swift
================================================
//
//  HeroHeaderView.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//

import SwiftUI

public struct HeroHeaderView: View {
  public var belowFold: Bool

  public init(belowFold: Bool) {
    self.belowFold = belowFold
  }

  public var body: some View {
    Image("beach_landscape")
      .resizable()
      .aspectRatio(contentMode: .fill)
      .overlay {
        // The view builds the material gradient by filling an area with
        // a material, and then masking that area using a linear
        // gradient.
        Rectangle()
          .fill(.ultraThinMaterial)
          .mask {
            maskView
          }
      }
      .ignoresSafeArea()
  }

  public var maskView: some View {
    // The gradient makes direct use of the `belowFold` property to
    // determine the opacity of its stops.  This way, when `belowFold`
    // changes, the gradient can animate the change to its opacity smoothly.
    // If you swap out the gradient with an opaque color, SwiftUI builds a
    // cross-fade between the solid color and the gradient, resulting in a
    // strange fade-out-and-back-in appearance.
    LinearGradient(
      stops: [
        .init(color: .black, location: 0.25),
        .init(color: .black.opacity(belowFold ? 1 : 0.3), location: 0.375),
        .init(color: .black.opacity(belowFold ? 1 : 0), location: 0.5),
      ],
      startPoint: .bottom, endPoint: .top
    )
  }
}



================================================
FILE: sources/Components/Library/Thumbnail.swift
================================================
//
//  Thumbnail.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//

import Alamofire
import SwiftUI

struct Thumbnail: View {
  var imageUrl: URL
  var ratio: CGFloat
  var column: Int = 6
  var contentMode: ContentMode = .fill
  @State var isVisible: Bool = false

  var body: some View {
    VStack {
      if isVisible {
        AsyncImage(
          url: imageUrl,
          content: { image in
            if contentMode == .fit {
              image
                .renderingMode(.original)
                .resizable()
                .aspectRatio(contentMode: .fit)

            } else {
              image
                .renderingMode(.original)
                .resizable()
                .aspectRatio(ratio, contentMode: .fit)
                .containerRelativeFrame(.horizontal, count: column, spacing: 40)
            }
          },
          placeholder: {
            placeholder()
          }
        )
      } else {
        placeholder()
      }
    }
    .onAppear {
      isVisible = true
    }
    .onDisappear {
      isVisible = false
    }
    .aspectRatio(ratio, contentMode: .fit)
    .containerRelativeFrame(.horizontal, count: column, spacing: 40)
  }

  @ViewBuilder
  private func placeholder() -> some View {
    Rectangle()
      .foregroundColor(.black)
      .opacity(0.2)
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 40)
  }
}



================================================
FILE: sources/Components/Library/Extensions/String+extension.swift
================================================
//
//  String+extension.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 13/11/2024.
//

import Foundation

public extension String {
  func formatted() -> String {
    let keywords = ["[FR]", "|FR|", "[MA]", "[TN]", "|AR|", "|MA|", "|TN|", "|EU| ", "VOD - ", "SRS - ", "FR - ", "TN - ", "MA - ", "FR: "]
    var nameFor: String = self
    keywords.forEach { keyword in
      nameFor = nameFor.replacingOccurrences(of: keyword, with: "")
    }

    return nameFor
  }

  func sanitizeSearchTerm() -> String {
    return trimmingCharacters(in: .whitespacesAndNewlines).lowercased()
  }
}



================================================
FILE: sources/Components/Library/Shelf/FavoriLiveShelf.swift
================================================
//
//  FavoriLiveShelf.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//

import IPTVModels
import RealmSwift
import SwiftUI

public struct FavoriLiveShelf: View {
  @Namespace var mainNamespace

  var openStream: (FavoriEntity) -> Void
  @ObservedResults(FavoriEntity.self, where: ({ $0.kind == KindMedia.live.rawValue })) var streams

  private let ratio: CGFloat = 250 / 150
  private let column: Int = 6
  public var kindMedia: KindMedia

  public init(kindMedia: KindMedia, openStream: @escaping (FavoriEntity) -> Void) {
    self.kindMedia = kindMedia
    self.openStream = openStream
  }

  public var body: some View {
    VStack {
      if streams.count > 0 {
        sectionHeader()
      }
      ScrollView(.horizontal) {
        LazyHStack(spacing: 16) {
          ForEach(streams) { stream in
            customButton(stream)
          }
        }
      }
      .scrollClipDisabled()
      .buttonStyle(.borderless)
    }
  }

  @MainActor
  private func removeStream(_ stream: FavoriEntity) {
    let realm = try! Realm()
    if let obj = realm.objects(FavoriEntity.self).first(where: { $0.id == stream.id }) {
      do {
        try realm.write {
          realm.delete(obj)
        }
      } catch {
        print("\(error)")
      }
    }
  }

  @ViewBuilder
  private func customButton(_ stream: FavoriEntity) -> some View {
    CustomButton(action: {
      openStream(stream)
    }, longPressAction: {
      removeStream(stream)
    }) {
      ZStack(alignment: .bottom) {
        if let imageUrl = stream.getImage(), let url = URL(string: imageUrl) {
          Thumbnail(imageUrl: url, ratio: ratio, column: column, contentMode: .fit)
            .padding(.vertical, 18)
        } else {
          placeholder()
            .padding(.vertical, 18)
        }
        VStack {
          Spacer()
          Text(stream.name.formatted())
            .lineLimit(1)
            .foregroundStyle(.white)
            .font(.system(size: 14))
            .frame(maxWidth: .infinity, maxHeight: 24)
            .background(Color.black.opacity(0.2))
        }
      }
      .frame(maxWidth: .infinity, maxHeight: .infinity)
      .background(.black.opacity(0.2))
      .cornerRadius(8)
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 40)
    }
#if TARGET_OS_TV
    .prefersDefaultFocus(in: mainNamespace)
#endif
    .id(stream.id)
  }

  @ViewBuilder
  private func sectionHeader() -> some View {
    HStack {
      Text("\(streams.count) x FAVORIS")
        .lineLimit(4)
        .multilineTextAlignment(.center)
        .font(.system(size: 23, weight: .bold))
        .frame(maxWidth: .infinity, alignment: .leading)
    }
  }

  @ViewBuilder
  private func placeholder() -> some View {
    Rectangle()
      .foregroundColor(.black)
      .opacity(0.2)
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 40)
  }
}



================================================
FILE: sources/Components/Library/Shelf/FavoriMovieShelf.swift
================================================
//
//  FavoriMovieShelf.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//

import IPTVModels
import RealmSwift
import SwiftUI

public struct FavoriMovieShelf: View {
  @Namespace var mainNamespace
  private let ratio: CGFloat = 250 / 375
  private let column: Int = 6

  public var kindMedia: KindMedia

  @ObservedResults(FavoriEntity.self, where: ({ $0.kind == KindMedia.vod.rawValue })) var streams

  var openStream: (FavoriEntity) -> Void

  public init(kindMedia: KindMedia, openStream: @escaping (FavoriEntity) -> Void) {
    self.kindMedia = kindMedia
    self.openStream = openStream
  }

  @MainActor
  private func removeStream(_ stream: FavoriEntity) {
    let realm = try! Realm()
    if let obj = realm.objects(FavoriEntity.self).first(where: { $0.id == stream.id }) {
      do {
        try realm.write {
          realm.delete(obj)
        }
      } catch {
        print("\(error)")
      }
    }
  }

  public var body: some View {
    VStack {
      if streams.count > 0 {
        sectionHeader()
      }
      ScrollView(.horizontal) {
        LazyHStack(spacing: 16) {
          ForEach(streams) { stream in
            CustomButton(
              action: {
                openStream(stream)
              }, longPressAction: {
                removeStream(stream)
              }
            ) {
              ZStack(alignment: .bottom) {
                if let imageUrl = stream.getImage(), let url = URL(string: imageUrl) {
                  Thumbnail(imageUrl: url, ratio: ratio, column: column)
                } else {
                  placeholder()
                }

                Text(stream.name.formatted())
                  .lineLimit(2)
                  .multilineTextAlignment(.center)
                  .font(.system(size: 20))
                  .frame(maxWidth: .infinity, maxHeight: 64)
                  .background(Color.black.opacity(0.5))
              }
              .aspectRatio(ratio, contentMode: .fit)
              .containerRelativeFrame(.horizontal, count: column, spacing: 40)
            }
#if TARGET_OS_TV
            .prefersDefaultFocus(in: mainNamespace)
#endif

            .id(stream.id)
          }
        }
      }
      .scrollClipDisabled()
      .buttonStyle(.borderless)
    }
  }

  @ViewBuilder
  private func sectionHeader() -> some View {
    HStack {
      Text("\(streams.count) x FAVORIS")
        .lineLimit(4)
        .multilineTextAlignment(.center)
        .font(.system(size: 23, weight: .bold))
        .frame(maxWidth: .infinity, alignment: .leading)
    }
  }

  @ViewBuilder
  private func placeholder() -> some View {
    Rectangle()
      .foregroundColor(.black)
      .opacity(0.2)
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 40)
  }
}



================================================
FILE: sources/Components/Library/Shelf/FavoriSerieShelf.swift
================================================
//
//  FavoriMovieShelf.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//

import IPTVModels
import RealmSwift
import SwiftUI

public struct FavoriSerieShelf: View {
  @Namespace var mainNamespace
  private let ratio: CGFloat = 250 / 375
  private let column: Int = 6

  public var kindMedia: KindMedia

  @ObservedResults(FavoriEntity.self, where: ({ $0.kind == KindMedia.series.rawValue })) var streams

  var openStream: (FavoriEntity) -> Void

  public init(kindMedia: KindMedia, openStream: @escaping (FavoriEntity) -> Void) {
    self.kindMedia = kindMedia
    self.openStream = openStream
  }

  @MainActor
  private func removeStream(_ stream: FavoriEntity) {
    let realm = try! Realm()
    if let obj = realm.objects(FavoriEntity.self).first(where: { $0.id == stream.id }) {
      do {
        try realm.write {
          realm.delete(obj)
        }
      } catch {
        print("\(error)")
      }
    }
  }

  public var body: some View {
    VStack {
      sectionHeader()
      ScrollView(.horizontal) {
        LazyHStack(spacing: 16) {
          ForEach(streams) { stream in
            CustomButton(
              action: {
                openStream(stream)
              }, longPressAction: {
                removeStream(stream)
              }
            ) {
              ZStack(alignment: .bottom) {
                if let imageUrl = stream.getImage(), let url = URL(string: imageUrl) {
                  Thumbnail(imageUrl: url, ratio: ratio, column: column)
                } else {
                  placeholder()
                }

                Text(stream.name.formatted())
                  .lineLimit(2)
                  .multilineTextAlignment(.center)
                  .font(.system(size: 20))
                  .frame(maxWidth: .infinity, maxHeight: 64)
                  .background(Color.black.opacity(0.5))
              }
              .aspectRatio(ratio, contentMode: .fit)
              .containerRelativeFrame(.horizontal, count: column, spacing: 40)
            }
#if TARGET_OS_TV
            .prefersDefaultFocus(in: mainNamespace)
#endif

            .id(stream.id)
          }
        }
      }
      .scrollClipDisabled()
      .buttonStyle(.borderless)
    }
  }

  @ViewBuilder
  private func sectionHeader() -> some View {
    HStack {
      Text("\(streams.count) x FAVORIS")
        .lineLimit(4)
        .multilineTextAlignment(.center)
        .font(.system(size: 23, weight: .bold))
        .frame(maxWidth: .infinity, alignment: .leading)
    }
  }

  @ViewBuilder
  private func placeholder() -> some View {
    Rectangle()
      .foregroundColor(.black)
      .opacity(0.2)
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 40)
  }
}



================================================
FILE: sources/Components/Library/Shelf/LiveSearchShelf.swift
================================================
//
//  LiveSearchShelf.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//

import IPTVModels
import RealmSwift
import SwiftUI

public struct LiveSearchShelf: View {
  @Namespace var mainNamespace

  private let ratio: CGFloat = 250 / 150
  private let column: Int = 6

  public var kindMedia: KindMedia

  var streams: Results<CachedStream>

  var openStream: (CachedStream) -> Void

  public init(streams: Results<CachedStream>, kindMedia: KindMedia, openStream: @escaping (CachedStream) -> Void) {
    self.kindMedia = kindMedia
    self.openStream = openStream
    self.streams = streams
  }

  private func removeStream(_ stream: FavoriEntity) {
    let realm = try! Realm()
    realm.delete(stream)
  }

  @MainActor
  private func addFavori(stream: CachedStream) async {
    do {
      let realm = try await Realm()

      let favori = FavoriEntity(
        id: stream.id,
        kind: kindMedia.rawValue,
        name: stream.name,
        streamIcon: stream.streamIcon,
        added: Date(),
        tmdb: stream.tmdb
      )
      realm.add(favori)
    } catch {
      print("Erreur lors de la sauvegarde dans SwiftData: \(error)")
    }
  }

  public var body: some View {
    VStack {
      sectionHeader()
      ScrollView(.horizontal) {
        LazyHStack(spacing: 16) {
          ForEach(streams) { stream in
            customButton(stream)
          }
        }
      }
      .scrollClipDisabled()
      .buttonStyle(.borderless)
    }
  }

  @ViewBuilder
  private func customButton(_ stream: CachedStream) -> some View {
    CustomButton(action: {
      DispatchQueue.main.async {
        openStream(stream)
      }
    }, longPressAction: {
      Task {
        await addFavori(stream: stream)
      }
    }) {
      ZStack(alignment: .center) {
        if let imageUrl = stream.getImage(), let url = URL(string: imageUrl) {
          Thumbnail(imageUrl: url, ratio: ratio, column: column, contentMode: .fit)
            .padding(.vertical, 18)
        } else {
          placeholder()
            .padding(.vertical, 18)
        }
        Spacer()
        VStack {
          Spacer()
          Text(stream.name.formatted())
            .lineLimit(1)
            .multilineTextAlignment(.center)
            .foregroundStyle(.white)
            .font(.system(size: 14))
            .frame(maxWidth: .infinity, maxHeight: 28)
            .background(Color.black.opacity(0.2))
        }
      }
      .frame(maxWidth: .infinity, maxHeight: .infinity)
      .background(.black.opacity(0.2))
      .cornerRadius(8)
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 40)
    }
#if TARGET_OS_TV
    .prefersDefaultFocus(in: mainNamespace)
#endif
    .id(stream.id)
  }

  @ViewBuilder
  private func sectionHeader() -> some View {
    HStack {
      Text("\(streams.count) x \(kindMedia.rawValue.uppercased())")
        .lineLimit(4)
        .multilineTextAlignment(.center)
        .font(.system(size: 23, weight: .bold))
        .frame(maxWidth: .infinity, alignment: .leading)
    }
  }

  @ViewBuilder
  private func placeholder() -> some View {
    Rectangle()
      .foregroundColor(.black)
      .opacity(0.2)
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 40)
  }
}



================================================
FILE: sources/Components/Library/Shelf/LiveShelf.swift
================================================
//
//  LiveShelf.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//

import IPTVModels
import RealmSwift
import SwiftUI

public struct LiveShelf: View {
  @Namespace var mainNamespace

  private let ratio: CGFloat = 250 / 150
  private let column: Int = 6

  public var category: CategoryEntity
  public var categoryId: String = "-1"
  @State private var kindMedia: KindMedia
  @State private var addToFavori: Bool = false

  @ObservedResults(CachedStream.self) var streams: Results<CachedStream>

  var openStream: (CachedStream) -> Void

  public init(category: CategoryEntity, kindMedia: KindMedia, openStream: @escaping (CachedStream) -> Void) {
    self.category = category
    self.kindMedia = kindMedia
    self.openStream = openStream
    self.categoryId = category.id
  }

  var filteredStreams: Results<CachedStream> {
    streams.where { $0.section == kindMedia.rawValue && $0.categoryId == categoryId }
  }

  public var body: some View {
    VStack {
      sectionHeader()
      ScrollView(.horizontal) {
        LazyHStack(spacing: 16) {
          ForEach(filteredStreams) { stream in
            customButton(stream)
          }
        }
      }
      .scrollClipDisabled()
      .buttonStyle(.borderless)
    }
    .toast(isPresenting: $addToFavori, duration: 3) {
      AlertToast(type: .regular, title: "Ajouté au favori")
    }
  }

  @MainActor
  private func addFavori(stream: CachedStream) async {
    do {
      let realm = try await Realm()
      try realm.write {
        let favori = FavoriEntity(
          id: stream.id,
          kind: kindMedia.rawValue,
          name: stream.name,
          streamIcon: stream.streamIcon,
          added: Date(),
          tmdb: stream.tmdb
        )
        realm.add(favori)
      }

      addToFavori = true
    } catch {
      print("Erreur lors de la sauvegarde dans SwiftData: \(error)")
    }
  }

  @ViewBuilder
  private func customButton(_ stream: CachedStream) -> some View {
    CustomButton(action: {
      DispatchQueue.main.async {
        openStream(stream)
      }
    }, longPressAction: {
      Task {
        await addFavori(stream: stream)
      }
    }) {
      ZStack(alignment: .center) {
        if let imageUrl = stream.getImage(), let url = URL(string: imageUrl) {
          Thumbnail(imageUrl: url, ratio: ratio, column: column, contentMode: .fit)
            .padding(.vertical, 18)
            .background(.white.opacity(0.5))
        } else {
          placeholder()
            .padding(.vertical, 18)
        }
        Spacer()
        VStack {
          Spacer()
          Text(stream.name.formatted())
            .lineLimit(1)
            .multilineTextAlignment(.center)
            .foregroundStyle(.white)
            .font(.system(size: 14))
            .frame(maxWidth: .infinity, maxHeight: 28)
            .background(Color.black.opacity(0.2))
        }
      }
      .frame(maxWidth: .infinity, maxHeight: .infinity)
      .background(.black.opacity(0.2))
      .cornerRadius(8)
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 40)
    }
#if TARGET_OS_TV
    .prefersDefaultFocus(in: mainNamespace)
#endif
    .id(stream.id)
  }

  @ViewBuilder
  private func sectionHeader() -> some View {
    HStack {
      Text("\(filteredStreams.count) x \(category.name.formatted())")
        .lineLimit(4)
        .multilineTextAlignment(.center)
        .font(.system(size: 23, weight: .bold))
        .frame(maxWidth: .infinity, alignment: .leading)
    }
  }

  @ViewBuilder
  private func placeholder() -> some View {
    Rectangle()
      .foregroundColor(.black)
      .opacity(0.2)
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 40)
  }
}



================================================
FILE: sources/Components/Library/Shelf/MovieSearchShelf.swift
================================================
//
//  MovieSearchShelf.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//

import IPTVModels
import RealmSwift
import SwiftUI

public struct MovieSearchShelf: View {
  @Namespace var mainNamespace
  private let ratio: CGFloat = 250 / 375
  private let column: Int = 6
  public var kindMedia: KindMedia

  var streams: Results<CachedStream>

  var openStream: (CachedStream) -> Void

  public init(streams: Results<CachedStream>, kindMedia: KindMedia, openStream: @escaping (CachedStream) -> Void) {
    self.kindMedia = kindMedia
    self.openStream = openStream
    self.streams = streams
  }

  @MainActor
  private func addFavori(stream: CachedStream) async {
    do {
      let realm = try await Realm()
      try realm.write {
        let favori = FavoriEntity(
          id: stream.id,
          kind: kindMedia.rawValue,
          name: stream.name,
          streamIcon: stream.streamIcon,
          added: Date(),
          tmdb: stream.tmdb
        )
        realm.add(favori)
      }
    } catch {
      print("Erreur lors de la sauvegarde dans SwiftData: \(error)")
    }
  }

  public var body: some View {
    VStack {
      sectionHeader()
      ScrollView(.horizontal) {
        LazyHStack(spacing: 16) {
          ForEach(streams) { stream in
            CustomButton(
              action: {
                DispatchQueue.main.async {
                  openStream(stream)
                }
              }, longPressAction: {
                Task {
                  await addFavori(stream: stream)
                }
              }
            ) {
              ZStack(alignment: .bottom) {
                if let imageUrl = stream.getImage(), let url = URL(string: imageUrl) {
                  Thumbnail(imageUrl: url, ratio: ratio, column: column, contentMode: kindMedia == .live ? .fit : .fill)
                } else {
                  placeholder()
                }

                Text(stream.name.formatted())
                  .lineLimit(2)
                  .multilineTextAlignment(.center)
                  .foregroundStyle(.white)
                  .font(.system(size: 14))
                  .frame(maxWidth: .infinity, maxHeight: 64)
                  .background(Color.black.opacity(0.5))
              }
              .aspectRatio(ratio, contentMode: .fit)
              .containerRelativeFrame(.horizontal, count: column, spacing: 40)
            }
#if TARGET_OS_TV
            .prefersDefaultFocus(in: mainNamespace)
#endif
            .id(stream.id)
          }
        }
      }
      .scrollClipDisabled()
      .buttonStyle(.borderless)
    }
  }

  @ViewBuilder
  private func sectionHeader() -> some View {
    HStack {
      Text("\(streams.count) x \(kindMedia.rawValue.uppercased())")
        .lineLimit(4)
        .multilineTextAlignment(.center)
        .font(.system(size: 23, weight: .bold))
        .frame(maxWidth: .infinity, alignment: .leading)
    }
  }

  @ViewBuilder
  private func placeholder() -> some View {
    Rectangle()
      .foregroundColor(.black)
      .opacity(0.2)
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 40)
  }
}



================================================
FILE: sources/Components/Library/Shelf/MovieShelf.swift
================================================
//
//  MovieShelf.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//

import IPTVModels
import RealmSwift
import SwiftUI

public struct MovieShelf: View {
  @Namespace var mainNamespace
  private let ratio: CGFloat = 250 / 375
  private let column: Int = 6

  public var category: CategoryEntity
  public var kindMedia: KindMedia
  public var categoryId: String = "-1"
  @State private var addToFavori: Bool = false

  var openStream: (CachedStream) -> Void
  @ObservedResults(CachedStream.self) var streams: Results<CachedStream>

  var filteredStreams: Results<CachedStream> {
    streams.where { $0.section == kindMedia.rawValue && $0.categoryId == categoryId }
      .sorted(by: \.year, ascending: false)
  }

  public init(category: CategoryEntity, kindMedia: KindMedia, openStream: @escaping (CachedStream) -> Void) {
    self.category = category
    self.kindMedia = kindMedia
    self.openStream = openStream
    self.categoryId = category.id
  }

  @MainActor
  private func addFavori(stream: CachedStream) async {
    do {
      let realm = try await Realm()
      try realm.write {
        let favori = FavoriEntity(
          id: stream.id,
          kind: kindMedia.rawValue,
          name: stream.name,
          streamIcon: stream.streamIcon,
          added: Date(),
          tmdb: stream.tmdb
        )
        realm.add(favori)
      }
      addToFavori = true
    } catch {
      print("Erreur lors de la sauvegarde dans SwiftData: \(error)")
    }
  }

  public var body: some View {
    VStack {
      sectionHeader()
      ScrollView(.horizontal) {
        LazyHStack(spacing: 16) {
          ForEach(filteredStreams) { stream in
            CustomButton(
              action: {
                DispatchQueue.main.async {
                  openStream(stream)
                }
              }, longPressAction: {
                Task {
                  await addFavori(stream: stream)
                }
              }
            ) {
              ZStack(alignment: .bottom) {
                if let imageUrl = stream.getImage(), let url = URL(string: imageUrl) {
                  Thumbnail(imageUrl: url, ratio: ratio, column: column)
                } else {
                  placeholder()
                }

                Text(stream.name.formatted())
                  .lineLimit(2)
                  .multilineTextAlignment(.center)
                  .foregroundStyle(.white)
                  .font(.system(size: 14))
                  .frame(maxWidth: .infinity, maxHeight: 64)
                  .background(Color.black.opacity(0.5))
              }
              .aspectRatio(ratio, contentMode: .fit)
              .containerRelativeFrame(.horizontal, count: column, spacing: 40)
            }
#if TARGET_OS_TV
            .prefersDefaultFocus(in: mainNamespace)
#endif

            .id(stream.id)
          }
        }
      }
      .scrollClipDisabled()
      .buttonStyle(.borderless)
    }
    .toast(isPresenting: $addToFavori, duration: 3) {
      AlertToast(type: .regular, title: "Ajouté au favori")
    }
  }

  @ViewBuilder
  private func sectionHeader() -> some View {
    HStack {
      Text("\(filteredStreams.count) x \(category.name.formatted())")
        .lineLimit(4)
        .multilineTextAlignment(.center)
        .font(.system(size: 23, weight: .bold))
        .frame(maxWidth: .infinity, alignment: .leading)
    }
  }

  @ViewBuilder
  private func placeholder() -> some View {
    Rectangle()
      .foregroundColor(.black)
      .opacity(0.2)
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 40)
  }
}



================================================
FILE: sources/Components/Library/Shelf/SerieSearchShelf.swift
================================================
//
//  SeriesSearchShelf.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//

import Foundation
import IPTVModels
import RealmSwift
import SwiftUI

public struct SeriesSearchShelf: View {
  @Namespace var mainNamespace
  private let ratio: CGFloat = 250 / 375
  private let column: Int = 6

  public var kindMedia: KindMedia

  var openStream: (CachedSeries) -> Void
  var streams: Results<CachedSeries>

  public init(streams: Results<CachedSeries>, kindMedia: KindMedia, openStream: @escaping (CachedSeries) -> Void) {
    self.streams = streams
    self.kindMedia = kindMedia
    self.openStream = openStream
  }

  public var body: some View {
    VStack {
      sectionHeader()
      ScrollView(.horizontal) {
        LazyHStack(spacing: 16) {
          ForEach(streams) { serie in
            customButton(serie)
          }
        }
      }
      .scrollClipDisabled()
      .buttonStyle(.borderless)
    }
  }

  @ViewBuilder
  private func customButton(_ serie: CachedSeries) -> some View {
    CustomButton(action: {
      openStream(serie)
    }, longPressAction: {
      Task {
        await addFavori(serie: serie)
      }
    }) {
      ZStack(alignment: .bottom) {
        if let imageUrl = serie.getImage(), let url = URL(string: imageUrl) {
          Thumbnail(imageUrl: url, ratio: ratio, column: column)
        } else {
          placeholder()
        }

        Text(serie.name.formatted())
          .lineLimit(2)
          .multilineTextAlignment(.center)
          .foregroundStyle(.white)
          .font(.system(size: 14))
          .frame(maxWidth: .infinity, maxHeight: 64)
          .background(Color.black.opacity(0.5))
      }
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 40)
    }
#if TARGET_OS_TV
    .prefersDefaultFocus(in: mainNamespace)
#endif
    .id(serie.id)
  }

  @ViewBuilder
  private func sectionHeader() -> some View {
    HStack {
      Text("\(streams.count) x SERIES")
        .lineLimit(4)
        .multilineTextAlignment(.center)
        .font(.system(size: 23, weight: .bold))
        .frame(maxWidth: .infinity, alignment: .leading)
    }
  }

  @ViewBuilder
  private func placeholder() -> some View {
    Rectangle()
      .foregroundColor(.black)
      .opacity(0.2)
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 40)
  }

  @MainActor
  private func addFavori(serie: CachedSeries) async {
    do {
      let realm = try await Realm()
      try realm.write {
        let favori = FavoriEntity(
          id: serie.id,
          kind: kindMedia.rawValue,
          name: serie.name,
          streamIcon: serie.cover,
          added: Date(),
          tmdb: serie.tmdb
        )
        realm.add(favori)
      }
    } catch {
      print("Erreur lors de la sauvegarde dans SwiftData: \(error)")
    }
  }
}



================================================
FILE: sources/Components/Library/Shelf/SerieShelf.swift
================================================
//
//  SerieShelf.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//

import IPTVModels
import RealmSwift
import SwiftUI

public struct SerieShelf: View {
  @Namespace var mainNamespace
  private let ratio: CGFloat = 250 / 375
  private let column: Int = 6

  public var category: CategoryEntity
  public var kindMedia: KindMedia
  @State private var addToFavori: Bool = false

  var openStream: (CachedSeries) -> Void
  @ObservedResults(CachedSeries.self) var streams: Results<CachedSeries>

  public var categoryId: String = "-1"

  public init(category: CategoryEntity, kindMedia: KindMedia, openStream: @escaping (CachedSeries) -> Void) {
    self.category = category
    self.kindMedia = kindMedia
    self.openStream = openStream
    self.categoryId = category.id
  }

  var filteredStreams: Results<CachedSeries> {
    streams.where { $0.section == kindMedia.rawValue && $0.categoryID == categoryId }
      .sorted(by: \.lastModified, ascending: false)
  }

  public var body: some View {
    VStack {
      sectionHeader()
      ScrollView(.horizontal) {
        LazyHStack(spacing: 16) {
          ForEach(filteredStreams) { serie in
            customButton(serie)
          }
        }
      }
      .scrollClipDisabled()
      .buttonStyle(.borderless)
    }
    .toast(isPresenting: $addToFavori, duration: 3) {
      AlertToast(type: .regular, title: "Ajouté au favori")
    }
  }

  @ViewBuilder
  private func customButton(_ serie: CachedSeries) -> some View {
    CustomButton(action: {
      openStream(serie)
    }, longPressAction: {
      Task {
        await addFavori(serie: serie)
      }
    }) {
      ZStack(alignment: .bottom) {
        if let imageUrl = serie.getImage(), let url = URL(string: imageUrl) {
          Thumbnail(imageUrl: url, ratio: ratio, column: column)
        } else {
          placeholder()
        }

        Text(serie.name.formatted())
          .lineLimit(2)
          .multilineTextAlignment(.center)
          .foregroundStyle(.white)
          .font(.system(size: 14))
          .frame(maxWidth: .infinity, maxHeight: 64)
          .background(Color.black.opacity(0.5))
      }
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 40)
    }
#if TARGET_OS_TV
    .prefersDefaultFocus(in: mainNamespace)
#endif
    .id(serie.id)
  }

  @ViewBuilder
  private func sectionHeader() -> some View {
    HStack {
      Text("\(filteredStreams.count) x \(category.name.formatted())")
        .lineLimit(4)
        .multilineTextAlignment(.center)
        .font(.system(size: 23, weight: .bold))
        .frame(maxWidth: .infinity, alignment: .leading)
    }
  }

  @ViewBuilder
  private func placeholder() -> some View {
    Rectangle()
      .foregroundColor(.black)
      .opacity(0.2)
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 40)
  }

  @MainActor
  private func addFavori(serie: CachedSeries) async {
    do {
      let realm = try await Realm()
      try realm.write {
        let favori = FavoriEntity(
          id: serie.id,
          kind: kindMedia.rawValue,
          name: serie.name,
          streamIcon: serie.cover,
          added: Date(),
          tmdb: serie.tmdb
        )
        realm.add(favori)
      }
      addToFavori = true
    } catch {
      print("Erreur lors de la sauvegarde dans SwiftData: \(error)")
    }
  }
}



================================================
FILE: sources/Components/Library/SnackBar/AlertToast.swift
================================================
//
//  AlertToast.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 14/11/2024.
//

import Combine
import SwiftUI

@available(iOS 14, macOS 11, *)
private struct AnimatedCheckmark: View {
  /// Checkmark color
  var color: Color = .black

  /// Checkmark color
  var size: Int = 50

  var height: CGFloat {
    return CGFloat(size)
  }

  var width: CGFloat {
    return CGFloat(size)
  }

  @State private var percentage: CGFloat = .zero

  var body: some View {
    Path { path in
      path.move(to: CGPoint(x: 0, y: height / 2))
      path.addLine(to: CGPoint(x: width / 2.5, y: height))
      path.addLine(to: CGPoint(x: width, y: 0))
    }
    .trim(from: 0, to: percentage)
    .stroke(color, style: StrokeStyle(lineWidth: CGFloat(size / 8), lineCap: .round, lineJoin: .round))
    .animation(Animation.spring().speed(0.75).delay(0.25), value: percentage)
    .onAppear {
      percentage = 1.0
    }
    .frame(width: width, height: height, alignment: .center)
  }
}

@available(iOS 14, macOS 11, *)
private struct AnimatedXmark: View {
  /// xmark color
  var color: Color = .black

  /// xmark size
  var size: Int = 50

  var height: CGFloat {
    return CGFloat(size)
  }

  var width: CGFloat {
    return CGFloat(size)
  }

  var rect: CGRect {
    return CGRect(x: 0, y: 0, width: size, height: size)
  }

  @State private var percentage: CGFloat = .zero

  var body: some View {
    Path { path in
      path.move(to: CGPoint(x: rect.minX, y: rect.minY))
      path.addLine(to: CGPoint(x: rect.maxY, y: rect.maxY))
      path.move(to: CGPoint(x: rect.maxX, y: rect.minY))
      path.addLine(to: CGPoint(x: rect.minX, y: rect.maxY))
    }
    .trim(from: 0, to: percentage)
    .stroke(color, style: StrokeStyle(lineWidth: CGFloat(size / 8), lineCap: .round, lineJoin: .round))
    .animation(Animation.spring().speed(0.75).delay(0.25), value: percentage)
    .onAppear {
      percentage = 1.0
    }
    .frame(width: width, height: height, alignment: .center)
  }
}

// MARK: - Main View

@available(iOS 14, macOS 11, *)
public struct AlertToast: View {
  public enum BannerAnimation {
    case slide, pop
  }

  /// Determine how the alert will be display
  public enum DisplayMode: Equatable {
    /// Present at the center of the screen
    case alert

    /// Drop from the top of the screen
    case hud

    /// Banner from the bottom of the view
    case banner(_ transition: BannerAnimation)
  }

  /// Determine what the alert will display
  public enum AlertType: Equatable {
    /// Animated checkmark
    case complete(_ color: Color)

    /// Animated xmark
    case error(_ color: Color)

    /// System image from `SFSymbols`
    case systemImage(_ name: String, _ color: Color)

    /// Image from Assets
    case image(_ name: String, _ color: Color)

    /// Loading indicator (Circular)
    case loading

    /// Only text alert
    case regular
  }

  /// Customize Alert Appearance
  public enum AlertStyle: Equatable {
    case style(
      backgroundColor: Color? = nil,
      titleColor: Color? = nil,
      subTitleColor: Color? = nil,
      titleFont: Font? = nil,
      subTitleFont: Font? = nil,
      activityIndicatorColor: Color? = nil
    )

    /// Get background color
    var backgroundColor: Color? {
      switch self {
      case let .style(backgroundColor: color, _, _, _, _, _):
        return color
      }
    }

    /// Get title color
    var titleColor: Color? {
      switch self {
      case let .style(_, color, _, _, _, _):
        return color
      }
    }

    /// Get subTitle color
    var subtitleColor: Color? {
      switch self {
      case let .style(_, _, color, _, _, _):
        return color
      }
    }

    /// Get title font
    var titleFont: Font? {
      switch self {
      case let .style(_, _, _, titleFont: font, _, _):
        return font
      }
    }

    /// Get subTitle font
    var subTitleFont: Font? {
      switch self {
      case let .style(_, _, _, _, subTitleFont: font, _):
        return font
      }
    }

    var activityIndicatorColor: Color? {
      switch self {
      case let .style(_, _, _, _, _, color):
        return color
      }
    }
  }

  /// The display mode
  /// - `alert`
  /// - `hud`
  /// - `banner`
  public var displayMode: DisplayMode = .alert

  /// What the alert would show
  /// `complete`, `error`, `systemImage`, `image`, `loading`, `regular`
  public var type: AlertType

  /// The title of the alert (`Optional(String)`)
  public var title: String? = nil

  /// The subtitle of the alert (`Optional(String)`)
  public var subTitle: String? = nil

  /// Customize your alert appearance
  public var style: AlertStyle? = nil

  /// Full init
  public init(
    displayMode: DisplayMode = .alert,
    type: AlertType,
    title: String? = nil,
    subTitle: String? = nil,
    style: AlertStyle? = nil
  ) {
    self.displayMode = displayMode
    self.type = type
    self.title = title
    self.subTitle = subTitle
    self.style = style
  }

  /// Short init with most used parameters
  public init(
    displayMode: DisplayMode,
    type: AlertType,
    title: String? = nil
  ) {
    self.displayMode = displayMode
    self.type = type
    self.title = title
  }

  /// Banner from the bottom of the view
  public var banner: some View {
    VStack {
      Spacer()

      // Banner view starts here
      VStack(alignment: .leading, spacing: 10) {
        HStack {
          switch type {
          case let .complete(color):
            Image(systemName: "checkmark")
              .foregroundColor(color)
          case let .error(color):
            Image(systemName: "xmark")
              .foregroundColor(color)
          case let .systemImage(name, color):
            Image(systemName: name)
              .foregroundColor(color)
          case let .image(name, color):
            Image(name)
              .renderingMode(.template)
              .foregroundColor(color)
          case .loading:
            ActivityIndicator(color: style?.activityIndicatorColor ?? .white)
          case .regular:
            EmptyView()
          }

          Text(LocalizedStringKey(title ?? ""))
            .font(style?.titleFont ?? Font.headline.bold())
        }

        if let subTitle {
          Text(LocalizedStringKey(subTitle))
            .font(style?.subTitleFont ?? Font.subheadline)
        }
      }
      .multilineTextAlignment(.leading)
      .textColor(style?.titleColor ?? nil)
      .padding()
      .frame(maxWidth: 400, alignment: .leading)
      .alertBackground(style?.backgroundColor ?? nil)
      .cornerRadius(10)
      .padding([.horizontal, .bottom])
    }
  }

  /// HUD View
  public var hud: some View {
    Group {
      HStack(spacing: 16) {
        switch type {
        case let .complete(color):
          Image(systemName: "checkmark")
            .hudModifier()
            .foregroundColor(color)
        case let .error(color):
          Image(systemName: "xmark")
            .hudModifier()
            .foregroundColor(color)
        case let .systemImage(name, color):
          Image(systemName: name)
            .hudModifier()
            .foregroundColor(color)
        case let .image(name, color):
          Image(name)
            .hudModifier()
            .foregroundColor(color)
        case .loading:
          ActivityIndicator(color: style?.activityIndicatorColor ?? .white)
        case .regular:
          EmptyView()
        }

        if title != nil || subTitle != nil {
          VStack(alignment: type == .regular ? .center : .leading, spacing: 2) {
            if let title {
              Text(LocalizedStringKey(title))
                .font(style?.titleFont ?? Font.body.bold())
                .multilineTextAlignment(.center)
                .textColor(style?.titleColor ?? nil)
            }
            if let subTitle {
              Text(LocalizedStringKey(subTitle))
                .font(style?.subTitleFont ?? Font.footnote)
                .opacity(0.7)
                .multilineTextAlignment(.center)
                .textColor(style?.subtitleColor ?? nil)
            }
          }
        }
      }
      .padding(.horizontal, 24)
      .padding(.vertical, 8)
      .frame(minHeight: 50)
      .alertBackground(style?.backgroundColor ?? nil)
      .clipShape(Capsule())
      .overlay(Capsule().stroke(Color.gray.opacity(0.2), lineWidth: 1))
      .shadow(color: Color.black.opacity(0.1), radius: 5, x: 0, y: 6)
      .compositingGroup()
    }
    .padding(.top)
  }

  /// Alert View
  public var alert: some View {
    VStack {
      switch type {
      case let .complete(color):
        Spacer()
        AnimatedCheckmark(color: color)
        Spacer()
      case let .error(color):
        Spacer()
        AnimatedXmark(color: color)
        Spacer()
      case let .systemImage(name, color):
        Spacer()
        Image(systemName: name)
          .renderingMode(.template)
          .resizable()
          .aspectRatio(contentMode: .fit)
          .scaledToFit()
          .foregroundColor(color)
          .padding(.bottom)
        Spacer()
      case let .image(name, color):
        Spacer()
        Image(name)
          .resizable()
          .aspectRatio(contentMode: .fit)
          .scaledToFit()
          .foregroundColor(color)
          .padding(.bottom)
        Spacer()
      case .loading:
        ActivityIndicator(color: style?.activityIndicatorColor ?? .white)
      case .regular:
        EmptyView()
      }

      VStack(spacing: type == .regular ? 8 : 2) {
        if let title {
          Text(LocalizedStringKey(title))
            .font(style?.titleFont ?? Font.body.bold())
            .multilineTextAlignment(.center)
            .textColor(style?.titleColor ?? nil)
        }
        if let subTitle {
          Text(LocalizedStringKey(subTitle))
            .font(style?.subTitleFont ?? Font.footnote)
            .opacity(0.7)
            .multilineTextAlignment(.center)
            .textColor(style?.subtitleColor ?? nil)
        }
      }
    }
    .padding()
    .withFrame(type != .regular && type != .loading)
    .alertBackground(style?.backgroundColor ?? nil)
    .cornerRadius(10)
  }

  /// Body init determine by `displayMode`
  public var body: some View {
    switch displayMode {
    case .alert:
      alert
    case .hud:
      hud
    case .banner:
      banner
    }
  }
}

@available(iOS 14, macOS 11, *)
public struct AlertToastModifier: ViewModifier {
  /// Presentation `Binding<Bool>`
  @Binding var isPresenting: Bool

  /// Duration time to display the alert
  @State var duration: TimeInterval = 2

  /// Tap to dismiss alert
  @State var tapToDismiss: Bool = true

  var offsetY: CGFloat = 0

  /// Init `AlertToast` View
  var alert: () -> AlertToast

  /// Completion block returns `true` after dismiss
  var onTap: (() -> Void)? = nil
  var completion: (() -> Void)? = nil

  @State private var workItem: DispatchWorkItem?

  @State private var hostRect: CGRect = .zero
  @State private var alertRect: CGRect = .zero

  private var screen: CGRect {
    return UIScreen.main.bounds
  }

  private var offset: CGFloat {
    return -hostRect.midY + alertRect.height
  }

  @ViewBuilder
  public func main() -> some View {
    if isPresenting {
      switch alert().displayMode {
      case .alert:
        alert()
          .onTapGesture {
            onTap?()
            if tapToDismiss {
              withAnimation(Animation.spring()) {
                workItem?.cancel()
                isPresenting = false
                workItem = nil
              }
            }
          }
          .onDisappear(perform: {
            completion?()
          })
          .transition(AnyTransition.scale(scale: 0.8).combined(with: .opacity))
      case .hud:
        alert()
          .overlay(
            GeometryReader { geo -> AnyView in
              let rect = geo.frame(in: .global)

              if rect.integral != alertRect.integral {
                DispatchQueue.main.async {
                  alertRect = rect
                }
              }
              return AnyView(EmptyView())
            }
          )
          .onTapGesture {
            onTap?()
            if tapToDismiss {
              withAnimation(Animation.spring()) {
                workItem?.cancel()
                isPresenting = false
                workItem = nil
              }
            }
          }
          .onDisappear(perform: {
            completion?()
          })
          .transition(AnyTransition.move(edge: .top).combined(with: .opacity))
      case .banner:
        alert()
          .onTapGesture {
            onTap?()
            if tapToDismiss {
              withAnimation(Animation.spring()) {
                workItem?.cancel()
                isPresenting = false
                workItem = nil
              }
            }
          }
          .onDisappear(perform: {
            completion?()
          })
          .transition(alert().displayMode == .banner(.slide) ? AnyTransition.slide.combined(with: .opacity) : AnyTransition.move(edge: .bottom))
      }
    }
  }

  @ViewBuilder
  public func body(content: Content) -> some View {
    switch alert().displayMode {
    case .banner:
      content
        .overlay(ZStack {
          main()
            .offset(y: offsetY)
        }
        .animation(Animation.spring(), value: isPresenting)
        )
        .valueChanged(value: isPresenting, onChange: { presented in
          if presented {
            onAppearAction()
          }
        })
    case .hud:
      content
        .overlay(
          GeometryReader { geo -> AnyView in
            let rect = geo.frame(in: .global)

            if rect.integral != hostRect.integral {
              DispatchQueue.main.async {
                hostRect = rect
              }
            }

            return AnyView(EmptyView())
          }
          .overlay(ZStack {
            main()
              .offset(y: offsetY)
          }
          .frame(maxWidth: screen.width, maxHeight: screen.height)
          .offset(y: offset)
          .animation(Animation.spring(), value: isPresenting))
        )
        .valueChanged(value: isPresenting, onChange: { presented in
          if presented {
            onAppearAction()
          }
        })
    case .alert:
      content
        .overlay(ZStack {
          main()
            .offset(y: offsetY)
        }
        .frame(maxWidth: screen.width, maxHeight: screen.height, alignment: .center)
        .edgesIgnoringSafeArea(.all)
        .animation(Animation.spring(), value: isPresenting))
        .valueChanged(value: isPresenting, onChange: { presented in
          if presented {
            onAppearAction()
          }
        })
    }
  }

  private func onAppearAction() {
    guard workItem == nil else {
      return
    }

    if alert().type == .loading {
      duration = 0
      tapToDismiss = false
    }

    if duration > 0 {
      workItem?.cancel()

      let task = DispatchWorkItem {
        withAnimation(Animation.spring()) {
          isPresenting = false
          workItem = nil
        }
      }
      workItem = task
      DispatchQueue.main.asyncAfter(deadline: .now() + duration, execute: task)
    }
  }
}

/// Fileprivate View Modifier for dynamic frame when alert type is `.regular` / `.loading`
@available(iOS 14, macOS 11, *)
private struct WithFrameModifier: ViewModifier {
  var withFrame: Bool

  var maxWidth: CGFloat = 175
  var maxHeight: CGFloat = 175

  @ViewBuilder
  func body(content: Content) -> some View {
    if withFrame {
      content
        .frame(maxWidth: maxWidth, maxHeight: maxHeight, alignment: .center)
    } else {
      content
    }
  }
}

/// Fileprivate View Modifier to change the alert background
@available(iOS 14, macOS 11, *)
private struct BackgroundModifier: ViewModifier {
  var color: Color?

  @ViewBuilder
  func body(content: Content) -> some View {
    if let color {
      content
        .background(color)
    } else {
      content
        .background(BlurView())
    }
  }
}

/// Fileprivate View Modifier to change the text colors
@available(iOS 14, macOS 11, *)
private struct TextForegroundModifier: ViewModifier {
  var color: Color?

  @ViewBuilder
  func body(content: Content) -> some View {
    if let color {
      content
        .foregroundColor(color)
    } else {
      content
    }
  }
}

@available(iOS 14, macOS 11, *)
private extension Image {
  func hudModifier() -> some View {
    renderingMode(.template)
      .resizable()
      .aspectRatio(contentMode: .fit)
      .frame(maxWidth: 20, maxHeight: 20, alignment: .center)
  }
}

// @available(iOS 14, macOS 11, *)
public extension View {
  /// Return some view w/o frame depends on the condition.
  /// This view modifier function is set by default to:
  /// - `maxWidth`: 175
  /// - `maxHeight`: 175
  fileprivate func withFrame(_ withFrame: Bool) -> some View {
    modifier(WithFrameModifier(withFrame: withFrame))
  }

  /// Present `AlertToast`.
  /// - Parameters:
  ///   - show: Binding<Bool>
  ///   - alert: () -> AlertToast
  /// - Returns: `AlertToast`
  func toast(isPresenting: Binding<Bool>, duration: TimeInterval = 2, tapToDismiss: Bool = true, offsetY: CGFloat = 0, alert: @escaping () -> AlertToast, onTap: (() -> Void)? = nil, completion: (() -> Void)? = nil) -> some View {
    modifier(AlertToastModifier(isPresenting: isPresenting, duration: duration, tapToDismiss: tapToDismiss, offsetY: offsetY, alert: alert, onTap: onTap, completion: completion))
  }

  /// Present `AlertToast`.
  /// - Parameters:
  ///   - item: Binding<Item?>
  ///   - alert: (Item?) -> AlertToast
  /// - Returns: `AlertToast`
  func toast<Item>(item: Binding<Item?>, duration: Double = 2, tapToDismiss: Bool = true, offsetY: CGFloat = 0, alert: @escaping (Item?) -> AlertToast, onTap: (() -> Void)? = nil, completion: (() -> Void)? = nil) -> some View where Item: Identifiable {
    modifier(
      AlertToastModifier(
        isPresenting: Binding(
          get: {
            item.wrappedValue != nil
          }, set: { select in
            if !select {
              item.wrappedValue = nil
            }
          }
        ),
        duration: duration,
        tapToDismiss: tapToDismiss,
        offsetY: offsetY,
        alert: {
          alert(item.wrappedValue)
        },
        onTap: onTap,
        completion: completion
      )
    )
  }

  /// Choose the alert background
  /// - Parameter color: Some Color, if `nil` return `VisualEffectBlur`
  /// - Returns: some View
  fileprivate func alertBackground(_ color: Color? = nil) -> some View {
    modifier(BackgroundModifier(color: color))
  }

  /// Choose the alert background
  /// - Parameter color: Some Color, if `nil` return `.black`/`.white` depends on system theme
  /// - Returns: some View
  fileprivate func textColor(_ color: Color? = nil) -> some View {
    modifier(TextForegroundModifier(color: color))
  }

  @ViewBuilder fileprivate func valueChanged<T: Equatable>(value: T, onChange: @escaping (T) -> Void) -> some View {
    if #available(iOS 14.0, *) {
      self.onChange(of: value, perform: onChange)
    } else {
      onReceive(Just(value)) { value in
        onChange(value)
      }
    }
  }
}



================================================
FILE: sources/Components/Library/SnackBar/BlurView.swift
================================================
//
//  BlurView.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 14/11/2024.
//

import Foundation
import SwiftUI

#if os(macOS)

@available(macOS 11, *)
public struct BlurView: NSViewRepresentable {
  public typealias NSViewType = NSVisualEffectView

  public func makeNSView(context _: Context) -> NSVisualEffectView {
    let effectView = NSVisualEffectView()
    effectView.material = .hudWindow
    effectView.blendingMode = .withinWindow
    effectView.state = NSVisualEffectView.State.active
    return effectView
  }

  public func updateNSView(_ nsView: NSVisualEffectView, context _: Context) {
    nsView.material = .hudWindow
    nsView.blendingMode = .withinWindow
  }
}

#else

@available(iOS 14, *)
public struct BlurView: UIViewRepresentable {
  public typealias UIViewType = UIVisualEffectView

  public func makeUIView(context _: Context) -> UIVisualEffectView {
    return UIVisualEffectView(effect: UIBlurEffect(style: .regular))
  }

  public func updateUIView(_ uiView: UIVisualEffectView, context _: Context) {
    uiView.effect = UIBlurEffect(style: .regular)
  }
}

#endif

#if os(macOS)
@available(macOS 11, *)
struct ActivityIndicator: NSViewRepresentable {
  let color: Color

  func makeNSView(context: NSViewRepresentableContext<ActivityIndicator>) -> NSProgressIndicator {
    let nsView = NSProgressIndicator()

    nsView.isIndeterminate = true
    nsView.style = .spinning
    nsView.startAnimation(context)

    return nsView
  }

  func updateNSView(_: NSProgressIndicator, context _: NSViewRepresentableContext<ActivityIndicator>) {
  }
}
#else
@available(iOS 14, *)
struct ActivityIndicator: UIViewRepresentable {
  let color: Color

  func makeUIView(context _: UIViewRepresentableContext<ActivityIndicator>) -> UIActivityIndicatorView {
    let progressView = UIActivityIndicatorView(style: .large)
    progressView.startAnimating()

    return progressView
  }

  func updateUIView(_ uiView: UIActivityIndicatorView, context _: UIViewRepresentableContext<ActivityIndicator>) {
    uiView.color = UIColor(color)
  }
}
#endif



================================================
FILE: sources/Components/Library/SnackBar/ColorExtension.swift
================================================
#if canImport(SwiftUI)
import SwiftUI
#endif

@available(iOS 14.0, *)
internal extension Color {
  var isDark: Bool {
    var r, g, b, a: CGFloat
    (r, g, b, a) = (0, 0, 0, 0)
    let uiColor = UIColor(self)
    uiColor.getRed(&r, green: &g, blue: &b, alpha: &a)
    let lum = 0.2126 * r + 0.7152 * g + 0.0722 * b
    return lum < 0.50
  }
}



================================================
FILE: sources/Components/Library/SnackBar/Snackbar.swift
================================================
#if canImport(SwiftUI)
import SwiftUI
#endif

@available(iOS 14.0, *)
internal struct Snackbar: View {
  @Binding var isShowing: Bool
  private let presenting: AnyView
  private let title: Text
  private let text: Text?
  private let style: SnackbarStyle
  private let actionText: String?
  private let action: (() -> Void)?
  private let extraBottomPadding: CGFloat
  private let viewOffset: CGFloat = 6
  private let dismissOnTap: Bool
  private let dismissAfter: Double?

  internal init(isShowing: Binding<Bool>, presenting: some View, title: Text, text: Text?, style: SnackbarStyle, extraBottomPadding: CGFloat, actionText: String? = nil, action: (() -> Void)? = nil, dismissOnTap: Bool = true, dismissAfter: Double? = 4) {
    _isShowing = isShowing
    self.presenting = AnyView(presenting)
    self.title = title
    self.text = text
    self.style = style
    self.actionText = actionText
    self.action = action
    self.extraBottomPadding = extraBottomPadding
    self.dismissOnTap = dismissOnTap
    self.dismissAfter = dismissAfter
  }

  internal init(isShowing: Binding<Bool>, presenting: some View, title: String, text: String?, style: SnackbarStyle, extraBottomPadding: CGFloat, actionText: String? = nil, action: (() -> Void)? = nil, dismissOnTap: Bool = true, dismissAfter: Double? = 4) {
    _isShowing = isShowing
    self.presenting = AnyView(presenting)
    self.title = Text(title)
    self.text = text != nil ? Text(text!) : nil
    self.style = style
    self.actionText = actionText
    self.action = action
    self.extraBottomPadding = extraBottomPadding
    self.dismissOnTap = dismissOnTap
    self.dismissAfter = dismissAfter
  }

  internal var body: some View {
    ZStack {
      presenting

      VStack {
        Spacer()
        snackbar
      }
      .ignoresSafeArea()
    }
  }

  private var snackbar: some View {
    VStack {
      Spacer()
      if isShowing {
        HStack {
          VStack(alignment: .leading, spacing: 3) {
            title
              .fontWeight(.semibold)
            if let text {
              text
            }
          }
          .font(.system(.body, design: .rounded))
          .foregroundColor(textColor)
          .padding(.bottom, text == nil ? 23 : 0)

          Spacer()

          if hasAction {
            Text(actionText!)
              .bold()
              .textCase(.uppercase)
              .foregroundColor(textColor)
              .onTapGesture {
                action?()
                withAnimation {
                  isShowing = false
                }
              }
          }
        }
        .padding(.top)
        .padding(.horizontal, 24)
        .padding(.bottom, 32 + viewOffset + extraBottomPadding)
        .background(backgroundColor)
        .transition(.move(edge: .bottom))
        .animation(.spring(), value: isShowing)
        .onAppear {
//                    guard !hasAction else { return }
          if let dismissAfter {
            DispatchQueue.main.asyncAfter(deadline: .now() + dismissAfter) {
              withAnimation {
                isShowing = false
              }
            }
          }
        } //: onAppear
        .onTapGesture {
          if dismissOnTap {
            isShowing = false
          }
        } //: onTapGesture
      }
    } //: VStack
    .offset(y: viewOffset)
  }

  private var hasAction: Bool {
    actionText != nil && action != nil
  }

  private var backgroundColor: Color {
    switch style {
    case .default:
      return .accentColor
    case .warning:
      return Color("Warning", bundle: .main)
    case .error:
      return Color("Error", bundle: .main)
    case let .custom(color: color):
      return color
    }
  }

  private var textColor: Color {
    if backgroundColor.isDark {
      return .white
    }
    return .black
  }
}



================================================
FILE: sources/Components/Library/SnackBar/SnackbarStore.swift
================================================
#if canImport(SwiftUI)
import SwiftUI
#endif

/// Utility class that's used to interact with a `Snackbar`.
/// It offers a method to **display** the snackbar
/// - Author: Luca Zani
/// Here is how to use it has a `StateObject`
/// ```
/// struct ContentView: View {
///
///     @StateObject var store = SnackbarStore()
///
///     var body: some View {
///         Button("Show Snackbar!") {
///             store.display(title: Text("Hey I'm a title!"), text: Text("I'm a body text"), style: .custom(color: .blue))
///         }
///         .snackbar(isShowing: $store.show, title: store.title, text: store.text, style: store.style)
///
///     }
/// }
/// ```
/// It can also be used has an `@EnvironmentObject` to give other `Views` the possibilty to interact with the same `Snackbar`
/// ```
/// @EnvironmentObject var store: SnackbarStore
/// ```
/// - Important: If you use it has an `@EnvironmentObject` remember to inject it into the view hierarchy with
/// ```
/// .environmentObject(SnackbarStore())
/// ```
/// - Version: 0.1
@available(iOS 14.0, *)
public class SnackbarStore: ObservableObject {
  @Published public var title: Text = .init("")
  @Published public var text: Text? = nil
  @Published public var show: Bool = false
  @Published public var style: SnackbarStyle = .default
  @Published public var actionText: String?
  @Published public var action: (() -> Void)?

  public init() {
  }

  /// Display a snackbar by specifing the title and optionally the text as ´String´
  /// - Author: Luca Zani
  /// - Parameters:
  ///   - title: The bold text you want the `Snackbar` to display on top
  ///   - text: The lighter text that you want displayed under the title (optional)
  ///   - style: The `SnackbarStyle` wich specify the `Snackbar`'s background color
  /// - Version: 0.1
  @MainActor
  public func display(title: String, text: String? = nil, style: SnackbarStyle = .default) {
    DispatchQueue.main.async { [weak self] in
      self?.title = Text(title)
      self?.text = text != nil ? Text(text!) : nil
      self?.style = style
      self?.action = nil
      self?.actionText = nil
      self?.show = true
    }
  }

  /// Display a snackbar using SwiftUI `Text` object
  /// - Author: Luca Zani
  /// - Parameters:
  ///   - title: The bold text you want the `Snackbar` to display on top
  ///   - text: The lighter text that you want displayed under the title (optional)
  ///   - style: The `SnackbarStyle` wich specify the `Snackbar`'s background color
  /// - Note: You can use this `display()` method to **concatenate** many `Text` objects
  /// ```
  /// .display(title: Text("I'm a title!"), text: Text("Hi I'm a ") + Text("Bold").bold() + Text(" Description!"), style: .default)
  /// ```
  /// - Version: 0.1
  @MainActor
  public func display(title: Text, text: Text? = nil, style: SnackbarStyle = .default) {
    DispatchQueue.main.async { [weak self] in
      self?.title = title
      self?.text = text
      self?.style = style
      self?.action = nil
      self?.actionText = nil
      self?.show = true
    }
  }

  /// Display a snackbar using SwiftUI `Text` object and adds and action to it
  /// - Author: Luca Zani
  /// - Parameters:
  ///   - title: The bold text you want the `Snackbar` to display on top
  ///   - text: The lighter text that you want displayed under the title (optional)
  ///   - style: The `SnackbarStyle` wich specify the `Snackbar`'s background color
  ///   - actionText: The text on the action button
  ///   - action: The action you want to perform when the user touches the action button
  /// - Note: You can use this `display()` method to **concatenate** many `Text` objects
  /// ```
  /// .display(title: Text("I'm a title!"), text: Text("Hi I'm a ") + Text("Bold").bold() + Text(" Description!"), style: .default, actionText: "Say Hi") {
  ///     print("Hi!")
  /// }
  /// ```
  /// - Version: 0.1
  @MainActor
  public func displayWithAction(title: Text, text: Text? = nil, style: SnackbarStyle = .default, actionText: String, action: (() -> Void)?) {
    DispatchQueue.main.async { [weak self] in
      self?.title = title
      self?.text = text
      self?.style = style
      self?.action = action
      self?.actionText = actionText
      self?.show = true
    }
  }
}



================================================
FILE: sources/Components/Library/SnackBar/SnackbarStyle.swift
================================================
#if canImport(SwiftUI)
import SwiftUI
#endif

/// Specifies the `Snackbar`'s background color
/// - `.default`:  the app's accent color
/// - `.warning`: ocra
/// - `.error`: red
/// - `.custom(_: Color)`:  lets you specify the color you want
/// - Author: Luca Zani
/// - Version: 0.1
@available(iOS 14.0, *)
public enum SnackbarStyle {
  case `default`
  case warning
  case error
  case custom(_ color: Color)
}



================================================
FILE: sources/Components/Library/SnackBar/SnackbarViewExtension.swift
================================================
#if canImport(SwiftUI)
import SwiftUI
#endif

@available(iOS 14.0, *)
public extension View {
  /// Adds a snackbar to the view
  /// - Author: Luca Zani
  ///
  /// - Parameters:
  ///   - isShowing: Binding that lets you control the `show` state of the `Snackbar`
  ///   - title: The bolder text on top
  ///   - text: The body text
  ///   - style: The style of the `Snackbar`, changing this will change the background color
  ///   - actionText: The text of the action button (optional)
  ///   - extraBottomPadding: The additional padding from the bottom of the view (optional)
  ///   - action: The action you want to perform when the user touches the action button (optional)
  ///   - dismissOnTap: if the user can dismiss the `Snackbar` by tapping it, defaults to true
  ///   - dismissAfter: how long should the `Snackbar` be displayed on the screen (in seconds)  defaults to 4, set it to `nil` to make it never dismiss itself
  /// - Note: for usage information consider reading the `README.md` on the [Github]() page
  ///
  /// You can use the other view extension (The one with both `title` and `text` as `Text`) to further customize the text apparence
  ///
  /// - Version: 0.1
  func snackbar(isShowing: Binding<Bool>, title: String, text: String? = nil, style: SnackbarStyle, actionText: String? = nil, dismissOnTap: Bool = true, dismissAfter: Double? = 4, extraBottomPadding: CGFloat = 0, action: (() -> Void)? = nil) -> some View {
    Snackbar(isShowing: isShowing, presenting: self, title: title, text: text, style: style, extraBottomPadding: extraBottomPadding, actionText: actionText, action: action, dismissOnTap: dismissOnTap, dismissAfter: dismissAfter)
  }

  /// Adds a snackbar to the view
  /// - Author: Luca Zani
  ///
  /// - Parameters:
  ///   - isShowing: Binding that lets you control the `show` state of the `Snackbar`
  ///   - title: The bolder text on top
  ///   - text: The body text
  ///   - style: The style of the `Snackbar`, changing this will change the background color
  ///   - actionText: The text of the action button (optional)
  ///   - extraBottomPadding: The additional padding from the bottom of the view (optional)
  ///   - action: The action you want to perform when the user touches the action button (optional)
  ///   - dismissOnTap: if the user can dismiss the `Snackbar` by tapping it, defaults to true
  ///   - dismissAfter: how long should the `Snackbar` be displayed on the screen (in seconds) defaults to 4, set it to `nil` to make it never dismiss itself
  ///
  /// - Note: for usage information consider reading the `README.md` on the [Github]() page
  /// - Version: 0.1
  ///
  func snackbar(isShowing: Binding<Bool>, title: Text, text: Text? = nil, style: SnackbarStyle, actionText: String? = nil, dismissOnTap: Bool = true, dismissAfter: Double? = 4, extraBottomPadding: CGFloat = 0, action: (() -> Void)? = nil) -> some View {
    Snackbar(isShowing: isShowing, presenting: self, title: title, text: text, style: style, extraBottomPadding: extraBottomPadding, actionText: actionText, action: action, dismissOnTap: dismissOnTap, dismissAfter: dismissAfter)
  }
}



================================================
FILE: sources/Components/Models/ServerInfo.swift
================================================
//
//  ServerInfo.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 19/11/2024.
//
import Foundation

public struct ServerInfo: Decodable {
  public let url: String
  public let port: String
  public let httpsPort: String
  public let serverProtocol: String
  public let rtmpPort: String
  public let timezone: String
  public let timestampNow: Int
  public let timeNow: String
  public let process: Bool?

  enum CodingKeys: String, CodingKey {
    case url, port, timezone, process
    case httpsPort = "https_port"
    case serverProtocol = "server_protocol"
    case rtmpPort = "rtmp_port"
    case timestampNow = "timestamp_now"
    case timeNow = "time_now"
  }
}



================================================
FILE: sources/Components/Models/UserInfo.swift
================================================
//
//  UserInfo.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 19/11/2024.
//
import Foundation

public struct UserInfo: Decodable {
  public let username: String
  public let password: String
  public let message: String
  public let auth: Int
  public let status: String
  public let expDate: Date
  public let isTrial: Bool
  public let activeCons: Int
  public let createdAt: Date
  public let maxConnections: Int
  public let allowedOutputFormats: [String]

  enum CodingKeys: String, CodingKey {
    case username, password, message, auth, status
    case expDate = "exp_date"
    case isTrial = "is_trial"
    case activeCons = "active_cons"
    case createdAt = "created_at"
    case maxConnections = "max_connections"
    case allowedOutputFormats = "allowed_output_formats"
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
    self.username = try container.decode(String.self, forKey: .username)
    self.password = try container.decode(String.self, forKey: .password)
    self.message = try container.decode(String.self, forKey: .message)
    self.auth = try container.decode(Int.self, forKey: .auth)
    self.status = try container.decode(String.self, forKey: .status)
    let expDateString = try container.decode(String.self, forKey: .expDate)
    self.expDate = Date(timeIntervalSince1970: TimeInterval(expDateString) ?? 0)
    let isTrialString = try container.decode(String.self, forKey: .isTrial)
    self.isTrial = isTrialString == "1"
    let activeConsString = try container.decode(String.self, forKey: .activeCons)
    self.activeCons = Int(activeConsString) ?? 0
    let createdAtString = try container.decode(String.self, forKey: .createdAt)
    self.createdAt = Date(timeIntervalSince1970: TimeInterval(createdAtString) ?? 0)
    let maxConnectionsString = try container.decode(String.self, forKey: .maxConnections)
    self.maxConnections = Int(maxConnectionsString) ?? 0
    self.allowedOutputFormats = try container.decode([String].self, forKey: .allowedOutputFormats)
  }
}

public struct InfoUserResponse: Decodable {
  public let userInfo: UserInfo
  public let serverInfo: ServerInfo

  enum CodingKeys: String, CodingKey {
    case userInfo = "user_info"
    case serverInfo = "server_info"
  }
}



================================================
FILE: sources/Components/Models/Categories/Category.swift
================================================
//
//  Category.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 10/11/2024.
//
import RealmSwift

public struct Category: Decodable, Identifiable {
  public let id: String
  public let name: String
  public let parentId: Int

  enum CodingKeys: String, CodingKey {
    case id = "category_id"
    case name = "category_name"
    case parentId = "parent_id"
  }
}



================================================
FILE: sources/Components/Models/Categories/CategoryEntity.swift
================================================
//
//  CategoryEntity.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 10/11/2024.
//

import RealmSwift

public class CategoryEntity: Object, ObjectKeyIdentifiable {
  @Persisted public var _identifier: ObjectId
  @Persisted(primaryKey: true) public var id: String
  @Persisted public var name: String
  @Persisted public var parentId: Int
  @Persisted public var section: String // "Live", "VOD", "Series"

  public convenience init(id: String, name: String, parentId: Int, section: String) {
    self.init()
    self.id = id
    self.name = name
    self.parentId = parentId
    self.section = section
  }
}



================================================
FILE: sources/Components/Models/Common/KindMedia.swift
================================================
//
//  KindMedia.swift
//  IPTVLibrary
//
//  Created by Tarik ALAOUI on 24/06/2025.
//

public enum KindMedia: String {
  case live
  case vod
  case series
  case none
}



================================================
FILE: sources/Components/Models/Favorites/FavoriEntity.swift
================================================
//
//  FavoriEntity.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 13/11/2024.
//
import RealmSwift
import SwiftUI

public class FavoriEntity: Object, ObjectKeyIdentifiable {
  @Persisted(primaryKey: true) public var _identifier: ObjectId
  @Persisted public var id: Int
  @Persisted public var kind: String
  @Persisted public var name: String
  @Persisted public var streamIcon: String?
  @Persisted public var added: Date
  @Persisted public var tmdb: String?

  public convenience init(id: Int, kind: String, name: String, streamIcon: String?, added _: Date, tmdb: String? = nil) {
    self.init()
    self.id = id
    self.kind = kind
    self.name = name
    self.streamIcon = streamIcon
    self.added = Date()
    self.tmdb = tmdb
  }

  public var kindMedia: KindMedia {
    KindMedia(rawValue: kind) ?? .vod
  }

  public func getImage() -> String? {
    return streamIcon
  }
}



================================================
FILE: sources/Components/Models/Series/CachedSeries.swift
================================================
//
//  CachedSeries.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 12/11/2024.
//

import RealmSwift
import SwiftUI

public class CachedSeries: Object, ObjectKeyIdentifiable {
  @Persisted public var _identifier: ObjectId
  @Persisted(primaryKey: true) public var id: Int
  @Persisted public var name: String
  @Persisted public var seriesID: Int
  @Persisted public var cover: String?
  @Persisted public var plot: String?
  @Persisted public var cast: String?
  @Persisted public var director: String?
  @Persisted public var genre: String?
  @Persisted public var releaseDate: String?
  @Persisted public var lastModified: Date
  @Persisted public var rating: Double?
  @Persisted public var rating5Based: Double?
  @Persisted public var backdropPaths: Data?
  @Persisted public var youtubeTrailer: String?
  @Persisted public var tmdb: String
  @Persisted public var episodeRunTime: Int
  @Persisted public var categoryID: String
  @Persisted public var categoryIDs: Data?
  @Persisted public var section: String
  @Persisted public var isFavorite: Bool

  public var kindMedia: KindMedia {
    KindMedia(rawValue: section) ?? .vod
  }

  public convenience init(serie: Series, section: String) {
    self.init()
    self.id = serie.id
    self.name = serie.name
    self.seriesID = serie.seriesID
    self.cover = serie.cover
    self.plot = serie.plot
    self.cast = serie.cast
    self.director = serie.director
    self.genre = serie.genre
    self.releaseDate = serie.releaseDate
    self.lastModified = serie.lastModified
    self.rating = serie.rating
    self.rating5Based = serie.rating5Based
    self.backdropPaths = serie.backdropPathsData
    self.youtubeTrailer = serie.youtubeTrailer
    self.tmdb = serie.tmdb ?? ""
    self.episodeRunTime = 0 // serie.episodeRunTime?.value
    self.categoryID = serie.categoryID
    self.categoryIDs = serie.categoryIDsData
    self.section = section
    self.isFavorite = false
  }

  public func getImage() -> String? {
    return cover
  }
}

// MARK: SeriesInfo

public class SeriesInfoEntity: Object, ObjectKeyIdentifiable {
  @Persisted(primaryKey: true) public var _identifier: ObjectId
  @Persisted public var name: String
  @Persisted public var cover: String
  @Persisted public var plot: String?
  @Persisted public var cast: String?
  @Persisted public var director: String?
  @Persisted public var genre: String?
  @Persisted public var releaseDate: String?
  @Persisted public var lastModified: Date?
  @Persisted public var rating: Double
  @Persisted public var rating5Based: Double
  @Persisted public var tmdb: String
  @Persisted public var youtubeTrailer: String?

  override public class func primaryKey() -> String? {
    return "tmdb"
  }

  public convenience init(name: String, cover: String, plot: String? = nil, cast: String? = nil, director: String? = nil, genre: String? = nil, releaseDate: String? = nil, lastModified: Date? = nil, rating: Double, rating5Based: Double, tmdb: String, youtubeTrailer: String? = nil) {
    self.init()
    self.name = name
    self.cover = cover
    self.plot = plot
    self.cast = cast
    self.director = director
    self.genre = genre
    self.releaseDate = releaseDate
    self.lastModified = lastModified
    self.rating = rating
    self.rating5Based = rating5Based
    self.tmdb = tmdb
    self.youtubeTrailer = youtubeTrailer
  }
}

// Informations sur un épisode
public class EpisodeEntity: Object, ObjectKeyIdentifiable {
  @Persisted(primaryKey: true) public var id: String
  @Persisted public var episodeNum: Int
  @Persisted public var title: String
  @Persisted public var containerExtension: String?
  @Persisted public var added: Date?
  @Persisted public var season: Int
  @Persisted public var infoID: Int
  @Persisted public var movieImage: String?

  public convenience init(id: String, episodeNum: Int, title: String, containerExtension: String? = nil, added: Date? = nil, season: Int, infoID: Int, movieImage: String? = nil) {
    self.init()
    self.id = id
    self.episodeNum = episodeNum
    self.title = title
    self.containerExtension = containerExtension
    self.added = added
    self.season = season
    self.infoID = infoID
    self.movieImage = movieImage
  }
}

// Informations sur une saison
public class SeasonEntity: Object, ObjectKeyIdentifiable {
  @Persisted(primaryKey: true) public var _identifier: ObjectId
  @Persisted public var name: String
  @Persisted public var episodeCount: Int
  @Persisted public var overview: String?
  @Persisted public var airDate: String?
  @Persisted public var cover: String
  @Persisted public var coverTMDB: String
  @Persisted public var seasonNumber: Int
  @Persisted public var coverBig: String
  @Persisted public var releaseDate: String?
  @Persisted public var duration: String?

  public convenience init(name: String, episodeCount: Int, overview: String? = nil, airDate: String? = nil, cover: String, coverTMDB: String, seasonNumber: Int, coverBig: String, releaseDate: String? = nil, duration: String? = nil) {
    self.init()
    self._identifier = _identifier
    self.name = name
    self.episodeCount = episodeCount
    self.overview = overview
    self.airDate = airDate
    self.cover = cover
    self.coverTMDB = coverTMDB
    self.seasonNumber = seasonNumber
    self.coverBig = coverBig
    self.releaseDate = releaseDate
    self.duration = duration
  }
}

// Informations complètes sur une série
public class SerieDetailEntity: Object {
  @Persisted(primaryKey: true) public var id: String
  @Persisted public var info: SeriesInfoEntity?
  @Persisted public var seasons: RealmSwift.List<SeasonEntity>
  @Persisted public var episodes: RealmSwift.List<EpisodeEntity>

  public convenience init(id: String, info: SeriesInfoEntity? = nil, seasons: RealmSwift.List<SeasonEntity>, episodes: RealmSwift.List<EpisodeEntity>) {
    self.init()
    self.id = id
    self.info = info
    self.seasons = seasons
    self.episodes = episodes
  }
}



================================================
FILE: sources/Components/Models/Series/Series.swift
================================================
//
//  Series.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//

import Foundation

public struct Series: Identifiable, Decodable {
  public let id: Int
  public let name: String
  public let seriesID: Int
  public let cover: String?
  public let plot: String?
  public let cast: String?
  public let director: String?
  public let genre: String?
  public let releaseDate: String?
  public let lastModified: Date
  public let rating: Double?
  public let rating5Based: Double?
  public let backdropPaths: [String]
  public let youtubeTrailer: String?
  public let tmdb: String?
  public let episodeRunTime: Int?
  public let categoryID: String
  public let categoryIDs: [Int]

  enum CodingKeys: String, CodingKey {
    case id = "num"
    case name
    case seriesID = "series_id"
    case cover
    case plot
    case cast
    case director
    case genre
    case releaseDate
    case lastModified = "last_modified"
    case rating
    case rating5Based = "rating_5based"
    case backdropPaths = "backdrop_path"
    case youtubeTrailer = "youtube_trailer"
    case tmdb
    case episodeRunTime = "episode_run_time"
    case categoryID = "category_id"
    case categoryIDs = "category_ids"
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
    self.id = try container.decode(Int.self, forKey: .seriesID)
    self.name = try container.decode(String.self, forKey: .name)
    self.seriesID = try container.decode(Int.self, forKey: .id)
    self.cover = try? container.decode(String.self, forKey: .cover)
    self.plot = try? container.decode(String.self, forKey: .plot)
    self.cast = try? container.decode(String.self, forKey: .cast)
    self.director = try? container.decode(String.self, forKey: .director)
    self.genre = try? container.decode(String.self, forKey: .genre)
    self.releaseDate = try? container.decode(String.self, forKey: .releaseDate)

    let lastModifiedTimestamp = try container.decode(String.self, forKey: .lastModified)
    if let timestamp = Double(lastModifiedTimestamp) {
      self.lastModified = Date(timeIntervalSince1970: timestamp)
    } else {
      throw DecodingError.dataCorruptedError(
        forKey: .lastModified,
        in: container,
        debugDescription: "Invalid timestamp for lastModified"
      )
    }

    self.rating = try? container.decode(Double.self, forKey: .rating)
    self.rating5Based = try? container.decode(Double.self, forKey: .rating5Based)
    self.backdropPaths = [] // try container.decodeIfPresent([String].self, forKey: .backdropPaths) ?? []
    self.youtubeTrailer = try? container.decode(String.self, forKey: .youtubeTrailer)
    self.tmdb = try? container.decode(String.self, forKey: .tmdb)
    self.episodeRunTime = 0 // try? container.decode(Int.self, forKey: .episodeRunTime)
    self.categoryID = try container.decode(String.self, forKey: .categoryID)
    self.categoryIDs = [] // try container.decodeIfPresent([Int].self, forKey: .categoryIDs) ?? []
  }

  public init(id: Int, name: String, seriesID: Int, cover: String? = nil, plot: String? = nil, cast: String? = nil, director: String? = nil, genre: String? = nil, releaseDate: String? = nil, lastModified: Date, rating: Double? = nil, rating5Based: Double? = nil, backdropPaths: [String], youtubeTrailer: String? = nil, tmdb: String, episodeRunTime: Int, categoryID: String, categoryIDs: [Int]) {
    self.id = id
    self.name = name
    self.seriesID = seriesID
    self.cover = cover
    self.plot = plot
    self.cast = cast
    self.director = director
    self.genre = genre
    self.releaseDate = releaseDate
    self.lastModified = lastModified
    self.rating = rating
    self.rating5Based = rating5Based
    self.backdropPaths = backdropPaths
    self.youtubeTrailer = youtubeTrailer
    self.tmdb = tmdb
    self.episodeRunTime = episodeRunTime
    self.categoryID = categoryID
    self.categoryIDs = categoryIDs
  }

  // Transformable properties for CoreData compatibility
  var backdropPathsData: Data? {
    try? JSONEncoder().encode(backdropPaths)
  }

  var categoryIDsData: Data? {
    try? JSONEncoder().encode(categoryIDs)
  }

  // Transform data back to arrays
  static func decodeBackdropPaths(from data: Data?) -> [String] {
    guard let data else { return [] }
    return (try? JSONDecoder().decode([String].self, from: data)) ?? []
  }

  static func decodeCategoryIDs(from data: Data?) -> [Int] {
    guard let data else { return [] }
    return (try? JSONDecoder().decode([Int].self, from: data)) ?? []
  }
}

// Info sur la série
public struct SeriesInfo: Decodable {
  public let name: String
  public let cover: String
  public let plot: String?
  public let cast: String?
  public let director: String?
  public let genre: String?
  public let releaseDate: String?
  public let lastModified: Date?
  public let rating: FlexibleString?
  public let rating5Based: FlexibleString?
  public let tmdb: String
  public let backdropPaths: [String]
  public let youtubeTrailer: String?

  enum CodingKeys: String, CodingKey {
    case name
    case cover
    case plot
    case cast
    case director
    case genre
    case releaseDate
    case lastModified = "last_modified"
    case rating
    case rating5Based = "rating_5based"
    case tmdb
    case backdropPaths = "backdrop_path"
    case youtubeTrailer = "youtube_trailer"
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
    self.name = try container.decode(String.self, forKey: .name)
    self.cover = try container.decode(String.self, forKey: .cover)
    self.plot = try container.decodeIfPresent(String.self, forKey: .plot)
    self.cast = try container.decodeIfPresent(String.self, forKey: .cast)
    self.director = try container.decodeIfPresent(String.self, forKey: .director)
    self.genre = try container.decodeIfPresent(String.self, forKey: .genre)
    self.releaseDate = try container.decodeIfPresent(String.self, forKey: .releaseDate)

    if let lastModifiedString = try? container.decode(String.self, forKey: .lastModified),
       let timestamp = Double(lastModifiedString) {
      self.lastModified = Date(timeIntervalSince1970: timestamp)
    } else if let lastModifiedDouble = try? container.decode(Double.self, forKey: .lastModified) {
      self.lastModified = Date(timeIntervalSince1970: lastModifiedDouble)
    } else {
      self.lastModified = nil
    }
    self.rating = try? container.decodeIfPresent(FlexibleString.self, forKey: .rating)
    self.rating5Based = try? container.decodeIfPresent(FlexibleString.self, forKey: .rating5Based)
    self.tmdb = try container.decode(String.self, forKey: .tmdb)
    self.backdropPaths = try container.decodeIfPresent([String].self, forKey: .backdropPaths) ?? []
    self.youtubeTrailer = try container.decodeIfPresent(String.self, forKey: .youtubeTrailer)
  }

  public init(name: String, cover: String, plot: String? = nil, cast: String? = nil, director: String? = nil, genre: String? = nil, releaseDate: String? = nil, lastModified: Date? = nil, rating: FlexibleString? = nil, rating5Based: FlexibleString? = nil, tmdb: String, backdropPaths: [String], youtubeTrailer: String? = nil) {
    self.name = name
    self.cover = cover
    self.plot = plot
    self.cast = cast
    self.director = director
    self.genre = genre
    self.releaseDate = releaseDate
    self.lastModified = lastModified
    self.rating = rating
    self.rating5Based = rating5Based
    self.tmdb = tmdb
    self.backdropPaths = backdropPaths
    self.youtubeTrailer = youtubeTrailer
  }
}

// Informations sur un épisode
public struct EpisodeInfo: Decodable {
  public let movieImage: String?

  enum CodingKeys: String, CodingKey {
    case movieImage = "movie_image"
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
    self.movieImage = try container.decodeIfPresent(String.self, forKey: .movieImage)
  }
}

public struct Episode: Decodable {
  public let id: String
  public let episodeNum: Int
  public let title: String
  public let containerExtension: String?
  public let added: Date?
  public let season: Int
  public let info: EpisodeInfo?

  enum CodingKeys: String, CodingKey {
    case id
    case episodeNum = "episode_num"
    case title
    case containerExtension = "container_extension"
    case added
    case season
    case info
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
    self.id = try container.decode(String.self, forKey: .id)
    self.episodeNum = try container.decode(Int.self, forKey: .episodeNum)
    self.title = try container.decode(String.self, forKey: .title)
    self.containerExtension = try container.decodeIfPresent(String.self, forKey: .containerExtension)
    if let addedTimestamp = try container.decodeIfPresent(String.self, forKey: .added) {
      self.added = Date(timeIntervalSince1970: TimeInterval(addedTimestamp) ?? 0)
    } else {
      self.added = nil
    }
    self.season = try container.decode(Int.self, forKey: .season)
    self.info = try? container.decodeIfPresent(EpisodeInfo.self, forKey: .info)
  }
}

// Informations sur une saison
public struct Season: Decodable {
  public let name: String
  public let episodeCount: FlexibleString?
  public let overview: String?
  public let airDate: String?
  public let cover: String
  public let coverTMDB: String
  public let seasonNumber: Int
  public let coverBig: String
  public let releaseDate: String?
  public let duration: String?

  enum CodingKeys: String, CodingKey {
    case name
    case episodeCount = "episode_count"
    case overview
    case airDate = "air_date"
    case cover
    case coverTMDB = "cover_tmdb"
    case seasonNumber = "season_number"
    case coverBig = "cover_big"
    case releaseDate
    case duration
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
    self.name = try container.decode(String.self, forKey: .name)
    self.episodeCount = try? container.decodeIfPresent(FlexibleString.self, forKey: .episodeCount)
    self.overview = try container.decodeIfPresent(String.self, forKey: .overview)
    self.airDate = try container.decodeIfPresent(String.self, forKey: .airDate)
    self.cover = try container.decode(String.self, forKey: .cover)
    self.coverTMDB = try container.decode(String.self, forKey: .coverTMDB)
    self.seasonNumber = try container.decodeIfPresent(Int.self, forKey: .seasonNumber) ?? 0
    self.coverBig = try container.decode(String.self, forKey: .coverBig)
    self.releaseDate = try container.decodeIfPresent(String.self, forKey: .releaseDate)
    self.duration = try container.decodeIfPresent(String.self, forKey: .duration)
  }
}

// Informations complètes sur une série
public struct SeriesDetail: Decodable {
  public let info: SeriesInfo
  public let seasons: [Season]
  public let episodes: [String: [Episode]]?

  enum CodingKeys: String, CodingKey {
    case info
    case seasons
    case episodes
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
    self.info = try container.decode(SeriesInfo.self, forKey: .info)
    self.seasons = try container.decodeIfPresent([Season].self, forKey: .seasons) ?? []
    self.episodes = try? container.decodeIfPresent([String: [Episode]].self, forKey: .episodes)
  }

  public init(info: SeriesInfo, seasons: [Season], episodes: [String: [Episode]]?) {
    self.info = info
    self.seasons = seasons
    self.episodes = episodes
  }
}



================================================
FILE: sources/Components/Models/Stream/CachedStream.swift
================================================
//
//  CachedStream.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//

import RealmSwift
import SwiftUI

public class CachedStream: Object, ObjectKeyIdentifiable {
  @Persisted public var identifier: ObjectId
  @Persisted(primaryKey: true) public var id: Int
  @Persisted public var name: String
  @Persisted public var streamType: String
  @Persisted public var streamIcon: String
  @Persisted public var added: Date
  @Persisted public var rating: String?
  @Persisted public var desc: String?
  @Persisted public var tmdb: String?
  @Persisted public var tmdbImage: String?
  @Persisted public var section: String
  @Persisted public var categoryId: String
  @Persisted public var year: Int?
  @Persisted public var isFavorite: Bool
  @Persisted public var containerExtension: String

  public var kindMedia: KindMedia {
    KindMedia(rawValue: section) ?? .vod
  }

  public var searchName: String {
    name.lowercased()
  }

  public convenience init(id: Int, name: String, streamType: String, streamIcon: String, section: String, added: Date, categoryId: String, rating: String? = nil, desc: String? = nil, tmdb: String? = nil, tmdbImage: String? = nil, year: Int?, containerExtension: String? = "mkv") {
    self.init()
    self.id = id
    self.name = name
    self.streamType = streamType
    self.streamIcon = streamIcon
    self.section = section
    self.added = added
    self.rating = rating
    self.desc = desc
    self.tmdb = tmdb
    self.tmdbImage = tmdbImage
    self.categoryId = categoryId
    self.year = year
    self.isFavorite = false
    self.containerExtension = containerExtension ?? "mkv"
  }

  public func getImage() -> String? {
    return streamIcon
  }
}



================================================
FILE: sources/Components/Models/Stream/Stream.swift
================================================
//
//  Stream.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 10/11/2024.
//
import SwiftUI

public struct Stream: Identifiable, Decodable {
  public let id: Int
  public let name: String
  public let streamType: String
  public let streamIcon: String
  public let rating: String?
  public let description: String?
  public let tmdb: FlexibleString?
  public let added: Date
  public let categoryId: String
  public let year: Int?
  public let containerExtension: String

  public var kindMedia: KindMedia {
    switch streamType {
    case "movie":
      return .vod
    case "series":
      return .series
    default:
      return .live
    }
  }

  enum CodingKeys: String, CodingKey {
    case id = "stream_id"
    case name
    case streamType = "stream_type"
    case streamIcon = "stream_icon"
    case rating
    case tmdb
    case description = "plot" // Par exemple pour les séries
    case added
    case categoryId = "category_id"
    case containerExtension = "container_extension"
  }

  public init(id: Int, name: String, streamType: String, streamIcon: String, categoryId: String, rating: String? = nil, description: String? = nil, tmdb: FlexibleString? = nil, added: Date, year: Int? = nil, containerExtension: String? = "mkv") {
    self.id = id
    self.name = name
    self.streamType = streamType
    self.streamIcon = streamIcon
    self.rating = rating
    self.description = description
    self.tmdb = tmdb
    self.added = added
    self.categoryId = categoryId
    self.year = year
    self.containerExtension = containerExtension ?? "mkv"
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)

    self.id = try container.decode(Int.self, forKey: .id)
    self.name = try container.decode(String.self, forKey: .name)
    self.streamType = try container.decode(String.self, forKey: .streamType)
    self.streamIcon = try container.decode(String.self, forKey: .streamIcon)
    self.categoryId = try container.decode(String.self, forKey: .categoryId)
    self.rating = try? container.decode(String.self, forKey: .rating)
    self.description = try? container.decode(String.self, forKey: .description)
    self.tmdb = try? container.decode(FlexibleString.self, forKey: .tmdb)
    // Décodage manuel pour le champ `added`
    let addedValue = try container.decode(String.self, forKey: .added)
    if let timestamp = Double(addedValue) {
      self.added = Date(timeIntervalSince1970: timestamp)
    } else {
      throw DecodingError.typeMismatch(
        Date.self,
        DecodingError.Context(
          codingPath: decoder.codingPath,
          debugDescription: "Invalid format for `added`. Expected a timestamp in seconds."
        )
      )
    }
    self.containerExtension = (try? container.decode(String.self, forKey: .containerExtension)) ?? ""
    self.year = Int(Stream.extractYear(from: name) ?? "0")
  }

  // Méthode statique pour extraire l'année
  public static func extractYear(from name: String) -> String? {
    let pattern = "\\((\\d{4})\\)" // Recherche de l'année entre parenthèses
    let regex = try? NSRegularExpression(pattern: pattern)
    let range = NSRange(location: 0, length: name.utf16.count)

    if let match = regex?.firstMatch(in: name, options: [], range: range),
       let yearRange = Range(match.range(at: 1), in: name) {
      return String(name[yearRange])
    }
    return nil
  }
}

// Type pour gérer les cas String ou Number
public enum FlexibleString: Decodable {
  case string(String)
  case number(Int)

  public var value: String {
    switch self {
    case let .string(stringValue):
      return stringValue
    case let .number(intValue):
      return String(intValue)
    }
  }

  public init(from value: String?) {
    self = .string(value ?? "")
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.singleValueContainer()
    if let stringValue = try? container.decode(String.self) {
      self = .string(stringValue)
    } else if let intValue = try? container.decode(Int.self) {
      self = .number(intValue)
    } else {
      throw DecodingError.typeMismatch(
        FlexibleString.self,
        DecodingError.Context(
          codingPath: decoder.codingPath,
          debugDescription: "Value is neither String nor Number"
        )
      )
    }
  }
}



================================================
FILE: sources/Components/Models/TMDB/TMDBImages.swift
================================================
//
//  TMDBImages.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//
import Foundation

public struct TMDBImage: Decodable, Identifiable {
  public let id = UUID() // Pour conformer à Identifiable
  public let filePath: String
  public let voteAverage: Double
  public let voteCount: Int

  enum CodingKeys: String, CodingKey {
    case filePath = "file_path"
    case voteAverage = "vote_average"
    case voteCount = "vote_count"
  }
}

public struct TMDBResponse: Decodable {
  public let backdrops: [TMDBImage]
  public let posters: [TMDBImage]
  public let logos: [TMDBImage]
}



================================================
FILE: sources/Components/Protocols/APIManagerProtocol.swift
================================================
//
//  APIManagerProtocol.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 23/12/2024.
//

import Foundation
import IPTVModels

/// sourcery: AutoMockableIPTV
public protocol APIManagerProtocol {
  var baseURL: String { get }
  var liveURL: String { get }
  var vodURL: String { get }
  var serieURL: String { get }

  func fetchCategories(from url: URL, completion: @escaping (Result<[IPTVModels.Category], Error>) -> Void)
  func fetchStreams(for categoryAPI: String, completion: @escaping (Result<[IPTVModels.Stream], Error>) -> Void)
  func fetchSeries(for categoryAPI: String, completion: @escaping (Result<[Series], Error>) -> Void)
  func fetchSeriesDetails(from urlString: String, completion: @escaping (Result<SeriesDetail, Error>) -> Void)
  func fetchInfoUser(from urlString: String, completion: @escaping (Result<InfoUserResponse, Error>) -> Void)
  func fetchData(from url: URL, completion: @escaping (Result<Data, Error>) -> Void)
}



================================================
FILE: sources/Components/Protocols/CacheManagerProtocol.swift
================================================
//
//  CacheManager.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 23/12/2024.
//

import Foundation
import IPTVModels
import RealmSwift
import SwiftUI

/// sourcery: AutoMockableIPTV
public protocol CacheManagerProtocol {
  func cacheCategories(_ categories: [IPTVModels.Category], for section: String) async
  func cacheStreams(_ streams: [IPTVModels.Stream], for section: String)
  func cacheSeries(_ series: [Series], for section: String)

  func fetchCachedCategories(for section: String) -> [CategoryEntity]
  func fetchCachedStream(for section: String, categoryId: String) -> [IPTVModels.Stream]
  func fetchFilteredCategories(for section: String) -> [CategoryEntity]
}



================================================
FILE: sources/Components/Resources/Fonts/Font Awesome 5 Brands-Regular-400.otf
================================================
[Non-text file]


================================================
FILE: sources/Components/Resources/Fonts/Font Awesome 5 Free-Regular-400.otf
================================================
[Non-text file]


================================================
FILE: sources/Components/Resources/Fonts/Font Awesome 5 Free-Solid-900.otf
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/Info.plist
================================================
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AvailableLibraries</key>
	<array>
		<dict>
			<key>LibraryIdentifier</key>
			<string>ios-arm64</string>
			<key>LibraryPath</key>
			<string>GoogleCast.framework</string>
			<key>SupportedArchitectures</key>
			<array>
				<string>arm64</string>
			</array>
			<key>SupportedPlatform</key>
			<string>ios</string>
		</dict>
		<dict>
			<key>LibraryIdentifier</key>
			<string>ios-arm64_x86_64-simulator</string>
			<key>LibraryPath</key>
			<string>GoogleCast.framework</string>
			<key>SupportedArchitectures</key>
			<array>
				<string>arm64</string>
				<string>x86_64</string>
			</array>
			<key>SupportedPlatform</key>
			<string>ios</string>
			<key>SupportedPlatformVariant</key>
			<string>simulator</string>
		</dict>
	</array>
	<key>CFBundlePackageType</key>
	<string>XFWK</string>
	<key>XCFrameworkFormatVersion</key>
	<string>1.0</string>
</dict>
</plist>



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCast
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Info.plist
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/PrivacyInfo.xcprivacy
================================================
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>NSPrivacyCollectedDataTypes</key>
	<array>
		<dict>
			<key>NSPrivacyCollectedDataType</key>
			<string>NSPrivacyCollectedDataTypeDeviceID</string>
			<key>NSPrivacyCollectedDataTypeLinked</key>
			<false/>
			<key>NSPrivacyCollectedDataTypeTracking</key>
			<false/>
			<key>NSPrivacyCollectedDataTypePurposes</key>
			<array>
				<string>NSPrivacyCollectedDataTypePurposeAnalytics</string>
			</array>
		</dict>
		<dict>
			<key>NSPrivacyCollectedDataType</key>
			<string>NSPrivacyCollectedDataTypeOtherDiagnosticData</string>
			<key>NSPrivacyCollectedDataTypeLinked</key>
			<false/>
			<key>NSPrivacyCollectedDataTypeTracking</key>
			<false/>
			<key>NSPrivacyCollectedDataTypePurposes</key>
			<array>
				<string>NSPrivacyCollectedDataTypePurposeAnalytics</string>
				<string>NSPrivacyCollectedDataTypePurposeAppFunctionality</string>
			</array>
		</dict>
		<dict>
			<key>NSPrivacyCollectedDataType</key>
			<string>NSPrivacyCollectedDataTypeProductInteraction</string>
			<key>NSPrivacyCollectedDataTypeLinked</key>
			<false/>
			<key>NSPrivacyCollectedDataTypeTracking</key>
			<false/>
			<key>NSPrivacyCollectedDataTypePurposes</key>
			<array>
				<string>NSPrivacyCollectedDataTypePurposeAnalytics</string>
				<string>NSPrivacyCollectedDataTypePurposeAppFunctionality</string>
			</array>
		</dict>
	</array>
	<key>NSPrivacyAccessedAPITypes</key>
	<array>
		<dict>
			<key>NSPrivacyAccessedAPIType</key>
			<string>NSPrivacyAccessedAPICategoryUserDefaults</string>
			<key>NSPrivacyAccessedAPITypeReasons</key>
			<array>
				<string>C56D.1</string>
				<string>CA92.1</string>
			</array>
		</dict>
	</array>
</dict>
</plist>


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/af.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/ar.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/bg.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/bn.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/ca.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB01.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB02.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB03.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB04.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB05.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB06.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB07.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB08.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB09.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB10.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB11.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB11.omo
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/VersionInfo.plist
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/cs.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/da.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/de.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/el.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/en.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/en_GB.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/es.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/es_419.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/et.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/fa.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/fi.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/fil.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/fr.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/hi.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/hr.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/hu.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/hy.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/id.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/is.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/it.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/iw.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/ja.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/ka.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/km.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/ko.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/lo.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/lt.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/lv.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/mk.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/mn.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/mr.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/ms.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/my.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/ne.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/nl.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/no.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/pl.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/pt.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/pt_PT.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/ro.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/ru.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/si.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/sk.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/sl.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/sr.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/sv.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/sw.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/ta.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/th.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/tr.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/uk.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/vi.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/zh.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/zh_CN.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastCoreResources.bundle/zh_TW.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/af.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKVVolumeVKoppelX(Etiket)[Voer PIN in_Saai tans uit na woonvertrek\OnderskrifteW(titel)\(Onderskrif)_3Raak om media na jou TV en luidsprekers uit te saai^Hou op uitsaaiTpin0m K o p p e l   t a n s   &[AdvertensieUOudio](toestelnaam)XMaak toeZKanselleer[Koppel tansW(Titel)_pin_cancel_buttonTpin2ZOnderskrif_Slaan advertensie ooro A d v e r t e n s i e   s p e e l   t a n s   &Tpin1_connecting_skip_button_welcome_cancel_buttono V o e r   d i e   4 - s y f e r - P I N   i n   w a t   o p   d i e   t u i s s k e r m   v a n   ' n   n a b y g e l e ë   t o e s t e l   g e w y s   w o r d .   D i e   t o e s t e l e i e n a a r   k a n   d i e   P I N   o o k   i n   d i e   C h r o m e c a s t - p r o g r a m   v i n d .YSlaan oor_Geen media is gekies nie_(Tik om uitgebreide beheerder te aktiveer_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonYSnitkeuse_Luister vir PIN_Speel-onderbreek-wisselknoppie_(toestelstatus)UTitel_(multizone device name)o K o p p e l   a a n   n a b y g e l e ë   t o e s t e l_welcome_skip_button\(kunstenaar)]skip_ad_labelUKlaar_connecting_cancel_button[Saai uit na_NOm te koppel, sal jou mikrofoon tydelik gebruik word om vir 'n PIN te luister.   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£ª³¿Þëó 6EJeqw¥­ÁÆÑé!:R	}		¢	Í	â	ç	ö



(
:
[
m
s

È
Þ
ë
ù
ÿ&             v              w


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/af.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUOudio_Spoel 30 sekondes terug_Kom meer te weteo% J y   k a n   a d v e r t e n s i e   o o r   % l d   o o r s l a a n   &WSnit %d_Koppel tans aanUSpeel_JMaak seker dat jou %@ en die uitsaaitoestel in dieselfde wi-fi-netwerk is._Kies 'n onderskrifsnit_Stop terugspeel van mediaTGeenROK_Cast is nie gekoppel nie_JHierdie program het toegang tot die plaaslike netwerk nodig om uit te saaiU--:--XVolgende_Gaan na Instellings[Saai uit na_Wissel die dempstand_Geslote onderskrifteVtablet[InstellingsVVorige_Gaan jou wi-fi-netwerk na_Cast is gekoppel_Speel-onderbreek-wisselknoppieXLaat wag\Onderskrifteoÿ H i e r d i e   p r o g r a m   h e t   t o e g a n g   t o t   j o u   W i - F i - n e t w e r k   n o d i g   o m   a a n   j o u   t o e s t e l l e   t e   k o p p e l . 
 
 O m   u i t   t e   s a a i ,   m o e t   j y    O K    k i e s   w a n n e e r   d i e   p r o g r a m   v r a   o m   a a n   j o u   p l a a s l i k e   n e t w e r k   t e   k o p p e l .   J y   k a n   d i t   o o k   l a t e r   i n   i O S - i n s t e l l i n g s   v i r   h i e r d i e   p r o g r a m   t o e l a a t .Z%d persent_Geen toestelle beskikbaar nie_Saai tans uit na %@_ÎHierdie program het toegang tot jou Wi-Fi-netwerk nodig om aan jou toestelle te koppel.

Om uit te saai, moet jy na jou Instellings toe gaan en "Toegang tot plaaslike netwerk" vir hierdie program aanskakel._nGaan na Instellings op hierdie foon en kyk of Toegang tot Plaaslike Netwerk aangeskakel is vir hierdie program_Cast koppel tansTfoon_Uitsaaisessie is begin_/Maak seker Toegang tot Plaaslike Netwerk is aanZREGSTREEKSo U i t s a a i s e s s i e   i s   b e ë i n d i g_Spoel 30 sekondes vorentoe  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-djäìþQj©öü'>U\ho¿ÈÕ
Ö
áèYlq¼Çü             U              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ar.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlee-3FK'kE3*HI  'D5H*e'*5'DW(Label)o%/.'D  1BE  'D*91JA  'D4.5Jo'D%13'D  %DI  :1A)  'DE9J4)g'D*1,E)W(title)Z(Subtitle)o6'DE3  D%13'D  'DH3'&7  %DI  ,G'2  'D*DA2JHF  HEC(Q1'*  'D5H* .j%JB'A  'D(+Tpin0o,'1M  'D'*5'D . . .e%9D'Fe'D5H*](device name)e%:D'Be%D:'!l,'1M  'D'*5'DW(Title)_pin_cancel_buttonTpin2m*.7QJ  'D%9D'Fo*4:JD  'D%9D'F  BJ/  'D*B/E . . .Tpin1_connecting_skip_button_welcome_cancel_buttono #/.PD  1BE  'D*91JA  'D4.5J  'DECHF  EF   4  .'F'*  H'D8'G1  9DI  'D4'4)  'D1&J3J)  DD,G'2  'DE,'H1 .  HJECF  DE'DC  'D,G'2  'D9+H1  9DI  'D1BE  AJ  *7(JB   C h r o m e c a s t  #J6K' .g'D*.7QJoDE  J*E  '.*J'1  #J  H3'&7 .o"'FB1  D*A9JD  H-/)  'D*-CE  'DEH3QN9) ._pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono'.*J'1  'DEB79  'D5H*Jo'D'3*E'9  %DI  1BE  'D*91JA  'D4.5Jo#'D*(/JD  (JF  'D*4:JD  H'D%JB'A  'DE$B*_(device status)UTitle_(multizone device name)o'D'*5'D  (,G'2  E,'H1_welcome_skip_buttonX(artist)]skip_ad_labelb*E_connecting_cancel_buttonh'D(+  %DIoXDD'*5'D  ('D,G'2  'DE,'H1  3J*E  '3*./'E  'DEJC1HAHF  E$B*K'  DD'3*E'9  %DI  1BE  'D*91JA  'D4.5J .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¤»ÆÎ4CKVÅÚß $/:S[otÈÍæþ
-
<
m
´
É
Î
Ý
ñ0qºÌÒì+4BGbs             u              
&


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ar.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe'D5H*n*1,J9   3 0  +'FJ)oE2J/  EF  'DE9DHE'*oJECFC  *.7QJ  'D%9D'F  (9/   % l d   &o'DEB79  'D5H*J   % do,'1M  'D'*5'D  (@e*4:JDo> JO1,I  'D*#CQO/  EF  #FQ   % @  H,G'2  'D(+  E*5D'F  (4(C)   W i - F i  FA3G' .o'.*J'1  EB79  *1,E)  H41-o%JB'A  *4:JD  'DH3'&7j(/HF  *1,E)e-3FK'o-'D)  'D(+ :  DE  J*E  'D'*5'Do>J-*',  G0'  'D*7(JB  %DI  'D/.HD  %DI  'D4(C)  'DE-DJ)  D%13'D  'DE-*HIU--:--f'D*'DJo'D'F*B'D  %DI   "'D%9/'/'* "h'D(+  %DIo*(/JD  -'D)  C*E  'D5H*n'D*1,E)  H'D41-m'D,G'2  'DDH-Ji'D%9/'/'*f'D3'(Bo& JO1,I  'D*-BQOB  EF  '*5'DC  (4(C)   W i - F i .o-'D)  'D(+ :  *E  'D'*5'Do#'D*(/JD  (JF  'D*4:JD  H'D%JB'A  'DE$B*j%JB'A  E$B*g'D*1,E)oÞ DD'*5'D  (#,G2*C  J-*',  G0'  'D*7(JB  %DI  'D/.HD  %DI  4(C)   W i - F i . 
 
D%13'D  'DE-*HI  '.*N1   "-3FK' "  9F/E'  J7D(  'D*7(JB  'D'*5'D  ('D4(C)  'DE-DJ) .  HJECFC  #J6K'  '*.'0  G0'  'D%,1'!  D'-BK'  EF  .D'D  %9/'/'*  F8'E  'D*4:JD   i O S  DG0'  'D*7(JB .j % d  ('DE'&)oE'  EPF  #,G2)  E*HAQ1)o,'1M  'D%13'D  %DI   % @o DD'*5'D  (#,G2*C  J-*',  G0'  'D*7(JB  %DI  'D/.HD  %DI  4(C)   W i - F i . 
 
D%13'D  'DE-*HI  'F*BPD  %DI   "'D%9/'/'* "  HA9QPD   "'D/.HD  %DI  'D4(C)  'DE-DJ) "  DG0'  'D*7(JB .op9DJC  'D'F*B'D  %DI   "'D%9/'/'* "  9DI  G0'  'DG'*A  +E  'D*-BQOB  EF  *A9JD  EJ2)   "'DH5HD  %DI  'D4(C)  'DE-DJ) "  DG0'  'D*7(JB .o-'D)  'D(+ :  ,'1M  'D'*5'Df'DG'*Ao*E  (/!  ,D3)  'D%13'D .o6'D*#CQ/  EF  #FQ  EJ2)   "'DH5HD  %DI  'D4(C)  'DE-DJ) "  EA9QD)eE('41o*E  %FG'!  ,D3)  'D%13'D .n*B/JE   3 0  +'FJ)  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do±î2=¼ë)4ièîû	.	?	j		¢	µ	Â

>


«jªÓç%P¿Êù             U              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/4HD-aa-FNo-view-1HP-BM-J3I.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/6is-ze-qoP-view-Vah-jq-ZgN.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/9V7-ce-5KJ-view-WQF-my-40r.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/a4H-bv-VbH-view-Xbz-9K-eDJ.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/C87-rF-Kff-view-Z93-bw-eCT.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/CastContainer.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/CastInstructions.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/DeviceConnectionNavigation.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/egs-hj-bEX-view-MTY-Nw-q8O.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/ExpandedMediaControlsViewController.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/Info.plist
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/MediaTrackSelectionController.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/MediaTrackSelectionNavigation.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/MiniMediaControlsViewController.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/mzQ-08-M2L-view-QcC-yO-nhF.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/bg.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlebm!8;0  =0  72C:0i!2J@720=5W(Label)oJ2545B5    :>40o@54020  A5  :J<  2A5:84=52=0B0h!C1B8B@8W(title)Z(Subtitle)oT>:>A=5B5 ,  70  40  ?@54020B5  <5489=>  AJ4J@60=85  :J<  B5;5287>@0  8  28A>:>3>2>@8B5;8B5  A8o!?8@0=5  =0  ?@54020=5B>i  :>4   0o#AB0=>2O20  A5  2@J7:0 . . .g 5:;0<0kC48>70?8A8](device name)i0B20@O=5eB:07o#AB0=>2O20  A5  2@J7:0W(Title)_pin_cancel_buttoni  :>4   2o@>?CA:0=5  =0  @5:;0<0B0o>:0720  A5  @5:;0<0 . . .i  :>4   1_connecting_skip_button_welcome_cancel_buttono¢J2545B5   4 -F8D@5=8O   ,  :>9B>  A5  ?>:0720  =0  =0G0;=8O  5:@0=  =0  CAB@>9AB2>  2  1;87>AB .  !>1AB25=8:JB  =0  CAB@>9AB2>B>  <>65  40  =0<5@8  :>40  8  2  ?@8;>65=85B>   C h r o m e c a s t .j@>?CA:0=5oO<0  871@0=>  <5489=>  AJ4J@60=85o0>:>A=5B5 ,  70  40  0:B828@0B5  @07H8@5=8O  :>=B@>;5@_pin_connect_buttoni  :>4   3^skip_ad_button_pin_listen_button_welcome_ok_buttono718@0=5  =0  70?8A8oC48>2J25640=5  =0    :>40o*@52:;NG20=5  <564C  2J7?@>8725640=5  8  ?0C70_(device status)UTitle_(multizone device name)o !2J@720=5  A  CAB@>9AB2>  2  1;87>AB_welcome_skip_buttonX(artist)]skip_ad_labelf>B>2>_connecting_cancel_buttonm@54020=5  :J<oT0  40  A5  A2J@65B5 ,  <8:@>D>=JB  28  I5  A5  87?>;720  2@5<5==> ,  70  40  A5  2J2545    :>4JB .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¹ÌÔù4EMX2Evª½Èóû		"	S			¬	Ä aÄÙìû#JØêð

M
c
l
z

¢
½             u              h


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/bg.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELkC48>70?8A8o@52J@B0=5  =0704  A   3 0  A5:C=48n0CG5B5  ?>25G5o*>65B5  40  ?@>?CA=5B5  @5:;0<0B0  A;54   % l d . . .h0?8A   % do#AB0=>2O20  A5  2@J7:0  AJA :gCA:0=5oB#25@5B5  A5 ,  G5   % @  8  CAB@>9AB2>B>   C a s t  A0  2  54=0  8  AJI0   W i - F i  <@560o718@0=5  =0  70?8A  A  =04?8A8o!?8@0=5  =0  2J7?@>8725640=5B>dO<0ROKo*CB>=  70  ?@54020=5 .  5  5  CAB0=>25=0  2@J7:0oE">20  ?@8;>65=85  A5  =C6405  >B  4>ABJ?  4>  ;>:0;=0B0  <@560 ,  70  40  ?@54020U--:--f0?@54oJ<  =0AB@>9:8B5m@54020=5  :J<o:;NG20=5  8  87:;NG20=5  =0  72C:0g04?8A8kB01;5BJB  28i0AB@>9:8e0704o"@>25@5B5  87?>;720=0B0   W i - F i  <@560oCB>=  70  ?@54020=5 .  <0  2@J7:0o*@52:;NG20=5  <564C  2J7?@>8725640=5  8  ?0C70o>AB02O=5  =0  ?0C70h!C1B8B@8o@8;>65=85B>  A5  =C6405  >B  4>ABJ?  4>   W i - F i  <@560B0  28 ,  70  40  CAB0=>28  2@J7:0  A  CAB@>9AB20B0  28 . 
 
0  40  ?@54020B5 ,  8715@5B5   O K ,  :>30B>  ?@8;>65=85B>  ?>8A:0  40  A5  A2J@65  A  ;>:0;=0B0  28  <@560 .  >65B5  40  ?@54>AB028B5  B>20  @07@5H5=85  8  ?> -:JA=>  >B  =0AB@>9:8B5  =0   i O S .S%d%oO<0  =0;8G=8  CAB@>9AB20o@54020  A5  :J<    % @ oÉ@8;>65=85B>  A5  =C6405  >B  4>ABJ?  4>   W i - F i  <@560B0  28 ,  70  40  CAB0=>28  2@J7:0  A  CAB@>9AB20B0  28 . 
 
0  40  ?@54020B5 ,  >B2>@5B5  =0AB@>9:8B5  8  2:;NG5B5  >?F8OB0  70  4>ABJ?  4>  ;>:0;=0B0  <@560  70  B>20  ?@8;>65=85 .okB2>@5B5  =0AB@>9:8B5  =0  B>78  B5;5D>=  8  ?@>25@5B5  40;8  4>ABJ?JB  4>  ;>:0;=0B0  <@560  5  2:;NG5=  70  ?@8;>65=85B>o(CB>=  70  ?@54020=5 .  #AB0=>2O20  A5  2@J7:0lB5;5D>=JB  28o!5A8OB0  70  ?@54020=5  70?>G=0o4#25@5B5  A5 ,  G5  4>ABJ?JB  4>  ;>:0;=0B0  <@560  5  2:;NG5=g  o!5A8OB0  70  ?@54020=5  702J@H8o0?@54  A   3 0  A5:C=48  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-d{¸Õ,=rA|ß	l	r		 	»	ü

"
5
@

ÆDU
a
e

¿T-Ô?N             U              ²


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/bn.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleg	 	¿	  			Çe	­	²	¿		®l		¾	¨	Ç		Í	  		°	Á	¨W(Label)i	ª	¿	¨  	²	¿		Á	¨o	²	¿	­	¿	  	°	Á	®	Ç  		¾	¸	Í	  		°	¾  	¹		Í		Çi	¸	¾	¬		¾			Ç	²W(title)Z(Subtitle)o4		ª	¨	¾	°   T V  		¬	  	¸	Í	ª	¿		¾	°	Ç  	®	¿	¡	¿	¯	¼	¾  		¾	¸	Í	  		°	¤	Ç  	¸	Í	ª	°	Í	¶  		°	Á	¨o		¾	¸	Í	  		°	¾  	¬	¨	Í	§  		°	Á	¨Tpin0o		¾	¨	Ç		Í	  	¹		Í		Ç . . .h	¬	¿		Í		¾	ª	¨d		¡	¿	](device name)i	¬	¨	Í	§  		°	Á	¨j	¬	¾	¤	¿	²  		°	Á	¨m		¾	¨	Ç		Í	  	¹		Í		ÇW(Title)_pin_cancel_buttonTpin2o	¬	¿		Í		¾	ª	¨  		Ü	¿	ß	Ç  	¯	¾	¨o	¬	¿		Í		¾	ª	¨  	¦	Ç		¾	¨	Ë  	¹		Í		Ç . . .Tpin1_connecting_skip_button_welcome_cancel_buttono		Ë	¨	  		¶	Ç	ª	¾	¶	Ç	°  	¡	¿	­	¾		¸	Ç	°  	¹	Ë	®  	¸	Í		Í	°	¿	¨	Ç  	¦	Ç		¾	¨	Ë  	ê  	¸			Í	¯	¾	°  	ª	¿	¨  	¨	®	Í	¬	°		¿  	²	¿		Á	¨	d  	¡	¿	­	¾		¸	Ç	°  	®	¾	²	¿	  	ª	¿	¨  	¨	®	Í	¬	°		¿   C h r o m e c a s t  		Í	¯	¾	ª	Ç	°  	®	§	Í	¯	Ç	  	¦	Ç		¤	Ç  	ª	¾	¬	Ç	¨	di		Ü	¿	ß	Ç  	¯	¾	¨o		Ë	¨	  	®	¿	¡	¿	¯	¼	¾  	¨	¿	°	Í	¬	¾		¨  		°	¾  	¹	ß	¨	¿o-	ª	Í	°	¸	¾	°	¿	¤  		¨	Í		Í	°	Ë	²	¾	°		Ç  	¸		Í	°	¿	¯	¼  		°	¤	Ç  		Í	¯	¾	ª  		°	Á	¨_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono		Í	°	Í	¯	¾	  	¨	¿	°	Í	¬	¾		¨o	ª	¿	¨  	¨	®	Í	¬	°  		¾	¨	¤	Ç  	¶	Á	¨	Á	¨k	ª	Í	²	Ç  	ª	  			²_(device status)UTitle_(multizone device name)o		¶	Ç	ª	¾	¶	Ç	°  	¡	¿	­	¾		¸	Ç  		¾	¨	Ç		Í	  		°	Á	¨_welcome_skip_buttonX(artist)]skip_ad_labelh	¹	ß	Ç  		Ç		Ç_connecting_cancel_buttonn		¤	Ç  		¾	¸	Í	  		°	Á	¨oW		¾	¨	Ç		Í	  		°	¤	Ç ,  		ª	¨	¾	°  	®	¾			Í	°	Ë	«	Ë	¨		¿  				¿  	ª	¿	¨  	¨	®	Í	¬	°  	¶	Ë	¨	¾	°  		¨	Í	¯  	¸	¾	®	¯	¼	¿		­	¾	¬	Ç  	¬	Í	¯	¬	¹	¾	°  		°	¾  	¹	¬	Ç	d   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¨³ÌÔç19D¯ØÝ (;Pks³æë		
1
D

à
õ
ú	1Tª°Ê&4E`}             u              
.


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/bn.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELd		¡	¿	o	é	æ  	¸	Ç		Ç	¨	Í	¡  	ª	¿		¨	Ç  	¯	¾	¨i		°	  		¾	¨	Á	¨o/ % l d  		°  	®	§	Í	¯	Ç  		ª	¨	¿  	¬	¿		Í		¾	ª	¨  		Ü	¿	ß	Ç  	¯	Ç	¤	Ç  	ª	¾	°	Ç	¨   . . .j		Í	°	Í	¯	¾	   % do		¤	Ç  		¾	¨	Ç		Í	  		°	¾  	¹		Í		Çe		¾	²	¾	¨oO		ª	¨	¾	°   % @  		¬	  		¾	¸	Í	  	¡	¿	­	¾		¸  			  		¯	¼	¾	 -	«	¾	  	¨	Ç			¯	¼	¾	°	Í		Ç  	°	¯	¼	Ç		Ç  		¿	¨	¾  	¤	¾  	¨	¿	¶	Í		¿	¤  		°	Á	¨o)		Í	²	Ë		¡  		Í	¯	¾	ª	¶	¨		Á	²	¿	°  				¿  		Í	°	Í	¯	¾	  	¬	Ç		Ç  	¨	¿	¨o	®	¿	¡	¿	¯	¼	¾  	ª	Í	²	Ç	¬	Í	¯	¾	  	¥	¾	®	¾	¨h				¿	  	¨	ßg	 	¿	  			Ço '		¾	¸	Í	 '  	¬	Ë	¤	¾	®  		¾	¨	Ç		Í	  		°	¾  	¨	Ç	o;		¾	¸	Í	  		°	¤	Ç  		  		Í	¯	¾	ª		Ç  	¸	Í	¥	¾	¨	À	ß  	¨	Ç			ß	¾	°	Í		Ç  		Í	¯	¾		Í	¸	Ç	¸  	¦	¿	¤	Ç  	¹	¬	ÇU--:--g	ª	°	¬	°	Í	¤	Àm '	¸	Ç		¿		¸	Ç  	¯	¾	¨ 'n		¤	Ç  		¾	¸	Í	  		°	Á	¨o	®	¿		  		¬	¸	Í	¥	¾  			²  		°	Á	¨n		Í	²	Ë		¡  		Í	¯	¾	ª	¶	¨h		Í	¯	¾	¬	²	Ç	f	¸	Ç		¿		¸j	ª	Â	°	Í	¬	¬	°	Í	¤	Ào&		ª	¨	¾	°  		ß	¾	 -	«	¾	  	¨	Ç			ß	¾	°	Í	  		Ç	  		°	Ç  	¦	Ç		Á	¨o '		¾	¸	Í	 '  	¬	Ë	¤	¾	®  		¾	¨	Ç		Í	  		°	¾  			Çk	ª	Í	²	Ç  	ª	  			²e	¥	¾	®	¾	¨i	¸	¾	¬		¾			Ç	²o		ª	¨	¾	°  	¡	¿	­	¾		¸	Ç	°  	¸	¾	¥	Ç  		¾	¨	Ç		Í	  		°	¤	Ç  		  		Í	¯	¾	ª		¿		Ç  		ß	¾	 -	«	¾	  	¨	Ç			ß	¾	°	Í	  		Í	¯	¾		Í	¸	Ç	¸  		°	¾	°  		¨	Á	®	¤	¿  	¦	¿	¤	Ç  	¹	¬	Ç	d 
 
  	²	Ë		¾	²  	¨	Ç			ß	¾	°	Í		Ç	°  	¸	¾	¥	Ç  		Í	¯	¾	ª  		¾	¨	Ç		Í	  		°	¾	°  		¨	Á	®	¤	¿  		¾		²	Ç ,  		¾	¸	Í	  		°	¤	Ç   	 	¿	  			Ç   	¬	¿		²	Í	ª		¿  	¬	Ç		Ç  	¨	¿	¨	d  			¾	Ü	¾	  	ª	°	Ç  		  		Í	¯	¾	ª	Ç	°  		¨	Í	¯  		ª	¨	¿   ' i O S  	¸	Ç		¿		¸ ' -	  		¨	Á	®	¤	¿  	¦	¿	¤	Ç  	ª	¾	°	Ç	¨	dh % d  	¶	¤	¾		¶o		Ë	¨	  	¡	¿	­	¾		¸  		ª	²	­	Í	¯  	¨	Ç	o % @  	  		¾	¸	Í	  		°	¾  	¹		Í		Ço¸		ª	¨	¾	°  	¡	¿	­	¾		¸	Ç	°  	¸	¾	¥	Ç  		¾	¨	Ç		Í	  		°	¤	Ç  		  		Í	¯	¾	ª		¿		Ç  		ß	¾	 -	«	¾	  	¨	Ç			ß	¾	°	Í	  		Í	¯	¾		Í	¸	Ç	¸  		°	¾	°  		¨	Á	®	¤	¿  	¦	¿	¤	Ç  	¹	¬	Ç	d 
 
		¾	¸	Í	  		°	¤	Ç ,  	¸	Ç		¿		¸	Ç  		¿	ß	Ç  		  		Í	¯	¾	ª	Ç	°  		¨	Í	¯   	²	Ë		¾	²  	¨	Ç			ß	¾	°	Í	  		Í	¯	¾		Í	¸	Ç	¸   	¬	¿		²	Í	ª  		¾	²	Á  		°	Á	¨	dol	«	Ë	¨	Ç	°   '	¸	Ç		¿		¸ '  	®	Ç	¨	Á	¤	Ç  		¿	ß	Ç  		  		Í	¯	¾	ª	Ç	°  		¨	Í	¯  	¸	Í	¥	¾	¨	À	ß  	¨	Ç			ß	¾	°	Í	  		Í	¯	¾		Í	¸	Ç	¸  		°	¾	°  	¸	Á	¬	¿	§	¾  		¾	²	Á  			Ç  		¿	¨	¾  	¤	¾  		Ç	  		°	Á	¨o '		¾	¸	Í	 '  	¬	Ë	¤	¾	®  		¾	¨	Ç		Í	  		°	¾  	¹		Í		Çc	«	Ë	¨o		¾	¸	Í	  	¸	Ç	¶	¨  	¶	Á	°	Á  	¹	ß	Ç		ÇoE	¸	Í	¥	¾	¨	À	ß  	¨	Ç			ß	¾	°	Í	  		Í	¯	¾		Í	¸	Ç	¸  		°	¾	°  	¸	Á	¬	¿	§	¾  		¾	²	Á  			Ç  		¿	¨	¾  	¤	¾  	¨	¿	¶	Í		¿	¤  		°	Á	¨d	²	¾		­o		¾	¸	Í	  	¸	Ç	¶	¨  	¶	Ç	·  	¹	ß	Ç		Ço	é	æ  	¸	Ç		Ç	¨	Í	¡  	«	°	Ë	¯	¼	¾	°	Í	¡  		°	Á	¨  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dm«!NYúO Ý	V	\	k		£	Î	ë	ü
	

m
ª
Á
Ì
ßëü
+
VÉ¤åì¦¯Ú             U              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ca.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleWD'acordUVolumXConnectaW(Label)_Introdueix el PINo* S ' e s t à   e m e t e n t   c o n t i n g u t   a   l a   s a l a   d ' e s t a ri S u b t í t o l sW(title)Z(Subtitle)o@ T o c a   p e r   e m e t r e   c o n t i n g u t   m u l t i m è d i a   a l   t e l e v i s o r   i   a l s   a l t a v e u so A t u r a   l ' e m i s s i óTpin0o S ' e s t à   c o n n e c t a n t . . .VAnuncie À u d i o](device name)UTancai C a n c e l · l ao S ' e s t à   c o n n e c t a n tW(Title)o b o t ó _ c a n c e l · l a _ p i nTpin2h S u b t í t o l]Omet l'anunci_Anunci en curs...Tpin1o b o t ó _ o m e t _ s ' e s t à _ c o n n e c t a n to b o t ó _ c a n c e l · l a _ b e n v i n g u d ao¨ I n t r o d u e i x   e l   P I N   d e   4   d í g i t s   q u e   e s   m o s t r a   a   l a   p a n t a l l a   d ' i n i c i   d ' u n   d i s p o s i t i u   p r o p e r .   E l   p r o p i e t a r i   d e l   d i s p o s i t i u   t a m b é   p o t   t r o b a r   e l   P I N   a   l ' a p l i c a c i ó   C h r o m e c a s t .TOmet_No hi ha contingut seleccionat_'Toca per activar el controlador ampliato b o t ó _ c o n n e c t a _ p i nTpin3o b o t ó _ o m e t _ l ' a n u n c io b o t ó _ d e t e c t a _ p i no b o t ó _ d ' a c o r d _ b e n v i n g u d ao S e l e c c i ó   d e   p i s t a^Escolta el PIN_Reprodueix o posa en pausa_(device status)e T í t o l_(multizone device name)_!Connecta't a un dispositiu propero b o t ó _ o m e t _ b e n v i n g u d aX(artist)_etiqueta_omet_l'anunciSFeto  b o t ó _ c a n c e l · l a _ s ' e s t à _ c o n n e c t a n tVEmet ao[ E l   m i c r ò f o n   s ' u t i l i t z a r à   t e m p o r a l m e n t   p e r   d e t e c t a r   u n   P I N   q u e   p e r m e t i   e s t a b l i r   l a   c o n n e x i ó .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¡§°¸Ì#6>IÌíò$/=CV{ª¯ÀÎâç	 	U
¨
­
Î
ø"IlÂÑî %It}Ýä             v              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ca.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe À u d i oo R e b o b i n a   3 0   s e g o n sn M é s   i n f o r m a c i óo$ P o t s   o m e t r e   l ' a n u n c i   d ' a q u í   a   % l d . . .XPista %do S ' e s t à   c o n n e c t a n t   aTJugaoV C o m p r o v a   q u e   % @   i   e l   d i s p o s i t i u   d ' e m i s s i ó   e s t i g u i n   c o n n e c t a t s   a   l a   m a t e i x a   x a r x a   W i - F io! S e l e c c i o n a   u n a   p i s t a   d e   s u b t í t o l so, A t u r a   l a   r e p r o d u c c i ó   d e   c o n t i n g u t   m u l t i m è d i aSCapWD'acordo L ' e m i s s i ó   n o   e s t à   c o n n e c t a d aoI A q u e s t a   a p l i c a c i ó   n e c e s s i t a   a c c e d i r   a   l a   x a r x a   l o c a l   p e r   e m e t r e   c o n t i n g u tU--:--g S e g ü e n to V e s   a   C o n f i g u r a c i óVEmet a_Silencia o deixa de silenciari S u b t í t o l sZla tauletal C o n f i g u r a c i óXAnterior_Comprova la xarxa Wi-Fio L ' e m i s s i ó   e s t à   c o n n e c t a d a_Reprodueix o posa en pausa]Posa en pausao! A q u e s t a   a p l i c a c i ó   n e c e s s i t a   a c c e d i r   a   l a   x a r x a   W i  F i   p e r   c o n n e c t a r - s e   a l s   t e u s   d i s p o s i t i u s . 
 
 P e r   e m e t r e   c o n t i n g u t ,   s e l e c c i o n a    D ' a c o r d    q u a n   l ' a p l i c a c i ó   s o l · l i c i t i   c o n n e c t a r - s e   a   l a   x a r x a   l o c a l .   T a m b é   p o t s   a c t i v a r   a q u e s t a   o p c i ó   m é s   e n d a v a n t   a   l a   c o n f i g u r a c i ó   d ' i O S   p e r   a   a q u e s t a   a p l i c a c i ó .k % d   p e r   c e n t_"No hi ha cap dispositiu disponibleo S ' e s t à   e m e t e n t   a   % @oÆ A q u e s t a   a p l i c a c i ó   n e c e s s i t a   a c c e d i r   a   l a   x a r x a   W i  F i   p e r   c o n n e c t a r - s e   a l s   t e u s   d i s p o s i t i u s . 
 
 P e r   e m e t r e   c o n t i n g u t ,   v e s   a   C o n f i g u r a c i ó   i   a c t i v a   l ' o p c i ó   A c c é s   a   l a   x a r x a   l o c a l   p e r   a   a q u e s t a   a p l i c a c i ó .o| E n   a q u e s t   t e l è f o n ,   v e s   a   C o n f i g u r a c i ó   i   c o m p r o v a   q u e   l ' o p c i ó   A c c é s   a   l a   x a r x a   l o c a l   e s t i g u i   a c t i v a d a   p e r   a   a q u e s t a   a p l i c a c i óo S ' e s t à   c o n n e c t a n t   l ' e m i s s i ój e l   t e l è f o no L a   s e s s i ó   d ' e m i s s i ó   h a   c o m e n ç a to> A s s e g u r a ' t   q u e   l ' o p c i ó   A c c é s   a   l a   x a r x a   l o c a l   e s t i g u i   a c t i v a d aZEN DIRECTEo L a   s e s s i ó   d ' e m i s s i ó   h a   a c a b a to A v a n ç a   3 0   s e g o n s  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do³þ05ä)Ë	`	f	u		£	Ã	Ö	á	ú


R
o
}ÃÚÿ
(·²ë AÀË             T              +


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/cs.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKYHlasitosth PY i p o j i tW(Label)o Z a d e j t e   k ó d   P I No O d e s í l á n í   d o   z aY í z e n í   O b ý v á kWTitulkyW(title)Z(Subtitle)oC K l e p n u t í m   mo~ e t e   o d e s í l a t   m e d i á l n í   o b s a h   d o   t e l e v i z e   a   r e p r o d u k t o roo Z a s t a v i t   o d e s í l á n íTpin0n PY i p o j o v á n í . . .WReklamaTZvuk](device name)f Z a vY í tf Z r ua i tk PY i p o j o v á n íW(Title)_pin_cancel_buttonTpin2WTituleko PY e s k o
 i t   r e k l a m uo PY e h r á v á n í   r e k l a m y . . .Tpin1_connecting_skip_button_welcome_cancel_buttono Z a d e j t e  
 t yY m í s t n ý   k ó d   P I N   z o b r a z e n ý   n a   p l oa e   z aY í z e n í   v   o k o l í .   V l a s t n í k   z aY í z e n í   t e n t o   k ó d   P I N   n a l e z n e   t a k é   v   a p l i k a c i   C h r o m e c a s t .i PY e s k o
 i to  N e n í   v y b r á n  ~ á d n ý   m e d i á l n í   o b s a ho' K l e p n u t í m   a k t i v u j e t e   r o za íY e n é   o v l á d á n í_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonk V ý b r   s t o p yo Z a z n a m e n a t   k ó d   P I No PY e p í n a
   pY e h r á v á n í   a   p a u z y_(device status)UTitle_(multizone device name)o PY i p o j t e   s e   k   z aY í z e n í   v   o k o l í_welcome_skip_buttonX(artist)]skip_ad_labelVHotovo_connecting_cancel_buttonk O d e s í l a t   d ooR A b y s t e   s e   m o h l i   pY i p o j i t ,   v áa   m i k r o f o n   b u d e   d o
 a s n   p o u~ i t   k   z a z n a m e n á n í   k ó d u   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¦·¿à#+6¿æë#0=T\pu}¢ÏÔí	

!
d
µ
Ê
Ï
Þ
òD}¯î
"=T             v              û


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/cs.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELTZvuko O   3 0   s e k u n d   z p to D a la í   i n f o r m a c eo  R e k l a m u   mo~ e t e   pY e s k o
 i t   z a   % l d &XStopa %dm PY i p o j o v á n í   kg PY e h r á toO Z k o n t r o l u j t e ,   z d a   j s o u   % @   a   s t r e a m o v a c í   z aY í z e n í   pY i p o j e n y   k e   s t e j n é   s í t i   W i - F io V y b r a t   s t o p u   s k r y t ý c h   t i t u l koo% Z a s t a v i t   pY e h r á v á n í   m e d i á l n í h o   o b s a h ue} á d n éROKo O d e s í l á n í ,   n e pY i p o j e n ooO A b y   b y l o   m o~ n é   z   t é t o   a p l i k a c e   o d e s í l a t ,   m u s í t e   j í   u d l i t   pY í s t u p   k   m í s t n í   s í t iU--:--e D a la ío PY e j í t   d o   n a s t a v e n ík O d e s í l a t   d oo PY e p n o u t   z t l u m e n í   z v u k un S k r y t é   t i t u l k yVtableti N a s t a v e n íi PY e d c h o z ío Z k o n t r o l u j t e   s íe   W i - F io O d e s í l á n í ,   pY i p o j e n oo PY e p í n a
   pY e h r á v á n í   a   p a u z yZPozastavitWTitulkyoñ A b y   b y l o   m o~ n é   pY i p o j i t   t u t o   a p l i k a c i   k   z aY í z e n í m ,   m u s í t e   j í   u d l i t   pY í s t u p   k   s í t i   W i - F i . 
 
 A~   a p l i k a c e   p o~ á d á   o   pY i p o j e n í   k   m í s t n í   s í t i ,   v y b e r t e   O K   a   b u d e t e   m o c i   o d e s í l a t .   PY í s t u p   mo~ e t e   u d l i t   t a k é   p o z d j i   v   n a s t a v e n í   i O S   p r o   t u t o   a p l i k a c i .d % d   %o! N e j s o u   k   d i s p o z i c i  ~ á d n á   z aY í z e n ío O d e s í l á n í   d o   z aY í z e n í   % @o½ A b y   b y l o   m o~ n é   pY i p o j i t   t u t o   a p l i k a c i   k   z aY í z e n í m ,   m u s í t e   j í   u d l i t   pY í s t u p   k   s í t i   W i - F i . 
 
 PY e j d t e   d o   N a s t a v e n í   a   z a p n t e   p r o   t u t o   a p l i k a c i   pY í s t u p   k   m í s t n í   s í t i .   P a k   b u d e t e   m o c i   o d e s í l a t .on N a   t o m t o   t e l e f o n u   pY e j d t e   d o   N a s t a v e n í   a   z k o n t r o l u j t e ,   z d a   j e   p r o   t u t o   a p l i k a c i   p o v o l e n   pY í s t u p   k   m í s t n í   s í t io O d e s í l á n í ,   pY i p o j u j e   s eWtelefono R e l a c e   o d e s í l á n í   b y l a   z a h á j e n ao& M u s í   b ý t   p o v o l e n   pY í s t u p   k   m í s t n í   s í t id} I Vo R e l a c e   o d e s í l á n í   b y l a   u k o n
 e n ao O   3 0   s e k u n d   v pY e d  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-di­ðù#ÄNY\	,	2	=	f	}	®	Ë	Ò	å	ø
'
R


Ñ
`Ø'0o             U              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/da.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKYLydstyrke_Opret forbindelseW(Label)]Angiv pinkode_Caster til Stue\UnderteksterW(title)Z(Subtitle)o< T r y k   f o r   a t   c a s t e   m e d i e r   t i l   d i t   f j e r n s y n   o g   d i n e   h ø j t t a l e r eYStop castXpinkode0o F o r b i n d e l s e n   o p r e t t e s &WAnnonceSLyd](device name)SLukXAnnuller_Opretter forbindelseW(Title)_pin_cancel_buttonXpinkode2_Spring annonce overo I g a n g v æ r e n d e   a n n o n c e . . .Xpinkode1_connecting_skip_button_welcome_cancel_buttono A n g i v   d e n   f i r e c i f r e d e   p i n k o d e ,   d e r   v i s e s   p å   s t a r t s k æ r m e n   p å   e n   e n h e d   i   n æ r h e d e n .   E j e r e n   a f   e n h e d e n   k a n   o g s å   f i n d e   p i n k o d e n   i   C h r o m e c a s t - a p p e n .[Spring over_Der er ikke valgt nogen medier_+Tryk for at aktivere udvidet medieafspiller_pin_connect_buttonXpinkode3^skip_ad_button_pin_listen_button_welcome_ok_button\Valg af spor_Lyt efter pinkodeo# S k i f t   m e l l e m   A f s p i l   o g   S æ t   p å   p a u s e_(device status)UTitle_(multizone device name)o) O p r e t   f o r b i n d e l s e   t i l   e n   e n h e d   i   n æ r h e d e n_welcome_skip_buttonX(artist)]skip_ad_labele U d f ø r_connecting_cancel_buttonXCast tilob D i n   m i k r o f o n   a n v e n d e s   m i d l e r t i d i g t   t i l   a t   l y t t e   e f t e r   e n   p i n k o d e ,   s å   d e r   k a n   o p r e t t e s   f o r b i n d e l s e .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¦ºÂÐâï÷}¿ÇËÙÝæý"8ir£	Â	Î	ï

2
;
J
^
r


Ü
î
ôcy¶¿             u              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/da.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELSLyd_Spol 30 sekunder tilbageo F å   f l e r e   o p l y s n i n g e r_&Du kan springe annoncen over om %ld...WSpor %d_Opretter forbindelse tilVAfspiloO S ø r g   f o r ,   a t   d i n   % @   o g   C a s t - e n h e d e n   h a r   f o r b i n d e l s e   t i l   d e t   s a m m e   W i - F i - n e t v æ r ko V æ l g   u n d e r t e k s t e r_Stop medieafspilningenUIngenROKo C a s t      i k k e   f o r b u n d e to5 D e n n e   a p p   s k a l   h a v e   l o k a l   n e t v æ r k s a d g a n g   f o r   a t   c a s t eU--:--e N æ s t eo G å   t i l   I n d s t i l l i n g e rXCast tilo S l å   l y d e n   t i l   e l l e r   f r a\UnderteksterVtablet]IndstillingerWForrigeo T j e k   d i t   W i - F i - n e t v æ r ko C a s t      f o r b u n d e to# S k i f t   m e l l e m   A f s p i l   o g   S æ t   p å   p a u s eUPauseoù D e n n e   a p p   s k a l   h a v e   a d g a n g   t i l   d i t   W i - F i - n e t v æ r k   f o r   a t   o p r e t t e   f o r b i n d e l s e   t i l   d i n e   e n h e d e r . 
 
 V æ l g   " O K "   f o r   a t   c a s t e ,   n å r   a p p e n   a n m o d e r   o m   f o r b i n d e l s e   t i l   d i t   l o k a l e   n e t v æ r k .   D u   k a n   o g s å   g i v e   d e n n e   t i l l a d e l s e   s e n e r e   i   i O S - i n d s t i l l i n g e r n e   f o r   a p p e n .Z%d procento! D e r   e r   i n g e n   t i l g æ n g e l i g e   e n h e d e r]Caster til %@o¼ D e n n e   a p p   s k a l   h a v e   a d g a n g   t i l   d i t   W i - F i - n e t v æ r k   f o r   a t   o p r e t t e   f o r b i n d e l s e   t i l   d i n e   e n h e d e r . 
 
 H v i s   d u   v i l   c a s t e ,   s k a l   d u   g å   t i l   I n d s t i l l i n g e r   o g   a k t i v e r e   " L o k a l   n e t v æ r k s a d g a n g "   f o r   a p p e n .ob G å   t i l   I n d s t i l l i n g e r   p å   d e n n e   t e l e f o n ,   o g   t j e k ,   a t   l o k a l   n e t v æ r k s a d g a n g   e r   a k t i v e r e t   f o r   d e n n e   a p po C a s t      o p r e t t e r   f o r b i n d e l s eWtelefon_Cast-sessionen er starteto. S ø r g   f o r ,   a t   l o k a l   n e t v æ r k s a d g a n g   e r   a k t i v e r e tTLIVE_Cast-sessionen er slut_Spol 30 sekunder frem  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dh®×ßú¢Çàæé¿Èù		
		#	R	u	¾	Ä¹Ä	
Y¶3             T              K


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/de.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKj L a u t s t ä r k eYVerbindenW(Label)\PIN eingeben_Streaming ins WohnzimmerZUntertitelW(title)Z(Subtitle)_<Tippen, um Medien auf Fernseher und Lautsprecher zu streamen_Streaming beendenTpin0o V e r b i n d u n g   w i r d   h e r g e s t e l l t &WWerbungUAudio](device name)i S c h l i e ß e nYAbbrechen_VerbindungsaufbauW(Title)_pin_cancel_buttonTpin2o W e r b u n g   ü b e r s p r i n g e nn W e r b u n g   l ä u f t &Tpin1_connecting_skip_button_welcome_cancel_buttono¢ G i b   d i e   v i e r s t e l l i g e   P I N   e i n ,   d i e   a u f   d e m   S t a r t b i l d s c h i r m   e i n e s   G e r ä t s   i n   d e r   N ä h e   a n g e z e i g t   w i r d .   D e r   G e r ä t e e i g e n t ü m e r   f i n d e t   d i e   P I N   a u c h   i n   d e r   C h r o m e c a s t   A p p .l Ü b e r s p r i n g e no K e i n e   M e d i e n   a u s g e w ä h l t_2Tippe, um den maximierten Controller zu aktivieren_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button\Titelauswahl_PIN akustisch erfassen_(Umschalten zwischen Wiedergabe und Pause_(device status)UTitle_(multizone device name)o+ V e r b i n d u n g   m i t   G e r ä t   i n   d e r   N ä h e   h e r s t e l l e n_welcome_skip_buttonX(artist)]skip_ad_labelVFertig_connecting_cancel_button\Streamen aufo} D a m i t   e i n e   V e r b i n d u n g   h e r g e s t e l l t   w e r d e n   k a n n ,   w i r d   v o r ü b e r g e h e n d   d e i n   M i k r o f o n   v e r w e n d e t ,   u m   e i n e   P I N   a k u s t i s c h   z u   e r f a s s e n .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n±»ÃÐëöþ	H\a¤ª¸ËÕéñ
5RWp	Ï	è

N
c
h
w


¬
Å
ð"{¨¯Ê×             u              Ô


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/de.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudioo 3 0   S e k u n d e n   z u r ü c k_Weitere Informationeno W e r b u n g   ü b e r s p r i n g e n   i n   % l d &h T i t e l   % d_Verbindung wird hergestellt zuZWiedergabeoL P r ü f e n   S i e ,   o b   s i c h   I h r   % @   u n d   d a s   Ü b e r t r a g u n g s g e r ä t   i m   s e l b e n   W L A N   b e f i n d e no T i t e l   m i t   U n t e r t i t e l n   a u s w ä h l e n_Wiedergabe beendenUKeineROKo S t r e a m e n      n i c h t   v e r b u n d e no? D i e s e   A p p   b e n ö t i g t   z u m   S t r e a m e n   Z u g r i f f   a u f   d a s   l o k a l e   N e t z w e r kU--:--VWeiter_Zu den Einstellungen\Streamen auf_+Stummschaltung aktivieren oder deaktivierenZUntertitelVTablet]Einstellungenf Z u r ü c kk W L A N   p r ü f e no S t r e a m e n      v e r b u n d e n_(Umschalten zwischen Wiedergabe und PauseYPausiereno D i e s e   A p p   b e n ö t i g t   Z u g r i f f   a u f   d e i n   W L A N ,   u m   e i n e   V e r b i n d u n g   z u   d e i n e n   G e r ä t e n   h e r z u s t e l l e n . 
 
 W ä h l e   " O K "   a u s ,   w e n n   d i e   A p p   z u m   S t r e a m e n   e i n e   V e r b i n d u n g   z u   d e i n e m   l o k a l e n   N e t z w e r k   h e r s t e l l e n   m ö c h t e .   D u   k a n n s t   d a s   a u c h   s p ä t e r   i n   d e n   i O S - E i n s t e l l u n g e n   f ü r   d i e s e   A p p   t u n .d % d   %o K e i n e   G e r ä t e   v e r f ü g b a r_ Inhalte werden an "%@" gestreamtoÉ D i e s e   A p p   b e n ö t i g t   Z u g r i f f   a u f   d e i n   W L A N ,   u m   e i n e   V e r b i n d u n g   z u   d e i n e n   G e r ä t e n   h e r z u s t e l l e n . 
 
 W e n n   d u   s t r e a m e n   m ö c h t e s t ,   r u f   d e i n e   E i n s t e l l u n g e n   a u f   u n d   g e w ä h r e   d e r   A p p   Z u g r i f f   a u f   d a s   l o k a l e   N e t z w e r k .o G e h e n   S i e   z u   d e n   E i n s t e l l u n g e n   a u f   d i e s e m   S m a r t p h o n e   u n d   p r ü f e n   S i e ,   o b   d e r   Z u g r i f f   a u f   d a s   l o k a l e   N e t z w e r k   f ü r   d i e s e   A p p   a k t i v i e r t   i s to S t r e a m e n      w i r d   v e r b u n d e nZSmartphone_Stream gestarteto< P r ü f e n ,   o b   d e r   Z u g r i f f   a u f   d a s   l o k a l e   N e t z w e r k   a k t i v i e r t   i s tTLIVE^Stream beendeto 3 0   S e k u n d e n   v o r  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dj©äõ!¼ýRÓÙà÷		2	=	D	R	_	v	¡	Ì	Öðù(K
àñ&1D¿ÄÓ             T              ô


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/el.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTEFUVWXYTZ[\]^_`QabcdIefghijRakElmnoUD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKk½Ä±Ã·  ®Ç¿Åg£Í½´µÃ·W(Label)l¹Ã±³É³®   P I NoµÄ¬´¿Ã·  ÃÄ¿  º±¸¹ÃÄ¹ºÌi¥ÀÌÄ¹Ä»¿¹W(title)Z(Subtitle)o:³³¯¾Äµ  ³¹±  ¼µÄ¬´¿Ã·  ¼­ÃÉ½  ÃÄ·½  Ä·»µÌÁ±Ã·  º±¹  Ä±  ·Çµ¯±  Ã±Âo¹±º¿À®  ¼µÄ¬´¿Ã·ÂTpin0o Á±³¼±Ä¿À¿¹µ¯Ä±¹  ÃÍ½´µÃ· &i¹±Æ®¼¹Ã·dÇ¿Â](device name)h»µ¯Ã¹¼¿eºÅÁ¿W(Title)_pin_cancel_buttonTpin2i¥ÀÌÄ¹Ä»¿Âo ±Á¬²»µÈ·  ´¹±Æ®¼¹Ã·Âo¹±Æ®¼¹Ã·  Ãµ  µ¾­»¹¾· &Tpin1_connecting_skip_button_welcome_cancel_buttono¡¹Ã±³¬³µÄµ  Ä¿   4 -È®Æ¹¿   P I N  À¿Å  ÀÁ¿²¬»»µÄ±¹  ÃÄ·½  ±ÁÇ¹º®  ¿¸Ì½·  ¼¹±Â  º¿½Ä¹½®Â  ÃÅÃºµÅ®Â .    º¬Ä¿Ç¿Â  Ä·Â  ÃÅÃºµÅ®Â  ¼À¿Áµ¯  µÀ¯Ã·Â  ½±  ²Áµ¹  Ä¿   P I N  ÃÄ·½  µÆ±Á¼¿³®   C h r o m e c a s t .i ±Á¬²»µÈ·oµ½  µÀ¹»­Ç¸·º±½  ¼­Ã±o7 ±Ä®ÃÄµ  ³¹±  ½±  µ½µÁ³¿À¿¹®ÃµÄµ  Ä¿  µºÄµÄ±¼­½¿  Çµ¹Á¹ÃÄ®Á¹¿_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonoÀ¹»¿³®  º¿¼¼±Ä¹¿ÍoºÁÌ±Ã·  ³¹±   P I No½±»»±³®  ±½±À±Á±³É³®Â /À±ÍÃ·Â_(device status)UTitle_(multizone device name)o£Í½´µÃ·  Ãµ  º¿½Ä¹½®  ÃÅÃºµÅ®_welcome_skip_buttonX(artist)]skip_ad_labele¤­»¿Â_connecting_cancel_buttonkµÄ¬´¿Ã·  ÃµoU¹±  ½±  ÃÅ½´µ¸µ¯Äµ ,  ¸±  ÇÁ·Ã¹¼¿À¿¹·¸µ¯  ÀÁ¿ÃÉÁ¹½¬  Ä¿  ¼¹ºÁÌÆÉ½Ì  Ã±Â  ³¹±  ±ºÁÌ±Ã·  µ½ÌÂ   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n³ÂÊã%-8¯ÔÙ!*8IT\pu³àåþ	
[
n

$3G[¡ÜîôE[dr}¯             u              
\


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/el.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELdÇ¿Âo ¯ÃÉ  º±Ä¬   3 0  ´µÅÄµÁÌ»µÀÄ±o¬¸µÄµ  ÀµÁ¹ÃÃÌÄµÁ±o-À¿Áµ¯Äµ  ½±  À±Á±²»­ÈµÄµ  Ä·  ´¹±Æ®¼¹Ã·  Ãµ   % l d   &j¿¼¼¬Ä¹   % dj£Í½´µÃ·  Ãµk½±À±Á±³É³®oJµ²±¹É¸µ¯Äµ  ÌÄ¹  Ä¿   % @  º±¹  ·  ÃÅÃºµÅ®  ¼µÄ¬´¿Ã·Â  µ¯½±¹  ÃÄ¿  ¯´¹¿  ´¯ºÄÅ¿   W i - F i .oÀ¹»­¾Äµ  ­½±  º¿¼¼¬Ä¹  ÅÀ¿Ä¯Ä»É½o¹±º¿À®  ±½±À±Á±³É³®Â  ¼­ÃÉ½g±½­½±ÂboµÄ±´¿Ã· ,  ´µ½  ÃÅ½´­¸·ºµoBÅÄ®  ·  µÆ±Á¼¿³®  ÇÁµ¹¬¶µÄ±¹  ÀÁÌÃ²±Ã·  ÃÄ¿  Ä¿À¹ºÌ  ´¯ºÄÅ¿  ³¹±  ¼µÄ¬´¿Ã·U--:--gÀÌ¼µ½¿oµÄ¬²±Ã·  ÃÄ¹Â  ¡Å¸¼¯Ãµ¹ÂkµÄ¬´¿Ã·  Ãµo½±»»±³®  Ä·Â  º±Ä¬ÃÄ±Ã·Â  Ã¯³±Ã·Âi¥ÀÌÄ¹Ä»¿¹Vtableti¡Å¸¼¯Ãµ¹Âk Á¿·³¿Í¼µ½¿o»­³¾Äµ  Ä¿  ´¯ºÄÅ¿   W i - F ioµÄ¬´¿Ã· ,  ­³¹½µ  ÃÍ½´µÃ·o½±»»±³®  ±½±À±Á±³É³®Â /À±ÍÃ·Âe ±ÍÃ·o¹±  ½±  ÃÅ½´µ¸µ¯  ÃÄ¹Â  ÃÅÃºµÅ­Â  Ã±Â ,  ±ÅÄ®  ·  µÆ±Á¼¿³®  ÇÁµ¹¬¶µÄ±¹  ÀÁÌÃ²±Ã·  ÃÄ¿  ´¯ºÄÅ¿   W i - F i . 
 
¹±  ¼µÄ¬´¿Ã· ,  ÌÄ±½  ·  µÆ±Á¼¿³®  Ã±Â  ¶·Ä®Ãµ¹  ½±  ÃÅ½´µ¸µ¯  ÃÄ¿  Ä¿À¹ºÌ  Ã±Â  ´¯ºÄÅ¿ ,  µÀ¹»­¾Äµ   O K .  À¿Áµ¯Äµ  ½±  À±Á±ÇÉÁ®ÃµÄµ  ±ÅÄ®  Ä·½  ¬´µ¹±  ±Á³ÌÄµÁ±  ±ÀÌ  Ä¹Â  ÁÅ¸¼¯Ãµ¹Â   i O S  ³¹±  ±ÅÄ®  Ä·½  µÆ±Á¼¿³® .m % d  Ä¿¹Â  µº±ÄÌo µ½  ÅÀ¬ÁÇ¿Å½  ´¹±¸­Ã¹¼µÂ  ÃÅÃºµÅ­ÂoµÄ¬´¿Ã·  ÃÄ·  ÃÅÃºµÅ®   % @oÈ¹±  ½±  ÃÅ½´µ¸µ¯  ÃÄ¹Â  ÃÅÃºµÅ­Â  Ã±Â ,  ±ÅÄ®  ·  µÆ±Á¼¿³®  ÇÁµ¹¬¶µÄ±¹  ÀÁÌÃ²±Ã·  ÃÄ¿  ´¯ºÄÅ¿   W i - F i . 
 
¹±  ¼µÄ¬´¿Ã· ,  ¼µÄ±²µ¯Äµ  ÃÄ¹Â  ¡Å¸¼¯Ãµ¹Â  º±¹  µ½µÁ³¿À¿¹®ÃÄµ  Ä·½   ÁÌÃ²±Ã·  ÃÄ¿  Ä¿À¹ºÌ  ´¯ºÄÅ¿  ³¹±  ±ÅÄ®  Ä·½  µÆ±Á¼¿³® .oµÄ±²µ¯Äµ  ÃÄ¹Â  ¡Å¸¼¯Ãµ¹Â  Ãµ  ±ÅÄÌ  Ä¿  Ä·»­ÆÉ½¿  º±¹  µ»­³¾Äµ  ÌÄ¹  ·  µÀ¹»¿³®   ÁÌÃ²±Ã·  ÃÄ¿  Ä¿À¹ºÌ  ´¯ºÄÅ¿  µ¯½±¹  µ½µÁ³®  ³¹±  ±ÅÄ®  Ä·½  µÆ±Á¼¿³® .oµÄ¬´¿Ã· ,  ³¯½µÄ±¹  ÃÍ½´µÃ·hÄ·»­ÆÉ½¿o)  ÀµÁ¯¿´¿Â  »µ¹Ä¿ÅÁ³¯±Â  ¼µÄ¬´¿Ã·Â  ¾µº¯½·ÃµoAµ²±¹É¸µ¯Äµ  ÌÄ¹  ·  µÀ¹»¿³®   ÁÌÃ²±Ã·  ÃÄ¿  Ä¿À¹ºÌ  ´¯ºÄÅ¿  µ¯½±¹  µ½µÁ³®g©¤o-  ÀµÁ¯¿´¿Â  »µ¹Ä¿ÅÁ³¯±Â  ¼µÄ¬´¿Ã·Â  ¿»¿º»·ÁÎ¸·ºµoÀÁ¿ÃÄ¬  º±Ä¬   3 0  ´µÅÄµÁÌ»µÀÄ±  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dm¢É&;Pgþ=t¹	@	F	U			Þ	ñ	ø

"
S

¿
Êð

N
Teº?N«             T              æ


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/en.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKVVolumeWConnectW(Label)YEnter PIN_Casting To Living RoomYSubtitlesW(title)Z(Subtitle)_+Touch to cast media to your TV and Speakers\Stop castingTpin0]Connecting...RAdUAudio](device name)UCloseVCancelZConnectingW(Title)_pin_cancel_buttonTpin2XSubtitleWSkip Ad_Ad in progress...Tpin1_connecting_skip_button_welcome_cancel_button_Enter the 4-digit PIN displayed on the home screen of a nearby device. The device owner can also find the PIN in the Chromecast app.TSkip_No media selected_#Tap to activate expanded controller_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button_Track Selection^Listen for PIN_Play pause toggle_(device status)UTitle_(multizone device name)_Connect to nearby device_welcome_skip_buttonX(artist)]skip_ad_labelTDone_connecting_cancel_buttonWCast to_ITo connect, your microphone will be used temporarily to listen for a PIN.   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£«³½Öàèó!.3ADJX^epx¢¶»Ôìsx²ÇÌÛï			$	8	J	P	j			¤	²	·	Ò	Ú             v              
&


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/en.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudio_Rewind 30 secondsZLearn more_You can skip ad in %ld ...XTrack %d]Connecting toTPlay_CMake sure your %@ and the cast device are on the same Wi-Fi network_Select a closed captions track_Stop media playbackTNoneROK_Cast not connected_+This app needs Local Network Access to CastU--:--TNext^Go to SettingsWCast to_Toggle the mute state_Closed CaptionsVtabletXSettingsXPrevious_Check your Wi-Fi network^Cast connected_Play pause toggleUPauseYSubtitlesoÎ T o   c o n n e c t   t o   y o u r   d e v i c e s ,   t h i s   a p p   n e e d s   a c c e s s   t o   y o u r   W i - F i   n e t w o r k . 
 
 T o   C a s t ,   s e l e c t    O K    w h e n   t h e   a p p   a s k s   t o   c o n n e c t   t o   y o u r   l o c a l   n e t w o r k .   Y o u   c a n   a l s o   a l l o w   t h i s   l a t e r   i n   i O S   S e t t i n g s   f o r   t h i s   a p p .Z%d percent_No devices available]Casting to %@o T o   c o n n e c t   t o   y o u r   d e v i c e s ,   t h i s   a p p   n e e d s   a c c e s s   t o   y o u r   W i - F i   n e t w o r k . 
 
 T o   C a s t ,   g o   t o   y o u r   S e t t i n g s   a n d   t u r n   o n    L o c a l   N e t w o r k   A c c e s s    f o r   t h i s   a p p ._ZGo to Settings on this phone and check that Local Network Access is turned on for this app_Cast connectingUphone_Cast session started_$Make sure Local Network Access is onTLIVE_Cast session ended_Forward 30 seconds  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dj~¦¯½Â)?DG\¤¬ÄÖÝæï
-3=	Ü	ç	þ
=¬²Éðõ
             U              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/en_GB.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKVVolumeWConnectW(Label)YEnter PIN_Casting to Living RoomYSubtitlesW(title)Z(Subtitle)_+Touch to cast media to your TV and Speakers\Stop castingTpin0k C o n n e c t i n g &RAdUAudio](device name)UCloseVCancelZConnectingW(Title)_pin_cancel_buttonTpin2XSubtitleWSkip ad_Ad in progress...Tpin1_connecting_skip_button_welcome_cancel_button_Enter the 4-digit PIN displayed on the home screen of a nearby device. The device owner can also find the PIN in the Chromecast app.TSkip_No media selected_#Tap to activate expanded controller_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button_Track Selection^Listen for PIN_Play pause toggle_(device status)UTitle_(multizone device name)_Connect to nearby device_welcome_skip_buttonX(artist)]skip_ad_labelTDone_connecting_cancel_buttonWCast to_ITo connect, your microphone will be used temporarily to listen for a PIN.   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£«³½Öàèó!.3JMSagny£«¿ÄÝõ|»ÐÕäø			-	A	S	Y	s		¤	­	»	À	Û	ã             v              
/


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/en_GB.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudio_Rewind 30 secondsZLearn moreo Y o u   c a n   s k i p   a d   i n   % l d &XTrack %d]Connecting toTPlay_HMake sure that your %@ and the cast device are on the same Wi-Fi network_Select a closed captions track_Stop media playbackTNoneROK_Cast not connected_+This app needs local network access to castU--:--TNext^Go to SettingsWCast to_Toggle the mute state_Closed captionsVtabletXSettingsXPrevious_Check your Wi-Fi network^Cast connected_Play pause toggleUPauseYSubtitles_ÎTo connect to your devices, this app needs access to your Wi-Fi network.

To cast, select 'OK' when the app asks to connect to your local network. You can also allow this later in iOS settings for this app.[%d per cent_No devices available]Casting to %@_To connect to your devices, this app needs access to your Wi-Fi network.

To cast, go to your settings and turn on 'Local network access' for this app._ZGo to Settings on this phone and check that local network access is turned on for this app_Cast connectingUphone_Cast session started_)Make sure that local network access is onTLIVE_Cast session ended_Forward 30 seconds  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dj~ºÃÑÖ!BX]`u£©®½ÅÝïöÿ#2FLV	'	3	J	X	ò
O
a
g
~
ª
¯
Ä             U              
Ù


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/es.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleWAceptarWVolumenXConectarW(Label)_Introduce el PINo E n v i a n d o   c o n t e n i d o   a   S a l ó nj S u b t í t u l o sW(title)Z(Subtitle)_?Toca para enviar contenido multimedia a tu TV y a los altavoceso D e t e n e r   e l   e n v í oTpin0]Conectando...WAnuncioUAudio](device name)VCerrarXCancelarZConectandoW(Title)_pin_cancel_buttonTpin2i S u b t í t u l o^Saltar anuncio_Anuncio en curso...Tpin1_connecting_skip_button_welcome_cancel_buttonoº I n t r o d u c e   e l   P I N   d e   c u a t r o   d í g i t o s   q u e   a p a r e c e   e n   l a   p a n t a l l a   d e   i n i c i o   d e   a l g ú n   d i s p o s i t i v o   c e r c a n o .   E l   p r o p i e t a r i o   d e l   d i s p o s i t i v o   t a m b i é n   p u e d e   v e r   e l   P I N   e n   l a   a p l i c a c i ó n   C h r o m e c a s t .VSaltaro& N o   s e   h a   s e l e c c i o n a d o   n i n g ú n   c o n t e n i d o_)Toca para activar el controlador ampliado_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono S e l e c c i ó n   d e   p i s t a\Detectar PINo A l t e r n a r   p a u s a   y   r e p r o d u c c i ó n_(device status)UTitle_(multizone device name)_!Conecta con dispositivos cercanos_welcome_skip_buttonX(artist)]skip_ad_labelUHecho_connecting_cancel_buttonXEnviar aoS U t i l i z a r e m o s   t u   m i c r ó f o n o   t e m p o r a l m e n t e   p a r a   e s c u c h a r   e l   P I N   y   e s t a b l e c e r   c o n e x i ó n .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¡©²ºÍ!,n¤¬²ÀÇÐÛã÷ü49Rj	á	è
7
c
x
}

 
´
Û
è%7=W{¨®ÉÒ             v              {


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/es.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudioo R e b o b i n a r   3 0   s e g u n d o so M á s   i n f o r m a c i ó n_"Puedes saltar el anuncio en %ld...h P i s t a   % d^Conectando conZReproduciroY C o m p r u e b a   q u e   t u   % @   y   q u e   e l   d i s p o s i t i v o   d e   e m i s i ó n   e s t é n   c o n e c t a d o s   a   l a   m i s m a   r e d   W i  F io# S e l e c c i o n a r   u n a   p i s t a   d e   s u b t í t u l o so/ D e t e n e r   l a   r e p r o d u c c i ó n   d e   c o n t e n i d o   m u l t i m e d i aWNingunoWAceptar_Cast no conectadooJ E s t a   a p l i c a c i ó n   n e c e s i t a   a c c e s o   a   l a   r e d   l o c a l   p a r a   u s a r   l a   f u n c i ó n   E n v i a rU--:--YSiguiente\Ve a AjustesXEnviar a_Activar o desactivar silencioj S u b t í t u l o sVtabletWAjustesXAnterioro C o m p r u e b a   t u   r e d   W i  F i^Cast conectadoo A l t e r n a r   p a u s a   y   r e p r o d u c c i ó nVPausaro E s t a   a p l i c a c i ó n   n e c e s i t a   a c c e s o   a   l a   r e d   W i  F i   p a r a   c o n e c t a r s e   a   t u s   d i s p o s i t i v o s . 
 
 S i   q u i e r e s   e n v i a r   c o n t e n i d o ,   s e l e c c i o n a   A c e p t a r   c u a n d o   l a   a p l i c a c i ó n   t e   p i d a   c o n e c t a r s e   a   t u   r e d   l o c a l .   T a m b i é n   p u e d e s   p e r m i t i r   e s t a   a c c i ó n   d e s p u é s   e n   l o s   a j u s t e s   d e   i O S   d e   l a   a p l i c a c i ó n .m % d   p o r   c i e n t oo$ N o   h a y   n i n g ú n   d i s p o s i t i v o   d i s p o n i b l e_Enviando contenido a %@oº E s t a   a p l i c a c i ó n   n e c e s i t a   a c c e s o   a   l a   r e d   W i  F i   p a r a   c o n e c t a r s e   a   t u s   d i s p o s i t i v o s . 
 
 S i   q u i e r e s   e n v i a r   c o n t e n i d o ,   v e   a   A j u s t e s   y   a c t i v a   l a   o p c i ó n   " A c c e s o   a   l a   r e d   l o c a l "   d e   l a   a p l i c a c i ó n .on E n   e l   t e l é f o n o ,   v e   a   A j u s t e s   y   c o m p r u e b a   q u e   e s t a   a p l i c a c i ó n   t e n g a   h a b i l i t a d o   e l   p e r m i s o   A c c e s o   a   l a   r e d   l o c a l_Cast conectandoh t e l é f o n oo S e s i ó n   d e   e n v í o   i n i c i a d aoA A s e g ú r a t e   d e   q u e   e l   p e r m i s o   A c c e s o   a   l a   r e d   l o c a l   e s t é   h a b i l i t a d oZEN DIRECTOo S e s i ó n   d e   e n v í o   f i n a l i z a d ao A v a n z a r   3 0   s e g u n d o s  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dj¸Ýîý½gow	"	(	2	?	H	h	}				Ä	Ó

9T¹0!2eêõ,             T              U


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/es_419.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKWVolumenYConnectarW(Label)^Ingresa el PIN_!Transmitiendo contenido a la salaj S u b t í t u l o sW(title)Z(Subtitle)_?Toca para transmitir contenido multimedia a las bocinas y la TVo D e t e n e r   t r a n s m i s i ó nTpin0k C o n e c t a n d o &WAnuncioUAudio](device name)VCerrarXCancelarZConectandoW(Title)_pin_cancel_buttonTpin2i S u b t í t u l o^Omitir anuncioo A n u n c i o   e n   c u r s o &Tpin1_connecting_skip_button_welcome_cancel_buttono² I n g r e s a   e l   P I N   d e   4   d í g i t o s   q u e   a p a r e c e   e n   l a   p a n t a l l a   p r i n c i p a l   d e   u n   d i s p o s i t i v o   c e r c a n o .   E l   p r o p i e t a r i o   d e l   d i s p o s i t i v o   t a m b i é n   p u e d e   e n c o n t r a r   e l   P I N   e n   l a   a p p   d e   C h r o m e c a s t .VOmitiro, N o   s e   s e l e c c i o n ó   n i n g ú n   c o n t e n i d o   m u l t i m e d i a_*Presiona para activar el control expandido_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono S e l e c c i ó n   d e   p i s t a s\Escuchar PINo# A l t e r n a r   e n t r e   r e p r o d u c c i ó n   y   p a u s a_(device status)UTitle_(multizone device name)o- E s t a b l e c e r   c o n e x i ó n   c o n   d i s p o s i t i v o s   c e r c a n o s_welcome_skip_buttonX(artist)]skip_ad_labelUListo_connecting_cancel_button\Transmitir aoV P a r a   e s t a b l e c e r   l a   c o n e x i ó n ,   s e   u s a r á   t e m p o r a l m e n t e   e l   m i c r ó f o n o   p a r a   e s c u c h a r   u n   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¤®¶ÅéþS| ¦´»ÄÏ×ëð7<Um	Ô	Û
6
c
x
}

 
´
Ý
ê3EKeÂØáïõ             v              Ì


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/es_419.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudioo R e t r o c e d e r   3 0   s e g u n d o so M á s   i n f o r m a c i ó no  P u e d e s   o m i t i r   e l   a n u n c i o   e n   % l d &h P i s t a   % do E s t a b l e c i e n d o   c o n e x i ó n   c o nZReproduciro\ A s e g ú r a t e   d e   q u e   t u   % @   y   e l   d i s p o s i t i v o   d e   t r a n s m i s i ó n   e s t é n   c o n e c t a d o s   a   l a   m i s m a   r e d   W i - F io" S e l e c c i o n a   u n a   p i s t a   d e   s u b t í t u l o so" D e t e n e r   l a   r e p r o d u c c i ó n   m u l t i m e d i aWNingunoWAceptaro' D i s p o s i t i v o   d e   t r a n s m i s i ó n   n o   c o n e c t a d o_AEsta app necesita acceso a la red local para transmitir contenidoU--:--YSiguienteo I r   a   C o n f i g u r a c i ó n\Transmitir ao+ A c t i v a r   o   d e s a c t i v a r   l a   o p c i ó n   d e   s i l e n c i a rj S u b t í t u l o sVtabletm C o n f i g u r a c i ó nXAnterior_Revisa la red Wi-Fio$ D i s p o s i t i v o   d e   t r a n s m i s i ó n   c o n e c t a d oo# A l t e r n a r   e n t r e   r e p r o d u c c i ó n   y   p a u s aVPausaro P a r a   c o n e c t a r s e   a   t u s   d i s p o s i t i v o s ,   e s t a   a p p   n e c e s i t a   a c c e s o   a   l a   r e d   W i - F i . 
 
 P a r a   t r a n s m i t i r   c o n t e n i d o ,   s e l e c c i o n a   " A c e p t a r "   c u a n d o   l a   a p p   s o l i c i t e   c o n e c t a r s e   a   l a   r e d   l o c a l .   T a m b i é n   p u e d e s   h a b i l i t a r   e s t a   o p c i ó n   m á s   a d e l a n t e   d e s d e   l a   c o n f i g u r a c i ó n   d e   i O S   p a r a   e s t a   a p p .S%d%_No hay dispositivos disponibles_Transmitiendo a %@o© P a r a   c o n e c t a r s e   a   t u s   d i s p o s i t i v o s ,   e s t a   a p p   n e c e s i t a   a c c e s o   a   l a   r e d   W i - F i . 
 
 P a r a   t r a n s m i t i r   c o n t e n i d o ,   v e   a   C o n f i g u r a c i ó n   y   a c t i v a   " A c c e s o   a   l a   r e d   l o c a l "   e n   e s t a   a p p .or V e   a   C o n f i g u r a c i ó n   e n   e s t e   t e l é f o n o   y   a s e g ú r a t e   d e   q u e   l a   o p c i ó n   A c c e s o   a   l a   r e d   l o c a l   e s t é   a c t i v a d a   p a r a   e s t a   a p po% C o n e c t a n d o   d i s p o s i t i v o   d e   t r a n s m i s i ó nh t e l é f o n oo  C o m e n z ó   l a   s e s i ó n   d e   t r a n s m i s i ó no> A s e g ú r a t e   d e   q u e   l a   o p c i ó n   A c c e s o   a   l a   r e d   l o c a l   e s t é   a c t i v a d aWEN VIVOo! F i n a l i z ó   l a   s e s i ó n   d e   t r a n s m i s i ó no A v a n z a r   3 0   s e g u n d o s  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-djºýEPR¡©ú	>	D	N	u		Û	ð	÷


1
|
Å
Ììð

'|c°ÁÐ             T              ù


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/et.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROK[Helitugevusf Ü h e n d aW(Label)_Sisestage PIN-koodo Ü l e k a n d m i n e   e l u t u p p aZSubtiitridW(title)Z(Subtitle)o7 P u u d u t a g e   m e e d i a   ü l e k a n d m i s e k s   t e l e r i s s e   j a   k õ l a r i t e s s eo P e a t a   ü l e k a n d m i n eTpin0l Ü h e n d a m i n e   &WReklaamTHeli](device name)TSuleg T ü h i s t aj Ü h e n d a m i n eW(Title)o p i n _ n u p p _ t ü h i s t aTpin2o J ä t a   r e k l a a m   v a h e l eo R e k l a a m   o n   p o o l e l i   &Tpin1o ü h e n d a m i n e _ n u p p _ j ä t a _ v a h e l eo t e r e _ t u l e m a s t _ n u p p _ t ü h i s t ao S i s e s t a g e   n e l j a k o h a l i n e   P I N - k o o d ,   m i s   o n   k u v a t u d   l ä h e d u s e s   o l e v a   s e a d m e   a v a k u v a l .   S e a d m e   o m a n i k   l e i a b   P I N - k o o d i   k a   C h r o m e c a s t i   r a k e n d u s e s t .k J ä t a   v a h e l e_Meediat pole valitud_0Puudutage laiendatud kontrolleri aktiveerimisekso p i n _ n u p p _ ü h e n d aTpin3o n u p p _ j ä t a _ r e k l a a m _ v a h e l e^pin_nupp_kuula_tere_tulemast_nupp_ok]Raja valimine_Kuula PIN-koodio E s i t a m i s e   j a   p e a t a m i s e   l ü l i t i_(device status)UTitle_(multizone device name)o! Ü h e n d a g e   l ä h e d u s e s   o l e v a   s e a d m e g ao t e r e _ t u l e m a s t _ n u p p _ j ä t a _ v a h e l eX(artist)o s i l t _ j ä t a _ r e k l a a m _ v a h e l eVValmiso ü h e n d a m i n e _ n u p p _ t ü h i s t al Ü l e k a n d m i n e :oG Ü h e n d a m i s e l   k a s u t a t a k s e   P I N - k o o d i   k u u l a m i s e k s   a j u t i s e l t   t e i e   m i k r o f o n i .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¨µ½Òý±¶Ï×Üêïþ>ClÕ	
%
<
S

§
¬
ß
î&cu{Ú"U\¦             u              
7


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/et.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELTHeli_Keri 30 sekundit tagasiYLisateaveo/ R e k l a a m i   s a a b   v a h e l e   j ä t t a   % l d   s e k u n d i   p ä r a s t   &X%d. radak Ü h e n d a m i n e :UEsitao: V e e n d u g e ,   e t   % @   j a   ü l e k a n d e s e a d e   o l e k s i d   s a m a s   W i F i - v õ r g u s_Vali subtiitrite rada_Peata meedia taasesitusVPuudubROKo Ü l e k a n d m i n e   p o l e   ü h e n d a t u do? S e e   r a k e n d u s   v a j a b   ü l e k a n d m i s e k s   j u u r d e p ä ä s u   k o h a l i k u l e   v õ r g u l eU--:--h J ä r g m i n eZAva seadedl Ü l e k a n d m i n e :o V a i g i s t a m i s e   o l e k u   l ü l i t iZSubtiitrid\tahvelarvutiVSeadedWEelmineo K o n t r o l l i g e   o m a   W i F i - v õ r k uo Ü l e k a n d m i n e   o n   ü h e n d a t u do E s i t a m i s e   j a   p e a t a m i s e   l ü l i t iUPeataoð T e i e   s e a d m e t e g a   ü h e n d u s e   l o o m i s e k s   v a j a b   s e e   r a k e n d u s   j u u r d e p ä ä s u   t e i e   W i F i - v õ r g u l e . 
 
 Ü l e k a n d m i s e k s   v a l i g e    O K  ,   k u i   r a k e n d u s   p a l u b   l u b a   k o h a l i k u   v õ r g u g a   ü h e n d u s e   l o o m i s e k s .   S a a t e   s e l l e   r a k e n d u s e   p u h u l   s e l l e   h i l j e m   l u b a d a   k a   i O S - i   s e a d e t e s .\%d protsentio S a a d a v a l   p o l e   ü h t k i   s e a d e to Ü l e k a n d m i n e   s e a d m e s s e   % @o¿ T e i e   s e a d m e t e g a   ü h e n d u s e   l o o m i s e k s   v a j a b   s e e   r a k e n d u s   j u u r d e p ä ä s u   t e i e   W i F i - v õ r g u l e . 
 
 Ü l e k a n d m i s e k s   a v a g e   s e a d e d   j a   l ü l i t a g e   v a l i k    J u u r d e p ä ä s   k o h a l i k u l e   v õ r g u l e    s e l l e   r a k e n d u s e   j a o k s   s i s s e .o} A v a g e   s e l l e s   t e l e f o n i s   m e n ü ü   S e a d e d   j a   v e e n d u g e ,   e t   j u u r d e p ä ä s   k o h a l i k u l e   v õ r g u l e   o l e k s   s e l l e   r a k e n d u s e   j a o k s   s i s s e   l ü l i t a t u do Ü l e k a n d m i s t   ü h e n d a t a k s eWtelefono Ü l e k a n d m i s e   s e a n s s   a l g a so@ V e e n d u g e ,   e t   j u u r d e p ä ä s   k o h a l i k u l e   v õ r g u l e   o l e k s   s i s s e   l ü l i t a t u dTOTSEo Ü l e k a n d m i s e   s e a n s s   l õ p p e s_Keri 30 sekundit edasi  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-diî÷£½ÄÇþ¡ºïú				M		½	Ã¦³ê
ÌÔÄ             T              Ý


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/fa.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlec.H(iEÌ2'F  5/'e'*5'DW(Label)o~ÌF  1'  H'1/  ©FÌ/o/1-'D  ~.4  E-*H'  (G   «3'DF  F4ÌEF »g2Ì1FHÌ3W(title)Z(Subtitle)o:(1'Ì  ~.4  E-*H'Ì  13'FG  (G  *DHÌ2ÌHF  H  (DF/¯HG'Ì*'F  DE3  ©FÌ/n*HBA  ~.4  E-*H'Tpin0l/1-'D  '*5'D &d"¯GÌd5H*Ì](device name)d(3*FcD:Hk/1-'D  '*5'DW(Title)_pin_cancel_buttonTpin2l1/  ©1/F  "¯GÌo/1-'D  ~.4  "¯GÌ . . .Tpin1_connecting_skip_button_welcome_cancel_buttono ~ÌF  ô  1BEÌ  FE'Ì4  /'/G 4/G  /1  5A-G  '5DÌ  /3*¯'GÌ  /1  '71'A  1'  H'1/  ©FÌ/ .  E'D©  /3*¯'G  EÌ *H'F/  'ÌF  ~ÌF  1'  /1  (1F'EG   C h r o m e c a s t  GE  ~Ì/'  ©F/ .f1/  4/Fo13'FG 'Ì  'F*.'(  F4/o/(1'Ì  A9'D  ©1/F  ©F*1D ©FF/G  (21¯ 4/G  61(G  (2FÌ/_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonk'F*.'(  "GF¯o¯H4  /'/F  (G  ~ÌFo,'(G ,'ÌÌ  (ÌF  ~.4 /E©+_(device status)UTitle_(multizone device name)o'*5'D  (G  /3*¯'G  '71'A_welcome_skip_buttonX(artist)]skip_ad_labeld*E'E_connecting_cancel_buttonl~.4  E-*H'  (GoT(1'Ì  (1B1'1Ì  '*5'D  '2  EÌ©1HAHF  4E'  (G 7H1  EHB*  (1'Ì  ¯H4  /'/F  (G  ~ÌF  '3*A'/G  EÌ 4H/ .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n ³¾Æé*9ALÃàåþ'.EMaf¤©ÂÚ	í	ú
#



­
Á
Õ
ì
:LRl¯¸ÆÏê             u              ®


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/fa.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELd5H*Ìoóð  +'FÌG  (G  9B(l(Ì4*1  (/'FÌ/o%/1   % l d  EÌ *H'FÌ/  '2  "¯GÌ  1/  4HÌ/   . . .g"GF¯   % dn/1-'D  '*5'D  (Gc~.4o3 E7E&F  4HÌ/   % @  H  /3*¯'G   C a s t  /1  Ì©  4(©G   W i - F i  ('4F/o$*1©  2Ì1FHÌ3  F'4FH'Ì'F  1'  'F*.'(  ©FÌ/n*HBA  ~.4  13'FGhGÌ ©/'Ee*#ÌÌ/o~.4  E-*H'  E*5D  FÌ3*o>'ÌF  (1F'EG  (1'Ì   «~.4  E-*H' »  (G   «/3*13Ì  (G  4(©G  E-DÌ »  FÌ'2  /'1/U--:--d(9/Ìo1A*F  (G  *F8ÌE'*l~.4  E-*H'  (Go1H4F  .'EH4  ©1/F  -'D*  5'E*o2Ì1FHÌ3  F'4FH'Ì'Fk1'Ì'FG  DH-Ìg*F8ÌE'*dB(DÌo 4(©G   W i - F i  1'  (113Ì  ©FÌ/o~.4  E-*H'  E*5D  '3*o,'(G ,'ÌÌ  (ÌF  ~.4 /E©+cE©+g2Ì1FHÌ3o 'ÌF  (1F'EG  (1'Ì  E*5D  4/F  (G  /3*¯'G G'Ì  4E'  ('Ì/  (G  4(©G   W i - F i  /3*13Ì  /'4*G  ('4/ . 
 
(1'Ì   «~.4  E-*H' »  HB*Ì  (1F'EG  (1'Ì  E*5D  4/F  (G  4(©G  E-DÌ  4E'  /1.H'3*  EÌ ©F/   «*#ÌÌ/ »  1'  'F*.'(  ©FÌ/ .  GEFÌF  EÌ *H'FÌ/  'ÌF  /3*13Ì  1'  (9/'K  /1   «*F8ÌE'* »   i O S  (1'Ì  'ÌF  (1F'EG  E,'2  ©FÌ/ .g % d  /15/o/3*¯'GÌ  /1/3*13  FÌ3*o/1-'D  ~.4  E-*H'  (G   % @o­ 'ÌF  (1F'EG  (1'Ì  E*5D  4/F  (G  /3*¯'G G'Ì  4E'  ('Ì/  (G  4(©G   W i - F i  /3*13Ì  /'4*G  ('4/ . 
 
(1'Ì   «~.4  E-*H' »  (G   «*F8ÌE'* »  (1HÌ/  H   «/3*13Ì  (G  4(©G  E-DÌ »  1'  (1'Ì  'ÌF  (1F'EG  1H4F  ©FÌ/ .o\/1  'ÌF  *DAF  (G   «*F8ÌE'* »  (1HÌ/  H  (113Ì  ©FÌ/   «/3*13Ì  (G  4(©G  E-DÌ »  (1'Ì  'ÌF  (1F'EG  1H4F  ('4/o~.4  E-*H'  /1-'D  E*5D  4/Fd*DAFo,D3G  ~.4  E-*H'  ":'2  4/o*E7E&F  4HÌ/   «/3*13Ì  (G  4(©G  E-DÌ »  1H4F  ('4/d2F/Go,D3G  ~.4  E-*H'  ~'Ì'F  Ì'A*oóð  +'FÌG  (G  ,DH  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dm§ô 'Ûø	=¼ÂËì		:	_	v			Ã	ê


-AP{¨Àóü+À             U              á


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/fi.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\W]^_Q`abcIdefghiR`jEkl\mVD^TJnoWpJqT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKo Ä ä n e n v o i m a k k u u sg Y h d i s t äW(Label)^Anna PIN-koodi_Striimataan olohuoneeseenYTekstitysW(title)Z(Subtitle)_DStriimaa mediaa televisioon ja kaiuttimiin koskettamalla painiketta._Lopeta striimaus[PIN-koodi 0l Y h d i s t e t ä ä n &VMainosd Ä ä n i](device name)USuljeTPeruk Y h d i s t e t ä ä nW(Title)\Peru-painike[PIN-koodi 2\Ohita mainoso M a i n o s t a   t o i s t e t a a n &[PIN-koodi 1]Ohita-painikeo A n n a   n e l i n u m e r o i n e n   P I N - k o o d i ,   j o k a   n ä k y y   l ä h e l l ä   o l e v a n   l a i t t e e n   a l o i t u s n ä y t ö l l ä .   L a i t t e e n   o m i s t a j a   v o i   t a r k i s t a a   P I N - k o o d i n   m y ö s   C h r o m e c a s t - s o v e l l u k s e s t a .UOhita_Ei valittua mediaa_Laajenna ohjain napauttamalla.o Y h d i s t ä - p a i n i k e[PIN-koodi 3o O h i t a   m a i n o s    p a i n i k e_Kuuntele-painikeZOK-painikeo Ä ä n i r a i d a t   j a   t e k s t i t y s_Kuuntele PIN-koodio T o i s t a / k e s k e y t ä - p a i n i k e_(device status)UTitle_(multizone device name)o# Y h d i s t ä   l ä h e l l ä   o l e v a a n   l a i t t e e s e e nX(artist)o O h i t a   m a i n o s    t u n n i s t eVValmisYStriimaa:oH M i k r o f o n i a   k ä y t e t ä ä n   P I N - k o o d i n   k u u n t e l e m i s e e n   y h t e y t t ä   m u o d o s t e t t a e s s a .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n½ÌÔãÿ	cv¢«¹¿ÄÛãðü	4@N			¤	Å	æ	ò

2
=
n

´
Æ
Ì
æ/8gnx             r              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/fi.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELd Ä ä n io T a a k s e p ä i n   3 0   s e k u n t i ai L u e   l i s ä äo- V o i t   o h i t t a a   m a i n o k s e n   % l d   s e k u n n i n   k u l u t t u a &ZKappale %dl Y h d i s t e t ä ä n :VToistaoI V a r m i s t a ,   e t t ä   % @   j a   s t r i i m a u s l a i t e   o v a t   y h t e y d e s s ä   s a m a a n   W i - F i - v e r k k o o n_Valitse tekstitysraita_Lopeta mediatoistoa ROK_Castia ei yhdistettyo8 T ä m ä   s o v e l l u s   t a r v i t s e e   s t r i i m a u k s e e n   l ä h i v e r k k o y h t e y d e nU--.--XSeuraava^Avaa AsetuksetYStriimaa:o! M y k i s t y s t i l a n   p ä ä l l e / p o i s - v a l i n t a\TekstityksetXtablettiYAsetuksetYEdellinen_Tarkista Wi-Fi-verkko_Cast yhdistettyo T o i s t a / k e s k e y t ä - p a i n i k eYKeskeytysYTekstitysoì J o t t a   t ä m ä   s o v e l l u s   v o i   y h d i s t ä ä   l a i t t e i s i i s i ,   s e   t a r v i t s e e   p ä ä s y n   W i - F i - v e r k k o o s i . 
 
 K u n   s o v e l l u s   p y y t ä ä   l u p a a   y h d i s t ä ä   l ä h i v e r k k o o s i ,   v a l i t s e   " O K " ,   n i i n   p ä ä s e t   s t r i i m a a m a a n .   V o i t   m y ö s   s a l l i a   t ä m ä n   m y ö h e m m i n   s o v e l l u k s e n   i O S - a s e t u k s i s t a .d % d   %o E i   l a i t t e i t a   k ä y t e t t ä v i s s ä_Striimataan: %@o¸ J o t t a   t ä m ä   s o v e l l u s   v o i   y h d i s t ä ä   l a i t t e i s i i s i ,   s e   t a r v i t s e e   p ä ä s y n   W i - F i - v e r k k o o s i . 
 
 A v a a   A s e t u k s e t   j a   l a i t a   t ä l l e   s o v e l l u k s e l l e   p ä ä l l e   " K ä y t t ö   l ä h i v e r k o s s a " ,   n i i n   p ä ä s e t   s t r i i m a a m a a n .o_ A v a a   t ä m ä n   p u h e l i m e n   a s e t u k s e t   j a   t a r k i s t a ,   e t t ä   l ä h i v e r k k o y h t e y s   o n   p ä ä l l ä   t ä s s ä   s o v e l l u k s e s s ao C a s t i a   y h d i s t e t ä ä nWpuhelin_Striimaus aloitettuo) V a r m i s t a ,   e t t ä   l ä h i v e r k k o y h t e y s   o n   p ä ä l l äTLIVEo S t r i i m a u s   p ä ä t t y n y to E t e e n p ä i n   3 0   s e k u n t i a  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dm¯07Ìåúý ¨²÷		
		!	9	K	|		kt«½
0
ñ 6¹             U              æ


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/fil.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKVVolumeYKumonektaW(Label)^Ilagay ang PIN_Ikina-cast Sa Sala\Mga SubtitleW(title)Z(Subtitle)_:Pindutin para mag-cast ng media sa iyong TV at Mga Speaker_Ihinto ang pag-castTpin0^Kumokonekta...RAdUAudio](device name)UIsaraZKanselahin[KumokonektaW(Title)_pin_cancel_buttonTpin2XSubtitle_Laktawan ang Ad_ Kasalukuyang pine-play ang ad...Tpin1_connecting_skip_button_welcome_cancel_button_Ilagay ang 4 na digit na PIN na ipinapakita sa home screen ng isang kalapit na device. Mahahanap din ng may-ari ng device ang PIN sa Chromecast app.XLaktawan_Walang napiling media_1I-tap para i-activate ang pinalawak na controller_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button_Pagpipilian ng Track_Pakinggan ang PIN_Toggle ng pag-play at pag-pause_(device status)UTitle_(multizone device name)_Kumonekta sa kalapit na device_welcome_skip_buttonX(artist)]skip_ad_labelXTapos na_connecting_cancel_buttonYI-cast sa_ZPara kumonekta, pansamantalang gagamitin ang iyong mikropono para pakinggan ang isang PIN.   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£­µÄÙæîù6LQ`ciw}°µ¾Ðóø)ÀÉá		*	/	>	R	f	}		³	Å	Ë	å


%
3
<
W
a             v              
¾


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/fil.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudio_I-rewind nang 30 segundoYMatuto pa_1Puwede mong laktawan ang ad pagkalipas ng %ld ...XTrack %d^Kumokonekta saVI-play_LTiyaking nakakonekta sa iisang Wi-Fi network ang iyong %@ at ang cast device_%Pumili ng track ng mga closed caption_ Ihinto ang pag-playback ng mediaTWalaROK_Hindi nakakonekta ang Cast_CKailangan ng app na ito ng Access sa Lokal na Network para Mag-castU--:--WSusunod_Pumunta sa Mga SettingYI-cast sa_ I-toggle ang status na naka-mute_Mga Closed CaptionVtablet[Mga SettingXNakaraan_Tingnan ang iyong Wi-Fi network_Nakakonekta ang Cast_Toggle ng pag-play at pag-pauseWI-pause\Mga Subtitleo
 P a r a   k u m o n e k t a   s a   i y o n g   m g a   d e v i c e ,   k a i l a n g a n   n g   a p p   n a   i t o   n g   a c c e s s   s a   W i - F i   n e t w o r k   m o . 
 
 P a r a   M a g - c a s t ,   p i l i i n   a n g    O K    k a p a g   h i n i l i n g   n g   a p p   n a   k u m o n e k t a   s a   i y o n g   l o k a l   n a   n e t w o r k .   P u w e d e   m o   r i n   i t o n g   p a y a g a n   s a   i b a n g   p a g k a k a t a o n   s a   i O S   S e t t i n g s   p a r a   s a   a p p   n a   i t o ._%d (na) porsyento_Walang available na device_Nagka-cast sa %@_ÄPara kumonekta sa iyong mga device, kailangan ng app na ito ng access sa Wi-Fi network mo.

Para Mag-cast, pumunta sa iyong Mga Setting at i-on ang "Access sa Lokal na Network" para sa app na ito._rPumunta sa Mga Setting sa teleponong ito at tingnan kung naka-on ang Access sa Lokal na Network para sa app na ito_Kumokonekta ang CastXtelepono_$Nagsimula na ang session ng pag-cast_/Tiyaking naka-on ang Access sa Lokal na NetworkTLIVE_"Natapos na ang session ng pag-cast_I-forward nang 30 segundo  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-djÃÌÛâ1Y|¡çíõ;PWcl¥ÇÏÜ
ú+>zÁóø
             U              
9


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/fr.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTOFUVWIXTYZ[\]^_Q`abcIdefghiR`jEklmnUD^TJoCpqJrT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKVVolumeYConnecteri ( L i b e l l é )^Saisir le code_Diffusion dans le salon[Sous-titresW(titre)\(Sous-titre)oJ A p p u y e z   p o u r   c a s t e r   d e s   c o n t e n u s   m u l t i m é d i a s   s u r   v o t r e   T V   e t   v o s   e n c e i n t e so A r r ê t e r   l a   d i f f u s i o nTpin0j C o n n e x i o n &WAnnonceUAudio_(nom de l'appareil)VFermerWAnnulerW(Titre)_pin_cancel_buttonTpin2_Passer l'annonceo L e c t u r e   d e   l ' a n n o n c e &Tpin1_connecting_skip_button_welcome_cancel_buttonoº S a i s i s s e z   l e   c o d e   à   q u a t r e   c h i f f r e s   a f f i c h é   s u r   l ' é c r a n   d ' a c c u e i l   d ' u n   a p p a r e i l   à   p r o x i m i t é .   L e   p r o p r i é t a i r e   d e   l ' a p p a r e i l   p e u t   é g a l e m e n t   r e t r o u v e r   l e   c o d e   d a n s   l ' a p p l i c a t i o n   C h r o m e c a s t .VPassero$ A u c u n   c o n t e n u   m u l t i m é d i a   s é l e c t i o n n éo A p p u y e z   p o u r   d é v e l o p p e r   l e   m e n u_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono S é l e c t i o n   d e   p i s t eo É c o u t e r   l e   c o d e]Lecture/Pauseo ( é t a t   d e   l ' a p p a r e i l )UTitre_(nom de l'appareil multizone)o& S e   c o n n e c t e r   à   u n   a p p a r e i l   à   p r o x i m i t é_welcome_skip_buttonY(artiste)]skip_ad_label_connecting_cancel_buttonZCaster suro^ A f i n   d ' é t a b l i r   l a   c o n n e x i o n ,   v o t r e   m i c r o   s e r a   u t i l i s é   t e m p o r a i r e m e n t   p o u r   d é t e c t e r   v o t r e   c o d e .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£­ÀÏéõý
¡ÌÑæîô
!5:Mz°
'
.
y
º
Ï
Ô
ã
÷2Sa²!/JU             s              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/fr.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudioo! R e v e n i r   e n   a r r i è r e   d e   3 0   s e c o n d e s^En savoir pluso' V o u s   p o u r r e z   p a s s e r   l ' a n n o n c e   d a n s   % l d &h P i s t e   % dk C o n n e x i o n   àTLireoP A s s u r e z - v o u s   q u e   v o t r e   % @   e t   l ' a p p a r e i l   C a s t   s o n t   c o n n e c t é s   a u   m ê m e   r é s e a u   W i - F io% S é l e c t i o n n e r   u n e   p i s t e   d e   s o u s - t i t r e so( A r r ê t e r   l a   l e c t u r e   d u   c o n t e n u   m u l t i m é d i a_Pas de sous-titresROKo I c ô n e   C a s t   n o n   c o n n e c t é eoI C e t t e   a p p l i c a t i o n   d o i t   a v o i r   a c c è s   a u   r é s e a u   l o c a l   p o u r   c a s t e r   d u   c o n t e n uU--:--WSuivanto A c c é d e r   a u x   p a r a m è t r e sZCaster suro A c t i v e r / D é s a c t i v e r   l e   s o n[Sous-titresXtablettej P a r a m è t r e si P r é c é d e n to V é r i f i e z   l e   r é s e a u   W i - F io I c ô n e   C a s t   c o n n e c t é e]Lecture/PauseUPauseo: P o u r   s e   c o n n e c t e r   à   v o s   a p p a r e i l s ,   c e t t e   a p p l i c a t i o n   d o i t   p o u v o i r   a c c é d e r   à   v o t r e   r é s e a u   W i - F i . 
 
 P o u r   c a s t e r   d u   c o n t e n u ,   s é l e c t i o n n e z   " O K "   l o r s q u e   l ' a p p l i c a t i o n   d e m a n d e   à   s e   c o n n e c t e r   à   v o t r e   r é s e a u   l o c a l .   V o u s   p o u v e z   é g a l e m e n t   a c c o r d e r   c e t t e   a u t o r i s a t i o n   p a r   l a   s u i t e   d a n s   l e s   r é g l a g e s   i O S   p o u r   c e t t e   a p p l i c a t i o n .l % d   p o u r   c e n t_Aucun appareil disponible_Diffusion sur %@oÆ P o u r   s e   c o n n e c t e r   à   v o s   a p p a r e i l s ,   c e t t e   a p p l i c a t i o n   d o i t   p o u v o i r   a c c é d e r   à   v o t r e   r é s e a u   W i - F i . 
 
 P o u r   c a s t e r   d u   c o n t e n u ,   a c c é d e z   a u x   p a r a m è t r e s   e t   a c t i v e z   " A c c è s   a u   r é s e a u   l o c a l "   p o u r   l ' a p p l i c a t i o n .oj A c c é d e z   a u x   p a r a m è t r e s   d e   c e   t é l é p h o n e   e t   v é r i f i e z   q u e   l ' a c c è s   a u   r é s e a u   l o c a l   e s t   a c t i v é   p o u r   c e t t e   a p p l io  I c ô n e   C a s t   e n   c o u r s   d e   c o n n e x i o ni t é l é p h o n eo" L a   s e s s i o n   d e   d i f f u s i o n   a   c o m m e n c éo3 A s s u r e z - v o u s   q u e   l ' a c c è s   a u   r é s e a u   l o c a l   e s t   a c t i v éYEN DIRECTo$ L a   s e s s i o n   d e   d i f f u s i o n   e s t   t e r m i n é eo A v a n c e r   d e   3 0   s e c o n d e s  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dj¯¾ 7<ß,Ê	_	e	m		§	Ü	è	ñ


L
w




8
KÚ±ôN·Á             T              ;


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/hi.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlef	 	@	  	9	He		5	>		<k		(	G		M	  		0	G	W(Label)i	*	?	(  	!	>	2	G	o#	2	?	5	?		  	0	B	.  	.	G	  		>	8	M	  		?	/	>  		>  	0	9	>  	9	Hg	8	,		>			2W(title)Z(Subtitle)o7	.	@	!	?	/	>  		K  		*	(	G  		@	5	@  		0  	8	M	*	@		0  	*	0  		>	8	M	  		0	(	G  		G  	2	?	  		A		o		>	8	M	  		0	(	>  	,		&  		0	G	d	*	?	( 0o		(	G		M	  	9	K  	0	9	>  	9	H . . .h	5	?		M		>	*	(e		!	?	/	K](device name)h	,		&  		0	G	i	0	&	M	&  		0	G	o		(	G		M	  	9	K  	0	9	>  	9	HW(Title)_pin_cancel_buttond	*	?	( 2o	5	?		M		>	*	(  		K	!	<	G	o	5	?		M		>	*	(  		2  	0	9	>  	9	H . . .d	*	?	( 1_connecting_skip_button_welcome_cancel_buttono		8 -	*	>	8  		G  		?	8	@  	!	?	5	>		8  		@  	9	K	.  	8	M		M	0	@	(  	*	0  	&	?		>	/	>  		/	>  		>	0  				K	  	5	>	2	>  	*	?	(  	!	>	2	G	 .  	!	?	5	>		8  		G  	.	>	2	?	  		K   C h r o m e c a s t  		*	M	2	?		G	6	(  	.	G	  	-	@  	*	?	(  	.	?	2  	8		$	>  	9	H .h		-	@  	(	9	@	o		K	  	.	@	!	?	/	>  	(	9	@	  		A	(	>  		/	>o0	,	!	<	>  		?	/	>  		/	>  	(	?	/		$	M	0	  		>	2	B  		0	(	G  		G  	2	?	  		H	*  		0	G	_pin_connect_buttond	*	?	( 3^skip_ad_button_pin_listen_button_welcome_ok_buttono		M	0	H	  		G  	5	?		2	M	*l	*	?	(  		K  	8	A	(	G	o '		2	>		 '  	/	>   '	0	K		G	 '  		I		2  		0	G	_(device status)UTitle_(multizone device name)o		8 -	*	>	8  		G  	!	?	5	>		8  	8	G  		(	G		M	  		0	G	_welcome_skip_buttonX(artist)]skip_ad_labelf	9	K  		/	>_connecting_cancel_buttono		8  	*	0  		>	8	M	  		0	G	o\		(	G		M	  		0	(	G  		G  	2	?	 ,  		A	  	8	.	/  	$	  		*		>  	.	>			M	0	K	^	K	(  		8	M	$	G	.	>	2  		?	/	>  		>			> ,  	$	>		?  	*	?	(  		K  	8	A	(	>  		>  	8		G .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¦±ÈÐã,;CN¿èñ+6DUh§°Ñþ		 	8
S
d

ú';OpÄÖÜö7MVdq¯             u              
j


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/hi.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe		!	?	/	Ko 3 0  	8	G			!  	*	@		G  	2	G  		>		m		M	<	/	>	&	>  		>	(	G	o+		*   % l d  	8	G			!  	.	G	  	5	?		M		>	*	(  		K	!	<  	8		$	G  	9	H	   . . .h		M	0	H	   % do		8	8	G  		(	G		M	  	9	K  	0	9	>  	9	He		2	>		oi	*		M		>  		0	G	  		?  		*		>   % @  			8	@  	5	>	 -	+	<	>	  	(	G		5	0	M	  	8	G  		(	G		M	  		?	/	>  		/	>  	9	K  		?	8	8	G  		>	8	M	  	!	?	5	>		8  		K  		(	G		M	  		?	/	>  		/	>  	9	Ho		K	  	8	,		>			2  		M	0	H	  		A	(	G	o	.	@	!	?	/	>  	*	M	2	G	,	H	  	0	K		G	h		A	  	(	9	@	f	 	@	  	9	Ho$		>	8	M	  	,		(  		K  		(	G		M	  	(	9	@	  		?	/	>  		/	>  	9	HoX		!	?	/	K  	/	>  	5	@	!	?	/	K  		>	8	M	  		0	(	G  		G  	2	?	 ,  		8  		*	M	2	?		G	6	(  		K  	2	K		2  	(	G		5	0	M	  		G  			M	8	G	8  		@  		<	0	B	0	$  	9	K		@U--:--d			2	>o '	8	G		?		 '  	*	0  		>		o		8  	*	0  		>	8	M	  		0	G	o  '	.	M	/	B	  		0	G	 '  		@  	8	M	%	?	$	?  		I		2  		0	G	g	8	,		>			2f		H	,	2	G	f	8	G		?		e	*	?		2	>o"		*	(	G  	5	>	 -	+	<	>	  	(	G		5	0	M	  		@  		>		  		0	G	o		>	8	M	  	,		(  		K  		(	G		M	  		?	/	>  		/	>  	9	Ho '		2	>		 '  	/	>   '	0	K		G	 '  		I		2  		0	G	e	0	K		G	o9		*		G  	!	?	5	>		8  	8	G  		(	G		M	  		0	(	G  		G  	2	?	 ,  		8  		*	M	2	?		G	6	(  		K  		*		>  	5	>	 -	+	<	>	  	(	G		5	0	M	  			M	8	G	8  		0	(	>  	9	K		> . 
 
		!	?	/	K  	/	>  	5	@	!	?	/	K  		>	8	M	  		0	(	G  		G  	2	?	 ,  		,  		*	M	2	?		G	6	(  		*		G  	2	K		2  	(	G		5	0	M	  	8	G  		(	G		M	  		0	(	G  		@  		(	A	.	$	?  	.	>			G ,  	$	,   "	 	@	  	9	H "  		A	(	G	 .  		*  	,	>	&  	.	G	  	-	@   i O S  		@  	8	G		?		  	.	G	  		>		0 ,  		8  		*	M	2	?		G	6	(  		K  	2	K		2  	(	G		5	0	M	  	8	G  		(	G		M	  		0	(	G  		@  		(	A	.	$	?  	&	G  	8		$	G  	9	H	 .j % d  	*	M	0	$	?	6	$o		K	  	-	@  	!	?	5	>		8  	.	L		B	&  	(	9	@	  	9	Ho % @  	*	0  		>	8	M	  		?	/	>  		>  	0	9	>  	9	Ho×		*		G  	!	?	5	>		8  	8	G  		(	G		M	  		0	(	G  		G  	2	?	 ,  		8  		*	M	2	?		G	6	(  		K  		*		>  	5	>	 -	+	<	>	  	(	G		5	0	M	  			M	8	G	8  		0	(	>  	9	K		> . 
 
		!	?	/	K  	/	>  	5	@	!	?	/	K  		>	8	M	  		0	(	G  		G  	2	?	 ,  		*	(	G  	!	?	5	>		8  		@  	8	G		?		  	*	0  		>		  		0  		8  		*	M	2	?		G	6	(  		G  	2	?	   "	2	K		2  	(	G		5	0	M	  		>  			M	8	G	8 "  		>	2	B  		0	G	 .oc		8  	+	<	K	(  		@   '	8	G		?		 '  	.	G	  		>		0 ,  	&	G		G	  		?  		8  		*	M	2	?		G	6	(  		G  	2	?	   '	2	K		2  	(	G		5	0	M	 '  		>  			M	8	G	8  		>	2	B  	9	H  	/	>  	(	9	@	o"		>	8	M	  	,		(  		K  		(	G		M	  		?	/	>  		>  	0	9	>  	9	Hd	+	<	K	(o		>	8	M	  	8	$	M	0  	6	A	0	B  	9	K  		/	>o.	*		M		>  		0	G	  		?   '	2	K		2  	(	G		5	0	M	 '  		>  			M	8	G	8  		>	2	B  	9	Hd	2	>		5o		>	8	M	  	8	$	M	0  		$	M	.  	9	K  		/	>o 3 0  	8	G			!  			G  	,	"	<	>		  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do·!NY._¨ó	¦	¬	µ	Ø	û
>
M
Z
g
r
¹
ú5@
¶
Ë;ìµü4Ë             T              ô


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/hr.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleVU reduh G l a s n o af P o v e~ iW(Label)[Unesite PIN_Emitiranje u dnevnoj sobiWTitloviW(title)Z(Subtitle)o> D o d i r n i t e   d a   b i s t e   e m i t i r a l i   m e d i j e   n a   t e l e v i z o r u   i   z v u
 n i c i m a_Zaustavi emitiranjeTpin0^Povezivanje...UOglasTZvuk](device name)WZatvoriXOdustani[PovezivanjeW(Title)_pin_cancel_buttonTpin2o P r e s k o
 i t e   o g l a s_Oglas u tijeku...Tpin1_connecting_skip_button_welcome_cancel_buttono U n e s i t e  
 e t v e r o z n a m e n k a s t i   P I N   p r i k a z a n   n a   p o
 e t n o m   z a s l o n u   u r e a j a   u   b l i z i n i .   V l a s n i k   u r e a j a   m o~ e   p r o n a i   P I N   i   u   a p l i k a c i j i   C h r o m e c a s t .h P r e s k o
 i_Nije odabran nijedan medijo1 D o d i r n i t e   d a   b i s t e   a k t i v i r a l i   p r oa i r e n i   u p r a v l j a
_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button]Odabir zapisaj S l ua a j   P I N_!Izmjena reprodukcije i pauziranja_(device status)UTitle_(multizone device name)o  P o v e z i v a n j e   s   u r e a j e m   u   b l i z i n i_welcome_skip_buttonX(artist)]skip_ad_labelVGotovo_connecting_cancel_buttono E m i t i r a n j e   n a   u r e a j uo7 D a   b i s t e   s e   p o v e z a l i ,   m i k r o f o n   e   n a k r a t k o   s l ua a t i   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n ±¾ÆÒîöþ	£²¸½ËÓÜèð	,@E^v			»
 
5
:
I
]
q


¸
Ê
Ð
ê-CLZa|©             u              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/hr.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELTZvuk_30 sekundi unatragm S a z n a j t e   v ia eo! O g l a s   m o~ e t e   p r e s k o
 i t i   z a   % l d . . .XZapis %d^Povezivanje saWPokrenioE P r o v j e r i t e   j e s u   l i   v aa   % @   i   u r e a j   z a   e m i t i r a n j e   n a   i s t o j   W i - F i   m r e~ i_Odabir zapisa titlova_!Zaustavljanje reprodukcije medijae N ia t aVU redu_Gumb za emitiranje nije povezano@ O v o j   a p l i k a c i j i   p o t r e b a n   j e   p r i s t u p   l o k a l n o j   m r e~ i   z a   e m i t i r a n j eU--:--UDalje_Idite na Postavkeo E m i t i r a n j e   n a   u r e a j uo  U k l j u
 i v a n j e / i s k l j u
 i v a n j e   z v u k aWTitloviVtabletXPostavkeYPrethodnoo P r o v j e r i t e   W i - F i   m r e~ u_Gumb za emitiranje je povezan_!Izmjena reprodukcije i pauziranjaXPauzirajo÷ D a   b i s t e   p o v e z a l i   s v o j e   u r e a j e ,   o v o j   a p l i k a c i j i   p o t r e b a n   j e   p r i s t u p   v aa o j   W i - F i   m r e~ i . 
 
 Z a   e m i t i r a n j e   o d a b e r i t e   " U   r e d u "   k a d   a p l i k a c i j a   z a t r a~ i   p o v e z i v a n j e   s   v aa o m   l o k a l n o m   m r e~ o m .   T o   m o~ e t e   d o p u s t i t i   i   k a s n i j e   u   i O S   p o s t a v k a m a   z a   o v u   a p l i k a c i j u .X%d postoo N e m a   d o s t u p n i h   u r e a j ao E m i t i r a n j e   n a   u r e a j   % @o° D a   b i s t e   p o v e z a l i   s v o j e   u r e a j e ,   o v o j   a p l i k a c i j i   p o t r e b a n   j e   p r i s t u p   v aa o j   W i - F i   m r e~ i . 
 
 Z a   e m i t i r a n j e   i d i t e   n a   P o s t a v k e   i   u k l j u
 i t e   " P r i s t u p   l o k a l n o j   m r e~ i "   z a   o v u   a p l i k a c i j u .o` U   p o s t a v k a m a   n a   o v o m   t e l e f o n u   p r o v j e r i t e   j e   l i   p r i s t u p   l o k a l n o j   m r e~ i   u k l j u
 e n   z a   o v u   a p l i k a c i j u_Gumb za emitiranje se povezujeWtelefono S e s i j a   e m i t i r a n j a   z a p o
 e l ao0 P r o v j e r i t e   j e   l i   u k l j u
 e n   p r i s t u p   l o k a l n o j   m r e~ ie U} I V Oo S e s i j a   e m i t i r a n j a   z a v ra i l a_30 sekundi naprijed  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-di~Þçöþ£ÇÒÙû~Ë				&	0	_		£	¬¦Õ
i,MUïú1             T              G


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/hu.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTOFUVWXYTZ[\]^_`QabcdIefghijRakElmnoUD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKg H a n g e rQk C s a t l a k o z á sW(Label)o A d j a   m e g   a   P I N - k ó d o to Á t k ü l d é s   a   n a p p a l i b aYFeliratokW(title)Z(Subtitle)oD É r i n t s e   m e g   m é d i a t a r t a l o m   t é v é r e   v a g y   h a n g s z ó r ó r a   v a l ó   á t k ü l d é s é h e z .o Á t k ü l d é s   l e á l l í t á s aTpin0l C s a t l a k o z á s &h H i r d e t é sg H a n g s á v](device name)g B e z á r á se M é g s eW(Title)_pin_cancel_buttonTpin2WFelirato H i r d e t é s   á t u g r á s ao  H i r d e t é s   l e j á t s z á s a   f o l y a m a t b a n &Tpin1_connecting_skip_button_welcome_cancel_buttono A d j a   m e g   a   k ö z e l i   e s z k ö z   k e z dQ k é p e r n yQ j é n   l á t h a t ó   n é g y j e g yq   P I N - k ó d o t .   A z   e s z k ö z t u l a j d o n o s   a   C h r o m e c a s t   a l k a l m a z á s b a n   i s   m e g t a l á l h a t j a   a   P I N - k ó d o t .h K i h a g y á so N i n c s   k i v á l a s z t v a   m é d i a t a r t a l o mo/ K o p p i n t s o n   r á   a   k i b o n t o t t   v e z é r lQ   a k t i v á l á s á h o z_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono H a n g - / f e l i r a t s á v   k i v á l a s z t á s ao P I N - k ó d   m e g h a l l g a t á s ao L e j á t s z á s / s z ü n e t e l t e t é s_(device status)UTitle_(multizone device name)o C s a t l a k o z á s   k ö z e l i   e s z k ö z h ö z_welcome_skip_buttonX(artist)]skip_ad_labeld K é s z_connecting_cancel_buttono Á t k ü l d é s   a   k ö v e t k e zQ r e :oU A   k a p c s o l ó d á s h o z   a   m i k r o f o n j á t   á t m e n e t i l e g   a   P I N - k ó d   m e g h a l l g a t á s á r a   h a s z n á l j u k   m a j d .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n«ÂÊõ *2=Èñö /=LW_sx¥èí		
G
X

ú#7KµæøþSir¤Õ             u              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/hu.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@<ABCDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELg H a n g s á vo V i s s z a   3 0   m á s o d p e r c e to T o v á b b i   i n f o r m á c i óo- A   h i r d e t é s t   % l d   m á s o d p e r c   m ú l v a   u g o r h a t j a   á t &k % d .   h a n g s á vk K a p c s o l ó d á si L e j á t s z á soS G yQ zQ d j ö n   m e g   a r r ó l ,   h o g y   a ( z )   % @   é s   a   C a s t - e s z k ö z   u g y a n a z o n   a   W i - F i - h á l ó z a t o n   v a n .o F e l i r a t s á v   k i v á l a s z t á s ao M é d i a l e j á t s z á s   l e á l l í t á s aUNincsROK_Cast nincs csatlakoztatvaoD A z   á t k ü l d é s h e z   a z   a l k a l m a z á s n a k   h o z z á   k e l l   f é r n i e   a   h e l y i   h á l ó z a t h o zU--:--f T o v á b bk B e á l l í t á s o ko Á t k ü l d é s   a   k ö v e t k e zQ r e :o N é m í t á s   b e -   é s   k i k a p c s o l á s aYFeliratokh t á b l a g é pe E lQ zQn % d .   f e l i r a t s á vo E l l e nQ r i z z e   a   W i - F i - h á l ó z a t o t_Cast csatlakoztatvao L e j á t s z á s / s z ü n e t e l t e t é sm S z ü n e t e l t e t é so A h h o z ,   h o g y   a z   a l k a l m a z á s   c s a t l a k o z n i   t u d j o n   a z   e s z k ö z e i h e z ,   h o z z á   k e l l   f é r n i e   a z   Ö n   W i - F i - h á l ó z a t á h o z . 
 
 A z   á t k ü l d é s h e z   v á l a s s z a   a z    O K    l e h e tQ s é g e t ,   a m i k o r   a z   a l k a l m a z á s   c s a t l a k o z n i   s z e r e t n e   a   h e l y i   h á l ó z a t h o z .   E z t   k é sQ b b   i s   e n g e d é l y e z h e t i   a z   a l k a l m a z á s n á l   a z   i O S   b e á l l í t á s a i b a n .k % d   s z á z a l é ko N i n c s   r e n d e l k e z é s r e   á l l ó   e s z k ö zo Á t k ü l d é s   i d e :   % @oÝ A h h o z ,   h o g y   a z   a l k a l m a z á s   c s a t l a k o z n i   t u d j o n   a z   e s z k ö z e i h e z ,   h o z z á   k e l l   f é r n i e   a z   Ö n   W i - F i - h á l ó z a t á h o z . 
 
 A z   á t k ü l d é s h e z   l é p j e n   a   B e á l l í t á s o k b a ,   m a j d   k a p c s o l j a   b e   a z   a l k a l m a z á s n á l   a    H o z z á f é r é s   h e l y i   h á l ó z a t o n    b e á l l í t á s t .o L é p j e n   a   t e l e f o n   B e á l l í t á s o k   p o n t j á b a ,   é s   e l l e nQ r i z z e ,   h o g y   b e   v a n - e   k a p c s o l v a   a   h e l y i   h á l ó z a t h o z   v a l ó   h o z z á f é r é s   e n n é l   a z   a l k a l m a z á s n á lo C a s t   c s a t l a k o z á s a   f o l y a m a t b a nWtelefono Á t k ü l d é s i   m u n k a m e n e t   m e g k e z d v eoM G yQ zQ d j ö n   m e g   a r r ó l ,   h o g y   a   h e l y i   h á l ó z a t h o z   v a l ó   h o z z á f é r é s   b e   v a n   k a p c s o l v ac É LPo Á t k ü l d é s i   m u n k a m e n e t   b e f e j e z v eo E lQ r e   3 0   m á s o d p e r c e t  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-ds Ç$;Re?tz}	$	*	7	N		¸	Â	Ó	Þ	û
8
N

Îå
&
IV^:A             T              «


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/hy.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpSqrJsT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitled5ra~dAauvfDkavalW(Label)oDxace   P I N  oxdho@e|aqaoxt   «@uxa}evuao »h5viaceW(title)Z(Subtitle)oI@ze `  tedka  auleh  qe  pe|x}axukv    baqamx}vekv  xmavelx  patao4adaevel  pe|aqaoxthTpin0hDkaxt &f3x~afdf1xdkx](device name)eSaoelhIeraoelgDkaxtW(Title)_pin_cancel_buttonTpin2o2a  ixrvel  cx~afdho3x~afdk  xadxt . . .Tpin1_connecting_skip_button_welcome_cancel_buttonoDxace  txaoa  }ak  pktvaoav  goavkv  xad~xr  a|avkw   P I N  oxdh :  Mak  }eaoavaeh   P I N  oxdh  oaxr  g  cvel  va   C h r o m e c a s t  pa~el~anxt :j2a  ixrveloDedka  aul  yk  hv~elo7@ze `  hvdlauv~an  oa|a~atav  ~apavaov  aok~avelx  pata_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono?aatav  hvxiuxvo@vyevel   P I N  oxdho «F~acaoel /dadaevel »  oxsao_(device status)UTitle_(multizone device name)oDkae  txaoa  }ak_welcome_skip_buttonX(artist)]skip_ad_label_connecting_cancel_buttonl8ve  }aho\Dkavalx  pata  jatavaoa~xaze}  ocacxn~k  qe  }ak  mx}axrh]   P I N  oxdh  pvyevelx  vzaaox~ :   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¢«¸Àé 19DÙ
 -:HSds{»èí		
7
L
y
ê
ÿ';fÆØÞø!7@Ni             t              
=


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/hy.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELf1xdkxo 3 0  ~auouav  pe  avvelm;taval  a~elkvo"3x~afdh  oaxr  e  ba  ixrvel   % l dk &k?aaxt   % do@a}avelk  }aejF~acaoxto?@atxf~e ,  x  qe   % @h     G o o g l e   C a s t  }ah  vxuv   W i - F i  avxt  evo8ve  eviacek  qauvxrkvo4adaevel  v~acaoxthgHy  teohd5ra~o G o o g l e   C a s t -h  tka~an  ygoI@e|aqaoelx  pata  au}  pa~el~ankv  avpajew  g  lxoal  avk  pa}avelkxiuxvU--:--d1|a{o1vvel  oaca~xxtvel8ve  }ahoDkavel /av{ael  qauvhh5viacegzlavwen?aca~xxtvec@eoMxce  qe   W i - F i  avho G o o g l e   C a s t -h  tka~an  go «F~acaoel /dadaevel »  oxsaoe4adaoèMaekv  tkavalx  pata  au}  pa~el~ankv  ze  g  pa}avelk  lkvk  qe   W i - F i  avh 
 
@e|aqaoelx  pata  hve   «5ra~ » ,  eb  pa~el~anh  lxoal  avkv  tkavalx  ixul~xiuxv  mvdk  4x  oaxr  e  a~elk  xw  ixulael  da   i O S -k  oaca~xxtvextT%d %o@a}avelk  }ae  yoavo@e|aqaoxt   « % @ »  }akvoÏMaekv  tkavalx  pata  au}  pa~el~ankv  avpajew  g  qe   W i - F i  avv  cacxnelx  ixul~xiuxv 
 
@e|aqaoelx  pata  ave  oaca~xxtve    tkae   «<xoal  avk  pa}avelkxiuxv »  zaatev  au}  pa~el~ank  pataoq1u}  pe|amx}xt  ave  oaca~xxtve    }xce]  adux  lxoal  avk  pa}avelkxiuxvh  tka~an  g  au}  pa~el~ank  patao G o o g l e   C a s t -h  tkavxt  g &gpe|amx}o@e|aqaoxth  }o}~eo3@atxf~e ,  x  lxoal  avk  pa}avelkxiuxvh  tka~an  gjHRB;B  595Po@e|aqaoxtv  a~a~eo 3 0  ~auouav  a|a{  al  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dq »:OÐ6EN			%	R	k		©	¸	Õ	Ü

>
y
W\¸Y>q©'T             T              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/id.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleSOkeVVolumeYHubungkanW(Label)\Masukkan PIN_Mentransmisi ke Ruang TamuXSubtitelW(title)Z(Subtitle)_1Sentuh untuk mentransmisi media ke TV dan Speaker_Hentikan transmisiTpin0_Menghubungkan...UIklanUAudio](device name)UTutupUBatal]MenghubungkanW(Title)_pin_cancel_buttonTpin2\Lewati Iklan_Iklan sedang ditayangkan...Tpin1_connecting_skip_button_welcome_cancel_button_Masukkan PIN 4 digit yang ditampilkan di layar utama perangkat terdekat. Pemilik perangkat juga dapat menemukan PIN di aplikasi Chromecast.VLewati_Tidak ada media yang dipilih_2Ketuk untuk mengaktifkan pengontrol yang diperluas_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button^Pemilihan Trek]Dengarkan PIN_Tombol putar/jeda_(device status)UTitle_(multizone device name)_Hubungkan ke perangkat terdekat_welcome_skip_buttonX(artist)]skip_ad_labelWSelesai_connecting_cancel_button_Transmisikan ke_SUntuk menghubungkan, mikrofon Anda akan digunakan sementara untuk mendengarkan PIN.   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¤®¶Ãàéñü0EJ]ciw}­²¿Ýâû¡¨Çü			%	9	M	\	j	~			°	Ò	è	ñ	ÿ

"
4             u              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/id.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFG?HIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudio_Putar ulang 30 detik_Pelajari lebih lanjut_'Anda dapat melewati iklan dalam %ld ...WLagu %d_Menghubungkan keUPutar_HPastikan %@ dan perangkat transmisi berada pada jaringan Wi-Fi yang sama_Pilih teks subtitel_Hentikan pemutaran mediaYTidak adaSOke_Cast tidak terhubung_FAplikasi ini memerlukan Akses Jaringan Lokal untuk melakukan TransmisiU--:--ZBerikutnya\Buka Setelan_Transmisikan ke_Alihkan status penonaktifanXSubtitelVtabletWSetelanZSebelumnyaWTeks %d_Periksa jaringan Wi-Fi Anda^Cast terhubung_Tombol putar/jedaTJedao  U n t u k   m e n g h u b u n g k a n   k e   p e r a n g k a t ,   a p l i k a s i   i n i   m e m e r l u k a n   a k s e s   k e   j a r i n g a n   W i - F i   A n d a . 
 
 U n t u k   m e l a k u k a n   T r a n s m i s i ,   p i l i h    O k e    s a a t   a p l i k a s i   m e m i n t a   t e r h u b u n g   k e   j a r i n g a n   l o k a l   A n d a .   A n d a   j u g a   d a p a t   m e n g i z i n k a n n y a   n a n t i   d i   i O S   S e t t i n g s   u n t u k   a p l i k a s i   i n i .Y%d persen_Perangkat tidak tersedia_Mentransmisi ke %@o¸ U n t u k   m e n g h u b u n g k a n   k e   p e r a n g k a t ,   a p l i k a s i   i n i   m e m e r l u k a n   a k s e s   k e   j a r i n g a n   W i - F i   A n d a . 
 
 U n t u k   m e l a k u k a n   T r a n s m i s i ,   b u k a   S e t e l a n   d a n   a k t i f k a n    A k s e s   J a r i n g a n   L o k a l    u n t u k   a p l i k a s i   i n i ._ZBuka Setelan di ponsel ini dan pastikan Akses Jaringan Lokal diaktifkan untuk aplikasi ini_Cast sedang dihubungkanVponsel_Sesi transmisi dimulai_#Pastikan Akses Jaringan Lokal aktifTLIVE_Sesi transmisi berakhir]Maju 30 detik  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-djÃËÞä/E`jnÎÔßìþ%,4?Get


¶
Ë>µ¼Õû
 
             U              
(


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/is.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpSqrJsT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlef Í   l a g il H l j ó ð s t y r k u rVTengjaW(Merki)o S l á ð u   i n n   P I N - n ú m e ro S e n d i r   ú t   í   s t o f ui S k j á t e x t iW(title)Z(Subtitle)o= S n e r t u   t i l   a ð   s e n d a   ú t   e f n i   í   s j ó n v a r p i n u   þ í n u   o g   h á t ö l u r u n u mo S t ö ð v a   ú t s e n d i n g uTpin0ZTengist...i A u g l ý s i n ge H l j ó ð](device name)TLokai H æ t t a   v i ðWTengistW(Title)o p i n _ h æ t t a _ v i ð _ h n a p p u rTpin2o S l e p p a   a u g l ý s i n g uo A u g l ý s i n g   í   g a n g i . . .Tpin1_tengist_sleppa_hnappuro v e l k o m i n _ h æ t t a _ v i ð _ h n a p p u ro S l á ð u   i n n   f j ö g u r r a   t a l n a   P I N - n ú m e r i ð   s e m   b i r t i s t   á   h e i m a s k j á   n á l æ g s   t æ k i s .   E i g a n d i   t æ k i s i n s   g e t u r   e i n n i g   s é ð   P I N - n ú m e r i ð   í   C h r o m e c a s t   f o r r i t i n u .VSleppao E k k e r t   e f n i   v a l i ðo$ Ý t t u   t i l   a ð   v i r k j a   s t æ k k a ð a   s t ý r i n g u_pin_tengja_hnappurTpin3o s l e p p a _ a u g l ý s i n g u _ h n a p p u r_pin_hlusta_hnappuro v e l k o m i n _ í _ l a g i _ h n a p p u rn V a l   á   h l j ó ð r á so H l u s t a   e f t i r   P I N - n ú m e r io S p i l a   e ð a   g e r a   h l é_(device status)UTitle_(multizone device name)o T e n g j a s t   n á l æ g u   t æ k i_velkomin_sleppa_hnappurX(artist)o s l e p p a _ a u g l ý s i n g u _ m e r k io t e n g i s t _ h æ t t a _ v i ð _ h n a p p u rj S e n d a   ú t   íoU T i l   a ð   t e n g j a s t   v e r ð u r   h l j ó ð n e m i n n   n o t a ð u r   t í m a b u n d i ð   t i l   a ð   h l u s t a   e f t i r   P I N - n ú m e r i .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¦¿ÆÎ÷/7B¿äéô %8@HuzÊÏè	
B
I
n
¹
Î
ÓNkÃÕÛõ :Ct©¾             t              
k


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/is.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQR9STU_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe H l j ó ðo A f t u r   u m   3 0   s e k ú n d u ro F r e k a r i   u p p l ý s i n g a ro( Þ ú   g e t u r   s l e p p t   a u g l ý s i n g u   e f t i r   % l d   . . .k H l j ó ð r á s   % dWTengistUSpilaoC G a k k t u   ú r   s k u g g a   u m   a ð   % @   o g   ú t s e n d i n g a r t æ k i ð   s é u   á   s a m a   W i - F i   n e t io V e l d u   s k j á t e x t a r á so S t ö ð v a   s p i l u n   á   e f n iVEnginnf Í   l a g io Ú t s e n d i n g   e k k i   t e n g do8 Þ e t t a   f o r r i t   þ a r f   a ð g a n g   a ð   s t a ð a r n e t i n u   t i l   a ð   s e n d a   ú tU--:--e Á f r a m_Opna Stillingarj S e n d a   ú t   ío S l ö k k v a / k v e i k j a   á   h l j ó ð ij S k j á t e x t a rk s p j a l d t ö l v aZStillingarUFyrraf R á s   % do A t h u g a ð u   W i - F i   n e t i ð   þ i t to Ú t s e n d i n g   t e n g do S p i l a   e ð a   g e r a   h l éc H l éi S k j á t e x t ioî Þ e t t a   f o r r i t   þ a r f   a ð g a n g   a ð   W i - F i   n e t i n u   þ í n u   t i l   a ð   t e n g j a s t   t æ k j u n u m   þ í n u m . 
 
 T i l   a ð   s e n d a   ú t   s k a l t u   v e l j a    O K    þ e g a r   f o r r i t i ð   b i ð u r   u m   a ð   t e n g j a s t   s t a ð a r n e t i n u   þ í n u .   Þ ú   g e t u r   e i n n i g   l e y f t   þ e t t a   s í ð a r   í   i O S - s t i l l i n g u m   f y r i r   þ e t t a   f o r r i t .j % d   p r ó s e n to E n g i n   t æ k i   í   b o ð in S e n d i r   ú t   í   % @o² Þ e t t a   f o r r i t   þ a r f   a ð g a n g   a ð   W i - F i   n e t i n u   þ í n u   t i l   a ð   t e n g j a s t   t æ k j u n u m   þ í n u m . 
 
 T i l   a ð   s e n d a   ú t   s k a l t u   f a r a   í   s t i l l i n g a r n a r   o g   k v e i k j a   á    L o c a l   N e t w o r k   A c c e s s    f y r i r   þ e t t a   f o r r i t .of O p n a ð u   s t i l l i n g a r   í   þ e s s u m   s í m a   o g   a t h u g a ð u   h v o r t   k v e i k t   s é   á   a ð g a n g i   a ð   s t a ð a r n e t i   f y r i r   þ e t t a   f o r r i to Ú t s e n d i n g   t e n g i s td s í m io Ú t s e n d i n g a r l o t a   h a f i no8 G a k k t u   ú r   s k u g g a   u m   a ð   k v e i k t   s é   á   a ð g a n g i   a ð   s t a ð a r n e t ih Í   B E I N N Io Ú t s e n d i n g a r l o t u   l o k i ðo Á f r a m   u m   3 0   s e k ú n d u r  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-doÃ-5;Äë*UÈÎÙë	 	3	H	_	j	p	}	²	Ó	ú

ó-J
±¥®ÛN_             V              ·


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/it.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKVVolumeXConnettiW(Label)_Inserisci il PIN_Trasmissione a Salotto[SottotitoliW(title)Z(Subtitle)_HTocca per trasmettere contenuti multimediali alla TV e agli altoparlanti_Interrompi trasmissioneTpin0l C o n n e s s i o n e &XAnnuncioUAudio](device name)VChiudiWAnnulla_Connessione in corsoW(Title)_pin_cancel_buttonTpin2[Sottotitolo^Salta annuncioo A n n u n c i o   i n   c o r s o &Tpin1_connecting_skip_button_welcome_cancel_buttono´ I n s e r i s c i   i l   P I N   d i   q u a t t r o   c i f r e   v i s u a l i z z a t o   n e l l a   s c h e r m a t a   H o m e   d i   u n   d i s p o s i t i v o   n e l l e   v i c i n a n z e .   I l   p r o p r i e t a r i o   d e l   d i s p o s i t i v o   p u ò   t r o v a r e   i l   P I N   a n c h e   n e l l ' a p p   C h r o m e c a s t .VIgnora_)Nessun contenuto multimediale selezionato_(Tocca per attivare il controller espanso_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button_Selezione tracce^Ascolta il PIN_ Attiva/disattiva Riproduci/Pausa_(device status)UTitle_(multizone device name)_)Connettiti al dispositivo nelle vicinanze_welcome_skip_buttonX(artist)]skip_ad_labelTFine_connecting_cancel_button[Trasmetti aom P e r   p o t e r   s t a b i l i r e   l a   c o n n e s s i o n e ,   i l   m i c r o f o n o   v e r r à   m o m e n t a n e a m e n t e   u t i l i z z a t o   p e r   i l   r i l e v a m e n t o   d e l   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£¬´ÇàìôÿJdi¦®ÅÍáæò(-F^	É	Ð	ü
'
<
A
P
d
x


½
Ï
Õ
ï1:HMht             v              Q


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/it.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudio_Indietro di 30 secondi_Ulteriori informazionio  P u o i   s a l t a r e   l ' a n n u n c i o   t r a   % l d &ZTraccia %d]Connessione aYRiproduci_`Assicurati che il tuo %@ e il dispositivo di trasmissione siano collegati alla stessa rete Wi-Fi_/Seleziona una traccia di sottotitoli codificati_4Interrompi la riproduzione di contenuti multimedialiWNessunoROK_Trasmetti, non connesso_?Per trasmettere, questa app richiede l'accesso alla rete localeU--:--VAvanti_Vai a Impostazioni[Trasmetti a_Attiva/disattiva audio_Sottotitoli codificatiVtablet\ImpostazioniXIndietro_Controlla la rete Wi-Fi_Trasmetti, connesso_ Attiva/disattiva Riproduci/PausaUPausa[Sottotitoli_ýPer connettersi ai tuoi dispositivi, questa app richiede l'accesso alla tua rete Wi-Fi.

Per trasmettere, seleziona "OK" quando l'app richiede la connessione alla rete locale. Puoi anche autorizzare l'app in un secondo momento nelle impostazioni di iOS.S%d%_Nessun dispositivo disponibile_Trasmissione di contenuti a %@_ÁPer connettersi ai tuoi dispositivi, questa app richiede l'accesso alla tua rete Wi-Fi.

Per trasmettere, vai alle Impostazioni e attiva l'opzione "Accesso mediante rete locale" per questa app._uVai alle Impostazioni di questo telefono e controlla che l'opzione Accesso alla rete locale sia attiva per questa app_Trasmetti, connessione in corsoXtelefono_ Sessione di trasmissione avviata_<Assicurati che l'opzione Accesso alla rete locale sia attivaTLIVE_"Sessione di trasmissione terminata_Avanti 30 secondi  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-djßêøeÎÖÙó5;BWc|©²Ìâ			


<
]!»Äç&+P             U              d


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/iw.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleeÐÙéÕèiâÕæÞê  çÕÜe×ÙÑÕèW(Label)i ÔÖàê   P I No ÞÕäâÜ   C a s t  ÜáÜÕßgÛêÕÑÙÕêW(title)Z(Subtitle)o< æèÙÚ  ÜÒâê  ÛÓÙ  ÜÔäâÙÜ   C a s t  éÜ  ÞÓÙÔ  ÐÜ  ÔØÜÕÕÙÖÙÔ  ÕÐÜ  ÔèÞçÕÜÙÝo âæÙèÔ  éÜ  ÔäâÜê  Ô - C a s tTpin0oÞêÑæâê  Ôê×ÑèÕê . . .eÞÕÓâÔeÐÕÓÙÕ](device name)eáÒÙèÔeÑÙØÕÜnÞêÑæâê  Ôê×ÑèÕêW(Title)_pin_cancel_buttonTpin2fÛêÕÑÙêoÓÙÜÕÒ  âÜ  ÔÞÕÓâÔoÞêÑæâê  ÔæÒê  ÞÕÓâÔ . . .Tpin1_connecting_skip_button_welcome_cancel_buttono æèÙÚ  ÜÔÖÙß  Ðê  çÕÓ  ÔÐÙÞÕê  Ñß  ÐèÑâ  ÔáäèÕê  ÔÞÕæÒ  ÑÞáÚ  ÔÑÙê  éÜ  ÞÛéÙè  çèÕÑ .  ÑâÜ  ÔÞÛéÙè  ÙÛÕÜ  ÜÞæÕÐ  Ðê  çÕÓ  ÔÐÙÞÕê  ÒÝ  ÑÐäÜÙçæÙÔ  éÜ   C h r o m e c a s t .eÓÙÜÕÒmÜÐ  àÑ×èÔ  ÞÓÙÔoÙé  ÜÔçÙé  ÛÓÙ  ÜÔäâÙÜ  Ñçè  ÞÕè×Ñ_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonjÑ×Ùèê  ØèÐçoÔÐÖàÔ  ÜçÕÓ  ÐÙÞÕêoÜ×æß  ÔäâÜÔ /ÔéÔÙÙÔ_(device status)UTitle_(multizone device name)oÔê×ÑèÕê  ÐÜ  ÞÛéÙè  çèÕÑ_welcome_skip_buttonX(artist)]skip_ad_labeldáÙÕÝ_connecting_cancel_buttonn ÔäâÜê   C a s t  ÐÜo<ÛÓÙ  ÜÔê×Ñè ,  ÔÞÙçèÕäÕß  éÜÚ  ÙéÞé  ÑÐÕäß  ÖÞàÙ  ÜÔÐÖàÔ  ÜçÕÓ  ÐÙÞÕê .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¤·ÂÊÝ$ÎÓø'2OWkp}ÉÎçÿ


6
s



°
Ä
Ù
ü!39S­¶Ñî             v              i


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/iw.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELeÐÕÓÙÕoçäÙæÔ   3 0  éàÙÕê  Ð×ÕèÔiÞÙÓâ  àÕáão Ðäéè  ÜÓÜÒ  âÜ  ÔÞÕÓâÔ  ÑâÕÓ   % l d   . . .gØèÐç   % doÞêÑæâê  Ôê×ÑèÕê  ÐÜeÔäâÜÔo9 Ùé  ÜÕÕÓÐ  éÔ % @  ÕÞÛéÙè  Ô - C A S T  éÜÚ  Þ×ÕÑèÙÝ  ÜÐÕêÔ  èéê   W i - F i .oÑ×Ùèê  ØèÐç  ÛêÕÑÙÕêoÔäáçê  ÔäâÜÔ  éÜ  ÞÓÙÔcÜÜÐeÐÙéÕèn  C a s t  ÜÐ  Þ×ÕÑèoA ÛÓÙ  ÜÔäâÙÜ   C a s t  ÓèÚ  ÔÐäÜÙçæÙÔ  ÔÖÕ ,  æèÙÚ  Üêê  ÜÔ  ÒÙéÔ  Üèéê  ÔÞçÕÞÙêU--:--cÔÑÐlÞâÑè  ÜÔÒÓèÕên ÔäâÜê   C a s t  ÐÜoÔéêçÔ  ÐÕ  ÑÙØÕÜ  ÔéêçÔgÛêÕÑÙÕêeØÐÑÜØfÔÒÓèÕêeÔçÕÓÝo ÑÓÙçÔ  éÜ  èéê  Ô - W i - F ik  C A S T  Þ×ÕÑèoÜ×æß  ÔäâÜÔ /ÔéÔÙÙÔeÔéÔÙÔoÑ ÛÓÙ  ÜÔê×Ñè  ÜÞÛéÙèÙÝ  éÜÚ ,  ÔÐäÜÙçæÙÔ  ÔÖÕ  æèÙÛÔ  ÒÙéÔ  Üèéê  Ô - W i - F i  éÜÚ . 
 
ÛÓÙ  ÜÔäâÙÜ   C a s t ,  æèÙÚ  ÜÜ×Õå  âÜ   'ÐÙéÕè '  ÛéêÕæÒ  ÑçéÔ  ÑÐäÜÙçæÙÔ  ÜÔê×Ñè  Üèéê  ÔÞçÕÞÙê .  Ðäéè  ÒÝ  ÜÐéè  ÖÐê  ÞÐÕ×è  ÙÕêè  ÑÔÒÓèÕê   i O S  éÜ  ÔÐäÜÙçæÙÔ  ÔÖÕ .i % d  Ð×ÕÖÙÝoÐÙß  ÞÛéÙèÙÝ  ÖÞÙàÙÝo ÞÕäâÜ   C a s t  ÐÜ   % @o ÛÓÙ  ÜÔê×Ñè  ÜÞÛéÙèÙÝ  éÜÚ ,  ÔÐäÜÙçæÙÔ  ÔÖÕ  æèÙÛÔ  ÒÙéÔ  Üèéê  Ô - W i - F i  éÜÚ . 
 
ÛÓÙ  ÜÔäâÙÜ   C a s t ,  æèÙÚ  ÜâÑÕè  ÜÔÒÓèÕê  ÕÜÔäâÙÜ  Ðê   'ÒÙéÔ  Üèéê  ÔÞçÕÞÙê '  ÜÐäÜÙçæÙÔ  ÔÖÕ .oKÙé  ÜâÑÕè  ÜÔÒÓèÕê  ÑØÜäÕß  ÔÖÔ  ÕÜÑÓÕç  éÔÒÙéÔ  Üèéê  ÔÞçÕÞÙê  ÞÕäâÜê  ÜÐäÜÙçæÙÔ  ÖÕ .o ÞêÑæâ  ×ÙÑÕè  éÜ   C a s teØÜäÕßo ÔäâÜê  Ô - C a s t  Ôê×ÙÜÔo#Ùé  ÜÕÕÓÐ  éÔÒÙéÔ  Üèéê  ÔÞçÕÞÙê  ÞÕäâÜêiÑéÙÓÕè  ×Ùo áéß  ÔäâÜê  Ô - C a s t  ÔáêÙÙÝoçäÙæÔ   3 0  éàÙÕê  çÓÙÞÔ  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do­ðÿ$/¤Ëôû#¨®µÎë		%	0	=	H	u		±	¼atÀñ

µ
À
ë4Gz             T              ¥


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ja.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKbóÏbc¥}W(Label)g P I N  0nQeRo00ê0Ó0ó0°0ë0ü0à0
0k0­0ã0¹0È0W0f0D0~0Yb[W^UW(title)Z(Subtitle)o0¿0Ã0×0Y00h0Æ0ì0Ó00¹0Ô0ü0«0ü0k0á0Ç0£0¢00­0ã0¹0È0g0M0~0Yg0­0ã0¹0È0P\kbTpin0jc¥}0W0f0D0~0Y . . .b^TJbóXð](device name)c0X0e0­0ã0ó0»0ëcc¥}N-W(Title)_pin_cancel_buttonTpin2g^TJ00¹0­0Ã0×m^TJ0Qu0W0f0D0~0Y . . .Tpin1_connecting_skip_button_welcome_cancel_buttonoRNØÑ0n0Ç0Ð0¤0¹0n0Û0ü0àu;b0khy:0U00f0D0   4  hA0n   P I N  0QeR0W0f0O0`0U0D00Ç0Ð0¤0¹0nb@g	0nX4T0 C h r o m e c a s t  0¢0×0ê0g0   P I N  0xº0g0M0~0Y0d0¹0­0Ã0×m0á0Ç0£0¢0xb0W0f0D0~0[0o0Õ0ë  0³0ó0È0í0ü0é0g	R¹0k0Y00k0o0¿0Ã0×0W0~0Y_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttong0È0é0Ã0¯0nxbi P I N  00ê0Ã0¹0ólQu0hN fBP\kb0R0fÿ0H_(device status)UTitle_(multizone device name)kÑ0O0n0Ç0Ð0¤0¹0x0nc¥}_welcome_skip_buttonX(artist)]skip_ad_labelb[N_connecting_cancel_buttoni0­0ã0¹0ÈQH0Ç0Ð0¤0¹o!c¥}fB0 P I N  00ê0Ã0¹0ó0Y00_00k0Þ0¤0¯0LN fBv0kOu(0U00~0Y0   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¡¦®½æëóþ;JOdin|±¶Åàåþ½Æá		'	,	;	O	c	r			°	¶	Ð	ç	ý



4
G             u              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ja.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELbóXðh 3 0  yÒ]û0Mb;0Wbs}0o^TJ00¹0­0Ã0×0g0M000F0k0j00~0g00B0h   % l d . . .g0È0é0Ã0¯   % dcc¥}QHbQuo. % @0h0­0ã0¹0È  0Ç0Ð0¤0¹0LT0X   W i - F i  0Í0Ã0È0ï0ü0¯0kc¥}0U00f0D00S0h00Txº0O0`0U0Di[W^U0È0é0Ã0¯0xbj0á0Ç0£0¢0nQu0P\kbb0j0WROKh0­0ã0¹0È0kg*c¥}o*0S0n0¢0×0ê0K00­0ã0¹0È0Y00k0o00í0ü0«0ë  0Í0Ã0È0ï0ü0¯0x0n0¢0¯0»0¹01Sï0W0f0O0`0U0DU--:--bk!0xe-[0kyûRÕi0­0ã0¹0ÈQH0Ç0Ð0¤0¹k0ß0å0ü0Èr¶aK0R0fÿ0Hl0¯0í0ü0º0É  0­0ã0×0·0ç0óe0¿0Ö0ì0Ã0Èb-[bRM0xo W i - F i  0Í0Ã0È0ï0ü0¯0xº0Y0i0­0ã0¹0È0kc¥}n0lQu0hN fBP\kb0R0fÿ0HdN fBP\kbb[W^Uo0JO0D0n0Ç0Ð0¤0¹0kc¥}0Y00k0o00S0n0¢0×0ê0k   W i - F i  0Í0Ã0È0ï0ü0¯0x0n0¢0¯0»0¹01Sï0Y0_Å0L0B00~0Y0 
 
0­0ã0¹0È0Y00k0o00í0ü0«0ë  0Í0Ã0È0ï0ü0¯0x0nc¥}00¢0×0ê0K0lB0000_0   [ O K ]  0xb0W0f0O0`0U0D0_0g   i O S  0n-[0g00S0n0¢0×0ê0k0¢0¯0»0¹01Sï0Y00S0h00g0M0~0Y0h % d  0Ñ0ü0»0ó0ÈoR)u(Sïý0j0Ç0Ð0¤0¹0o0B00~0[0m % @  0k0­0ã0¹0È0W0f0D0~0Yot0JO0D0n0Ç0Ð0¤0¹0kc¥}0Y00k0o00S0n0¢0×0ê0k   W i - F i  0Í0Ã0È0ï0ü0¯0x0n0¢0¯0»0¹01Sï0Y0_Å0L0B00~0Y0 
 
0­0ã0¹0È0Y00k0o0 [-[ ]  0kyûRÕ0W00S0n0¢0×0ê0k[þ0W0f   [0í0ü0«0ë  0Í0Ã0È0ï0ü0¯0x0n0¢0¯0»0¹ ]  0g	R¹0k0W0f0O0`0U0D0oB0S0n0¹0Þ0ü0È0Õ0©0ó0n   [-[ ]  0kyûRÕ0W00S0n0¢0×0ê0n   [0í0ü0«0ë  0Í0Ã0È0ï0ü0¯  0¢0¯0»0¹ ]  0L0ª0ó0k0j0c0f0D00S0h00Txº0O0`0U0Dh0­0ã0¹0È0kc¥}N-g0¹0Þ0ü0È0Õ0©0óo0­0ã0¹0È  0»0Ã0·0ç0ó0YË0W0~0W0_o"0í0ü0«0ë  0Í0Ã0È0ï0ü0¯0x0n0¢0¯0»0¹0L0ª0ó0k0j0c0f0D00K0i0F0Kxº0Y0c0é0¤0Öo0­0ã0¹0È  0»0Ã0·0ç0ó0}BN0W0~0W0_g 3 0  yÒeé0  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-diz¸ÇÎÓ2EZ_bsÊÐÕàó
#.38]p	¸	É	ê

ðw¼
/             U              >


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ka.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleeÙÐàÒØcîÛÐkÓÐÙÐÕèØàÔÑÐW(Label)oèÔØçÕÐÜÔ×   P I N -ÙÝÓØo7ÛØÛÓØÜÐàÔÝÑá  âàÐÜáÚØàÔÑÐ  ÛÝìçÝÑØÚÝÑÐÖÔ   ÛØáÐæÔÑØ  Ý×ÐîØ jáãÑâØâàÔÑØW(title)Z(Subtitle)o@èÔÔîÔ×  ÛÔÓØØá  ×åÕÔÜá  âÔÚÔÕØÖÝàáÐ  ÓÐ  ÓØÜÐÛØÙÔÑèØ  âàÐÜáÚØàÔÑØá×ÕØáoâàÐÜáÚØàÔÑØá  èÔìçÕÔâÐTpin0oÛØÛÓØÜÐàÔÝÑá  ÓÐÙÐÕèØàÔÑÐ . . .gàÔÙÚÐÛÐeÐãÓØÝ](device name)gÓÐîãàÕÐhÒÐãåÛÔÑÐoÛØÛÓØÜÐàÔÝÑá  ÓÐÙÐÕèØàÔÑÐW(Title)_pin_cancel_buttonTpin2háãÑâØâàØoàÔÙÚÐÛØá  ÒÐÛÝâÝÕÔÑÐo ÛØÛÓØÜÐàÔÝÑá  àÔÙÚÐÛØá  éÕÔÜÔÑÐ . . .Tpin1_connecting_skip_button_welcome_cancel_buttonoèÔØçÕÐÜÔ×  ÐîÚÝÛÓÔÑÐàÔ  ÛÝìçÝÑØÚÝÑØá  Û×ÐÕÐà  ÔÙàÐÜÖÔ  ÜÐéÕÔÜÔÑØ   4 -êØäàØÐÜØ   P I N -ÙÝÓØ .  ÛÝìçÝÑØÚÝÑØá  ÛäÚÝÑÔÚá   P I N -ÙÝÓØá  ÞÝÕÜÐ   C h r o m e c a s t  ÐÞèØê  èÔãëÚØÐ .jÒÐÛÝâÝÕÔÑÐoÛÔÓØÐ  ÐàéÔãÚØ  Ðà  ÐàØáo*èÔÔîÔ×  ÒÐèÚØÚØ  ÙÝÜâàÝÚÔàØá  ÒÐáÐÐåâØãàÔÑÚÐÓ_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonoéÐÜÐìÔàÔÑØá  ÐàéÔÕÐo P I N -ÙÝÓØá  ÛÝáÛÔÜÐo)ÓÐÙÕàÐáÐ  ÓÐ  ÞÐãÖÐá  èÝàØá  ÒÐÓÐà×ÕØá  æØÚÐÙØ_(device status)UTitle_(multizone device name)o'ÐîÚÝÛÓÔÑÐàÔ  ÛÝìçÝÑØÚÝÑÐá×ÐÜ  ÓÐÙÐÕèØàÔÑÐ_welcome_skip_buttonX(artist)]skip_ad_labelfÛÖÐÓÐÐ_connecting_cancel_buttonoâàÐÜáÚØàÔÑÐ  ÛÝìçÝÑØÚÝÑÐèØ :oWÓÐÙÐÕèØàÔÑØá  ÛØÖÜØ× ,   P I N -ÙÝÓØá  ÛÝáÐáÛÔÜÐÓ  ÓàÝÔÑØ×  ×åÕÔÜØ  ÛØÙàÝäÝÜØá  ÒÐÛÝçÔÜÔÑÐ  ÛÝîÓÔÑÐ .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¤«ÂÊñbw
:?x ¯Àóû			%	N			¯	Ç
ê
ÿ,¬ÀÔû u§ø


%
2
M
             v              5


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ka.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELeÐãÓØÝo 3 0  ìÐÛØ×  ãÙÐÜ  ÒÐÓÐîÕÔÕÐmèÔØâçÕÔ×  ÛÔâØo& % l d  ÓÐ  àÔÙÚÐÛØá  ÒÐÛÝâÝÕÔÑÐá  èÔëÚÔÑ× . . .kéÐÜÐìÔàØ   % doÓÐÙÐÕèØàÔÑÐ  ÛÝìçÝÑØÚÝÑÐá×ÐÜ :fÓÐÙÕàÐo_ÓÐàìÛãÜÓØ× ,  àÝÛ  ×åÕÔÜØ   % @  ÓÐ  ÒÐÓÐêÔÛØá  ÛÝìçÝÑØÚÝÑÐ  Ôà×áÐ  ÓÐ  ØÛÐÕÔ   W i - F i  åáÔÚ×ÐÜÐÐ  ÓÐÙÐÕèØàÔÑãÚØo#ÐØàéØÔ×  ÓÐîãàãÚØ  áãÑâØâàÔÑØá  ÑØÚØÙØoÛÔÓØØá  ÓÐÙÕàØá  èÔìçÕÔâÐgÐàêÔà×ØeÙÐàÒØoâàÐÜáÚÐêØÐ ,  ÐàÐÐ  ÓÐÙÐÕèØàÔÑãÚØo9âàÐÜáÚØàÔÑØá×ÕØá  ÐÛ  ÐÞá  ÐÓÒØÚÝÑàØÕ  åáÔÚÖÔ  ìÕÓÝÛÐ  áíØàÓÔÑÐU--:--gèÔÛÓÔÒØoÞÐàÐÛÔâàÔÑÖÔ  ÒÐÓÐáÕÚÐoâàÐÜáÚØàÔÑÐ  ÛÝìçÝÑØÚÝÑÐèØ :oÓÐÓãÛÔÑØá  ÒÐÓÐà×ÕÐjáãÑâØâàÔÑØgâÐÑÚÔâØkÞÐàÐÛÔâàÔÑØdìØÜÐoèÔÐÛÝìÛÔ×  ×åÕÔÜØ   W i - F i -åáÔÚØ .oâàÐÜáÚÐêØÐ ,  ÓÐÙÐÕèØàÔÑãÚØÐo)ÓÐÙÕàÐáÐ  ÓÐ  ÞÐãÖÐá  èÝàØá  ÒÐÓÐà×ÕØá  æØÚÐÙØeÞÐãÖÐoò×åÕÔÜá  ÛÝìçÝÑØÚÝÑÔÑ×ÐÜ  ÓÐáÐÙÐÕèØàÔÑÚÐÓ  ÐÛ  ÐÞá  ×åÕÔÜá   W i - F i  åáÔÚÖÔ  ìÕÓÝÛÐ  áíØàÓÔÑÐ . 
 
âàÐÜáÚØàÔÑØá×ÕØá ,  ÐØàéØÔ×   ÙÐàÒØ  ,  àÝÓÔáÐê  ÐÞØ  ×åÕÔÜá  ÐÓÒØÚÝÑàØÕ  åáÔÚ×ÐÜ  ÓÐÙÐÕèØàÔÑÐá  Ò×îÝÕ× .  ÐÛØá  ÓÐèÕÔÑÐ  ÛÝÒÕØÐÜÔÑØ×Ðê  èÔÒØëÚØÐ×  ÐÛ  ÐÞØá   i O S  ÞÐàÐÛÔâàÔÑØÓÐÜ .k % d  ÞàÝêÔÜâØoÛÝìçÝÑØÚÝÑÔÑØ  ÛØãìÕÓÝÛÔÚØÐoÛØÛÓØÜÐàÔÝÑá  âàÐÜáÚØàÔÑÐ   % @ -èØo¯×åÕÔÜá  ÛÝìçÝÑØÚÝÑÔÑ×ÐÜ  ÓÐáÐÙÐÕèØàÔÑÚÐÓ  ÐÛ  ÐÞá  ×åÕÔÜá   W i - F i  åáÔÚÖÔ  ìÕÓÝÛÐ  áíØàÓÔÑÐ . 
 
âàÐÜáÚØàÔÑØá×ÕØá ,  ÒÐÓÐÓØ×  ×åÕÔÜá  ÞÐàÐÛÔâàÔÑÖÔ  ÓÐ  éÐãà×Ô×  ÐÛ  ÐÞá   ÐÓÒØÚÝÑàØÕ  åáÔÚÖÔ  ìÕÓÝÛÐ  .oaÒÐÓÐÓØ×  ÐÛ  âÔÚÔäÝÜØá  ÞÐàÐÛÔâàÔÑÖÔ  ÓÐ  èÔÐÛÝìÛÔ× ,  àÝÛ  ÐÓÒØÚÝÑàØÕ  åáÔÚÖÔ  ìÕÓÝÛÐ  ÐÛ  ÐÞØá×ÕØá  éÐà×ãÚØÐoâàÐÜáÚÐêØÐ ,  ãÙÐÕèØàÓÔÑÐhâÔÚÔäÝÜØoâàÐÜáÚØàÔÑØá  áÔáØÐ  ÓÐØìçÝo1ÓÐàìÛãÜÓØ× ,  àÝÛ  ÐÓÒØÚÝÑàØÕ  åáÔÚÖÔ  ìÕÓÝÛÐ  éÐà×ãÚØÐiÞØàÓÐÞØàØoâàÐÜáÚØàÔÑØá  áÔáØÐ  ÓÐáàãÚÓÐo 3 0  ìÐÛØ×  ìØÜ  ÒÐÓÐîÕÔÕÐ  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do »
!\i*s¤³¾ý	r	x		´	ë

'
6
M
V

Ê*

(
_
ÿÄõ; ³ì             T              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/km.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlegËÒkÒ·Æ¡ÁfÒ¶ËW(Label)nÒ¼ ¼   P I NoÆ»Ò¼ ÅÒË ½ÒÀh¢ÒËW(title)Z(Subtitle)o>» ¾Ò¸Ò¼ ÁÀÅ¼ÒÍ  · §Í ÆÆ¡Á Ë¢ÒoÒË¶Ò¼Tpin0oÆ» Ò¶Ë . . .o¶Ò¶¶·ÒÒeÆ¡Á](device name)c·fÄÇËkÆ»Ò¶ËW(Title)_pin_cancel_buttonTpin2oÆ¶Ò¶¶·ÒÒo!Æ»¶Ë ¶Ò¶ ¶·ÒÒ . . .Tpin1_connecting_skip_button_welcome_cancel_buttonoÒ¼¼   P I N   4  ÒËÂ Ò ¶Å¾ ¢ÁÒË¾ Ë §Í Â Å·Ô  Ò¶Ë§Í Ï¢¶ ¼   P I N  ÁÇ¶ ÅÒ» Ò·¸   C h r o m e c a s t  ÂÔdÆo·¶ Ò¾¾ ÁÀÁo)» ¾Ò¸ ¾Æ¾¶ »¶Ò¶ ÒÂ_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonn¶Ò¾¾ mÒ¶Ë¼   P I Nj¶Ë /Ò¢¶_(device status)UTitle_(multizone device name)oÒ¶ËÅ §Í Å·_welcome_skip_buttonX(artist)]skip_ad_labelg½¶Ë_connecting_cancel_buttonhÒ¼ÅoR¾Ò¸Ò¶Ë  ¸Ò¼ Ò¼Ë¢Ò¹Ò¼¶Ò¾¶ÒÄÇ¢¶Ò¾Ò¸Ò¶Ë¼   P I N  Ô   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¨¿ÌÔñ0AITÓôùCN\cp£¨Ù		#	<	T
o
x
§
ü%9Mj¬²Ìù&5Pa             u              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/km.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELeÆ¡ÁoÒÄ   3 0  ·¶¸nÒÂËÒÂo8¢Ò¢¶ Æ ¶Ò¶¶·ÒÒ ¶Ò» ÈÁ   % l d   . . .i Á   % dmÆ»Ò¶ËÅd¶ËoB¼Ò¶¶   % @  Ë¢Ò  ·§ÍÒ¼ Ò·¾Ò¶   W i - F i  Â½ÔoÒ¾¾ Â ¶¢ÒËoÒË¶¶ËÁÀeÒ¶gËÒo·¶Ò¶Ë¶Ò¼Áo5Ò·¸ÁÇÒ¼¶¼Ò¾Ò¶¼Ò¶  ¾Ò¸Ò¼U--:--gÒ¶Ëo¼Å¶Ë¶ÆËhÒ¼Åm· /¾ Æ¡Ái¢Ò ËgÁÒÁh¶ÆËc»o ··Ò¾ Ò¶   W i - F i  Ë¢Òo¶Ò¶Ë¶Ò¼j¶Ë /Ò¢¶eÒ¢¶h¢ÒËo¾Ò¸Ò¶Ë¶½§ÍË¢Ò   Ò·¸ÁÇÒ¼¶¼Ò¾Ò¶   W i - F i  Ë¢ÒÔ 
 
¾Ò¸Ò¼  ¼Ò¾¾   ËÒ   ÅÁÒ·¸ÁÇÒ¾»ÆÒ¶Ë¶½Ò¶¼Ò¶Ë¢ÒÔ  ¢ÒÏ¢¶¢»Ò¶¶¼Ò¾Ò¶ËÒ·¸ÁÇÅÁÒÄÒ»¶ÆË   i O S  ¶ÂÔh % d  ¶o· ¶ §Í ÁoÆ» Ò¼Å   % @o³¾Ò¸Ò¶Ë¶½§ÍË¢Ò   Ò·¸ÁÇÒ¼¶¼Ò¾Ò¶   W i - F i  Ë¢ÒÔ 
 
¾Ò¸Ò¼  ¼¼Å¶Ë¶ÆËË¢Ò   ½¾   ¶¼Ò¾Ò¶¼Ò¶   Ò¶ËÒ·¸ÁÇÔol¼Å¶Ë ¶ÆËÅ¾ ¼ÒÁÇ  ···Ò¾¶ ·Ò·¼Ò¾Ò¶ ¼Ò¶Ò¼¶¾ Ò¶ËÒ·¸ÁÇoÆ»Ò¶Ë¶Ò¼g¼Òo¶ ¶ËÒ¾ ¶Ò¼  ¾o3¼Ò¶¶  ·Ò·¼Ò¾Ò¶ ¼Ò¶Ò¼¶¾kÒ¶Ò¶Ëo¶ÒË ¶Ò¼  ¾oÅ»   3 0  ·¶¸  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do±$7R[â>IXöü		0	A	\	o	~			Ù
 

 
19Jo
ýØK´Ëü             U              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ko.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlebÖUÇxb¼ü¹hbÅð¬°W(Label)f P I N  Ç¸%f¬pÂä¸\  ÈÁ¡bÇ¹ÉW(title)Z(Subtitle)oÑ0ÎXÕXÅì   T VÆ@  Â¤Õ<Îä¸\  »øµÅ´¹|  ÈÁ¡ÕXÁ8Æ .eÈÁ¡  ÉÉÀTpin0gÅð¬°  É . . .b­¬àcÆ$µÆ$](device name)b²ë®0bÍèÁdÅð¬°  ÉW(Title)_pin_cancel_buttonTpin2g­¬à  ¬t±¶ð®0j­¬à  Ç¬ÀÝ  É . . .Tpin1_connecting_skip_button_welcome_cancel_buttonoIÈü¼À  ®0®0ÇX  ÖH  ÖTºtÅÐ  Ô\ÂÜ´   P I N   4Ç¹¬¹|  Ç¸%ÕXÁ8Æ .  ®0®0ÇX  ÁÇ Ç²   C h r o m e c a s t  ÅqÅÐÁ³Ä   P I NÇD  Ì>ÇD  Â  ÇÂµ²È²ä .d¬t±¶ð®0nÁ ÐÝ´  »øµÅ´¬   ÅÆÂµ²È²ä .oÖUÇ¥  ÎèÒ¸¸d·ì¹|  Ö\Á1ÖTÕX¸$ºt  ÐíÕXÁ8Æ_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttoneÒ¸·  Á ÐÝf P I N  ´ã®0jÇ¬ÀÝ  Ç|ÂÜÉÉÀ  ÈÖX_(device status)UTitle_(multizone device name)iÈü¼À  ®0®0ÅÐ  Åð¬°_welcome_skip_buttonX(artist)]skip_ad_labelbÆD¸Ì_connecting_cancel_buttonfÈÁ¡Õ`  ®0®0o"Åð¬°ÇD  ÇÕt   P I NÇD  ´ã²  ³p  ¹ÈÇtÐl¬   Ç|ÂÜÈÇ<¸\  À¬Æ©´)²È²ä .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£¨°½ÊÏ×â"'6;BPUZck¨­ÆÞs|ÄÙÞí			 	-	B	T	Z	t			¦	´	¹	Ô	á             u              
(


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ko.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELcÆ$µÆ$i 3 0Í  ´¤¸\  Çt³ÙhÇÁ8×  ÅLÅD¼ô®0o % l dÍ  ÖÄÅÐ  ­¬à¹|  ¬t±¶ø  Â  ÇÂµ²È²ä . . .eÒ¸·   % dk²äÇL  ®0®0¸\  Åð¬°  ÉbÇ¬ÀÝo/ % @  ®0®0Æ@   C a s t  ®0®0¬   ³ÙÇ|Õ\   W i - F i  ±$Ò¸ÆÌÐlÅÐ  Åð¬°´Å´  Ç²ÉÀ  ÖUÇxÕXÁ8Æ .hÇ¹É  Ò¸·  Á ÐÝi»øµÅ´  Ç¬ÀÝ  ÉÉÀbÅÆÇLbÖUÇxm C a s t¬   Åð¬°´ÉÀ  ÅJÇLoÈÁ¡ÕX¸$ºt  ÅqÅÐ  ¸\Îì  ±$Ò¸ÆÌÐl  ÅaÁ8Â¤  ­Õ\Çt  ÕDÆÕi²È²äU--:--b²äÇLgÁ$ÈÇ<¸\  Çt³ÙfÈÁ¡Õ`  ®0®0iÇLÁ¬p  ÀÁÐÜ  ÈÖXbÇ¹ÉcÐÜ¾¹¿bÁ$ÈbÇtÈm W i - F i  ±$Ò¸ÆÌÐl  ÖUÇxfÈÁ¡  Åð¬°´(jÇ¬ÀÝ  Ç|ÂÜÉÉÀ  ÈÖXdÇ|ÂÜÉÉÀo®0®0ÅÐ  Åð¬°ÕX¸$ºt  ÅqÅÐ   W i - F i  ±$Ò¸ÆÌÐlÅÐ  ³ Õ\  ÅaÁ8Â¤  ­Õ\Çt  ÕDÆÕi²È²ä . 
 
ÈÁ¡ÕX¸$ºt  ÅqÅÐÁ  ¸\Îì  ±$Ò¸ÆÌÐl  Åð¬°ÇD  ÆÌ­Õ`  µL   'ÖUÇx 'ÇD  Á ÐÝÕXÁ8Æ .  ¶Õ\  °ÉÅÐ   i O S  Á$ÈÅÐÁ  ÅqÅÐ  ³ Õ\  ÅaÁ8Â¤  ­Õ\ÇD  ½ÅìÕ`  Â³Ä  ÇÂµ²È²ä .e % dÓ|Á<Ò¸lÀ¬Æ©  ¬ ²¥Õ\  ®0®0  ÅÆÇLk % @ (Ç< )¸\  ÈÁ¡  ÉoW®0®0ÅÐ  Åð¬°ÕX¸$ºt  ÅqÅÐ   W i - F i  ±$Ò¸ÆÌÐlÅÐ  ³ Õ\  ÅaÁ8Â¤  ­Õ\Çt  ÕDÆÕi²È²ä . 
 
ÈÁ¡ÕX¸$ºt  Á$ÈÇ<¸\  Çt³ÙÕXÅì  ÅqÇX   '¸\Îì  ±$Ò¸ÆÌÐl  ÅaÁ8Â¤ '¹|  À¬Æ©  Á$ÈÕXÁ8Æ .o3×4³ ÈÖT  Á$ÈÇ<¸\  Çt³ÙÕXÅì  Çt  ÅqÅÐ  ¸\Îì  ±$Ò¸ÆÌÐl  ÅaÁ8Â¤¬   À¬Æ©  Á$È´Å´  Ç²ÉÀ  ÖUÇxÕXÁ8Æ .i C a s t  Åð¬°  ÉdÂ¤¹ÈÒ¸ÓðiÈÁ¡  Á8ÁX  ÂÜÇ´(o¸\Îì  ±$Ò¸ÆÌÐl  ÅaÁ8Â¤¬   À¬Æ©  Á$È´Å´  Ç²ÉÀ  ÖUÇxcÂäÂÜ¬iÈÁ¡  Á8ÁX  È¸Ì´(j 3 0Í  Å^Ç<¸\  Çt³Ù  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dk~ÄÏæëL]puzÔÚßîû$?Laj	k	v		¦
W
À
Ó
Ü
ï(/B             T              W


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/lo.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlef»¥»h¥°±ª½iÀ·È­¡ÍÈW(Label)hÉ­   P I Noª»Èª±²«²«É­®±Ák³ÁÉ­²W(title)Z(Subtitle)o/Á°À·È­ª»Èª±²ª·È«²Â¥°²  Á¥°  ¥³Â­È²o¢¸²ª»Èª±²Tpin0o³¥±À·È­¡ÍÈ . . .fÂª°²cª½](device name)c´g»À¥µn³¥±À·È­¡ÍÈW(Title)_pin_cancel_buttonTpin2d³ÁjÉ²¡Âª°²o³¥±ª°ÁÂª°²¢¹È . . .Tpin1_connecting_skip_button_welcome_cancel_buttonoÉ­   P I N   4  »§À¥µÈ²»ÃÜÉ²Í«¼±­­¸°­µÈ¢¹ÈÃÉ½ .  ­²±É ,  À»É²­­¸°­±ª²¡²À´È   P I N  ÃÁ­±   C h r o m e c a s t  ÄÉ³ .dÉ²¡oÍÈÄÉÀ¥·­ª·ÈÃo!Á°À·È­ÀµÃÉ»§§¸¡Á°«²_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonk²À¥·­Àj±ª½   P I No«¼´É  «¼·  ¢¸»È§²§_(device status)c·È_(multizone device name)oÀ·È­¡ÍÈ±­¸°­µÈ¢¹ÈÃÉ½_welcome_skip_buttonX(artist)]skip_ad_labeleÁ¥É§Æ_connecting_cancel_buttonlª»Èª±²«²o?À·È­À·È­¡ÍÈ ,  Ä¡Â£Â­È²°·ÃÉ»È§²§  À·È­±ª½   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¦·ÊÒã'/:¾Ãèõü
 =EY^g|«°Éá	æ	ï

W
l
q


¨
¿
Ô
ÿ2s «Æß             v              `


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/lo.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELcª½o­«¼±   3 0  §´²µnª¶ª²ÀµÈ¡Àµ¡o#È²ª²¡²É²¡Âª°²ÄÉÃ­µ   % l d   . . .fÀ   % do³¥±À·È­¡ÍÈ±e«¼´ÉoF§ª­§È²   % @  ­È²  Á¥°  ­¸°­   C h r o m e c a s t  ¢¹ÈÃÀ·­È²   W i - F i  ½§±mÀ¥·­³±²n¢¸²«¼´Éª·ÈeÍÈ¡µf»¥»oÍÈÄÉÀ·È­¡ÍÈÀ·È­ª»Èª±²o6Á­±µÉÉ­²ª´À»É²À´À·­È²²ÃÀ·È­ª»Èª±²U--:--eÍÈÄoÄµÈ²±ÉÈ²lª»Èª±²«²oª±È½²§°´ª½h³±²hÁ±À¥±j²±ÉÈ²fÈ²¡²o§ª­À·­È²   W i - F i  ­È²oÀ·È­¡ÍÈÀ·È­ª»Èª±²Á¥É§o«¼´É  «¼·  ¢¸»È§²§j¢¸»È§²§k³ÁÉ­²oòÀ·È­À·È­¡ÍÈ±­¸°­­È² ,  Á­±µÉÉ­²ª´À»É²À´À·­È²   W i - F i  ­È² . 
 
À·È­ª»Èª±² ,  °¥¸²À¥·­   »¥»   À¡·È­Á­±ÍÀ·È­¡ÍÈ±À·­È²²Ã­È² .  ­±ÉÈ²±ª²¡²­°¸²ª´ÈµÉÃ²«¼±ÄÉÃ²±ÉÈ²   i O S  ª³¥±Á­±µÉ .j % d  ÀµÀ±lÍÈ¡µ­¸°­oÍ²¥±ª»Èª±²«²   % @o´À·È­À·È­¡ÍÈ±­¸°­­È² ,  Á­±µÉÉ­²ª´À»É²À´À·­È²   W i - F i  ­È² . 
 
À·È­ª»Èª±² ,  °¥¸²ÄµÈ²±ÉÈ²­È²  Á¥°  Àµ   ª´À»É²À´À·­È²²Ã   ª³¥±Á­±µÉ .oWÄµÈ²±ÉÈ²ÃÂ¥°ª±µÉ  Á¥°  §À´È§È²ª´À»É²À´À·­È²²ÃÀµ¢¹Èª³¥±Á­±µÉo³¥±À·È­¡ÍÈÀ·È­ª»Èª±²gÂ¥°ª±oÀ¥µÈ¡À±²ª»Èª±²Á¥É§o.§Ã«ÉÁÈÃ§È²ª´À»É²À´À·­È²²ÃÀµ¢¹Ècª»oÀ±²ª»Èª±²ª´Éª¸Á¥É§oÄÜÉ²   3 0  §´²µ  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dk­ö(3ÂÝúQÀÆÑò		0	A	R	g	t	¯	ê

*
A(=V
îÜë&Ë             U              ì


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/lt.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleUGeraiXGarsumasWSusietiW(Label)o. v e s k i t e   P I N   k o do P e r d u o d a m a  /   s v e t a i nYSubtitraiW(title)Z(Subtitle)o9 P a l i e s k i t e ,   k a d   p e r d u o t u m t e   m e d i j  /   T V   i r   g a r s i a k a l b i u so S u s t a b d y t i   p e r d a v i mTpin0_Prisijungiama...YSkelbimasl G a r s o  / r aa a s](device name)h U~ d a r y t ih A ta a u k t i]PrisijungiamaW(Title)_pin_cancel_buttonTpin2o P r a l e i s t i   s k e l b i m_Rodomas skelbimas...Tpin1_connecting_skip_button_welcome_cancel_buttono£. v e s k i t e   p a g r i n d i n i a m e   n e t o l i e s e   e s a n
 i o  / r e n g i n i o   e k r a n e   r o d o m   4   s k a i t m e ns   P I N   k o d .  . r e n g i n i o   s a v i n i n k a s   t a i p   p a t   g a l i   s u r a s t i   P I N   k o d    C h r o m e c a s t    p r o g r a m o j e .YPraleisti_Nepasirinkta jokios medijoso/ P a l i e s k i t e   i r   s u a k t y v i n k i t e   ia s k l e i s t   v a l d i k l/_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button_Takelio pasirinkimas_Klausyti PIN kodo_!Leidimo / pristabdymo perjungimas_(device status)UTitle_(multizone device name)o- P r i s i j u n k i t e   p r i e   n e t o l i e s e   e s a n
 i o  / r e n g i n i o_welcome_skip_buttonX(artist)]skip_ad_labelWAtlikta_connecting_cancel_buttonl P e r d a v i m a s  /oT P r i s i j u n g i a n t   b u s   l a i k i n a i   n a u d o j a m a s   m i k r o f o n a s ,   k a d   bk ts   g a l i m a   k l a u s y t i   P I N   k o d o .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¨°¸Ý
'ÇÌßé!2@H\a¤½Õ

(
F
§
¼
Á
Ð
ä
ø#GY_yÖìõ&?             u              ê


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/lt.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELl G a r s o  / r aa a so A t s u k t i   3 0   s e k u n d~ is   a t g a lo S u~ i n o k i t e   d a u g i a uo% S k e l b i m   g a l s i t e   p r a l e i s t i   p o   % l d . . .Z%d takelis_Jungiamasi prieVLeistioS. s i t i k i n k i t e ,   k a d   % @   i r   p e r d a v i m o  / r e n g i n y s   p r i j u n g t i   p r i e   t o   p a t i e s    W i - F i    t i n k l oo P a s i r i n k t i   s u b t i t rs   t a k e l/o S t a b d y t i   m e d i j o s   a t kk r i md N r aUGeraio  C a s t  ,   n e p r i j u n g t aoa R e i k i a  / j u n g t i  a i o s   p r o g r a m o s   n u s t a t y m    V i e t i n i o   t i n k l o   p a s i e k i a m u m a s  ,   k a d   bk ts   g a l i m a   p e r d u o t iU--:--TKitao E i t i  /   n u s t a t y m u sl P e r d a v i m a s  /o P e r j u n g t i   n u t i l d y m o   bk s e nYSubtitraio p l a na e t i n i s   k o m p i u t e r i sZNustatymaiZAnkstesniso P a t i k r i n k i t e    W i - F i    t i n k lo  C a s t  ,   p r i j u n g t a_!Leidimo / pristabdymo perjungimas[Pristabdytio	 K a d   g a l ts   p r i s i j u n g t i   p r i e   jk ss  / r e n g i n is ,  a i   p r o g r a m a   t u r i   p a s i e k t i   jk ss    W i - F i    t i n k l . 
 
 K a d   bk ts   p e r d u o d a m a ,   p a s i r i n k i t e    G e r a i  ,   k a i   p r o g r a m a   p a p r aa y s   p r i s i j u n g t i   p r i e   v i e t i n i o   t i n k l o .   T a i   g a l i t e   p a d a r y t i   i r   v l i a u    i O S    n u s t a t y m u o s e ,   s k i r t u o s e  a i a i   p r o g r a m a i .X%d proc.o N r a   j o k is   p a s i e k i a ms  / r e n g i n iso P e r d u o d a m a  /    % @ oÊ K a d   g a l ts   p r i s i j u n g t i   p r i e   jk ss  / r e n g i n is ,  a i   p r o g r a m a   t u r i   p a s i e k t i   jk ss    W i - F i    t i n k l . 
 
 K a d   bk ts   p e r d u o d a m a ,   e i k i t e  /   n u s t a t y m u s   i r  / j u n k i t e  a i o s   p r o g r a m o s   n u s t a t y m    V i e t i n i o   t i n k l o   p a s i e k i a m u m a s  .o E i k i t e  /  a i o   t e l e f o n o   s k i l t/    N u s t a t y m a i    i r   p a t i k r i n k i t e ,   a r  a i o s   p r o g r a m o s   n u s t a t y m a s    V i e t i n i o   t i n k l o   p a s i e k i a m u m a s   / j u n g t a so  C a s t  ,   p r i j u n g i a m aYtelefonaso P e r d a v i m o   s e s i j a   p r a s i d j ooE. s i t i k i n k i t e ,   k a d   n u s t a t y m a s    V i e t i n i o   t i n k l o   p a s i e k i a m u m a s   / j u n g t a sZTIESIOGIAIo P e r d a v i m o   s e s i j a   b a i g s io P e r s u k t i   3 0   s e k u n d~ is   p i r m y n  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-d}´Û(3ELõ,ajp	^	d	i		§	Þ	è

$
/
h

±
½ÓÜ

BÙÜFÓÞ             T              L


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/lv.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleTLabig S k a< u m sXSavienotW(Label)ZPIN ievade_Apraide uz viesistabuXSubtitriW(title)Z(Subtitle)oK P i e s k a r i e t i e s ,   l a i   a p r a i d+ t u   m u l t i v i d e s   s a t u r u   s a v   t e l e v i z o r   u n   s k a< r uF o so A p t u r t   a p r a i d iTpin0_Notiek savienojuma izveide...g R e k l m aUAudio](device name)g A i z v r tVAtcelt_Notiek savienojuma izveideW(Title)_pin_cancel_buttonTpin2o I z l a i s t   r e k l m uo N o t i e k   r e k l m a s   a t s k aF oa a n a . . .Tpin1_connecting_skip_button_welcome_cancel_buttono I e v a d i e t   4   c i p a r u   P I N ,   k a s   r e d z a m s   t u v u m   e s oa s   i e r+ c e s   s k u m a   e k r n .   I e r+ c e s  + p aa n i e k s   v a r   a r+   a t r a s t   P I N   l i e t o t n   C h r o m e c a s t .WIzlaisto N a v   a t l a s+ t s   m u l t i v i d e s   s a t u r so2 P i e s k a r i e t i e s ,   l a i   a k t i v i z t u   i z v r s t o   v a d m i e r+ c i_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono I e r a k s t a   a t l a s+a a n an K l a u s+ t i e s   P I No" P r s l g t   a t s k aF oa a n u   u n   a p t u ra a n u_(device status)UTitle_(multizone device name)o* S a v i e n o j u m a   i z v e i d e   a r   t u v u m   e s oa u   i e r+ c i_welcome_skip_buttonX(artist)]skip_ad_labelVGatavs_connecting_cancel_buttono A p r a i d e s   i e r+ c e s   i z v l eoP S a v i e n o j u m a   i z v e i d e i   t i k s  + s l a i c+ g i   i z m a n t o t s   jk s u   m i k r o f o n s ,   l a i   k l a u s+ t o s   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n­¶¾Éáêòý·¼Üëñÿ2:NSt³¸Ñé	î	ö
5

±
¶
Å
Ù
í3z¬"07R             u              
&


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/lv.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudioo A t t+ t   a t p a k a<   p a r   3 0   s e k u n d mn U z z i n t   v a i r ko  V a r a t   i z l a i s t   r e k l m u   p c   % l d . . .l % d .   i e r a k s t s_Notiek savienojuma izveide ar:h A t s k aF o toX P r b a u d i e t ,   v a i   jk s u   % @   u n   a p r a i d e s   i e r+ c e   i r   s a v i e n o t a   a r   v i e n u   u n   t o   p aa u   W i - F i   t+ k l u .o A t l a s+ t   s u b t i t r u   c e l iF uo A p t u r t   m u l t i v i d e s   a t s k aF oa a n uSNavTLabio# A p r a i d e      s a v i e n o j u m s   n a v   i z v e i d o t soJ` a i   l i e t o t n e i   n e p i e c i ea a m a   p i e k< u v e   l o k l a j a m   t+ k l a m ,   l a i   a p r a i d+ t u   s a t u r uU--:--e T l ko P r i e t   u z   i e s t a t+ j u m i e mo A p r a i d e s   i e r+ c e s   i z v l eo I z s l g t / i e s l g t   s k aF uXSubtitrim p l a na e t d a t o r sk I e s t a t+ j u m ig A t p a k a<o P r b a u d i e t   W i - F i   t+ k l uo A p r a i d e      s a v i e n o j u m s   i z v e i d o t so" P r s l g t   a t s k aF oa a n u   u n   a p t u ra a n ug A p t u r to	 L a i   i z v e i d o t u   s a v i e n o j u m u   a r   jk s u   i e r+ c m ,  a a i   l i e t o t n e i   n e p i e c i ea a m a   p i e k< u v e   jk s u   W i - F i   t+ k l a m . 
 
 L a i   a p r a i d+ t u   s a t u r u ,   a t l a s i e t    O K    ( L a b i ) ,   k a d   l i e t o t n e   v l a s   i z v e i d o t   s a v i e n o j u m u   a r   jk s u   l o k l o   t+ k l u .   V a r s i e t   a r+   t o   a t< a u t   v l k   i O S   i e s t a t+ j u m o s  a a i   l i e t o t n e i .k % d   p r o c e n t io N a v   p i e e j a m a   n e v i e n a   i e r+ c eo N o t i e k   a p r a i d e   u z   i e r+ c i   % @oò L a i   i z v e i d o t u   s a v i e n o j u m u   a r   jk s u   i e r+ c m ,  a a i   l i e t o t n e i   n e p i e c i ea a m a   p i e k< u v e   jk s u   W i - F i   t+ k l a m . 
 
 L a i   a p r a i d+ t u   s a t u r u ,   p r e j i e t   u z   l i e t o t n i   S e t t i n g s   u n   i e s l d z i e t   i e s t a t+ j u m u    L o c a l   N e t w o r k   A c c e s s    ( P i e k< u v e   l o k l a j a m   t+ k l a m )  a a i   l i e t o t n e i .om` a j   t l r u n+   p r e j i e t   u z   i e s t a t+ j u m i e m   u n   p r b a u d i e t ,   v a i  a a i   l i e t o t n e i   i r   i e s l g t a   p i e k< u v e   v i e t j a m   t+ k l a m .o$ A p r a i d e      n o t i e k   s a v i e n o j u m a   i z v e i d eh t l r u n i so A p r a i d e s   s e s i j a   s k t ao) J bk t   i e s l g t a i   p i e k< u v e i   v i e t j a m   t+ k l a mi T I E` R A I D E_Apraides sesija pabeigtao! P r t+ t   u z   p r i e ka u   p a r   3 0   s e k u n d m  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dj§Ä AR6uy~Ç	^	d	o	 	Ñ	þ

"
9
H
w
¸
ÿ
$
;
t
­q¼ÍúOb}             T              Â


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/mk.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlef>  @54n0G8=0  =0  72C:f>2@78W(Label)k=5A5B5   P I No!5  5<8BC20  2>   =52=0  A>10 g"8B;>28W(title)Z(Subtitle)o>>?@5B5  70  5<8BC20Z5  0C48>287C5;=8  A>4@68=8  =0  "  8  72CG=8F8B5o!>?@8  3>  5<8BC20Z5B>UPIN 0l!5  ?>2@7C20 &g 5:;0<0eC48>](device name)g0B2>@8fB:068k!5  ?>2@7C20W(Title)_pin_cancel_buttonUPIN 2d"8B;o@5A:>:=8  X0  @5:;0<0B0o!5  ?@8:06C20  @5:;0<0 &UPIN 1_connecting_skip_button_welcome_cancel_buttono =5A5B5  3>  G5B8@8F8D@5=8>B   P I N  ?@8:060=  =0  ?>G5B=8>B  5:@0=  >4  C@54>B  2>  1;878=0 .  !>?AB25=8:>B  =0  C@54>B  <>65  40  3>  =0X45   P I N -:>4>B  8  2>  0?;8:0F8X0B0   C h r o m e c a s t .i@5A:>:=8o#5<0  871@0=8  0C48>287C5;=8  A>4@68=8o1>?@5B5  70  40  3>  0:B828@0B5  ?@>H8@5=8>B  :>=B@>;5@_pin_connect_buttonUPIN 3^skip_ad_button_pin_listen_button_welcome_ok_buttonn71>@  =0  70?8Am!;CH0X  70   P I NkCHB8 /?0C70_(device status)UTitle_(multizone device name)o>2@75B5  A5  A>  C@54  2>  1;878=0_welcome_skip_buttonX(artist)]skip_ad_labelf>B>2>_connecting_cancel_buttonm<8BC20XB5  =0oJ0  40  A5  ?>2@75B5 ,  <8:@>D>=>B  ?@82@5<5=>  \5  A5  :>@8AB8  70  40  A;CH0  70   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¦ÃÐØï(7?JÉôú"-;JWnvÈõû		,
o

Ë0EKZnºÑãéBXao|²             v              
I


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/mk.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQR9STU_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELeC48>o@5<>B0X  =0=0704   3 0  A5:C=48o>7=0XB5  ?>25\5o(>65  40  X0  ?@5A:>:=5B5  @5:;0<0B0  70   % l d &mC48>70?8A   % dn!5  ?>2@7C20  A>eCHB8o@@>25@5B5  40;8  20H8>B   % @  8  C@54>B  A>   C a s t  A5  =0  8AB0   W i - F i  <@560o715@5B5  70?8A  A>  B8B;>28o1!>?@8  X0  @5?@>4C:F8X0B0  =0  0C48>287C5;=8  A>4@68=8d5<0f>  @54o C a s t  =5  5  ?>2@70=oE0  0?;8:0F8X020  ]  5  ?>B@515=  ?@8AB0?  4>  ;>:0;=0B0  <@560  70  40  5<8BC20U--:--f!;54=>oB2>@5B5   >AB02:8 m<8BC20XB5  =0o:;CG8 /8A:;CG8  72C:o0B2>@5=8  B8B;>28fB01;5Bh>AB02:8i@5BE>4=>h0?8A   % do@>25@5B5  X0   W i - F i  <560B0n C a s t  5  ?>2@70=kCHB8 /?0C70h0C78@0Xg"8B;>28o0  40  A5  ?>2@75  A>  C@548B5 ,  =0  0?;8:0F8X020  ]  5  ?>B@515=  ?@8AB0?  4>  20H0B0   W i - F i  <@560 . 
 
0  40  5<8BC20 ,  8715@5B5   >  @54   :>30  0?;8:0F8X0B0  \5  ?>10@0  40  A5  ?>2@75  A>  20H0B0  ;>:0;=0  <@560 .  20  <>65  40  3>  >2>7<>68B5  8  ?>4>F=0  2>  ?>AB02:8B5  70   i O S  70  0?;8:0F8X020 .k % d  ?@>F5=B8o5<0  4>AB0?=8  C@548o!5  5<8BC20  =0    % @ o´0  40  A5  ?>2@75  A>  C@548B5 ,  =0  0?;8:0F8X020  ]  5  ?>B@515=  ?@8AB0?  4>  20H0B0   W i - F i  <@560 . 
 
0  40  5<8BC20 ,  >45B5  2>   >AB02:8   8  2:;CG5B5   @8AB0?  4>  ;>:0;=0B0  <@560   70  0?;8:0F8X020 .omB2>@5B5   >AB02:8   =0  B5;5D>=>2  8  ?@>25@5B5  40;8   @8AB0?>B  4>  ;>:0;=0B0  <@560   5  2:;CG5=  70  >200  0?;8:0F8X0o!5  ?>2@7C20   C a s tgB5;5D>=o!5A8X0B0  70  5<8BC20Z5  70?>G=0o8#25@5B5  A5  45:0   @8AB0?>B  4>  ;>:0;=0B0  <@560   5  2:;CG5=g  o!5A8X0B0  70  5<8BC20Z5  702@H8o@5<>B0X  =0=0?@54   3 0  A5:C=48  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do¨É7T_â|·	D	J	W			Ä	é	ö


+
`
}

¥
´ÂÙ

)q£àSb             V              Ø


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/mn.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleblCC=K  B¯2H8=f%>;1>EW(Label)k  >@CC;0Eo>G=K  é@éé=4  40<6CC;6  109=0f%04<0;W(title)Z(Subtitle)o7"  1>;>=  G0=30  O@83G400  <5480  40<6CC;0EK=  BC;4  40@=0  CCo0<6CC;0EK3  7>3A>>Ed?8= 0o%>;1>34>6  109=0 . . .c0@eC48>](device name)d%00Ef&CF;0Eo%>;1>34>6  109=0W(Title)_pin_cancel_buttond?8= 2m0@K3  0;30A0Eo0@K3  1>;>2A@CC;6  109=0 . . .d?8= 1_connecting_skip_button_welcome_cancel_buttono9@>;F>>E  BéEéé@é<689=  =¯¯@  4M;3MFM4  E0@CC;A0=   4  >@>=B>9    :>4K3  >@CC;=0  CC .  "éEéé@é<6  M7M<H83G  M=M    :>4K3   C h r o m e c a s t  0??00A  020E  1>;><6B>9 .g;30A0Eo/<0@  G  <5480  A>=3>>3¯9  109=0o/è@3éB3éAé=  EO=03G893  84M2E6¯¯;ME  1>;  B>2H8=>  CC_pin_connect_buttond?8= 3^skip_ad_button_pin_listen_button_welcome_ok_buttono8G;M389=  A>=3>;Bj  A>=A>Eo#">3;CC;0E  B¯@  7>3A>>EK3  84M2E6¯¯;ME_(device status)UTitle_(multizone device name)o9@>;F>>E  BéEéé@é<684  E>;1>34>E_welcome_skip_buttonX(artist)]skip_ad_labelf>;A>=_connecting_cancel_buttoni0<6CC;0EoC%>;1>34>EK=  BC;4  B0=K  <8:@>D>=K3    A>=A>E  7>@8;3>>@  B¯@  0H83;0=0 .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n·ÄÌã)1<­Öß
&/<]eyÔÝö	
3
B
}
Þ
ó
ü3Xm¶ÈÎè)?HVc~             u              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/mn.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELeC48>o 3 0  A5:C=4  CE@00EoM<M;B  <M4MM;M;  020Eo*"0  70@K3   % l d -=  40@00  0;30A0E  1>;><6B>9   . . .i8G;M3   % do%>;1>34>6  109=0i">3;CC;0EoS"0=K   % @  1>;>=  40<6CC;03G  BéEéé@é<6  =M3   W i - F i  A¯;6MM=4  E>;1>34A>=  MAME893  H0;30=0  CCo$%00;BB09  B09;10@K=  H8=6;M;893  A>=3>Eo5480  B>3;CC;0EK3  7>3A>>Eg09E3¯9ROKo0<6CC;0;BK3  E>;1>>3¯9  109=0o>-=M  0??  =L   C a s t  E89E89=  BC;4  >B>>4  A¯;6MM=89  E0=40;B  H00@4403U--:--f0@00Eo">E8@3>>  @CC  >G8Ei0<6CC;0EoCC3  E00E  Bé;é2893  84M2E6¯¯;MEo%00;BB09  B09;10@CC4fB01;5Bh">E8@3>>eè<=éEo W i - F i  A¯;6MM3MM  H0;30Eo0<6CC;0;BK3  E>;1>A>=o#">3;CC;0E  B¯@  7>3A>>EK3  84M2E6¯¯;MEk"¯@  7>3A>>Ef%04<0;oó"0=K  BéEéé@é<684  E>;1>34>EK=  BC;4  M=M  0??  =L  B0=K   W i - F i  A¯;6MM=4  E0=40E  H00@4;030B09 . 
 
 C a s t  E89E89=  BC;4 ,  0??  B0=00A  4>B>>4  A¯;6MM=4  E>;1>34>EK3  E¯AME  ¯54   " " -3  A>=3>=>  CC .  "0  <é=  ¯¯=893  M=M  0??K=   i O S  B>E8@3>>=  4MM@  E>68<  7é2Héé@éE  1>;><6B>9 .g % d  EC2Lo>;><6B>9  BéEéé@é<6  109E3¯9o % @ -4  40<6CC;6  109=0o±"0=K  BéEéé@é<684  E>;1>34>EK=  BC;4  M=M  0??  =L  B0=K   W i - F i  A¯;6MM=4  E0=40E  H00@4;030B09 . 
 
 C a s t  E89E89=  BC;4 ,  ">E8@3>>  @CC300  >G86  BCA  0??K=   ">B>>4  A¯;6MM=89  E0=40;B " -K3  0A00=0  CC .ob-=M  CBA0=  4MM@E  ">E8@3>>  @CC  >G86 ,  >B>>4  A¯;6MM=89  E0=40;BK3  M=M  0??04  0A00A0=  MAME893  H0;30=0  CCo0<6CC;0;BK3  E>;1>6  109=0dCB0Ao%0<6CC;0E  E0@8;F0=  ¯9;4;893  ME;¯¯;AM=o5>B>>4  A¯;6MM=89  E0=40;B  0A00;BB09  MAME893  H0;30=0  CCd(##o#0<6CC;0E  E0@8;F0=  ¯9;4;893  4CCAA0=o 3 0  A5:C=4  C@03H;CC;0E  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do½'H[OÑ	P	V	c			Ú


!
,
[

Ñ
è
õÞí
&
O´{°¹s|Å             U              ò


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/mr.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFJVWIXTYZ[\]^_Q`abcIdefghiR`jEklmnJD^TJopqrJsT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlec			Gd		5	>	j		(	G		M	  		0	>f (	2	G	,	2 )l	*	?	(  				0  		0	>o	,	H	 		@		M	/	>  		K	2	@	5	0  		>	8	M	  		0	#	Gg	8	,		>	/		2h (	6	@	0	M	7	 )i (	8	,		>	/		2 )o=		*	2	M	/	>  		@	5	M	9	@  		#	?  	8	M	*	@		0	5	0  	.	@	!	?	/	>  		>	8	M	  		0	#	M	/	>	8	>	 	@  	8	M	*	0	M	6  		0	>o		>	8	M	  		0	#	G  	%	>		,	5	>d	*	?	(	fo		(	G		M	  		0	$  		9	G . . .g		>	9	?	0	>	$d		!	?	o (	!	?	5	M	9	>		8		G  	(	>	5 )g	,		&  		0	>h	0	&	M	&  		0	>n		(	G		M	  		0	$  		9	G_pin_cancel_buttond	*	?	(	hl		>	9	?	0	>	$  	5		3	>o		>	9	?	0	>	$  	*	M	0		$	@	*	%	>	5	0  		9	G . . .d	*	?	(	g_connecting_skip_button_welcome_cancel_buttono{		5	3	*	>	8		M	/	>  	!	?	5	M 
	9	>		8		M	/	>  	9	K	.	8	M		M	0	@	(	5	0  	&	>		5	2	G	2	>  	j  				@  	*	?	(  				0  		0	> .  	!	?	5	M 
	9	>		8  	.	>	2	   C h r o m e c a s t  	r	*	.	'	M 
	/	G  	*	?	(  	&	G		@	2  	6	K	'	B  	6		$	K .d	5		3	>o		K	#	$	>	9	@  	.	@	!	?	/	>  	(	?	5	!	2	>  	(	>	9	@o2	5	?	8	M	$	C	$  		G	2	G	2	>  	(	?	/		$	M	0	  	8		M	0	?	/  		0	#	M 
	/	>	8	>	 	@  		E	*  		0	>_pin_connect_buttond	*	?	(	i^skip_ad_button_pin_listen_button_welcome_ok_buttonj		M	0	E	  	(	?	5	!g	*	?	(  			>o	*	M	2	G  		0	>  	5	?	0	>	.  	&	M	/	>  		I		2  		0	>o (	!	?	5	M	9	>		8		@  	8	M	%	?	$	@ )f	6	@	0	M	7	o (			>	'	?	  	5	?	-	>	  	!	?	5	M	9	>		8		G  	(	>	5 )o!		5	3	*	>	8		M	/	>  	!	?	5	M 
	9	>		8	6	@  		(	G		M	  		0	>_welcome_skip_buttonh (		2	>		>	0 )]skip_ad_labeld		>	2	G_connecting_cancel_buttonn	/	>	5	0  		>	8	M	  		0	>oS		(	G		M 
	  		0	#	M 
	/	>		0	$	> ,  	*	?	(  			#	M 
	/	>	8	>	 	@  	$	A	.		M	/	>  	.	>	/		M	0	K	+	K	(		>  	$	>	$	M	*	A	0	$	>  	5	>	*	0  		G	2	>  		>		2 .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n ©¾Ëä,=PÍòû /8[j{¬µÎ			'	?
8
A
x
ß
ô
ý 4IX¼ÉKar¤Á             t              
j


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/mr.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELd		!	?	o 3 0  	8	G			&  	.	>		G  	(	M	/	>o		'	?	  		>	#	B	(  		M	/	>o*	$	A	.	M	9	@   % l d  	8	G			&	>	.	'	M 
	/	G  		>	9	?	0	>	$  	5		3	B  	6		$	> &h		M	0	E	   % dn		(	G		M	  		0	$  		9	Gh	*	M	2	G  		0	>oF	$	A	.		G   % @  		#	?  		>	8	M	  	!	?	5	M	9	>		8  			>	  	5	>	/ -	+	>	/  	(	G		5	0	M		5	0  		8	2	M	/	>		@  		>	$	M	0	@  		0	>o	8	,		>	/		2  		M	0	E	  	(	?	5	!	>o	.	@	!	?	/	>  	*	M	2	G	,	E	  	%	>		,	5	>k		>	9	@	9	@  	(	>	9	@c			Go		>	8	M 
	  		(	G		M 
	  		G	2	G	2	G  	(	>	9	@o@	/	>  	r	*	2	>  		>	8	M	  		0	#	M	/	>	8	>	 	@  	8	M	%	>	(	?	  	(	G		5	0	M	  	 
	E		M	8	G	8		@  		5	6	M	/		$	>  		9	GU--:--d	*	A	"	Gn	8	G		?			M	  	5	0  		>n	/	>	5	0  		>	8	M	  		0	>o	.	M	/	B	  	8	M	%	?	$	@  		I		2  		0	>g	8	,		>	/		2f		E	,	2	G	h	8	G		?			M	e	.	>		@	2o	$	A	.		M	/	>  	5	>	/ -	+	>	/		G  	(	G		5	0	M	  	$	*	>	8	>o		>	8	M 
	  		(	G		M 
	  		G	2	G  		9	Go	*	M	2	G  		0	>  	5	?	0	>	.  	&	M	/	>  		I		2  		0	>f	%	>		,	5	>o	$	A	.		M 
	/	>  	!	?	5	M 
	9	>		8	(	>  		(	G		M	  		0	#	M	/	>	8	>	 	@ ,  	/	>  	r	*	2	>  	$	A	.		M 
	/	>  	5	>	/ -	+	>	/  	(	G		5	0	M			M 
	/	>  	 
	E		M	8	G	8		@  		5	6	M	/		$	>  		9	G . 
 
	r	*  	$	A	.		M 
	/	>  	8	M 
	%	>	(	?	  	(	G		5	0	M		2	>  		(	G		M	  		0	#	M	/	>	8  	8	>			G	2  	$	G	5	M 
	9	>  		>	8	M	  		0	#	M	/	>	8	>	 	@   			G   	(	?	5	!	> .  	$	A	.	M 
	9	@  	/	>	8	>	 	@  	(		$	0	&	G		@	2  	/	>  	r	*		M 
	/	>   i O S  	8	G		?			M	  	/	>	.	'	M	/	G  		(	A	.	$	@  	&	G	
  	6		$	> .h % d  			M		Go		K	#	$	@	9	@  	!	?	5	M	9	>		8  			*	2	,	M	'  	(	>	9	@	$o % @  	5	0  		>	8	M	  		0	$  		9	GoÅ	$	A	.		M 
	/	>  	!	?	5	M 
	9	>		8	(	>  		(	G		M	  		0	#	M	/	>	8	>	 	@ ,  	/	>  	r	*	2	>  	$	A	.		M 
	/	>  	5	>	/ -	+	>	/  	(	G		5	0	M			M 
	/	>  	 
	E		M	8	G	8		@  		5	6	M	/		$	>  		9	G . 
 
		>	8	M 
	  		0	#	M	/	>	8	>	 	@ ,  	$	A	.		M 
	/	>  	8	G		?			M	  	5	0  		>  		#	?  	/	>  	r	*	8	>	 	@   	8	M	%	>	(	?	  	(	G		5	0	M	  	 
	E		M	8	G	8   	8	A	0	B  		0	> .oc	/	>  	+	K	(	5	0	@	2  	8	G		?			M	  	.	'	M	/	G  		>  		#	?  	/	>  	 
	E	*	8	>	 	@  	8	M	%	>	(	?	  	(	G		5	0	M	  	 
	E		M	8	G	8  	8	A	0	B  		G	2	>  		8	2	M	/	>		@  		>	$	M	0	@  		0	>o		>	8	M 
	  		(	G		M 
	  		0	$  		9	Gc	+	K	(o		>	8	M	  	8	$	M	0  	8	A	0	B  		>	2	Go1	8	M	%	>	(	?	  	(	G		5	0	M	  	 
	E		M	8	G	8  	8	A	0	B  		8	2	M	/	>		@  		>	$	M	0	@  		0	>f	2	>		5	M	9o		>	8	M	  	8	$	M	0  	8	.	>	*	M	$  		>	2	Go 3 0  	8	G			&  	+	I	0	5	0	M	!  		0	>  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dmµ:KÚ0GN				4	Q	~			«	¶	÷
(
c
pÚ
Yº,[             T              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ms.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROK[KelantanganWSambungW(Label)\Masukkan PIN_Menghantar ke Ruang TamuYSari KataW(title)Z(Subtitle)_;Sentuh untuk menghantar media ke TV dan Pembesar Suara anda_Berhenti menghantarTpin0k M e n y a m b u n g &UIklanUAudio](device name)UTutupUBatalZMenyambungW(Title)_pin_cancel_buttonTpin2]Langkau Iklan_Iklan sedang ditayangkan...Tpin1_connecting_skip_button_welcome_cancel_button_Masukkan PIN 4 digit yang dipaparkan pada skrin utama peranti berdekatan. Pemilik peranti boleh mendapatkan PIN dalam apl Chromecast juga.WLangkau_Tiada media dipilih_3Ketik untuk mengaktifkan pengawal yang dikembangkan_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button^Pemilihan LaguZDengar PIN_Togol main jeda_(device status)UTitle_(multizone device name)_Sambung ke peranti berdekatan_welcome_skip_buttonX(artist)]skip_ad_labelWSelesai_connecting_cancel_buttonYHantar ke_XUntuk bersambung, mikrofon anda akan digunakan untuk sementara waktu bagi mendengar PIN.   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¨°¸Åàêòý;QVmsy¦º¿Íëð	!®¶Ì				+	?	S	b	m				±	Ñ	ç	ð	þ

!
+             u              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ms.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudio^Mandir 30 saat_Ketahui lebih lanjut_-Anda boleh melangkau iklan dalam masa %ld ...WLagu %d]Menyambung keTMain_GPastikan %@ anda dan peranti cast menggunakan rangkaian Wi-Fi yang sama_Pilih runut sari kata_Hentikan main balik mediaUTiadaROK_Cast tidak disambungkan_<Apl ini memerlukan Akses Rangkaian Setempat untuk MenghantarU--:--ZSeterusnya_Pergi ke TetapanYHantar ke_Togol keadaan redam_Kapsyen TertutupVtabletWTetapanZSebelumnya_Semak rangkaian Wi-Fi anda_Cast disambungkan_Togol main jedaTJedaYSari Katao
 U n t u k   m e n y a m b u n g   k e   p e r a n t i   a n d a ,   a p l   i n i   m e m e r l u k a n   a k s e s   k e p a d a   r a n g k a i a n   W i - F i   a n d a . 
 
 U n t u k   m e m b u a t   P e n g h a n t a r a n ,   p i l i h    O K    a p a b i l a   a p l   m e m i n t a   u n t u k   m e n y a m b u n g   k e p a d a   r a n g k a i a n   s e t e m p a t   a n d a .   A n d a   j u g a   b o l e h   m e m b e n a r k a n   p e r k a r a   i n i   d a l a m   T e t a p a n   i O S   u n t u k   a p l   i n i .Z%d peratus_Tiada peranti yang tersedia_Menghantar ke %@oÁ U n t u k   m e n y a m b u n g   k e   p e r a n t i   a n d a ,   a p l   i n i   m e m e r l u k a n   a k s e s   k e p a d a   r a n g k a i a n   W i - F i   a n d a . 
 
 U n t u k   m e m b u a t   P e n g h a n t a r a n ,   p e r g i   k e   T e t a p a n   a n d a   d a n   h i d u p k a n    A k s e s   R a n g k a i a n   S e t e m p a t    u n t u k   a p l   i n i ._dPergi ke Tetapan pada telefon ini dan semak bahawa Akses Rangkaian Setempat dihidupkan untuk apl ini_Cast sedang menyambungWtelefon_Sesi Hantar bermula_,Pastikan Akses Rangkaian Setempat dihidupkanXLANGSUNG_Sesi Hantar tamat^Mundar 30 saat  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-djyÀÈÖÛ%=Y_b|»ÁÌßéÿ!,I]ot~

§
Å
Ø]ÄÝåû
*
3
G             U              
V


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/my.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFDQRSTFJUVWXSYZ[\]^_D`abcIdefghiQ`jEklmnJD^SJopqrJsS_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKc!6k;-: ::i (!
=>:8 )o:6+:  
7:+o'
7::8-/7   ,:/:1
:n,:8-/8;,8k (1+:8	: )l (,:8-/8 )o:7:   T V  >7:  . ,;,8-/7  ..,;,8 -/   ,:/::  -+o ,:/:<:8 -/  :<:8d:@n;-: :1
: &h <1,:<,o ( :9
:8!
: )g-::i/:1,7m;-: :1
:o:6+: _/:1,7 _/:d:Bj,:8-/8o <1,:<, -/   ;1,:<:8o <1,:<,<1
: . . .d:Ao;-: :<:8 _ ;1,:: _/:o-: : _/:1,7 _/:o!.8!,8>-   :O  :,; :>,1+:=:  <,81,  :8  D   -/68  :6+: -/  
7:+K   :-/:>:
:  :6+: -/   C h r o m e c a s t  ! ::=:  >,=17-/:
:Kh ;1,::o..,=1818+o;-/8;27,8
7:  -:8;/:>/: -/  :!/68</:  -/7+o:6+: _;-: :: _/:d:Co <1,:<, _ ;1,:: _/:o:6+: _,81,:: _/:o-: : _ o k _/:o.;:8/:  =18;:>/o:6+:  ,81,:<:8o=7:-/:J  :-/:
7:  /:o ( :9
:8  !<1!1 )i1+:8	:o (/:;,8=,>-   :!
: )o!.8!,8>-   :-/7  ;-: ::o-: : _ ;1,:: _/:l (!/
,>: )o <1,:<, _ ;1,:: _!
=>:8g<.8<.o;-: :<:8 _/:1,7 _/:o-/7 ,:/:<:8oR;-: ::!= :  :6+: -/  ,81,::  7:-/ :-//:8 -/  ,.!/68</+
:K   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£ºÍð'D[të )FWz·ìõ	
	9	`	i	¤	Õ8±êó$]±â
!
L
_

ÓP_Á             t              h


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/my.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELc!6o 9 7:  C@  1, :-/7  <:::n-/-/17,:o2:
:   % l d   <,;>:   <1,:<, -/   ;1,:-/:+
: . . .n.;:8/:   % do-/7  ;-: :1
:k=:7,8
:ob:O   % @  >7:   ,:/:-/:
7: :  -/7
:   W i - F i   =: ::/
:8-/7  ;-: :,8 <1,:8  1;,+1o&,:8<,8
:7  .;:8/: -/  =18:o..,=7:<:8 -/  ::d>-ROKo ,:  ;-: :,8+oA ' ,:/:: '  $! ::    '!-:=:8/68 =: :  !/68</=7: '  -/
:U--:--h>17-/7o ::;,8-/7  =,8:o-/7 ,:/:<:8o!6-:<:8  !=7:!-:/:j,:8;,8g : :j ::;,8d:o:O   W i - F i   =: : -/  :18+o ,:  ;-: :,8
:o=7:-/:J  :-/:
7:  /:k:,8
:n,:8-/8;,8oö7: :;,8 -/  ;-: ::  $! ::   7:   W i - F i   =: :  /68=7:-/
:K 
 
 ' ,:/:: '  != :  7:!-:=:8/68 =: :-/7  ;-: ::  ! :: 1,:8-/,
7:!+   " O K "   -/  =18+K  $! ::!= :  N:8 -/  1, :-/:8=:   i O S   ::;,8L  =7:</-/:+
:Kk % d  ,>/:8o :9
:8;,8  -/:+o % @  -/7   ,:/:1
:o7: :;,8 -/  ;-: ::  $! ::   7:   W i - F i   =: :  /68=7:-/
:K 
 
 ' ,:/:: '  $! ::!= :   "!-:=:8/68 =: :  !/68</=7: "   -/  =7:+Kov$/:8=:    ::;,8   -/7=,8<.8  $! ::!= :   !-:=:8/68 =: :  !/68</=7:   =7:,8<:8  >-J  >-  :18+o ,:  ;-: :1
:e/:8o% ,::>:18,8
:7!;-:  :+<.o> !-:=:8/68 =: :  !/68</=7:   =7:,8 <1,:8  1;,+1j-/ :-/ :o) ,::>:18,8
:7!;-:  <.8=,8+<.o 9 7:  C@  !>17-/7  ::  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dk¬É0MtR¡Øáä	
			©	Ø	ý
:
O
^
s
|
»
ä#:W
F
]

½æÕüTÓè=             U              v


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ne.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlee	 	?	  	g	-	K	2	M	/	A	.j		K	!	M	(	A	9	K	8	MW(Label)n P I N  	9	>	2	M	(	A	9	K	8	Mo	,	H	 	  		K	 	>	.	>   C a s t i n g  		0	M	&	Hk			*	6	@	0	M	7		9	0	BW(title)Z(Subtitle)o;	$	*	>				>  		?	-	@  	0  	8	M	*	?		0	9	0	B	.	>  	.	?	!	?	/	>   c a s t  		0	M	(		>  	2	>		?  		A	(	A	9	K	8	Mo c a s t i n g  	0	K		M	(	A	9	K	8	MTpin0i		K	!	M	&	H . . .h	5	?		M		>	*	(e		!	?	/	K](device name)n	,	(	M	&  		0	M	(	A	9	K	8	Mn	0	&	M	&  		0	M	(	A	9	K	8	Mf		K	!	M	&	HW(Title)_pin_cancel_buttonTpin2h			*	6	@	0	M	7	o	5	?		M		>	*	(  	9		>			(	A	9	K	8	Mo	5	?		M		>	*	(  		>	0	@  	 . . .Tpin1_connecting_skip_button_welcome_cancel_buttonou	(		?		H		K  			*		0	#		K  		C	9  	8	M		M	0	?	(	.	>  	&	G		>				K  	j  					K   P I N  	9	>	2	M	(	A	9	K	8	M	d  			*		0	#  	.	>	2	?		2	G  	*	(	?   C h r o m e c a s t  		*	.	>   P I N  	+	G	2	>  	*	>	0	M	(  	8		M		do	8	M		?	*  		0	M	(	A	9	K	8	Mo		A	(	H  	*	(	?  	.	?	!	?	/	>  		/	(  		0	?			K  		H	(o7	5	?	8	M	$	C	$  		0	?			K  	(	?	/	(	M	$	M	0		2	>	  	8		M	0	?	/  		0	M	(  		M	/	>	*  		0	M	(	A	9	K	8	M_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonj		M	0	/	>	  		/	(n P I N  	8	A	(	M	(	A	9	K	8	Mo-	*	M	2	G  		0	M	(	G  	0  	*	  		0	M	(	G  	8	A	5	?	'	>	,	?	  			2  		0	M	(	G  	,		(_(device status)UTitle_(multizone device name)o	5	0	*	0		K  	/	(	M	$	M	0	8		  		K	!	M	(	A	9	K	8	M_welcome_skip_buttonX(artist)]skip_ad_labelk	8	.	M	*	(	M	(  	-	/	K_connecting_cancel_buttono	/	8	.	>   c a s t  		0	M	(	A	9	K	8	MoO		K	!	M	(	G  	*	M	0	/	K		(		>  	2	>		?   P I N  	8	A	(	M	(  	$	*	>				K  	.	>			M	0	K	+	K	(  		8	M	%	>	/	@  	0	B	*	.	>  	*	M	0	/	K	  		0	?	(	G  	   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¤³ÈÐí"9ALÅìñ .Khu}§Ð÷ü		-

;
z
ë (<QnËÝãý6LUcz¾             v              
_


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ne.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe		!	?	/	Ko	i	f  	8	G		G	(	M	!  	*		>	!	?  	2	H		>	(	A	9	K	8	Mm	%	*  		>	(	M	(	A	9	K	8	Mo1	$	*	>		   % l d  	8	G		G	(	M	!	.	>  	5	?		M		>	*	(  		K	!	M	(  	8		M	(	A	9	A	(	M	   . . .j		M	0	M	/	>	   % do	(	?	.	M	(  	!	?	-	>		8	.	>  		K	!	?		&	Hn	*	M	2	G  		0	M	(	A	9	K	8	Mo]	$	*	>				K   % @  	0   c a s t  	/	(	M	$	M	0  			9	@   W i - F i  	(	G		5	0	M		.	>  		(	G		M	  		0	?			>  		(	M  	-	(	M	(	G  		A	0	>  	8	A	(	?	6	M		?	$  		0	M	(	A	9	K	8	Mo#			*	6	@	0	M	7		9	0	B		K  		M	0	M	/	>	  		/	(  		0	M	(	A	9	K	8	Mo	.	?	!	?	/	>		K  	*	M	2	G	,	M	/	>	  	0	K		M	(	A	9	K	8	Mm		A	(	H  	*	(	?  	9	K		(e	 	?	  	o C a s t  		(	G		M	  	-			K  		H	(o@		>	8	M	  		0	M	(  	/	K  		*	2	>	  	8	M	%	>	(	@	/  	(	G		5	0	M	  	*	M	0	/	K	  		0	M	(  	&	?	(	A  	*	0	M	(	G  	9	A	(	M	U--:--e		0	M		Ko	8	G		?		.	>  		>	(	A	9	K	8	Mo	/	8	.	>   c a s t  		0	M	(	A	9	K	8	Mo	.	M	/	B			K  		5	8	M	%	>	2	>	  			2  		0	M	(	A	9	K	8	Mo	5	?	8	M	$	C	$  			* -	6	@	0	M	7		9	0	Bi		M	/	>	,	M	2	G	e	8	G		?	g			?	2	M	2	Ko		+	M	(	K   W i - F i  	(	G		5	0	M	  		>			M	(	A	9	K	8	Mo C a s t  		(	G		M	  	-			K  	o-	*	M	2	G  		0	M	(	G  	0  	*	  		0	M	(	G  	8	A	5	?	'	>	,	?	  			2  		0	M	(	G  	,		(l	*	  		0	M	(	A	9	K	8	Mk			*	6	@	0	M	7		9	0	Boý	$	*	>				>  	/	(	M	$	M	0	8		  		(	G		M	  		0	M	(  	/	K  		*	2	>	  	$	*	>				K   W i - F i  	(	G		5	0	M	  	*	M	0	/	K	  		0	M	(  	&	?	(	A  	*	0	M	(	G  	9	A	(	M		d 
 
		>	8	M	  		0	M	(  		*	2	G  	$	*	>				K  	8	M	%	>	(	@	/  	(	G		5	0	M		.	>  		(	G		M	  		0	M	(	G  		(	A	.	$	?  	.	>		M	&	>   	 	?	  	   		/	(  		0	M	(	A	9	K	8	M	d  	$	*	>		  	*		?   i O S  		>  	8	G		?		.	>  			0  	*	(	?  	/	K  		*	2	>	  				M	$  		(	A	.	$	?  	&	?	(  	8		M	(	A	9	A	(	M		dj % d  	*	M	0	$	?	6	$o		A	(	H  	*	(	?  	/	(	M	$	M	0  			*	2	,	M	'  		H	(o % @  	.	>   C a s t  		0	M	&	HoÁ	$	*	>				>  	/	(	M	$	M	0	8		  		(	G		M	  		0	M	(  	/	K  		*	2	>	  	$	*	>				K   W i - F i  	(	G		5	0	M	  	*	M	0	/	K	  		0	M	(  	&	?	(	A  	*	0	M	(	G  	9	A	(	M		d 
 
		>	8	M	  		0	M	(  		+	M	(	K  	!	?	-	>		8		K  	8	G		?		.	>  		>	(	A	9	K	8	M  	0  	/	K  		*	2	>	   	8	M	%	>	(	@	/  	(	G		5	0	M	  	*	M	0	/	K	  		0	M	(	G  		(	A	.	$	?   	&	?	(	A	9	K	8	M	dor	/	K  	+	K	(		K  	8	G		?		.	>  		>	(	A	9	K	8	M  		(	?  	/	K  		*	2	>	  	8	M	%	>	(	@	/  	(	G		5	0	M	  	*	M	0	/	K	  		0	M	(	G  		(	A	.	$	?  	&	?				K  	  	-	(	M	(	G  		A	0	>  	8	A	(	?	6	M		?	$  		0	M	(	A	9	K	8	Mo C a s t  		(	G		M	  	9	A		&	H  	c	+	K	(o C a s t  	8	.	M	,	(	M	'	@  	8	$	M	0  	8	A	0	A  	-	/	KoK	8	M	%	>	(	@	/  	(	G		5	0	M	  	*	M	0	/	K	  		0	M	(	G  		(	A	.	$	?  	&	?				K  	  	-	(	M	(	G  		A	0	>  	8	A	(	?	6	M		?	$  		0	M	(	A	9	K	8	Md	2	>		-o C a s t  	8	.	M	,	(	M	'	@  	8	$	M	0  	8	.	>	*	M	$  	-	/	Ko	i	f  	8	G		G	(	M	!  			>	!	?  	,	"	>			(	A	9	K	8	M  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do¨Ã(=lFÌçò		 	¦	±	Ô	ý
>
i
|


×
þ[t


Ô
÷|cÌen«             U              ä


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/nl.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKVVolumeYVerbindenW(Label)_Pincode opgeven_Casten naar woonkamer[OndertitelsW(title)Z(Subtitle)_-Tik om media te casten naar je tv en speakers^Casten stoppenTpin0_Verbinding maken...[AdvertentieUAudio](device name)WSluitenYAnnuleren_Verbinding makenW(Title)_pin_cancel_buttonTpin2]Ondertiteling_Advertentie overslaan_Advertentie wordt afgespeeld...Tpin1_connecting_skip_button_welcome_cancel_button_´Geef de viercijferige pincode op die wordt weergegeven op het startscherm van een apparaat in de buurt. De eigenaar van het apparaat kan de pincode ook vinden in de Chromecast-app.YOverslaan_Geen media geselecteerd_)Tik om uitgevouwen bediening te activeren_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button]Trackselectie_Pincode detecteren_$Schakelaar voor afspelen/onderbreken_(device status)UTitle_(multizone device name)_-Verbinding maken met een apparaat in de buurt_welcome_skip_buttonX(artist)]skip_ad_labelUKlaar_connecting_cancel_button[Casten naar_hJe microfoon wordt tijdelijk gebruikt om een pincode te detecteren, zodat verbinding kan worden gemaakt.   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£­µÇßëóþ.=BXdjx¥¹¾Ìä$<óý		C	X	]	l			¢	·	Þ	ð	ö

@
V
_
m
s

             v              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/nl.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudio_30 seconden terug_Meer informatie_-Je kunt de advertentie overslaan over %ld ...XTrack %d_Verbinding maken metXAfspelen_PZorg dat je %@ en het cast-apparaat verbinding hebben met hetzelfde wifi-netwerk_"Een ondertitelingstrack selecteren_Afspelen van media stoppenTGeenROK_Casten, niet verbonden_7Deze app heeft lokale netwerktoegang nodig om te castenU--:--XVolgende_Ga naar 'Instellingen'[Casten naar_Dempen aan-/uitzetten]OndertitelingVtablet\InstellingenVVorige_Check je wifi-netwerk_Casten, verbonden_$Schakelaar voor afspelen/onderbreken[Onderbreken[Ondertitels_Deze app heeft toegang tot je wifi-netwerk nodig om verbinding te maken met je apparaten.

Als je wilt casten, selecteer je OK als de app toestemming vraagt om verbinding te maken met je lokale netwerk. Je kunt dit ook later doen in de iOS-instellingen voor deze app.Z%d procent_Geen apparaten beschikbaar_Er wordt gecast naar %@_½Deze app heeft toegang tot je wifi-netwerk nodig om verbinding te maken met je apparaten.

Als je wilt casten, ga je naar 'Instellingen' en zet je 'Lokale netwerktoegang' aan voor deze app._^Ga naar Instellingen op deze telefoon en ga na of lokale netwerktoegang aanstaat voor deze app_Casten, verbinding makenXtelefoon_Cast-sessie gestart_'Zorg dat lokale netwerktoegang aanstaatTLIVEo C a s t - s e s s i e   b e ë i n d i g d_30 seconden vooruit  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dj~ÀÉàé<a~Ùßè
%3:GNfz¡­¹	È	Ó	ð


Ê+FOeÁ             U              ×


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/no.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKUVolumYKoble tilW(Label)_Skriv inn PIN-koden_Caster til stuen\UnderteksterW(title)Z(Subtitle)o1 T r y k k   f o r   å   c a s t e   m e d i e r   t i l   T V - e n   o g   h ø y t t a l e r n e_Stopp castingenTpin0l K o b l e r   t i l   &WAnnonseSLyd](device name)TLukkVAvbrytZKobler tilW(Title)_pin_cancel_buttonTpin2_Hopp over annonseno A n n o n s e   p å g å r   &Tpin1_connecting_skip_button_welcome_cancel_buttono S k r i v   i n n   d e n   f i r e s i f r e d e   P I N - k o d e n   d u   s e r   p å   s t a r t s k j e r m e n   t i l   e n   e n h e t   i   n æ r h e t e n .   E i e r e n   a v   e n h e t e n   k a n   o g s å   s e   P I N - k o d e n   i   C h r o m e c a s t - a p p e n .YHopp over_Ingen medier er valgto. T r y k k   f o r   å   a k t i v e r e   d e n   u t v i d e d e   k o n t r o l l e r e n_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonXSporvalgo H ø r   e t t e r   P I N - k o d eo S p i l l   a v   /   s e t t   p å   p a u s e_(device status)UTitle_(multizone device name)o K o b l e   t i l   e n   e n h e t   i   n æ r h e t e n_welcome_skip_buttonX(artist)]skip_ad_labelVFerdig_connecting_cancel_buttonXCast tiloY M i k r o f o n e n   d i n   b r u k e s   m i d l e r t i d i g   f o r   å   r e g i s t r e r e   e n   P I N - k o d e ,   s l i k   a t   d u   k a n   k o b l e   t i l .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¢¬´ÊÝêòýbty¬±¸ÃËßäù8P	s	}		ô
	


1
E
N
u
¨
º
À
Ú-6DKfo             u              $


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/no.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLM1NOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELSLyd_Spol 30 sekunder tilbake[Finn ut mer_!Du kan hoppe over annonsen om %ldWSpor %dZKobler tilXSpill av_=Sjekk at %@ og Cast-enheten er koblet til samme Wifi-nettverk_Velg et spor for teksting_Stopp medieavspillingenUIngenROk^Ikke tilkobletoG D e n n e   a p p e n   t r e n g e r   t i l g a n g   t i l   d e t   l o k a l e   n e t t v e r k e t   f o r   å   k u n n e   c a s t eU--:--UNesteo G å   t i l   i n n s t i l l i n g e rXCast tilo S l å   l y d e n   a v   e l l e r   p åo T e k s t i n g   f o r   h ø r s e l s h e m m e d e[nettbrettet]InnstillingerWForrige_Sjekk Wifi-nettverket dittYTilkobleto S p i l l   a v   /   s e t t   p å   p a u s eUPause\Underteksteroù D e n n e   a p p e n   t r e n g e r   t i l g a n g   t i l   w i f i - n e t t v e r k e t   f o r   å   k u n n e   k o b l e   s e g   t i l   e n h e t e n e   d i n e . 
 
 F o r   å   c a s t e ,   v e l g   « O K »   n å r   a p p e n   b e r   o m   å   f å   k o b l e   s e g   t i l   d e t   l o k a l e   n e t t v e r k e t .   D u   k a n   o g s å   g i   t i l g a n g   t i l   d e t t e   s e n e r e   i   i O S - i n n s t i l l i n g e n e   f o r   d e n n e   a p p e n .Z%d prosent_Ingen enheter er tilgjengelige]Caster til %@o° D e n n e   a p p e n   t r e n g e r   t i l g a n g   t i l   w i f i - n e t t v e r k e t   f o r   å   k u n n e   k o b l e   s e g   t i l   e n h e t e n e   d i n e . 
 
 F o r   å   c a s t e ,   g å   t i l   i n n s t i l l i n g e n e   o g   s l å   p å   « L o k a l   n e t t v e r k s t i l g a n g »   f o r   d e n n e   a p p e n .og G å   t i l   I n n s t i l l i n g e r   p å   d e n n e   t e l e f o n e n ,   o g   s j e k k   a t   l o k a l   n e t t v e r k s t i l g a n g   e r   s l å t t   p å   f o r   d e n n e   a p p e nYtelefoneno C a s t e ø k t e n   e r   s t a r t e to( S ø r g   f o r   a t   l o k a l   n e t t v e r k s t i l g a n g   e r   p åWDIREKTEo C a s t e ø k t e n   e r   a v s l u t t e t_Spol 30 sekunder fremover  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dh³»ÆÏ+EKN]îôú%.[ ®¶ÓÝ			##DRµ


½I             T              e


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/pl.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKh GB o[ n o[f P oB c zW(Label)]Wpisz kod PINo P r z e s yB a n i e   d o   s a l o n uVNapisyW(title)Z(Subtitle)o8 K l i k n i j ,   b y   p r z e s yB a   m u l t i m e d i a   n a   t e l e w i z o r   i   gB o[ n i k io Z a t r z y m a j   p r z e s yB a n i eo p o z y c j a   0   k o d u   p i nhA c z . . .WReklamaf Dz w i k](device name)WZamknijVAnulujeA c zW(Title)_#przycisk anuluj na ekranie kodu pino p o z y c j a   2   k o d u   p i nm P o m iD   r e k l a mo W y[ w i e t l a m   r e k l a m &o p o z y c j a   1   k o d u   p i no$ p r z y c i s k   p o m iD   n a   e k r a n i e   p oB c z e n i a_$przycisk anuluj na ekranie powitaniao W p i s z   4 - c y f r o w y   k o d   P I N   w y[ w i e t l a n y   n a   e k r a n i e   gB ó w n y m   u r z d z e n i a   w   p o b l i| u .   WB a[ c i c i e l   u r z d z e n i a   z n a j d z i e   g o   t e|   w   a p l i k a c j i   C h r o m e c a s t .e P o m iDo N i e   w y b r a n o   m u l t i m e d i ó wo) K l i k n i j ,   b y   wB c z y   r o z s z e r z o n y   k o n t r o l e ro# p r z y c i s k   p oB c z   n a   e k r a n i e   k o d u   p i no p o z y c j a   3   k o d u   p i no p r z y c i s k   p o m i n i c i a   r e k l a m yo& p r z y c i s k   n a sB u c h u j   n a   e k r a n i e   k o d u   p i n_ przycisk ok na ekranie powitanial W y b ó r   u t w o r uo N a sB u c h u j   k o d u   P I No O d t w ó r z / w s t r z y m a j_(device status)UTitleo" ( n a z w a   u r z d z e n i a   w i e l o s t r e f o w e g o )o" P oB c z   s i   z   u r z d z e n i e m   w   p o b l i| uo# p r z y c i s k   p o m iD   n a   e k r a n i e   p o w i t a n i aX(artist)o e t y k i e t a   p o m i n i c i a   r e k l a m yVGotoweo% p r z y c i s k   a n u l u j   n a   e k r a n i e   p oB c z e n i ak P r z e[ l i j   n aoV A b y   n a w i z a   p oB c z e n i e ,   t y m c z a s o w o   z o s t a n i e   u| y t y   m i k r o f o n   d o   n a sB u c h i w a n i a   k o d u   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n­ºÂÐý·Þï÷!,4ZÅì	7	^
u

±Ov¯þ!:aå
,
u
~
·
¾"             u              Ñ


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/pl.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELf Dz w i ko P r z e w iD   3 0   s   d o   t yB uo W i c e j   i n f o r m a c j io M o| e s z   p o m i n   r e k l a m   z a   % l d &h U t w ó r   % dgA c z   zg O d t w ó r zoJ U p e w n i j   s i ,  | e   % @   o r a z   u r z d z e n i e   p r z e s yB a j c e   s   w   t e j   s a m e j   s i e c i   W i - F io W y b i e r z  [ c i e| k   n a p i s ó wo! Z a t r z y m a j   o d t w a r z a n i e   m u l t i m e d i ó wTBrakROKo P r z y c i s k   C a s t ,   b r a k   p oB c z e n i aoE P r z e s yB a n i e   z a   p o m o c   t e j   a p l i k a c j i   w y m a g a   d o s t p u   p r z e z   s i e   l o k a l nU--:--UDalejo O t w ó r z   U s t a w i e n i ak P r z e[ l i j   n ao P r z eB c z   w y c i s z e n i eVNapisyVtabletZUstawieniaVWsteczo S p r a w dz   s i e   W i - F io P r z y c i s k   C a s t ,   p oB c z o n oo O d t w ó r z / w s t r z y m a jYWstrzymajo
 A b y   t a   a p l i k a c j a   m o gB a   p oB c z y   s i   z   T w o i m i   u r z d z e n i a m i ,   p o t r z e b u j e   d o s t p u   d o   s i e c i   W i - F i . 
 
 A b y   wB c z y   p r z e s yB a n i e ,   w y b i e r z    O K  ,   g d y   a p l i k a c j a   p o p r o s i   o   p oB c z e n i e   z   s i e c i   l o k a l n .   M o| e s z   t e|   z e z w o l i   n a   t o   p óz n i e j   w   u s t a w i e n i a c h   i O S   d o t y c z c y c h   t e j   a p l i k a c j i .j % d   p r o c e n to B r a k   d o s t p n y c h   u r z d z eDo P r z e s yB a m   n a :   % @oÂ A b y   t a   a p l i k a c j a   m o gB a   p oB c z y   s i   z   T w o i m i   u r z d z e n i a m i ,   p o t r z e b u j e   d o s t p u   d o   s i e c i   W i - F i . 
 
 A b y   wB c z y   p r z e s yB a n i e ,   p r z e j dz   d o   u s t a w i eD   i   wB c z   d l a   t e j   a p l i k a c j i    D o s t p   p r z e z   s i e   l o k a l n  .of O t w ó r z   u s t a w i e n i a   n a   t y m   t e l e f o n i e   i   s p r a w dz ,   c z y   d l a   t e j   a p l i k a c j i   wB c z o n o   D o s t p   p r z e z   s i e   l o k a l no P r z y c i s k   C a s t ,  B c zWtelefono P r z e s yB a n i e   r o z p o c z t eo/ S p r a w dz ,   c z y   wB c z o n o   D o s t p   p r z e z   s i e   l o k a l ng N A  { Y W Oo P r z e s yB a n i e   z a k oD c z o n eo 3 0   s e k u n d   d o   p r z o d u  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dqÁ  /Æ÷<AD				A	X					¡	È	û
 
*BW­4.6eÆÕ             T              -


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/pt.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROkVVolumeXConectarW(Label)]Inserir o PINo* T r a n s m i t i n d o   c o n t e ú d o   p a r a   a   s a l a   d e   e s t a rXLegendasW(title)Z(Subtitle)o< T o q u e   p a r a   t r a n s m i t i r   m í d i a   p a r a   s u a   T V   e   s e u s   a l t o - f a l a n t e so P a r a r   t r a n s m i s s ã oTpin0k C o n e c t a n d o &g A n ú n c i oe Á u d i o](device name)VFecharXCancelarZConectandoW(Title)_pin_cancel_buttonTpin2WLegendam P u l a r   a n ú n c i oo A n ú n c i o   e m   a n d a m e n t o &Tpin1_connecting_skip_button_welcome_cancel_buttono I n s i r a   o   P I N   d e   q u a t r o   d í g i t o s   e x i b i d o   n a   t e l a   i n i c i a l   d e   u m   d i s p o s i t i v o   p r ó x i m o .   O   p r o p r i e t á r i o   d o   d i s p o s i t i v o   t a m b é m   p o d e   e n c o n t r a r   o   P I N   n o   a p p   C h r o m e c a s t .UPularo N e n h u m a   m í d i a   s e l e c i o n a d a_&Toque para ativar o controle expandido_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono S e l e ç ã o   d e   f a i x a sYOuvir PINo- B o t ã o   d e   a l t e r n â n c i a   p a r a   r e p r o d u z i r   e   p a u s a r_(device status)UTitle_(multizone device name)o" C o n e c t e - s e   a   d i s p o s i t i v o s   p r ó x i m o s_welcome_skip_buttonX(artist)]skip_ad_labelROK_connecting_cancel_button_Transmitir paraoO D u r a n t e   a   c o n e x ã o ,   o   m i c r o f o n e   s e r á   u s a d o   t e m p o r a r i a m e n t e   p a r a   d e t e c t a r   u m   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£¬´Â"*5°ÕÚñ  )4<PU]x¥ªÃÛ

 
U
~


§
»
Ï
ô
þ[msÔêó1             v              Ò


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/pt.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe Á u d i o_Voltar 30 segundosZSaiba maiso# V o c ê   p o d e   p u l a r   o   a n ú n c i o   e m   % l d . . .XFaixa %d_Conectando-se aUTocaroT C o n f i r a   s e   o   % @   e   s e u   d i s p o s i t i v o   d e   t r a n s m i s s ã o   e s t ã o   c o n e c t a d o s   à   m e s m a   r e d e   W i - F i_'Selecionar uma faixa de closed captionsk P a r a r   m í d i aWNenhumaROKo  B o t ã o   " T r a n s m i t i r "   n ã o   c o n e c t a d oo8 E s t e   a p p   p r e c i s a   d e   a c e s s o   à   r e d e   l o c a l   p a r a   t r a n s m i s s ã oU--:--g P r ó x i m ao A b r i r   c o n f i g u r a ç õ e s_Transmitir para_Ativar ou desativar o som_Closed captionsVtabletm C o n f i g u r a ç õ e sXAnterior_Verificar sua rede Wi-Fio B o t ã o   " T r a n s m i t i r "   c o n e c t a d oo- B o t ã o   d e   a l t e r n â n c i a   p a r a   r e p r o d u z i r   e   p a u s a rVPausarXLegendasoð P a r a   s e   c o n e c t a r   a o s   s e u s   d i s p o s i t i v o s ,   e s t e   a p p   p r e c i s a   d e   a c e s s o   à   r e d e   W i - F i . 
 
 P a r a   t r a n s m i t i r ,   s e l e c i o n e   " O K "   q u a n d o   o   a p p   s o l i c i t a r   c o n e x ã o   à   r e d e   l o c a l .   V o c ê   t a m b é m   p o d e   p e r m i t i r   i s s o   m a i s   t a r d e   n a s   c o n f i g u r a ç õ e s   d o   i O S   p a r a   e s t e   a p p .\%d por centoo N e n h u m   d i s p o s i t i v o   d i s p o n í v e l_Transmitindo para %@o§ P a r a   s e   c o n e c t a r   a o s   s e u s   d i s p o s i t i v o s ,   e s t e   a p p   p r e c i s a   d e   a c e s s o   à   r e d e   W i - F i . 
 
 P a r a   t r a n s m i t i r ,   a c e s s e   a s   c o n f i g u r a ç õ e s   e   a t i v e   " A c e s s o   à   r e d e   l o c a l "   p a r a   e s t e   a p p .oj A c e s s e   a s   c o n f i g u r a ç õ e s   d o   s e u   s m a r t p h o n e   e   v e r i f i q u e   s e   a   o p ç ã o   " A c e s s o   à   r e d e   l o c a l "   e s t á   a t i v a d a   n o   a p po B o t ã o   " T r a n s m i t i r "   c o n e c t a n d oZsmartphoneo A   s e s s ã o   d e   t r a n s m i s s ã o   c o m e ç o uo. C o n f e r i r   s e   o   a c e s s o   à   r e d e   l o c a l   e s t á   a t i v a d oWAO VIVOo  A   s e s s ã o   d e   t r a n s m i s s ã o   t e r m i n o uo A v a n ç a r   3 0   s e g u n d o s  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-doØáóù¤Îåíð3¦¬»äö		$	+	F	O	j	¥

	
õ?V
§~»Æfn±             U              Ú


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/pt_PT.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTOFUVWXYTZ[\]^_`QabcdIefghijRakElmnoUD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKVVolumeULigarW(Label)_Introduza o PINo+ A   t r a n s m i t i r   c o n t e ú d o   p a r a   a   s a l a   d e   e s t a r &XLegendasW(title)Z(Subtitle)oF T o q u e   p a r a   t r a n s m i t i r   c o n t e ú d o   m u l t i m é d i a   p a r a   a   s u a   T V   e   a l t i f a l a n t e so P a r a r   t r a n s m i s s ã oTpin0h A   l i g a r &g A n ú n c i oe Á u d i o](device name)VFecharXCancelarW(Title)_pin_cancel_buttonTpin2WLegendao I g n o r a r   a n ú n c i oo A n ú n c i o   e m   c u r s o &Tpin1_connecting_skip_button_welcome_cancel_buttono­ I n t r o d u z a   o   P I N   d e   q u a t r o   d í g i t o s   a p r e s e n t a d o   n o   e c r ã   p r i n c i p a l   d e   u m   d i s p o s i t i v o   p r ó x i m o .   O   p r o p r i e t á r i o   d o   d i s p o s i t i v o   t a m b é m   p o d e   e n c o n t r a r   o   P I N   n a   a p l i c a ç ã o   C h r o m e c a s t .WIgnoraro& N e n h u m   c o n t e ú d o   m u l t i m é d i a   s e l e c i o n a d o_)Toque para ativar o controlador expandido_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono S e l e ç ã o   d e   f a i x a sYOuvir PINo A l t e r n a r   e n t r e   r e p r o d u ç ã o / p a u s a_(device status)UTitle_(multizone device name)o L i g u e   a   u m   d i s p o s i t i v o   p r ó x i m o_welcome_skip_buttonX(artist)]skip_ad_labeli C o n c l u í d o_connecting_cancel_button_Transmita para:oM P a r a   l i g a r ,   o   s e u   m i c r o f o n e   s e r á   u t i l i z a d o   t e m p o r a r i a m e n t e   p a r a   o u v i r   u m   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£©±Ã%-8Çìñ*1:BV[c©®Çß
<
D

¿
Ô
Ù
è
ü5?²ñ1L^             u              û


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/pt_PT.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe Á u d i o_Retroceder 30 segundosZSaber maiso% P o d e   i g n o r a r   o   a n ú n c i o   d e n t r o   d e   % l d &XFaixa %dj A   l i g a r   a &ZReproduziroZ C e r t i f i q u e - s e   d e   q u e   o   % @   e   o   d i s p o s i t i v o   d e   t r a n s m i s s ã o   e s t ã o   l i g a d o s   à   m e s m a   r e d e   W i - F i ._Selecionar faixa de legendaso P a r a r   r e p r o d u ç ã o   d e   m u l t i m é d i aXNenhumasROKo T r a n s m i s s ã o   n ã o   l i g a d aoC E s t a   a p p   n e c e s s i t a   d e   a c e s s o   à   r e d e   l o c a l   p a r a   t r a n s m i t i r   c o n t e ú d o sU--:--XSeguinteo A c e d e r   à s   D e f i n i ç õ e s_Transmita para:_Ativar/desativar somXLegendasVtabletj D e f i n i ç õ e sXAnterior_Verifique a sua rede Wi-Fio T r a n s m i s s ã o   l i g a d ao A l t e r n a r   e n t r e   r e p r o d u ç ã o / p a u s aVPausaro P a r a   l i g a r   a o s   s e u s   d i s p o s i t i v o s ,   e s t a   a p p   n e c e s s i t a   d e   a c e s s o   à   r e d e   W i - F i . 
 
 P a r a   t r a n s m i t i r   c o n t e ú d o s ,   s e l e c i o n e   " O K "   q u a n d o   a   a p p   p e d i r   p a r a   e s t a b e l e c e r   l i g a ç ã o   à   r e d e   l o c a l .   T a m b é m   p o d e   c o n c e d e r   a u t o r i z a ç ã o   m a i s   t a r d e   n a s   D e f i n i ç õ e s   d o   i O S   p a r a   e s t a   a p p .\%d por centoo N e n h u m   d i s p o s i t i v o   d i s p o n í v e lo A   t r a n s m i t i r   p a r a   % @ &o± P a r a   l i g a r   a o s   s e u s   d i s p o s i t i v o s ,   e s t a   a p p   n e c e s s i t a   d e   a c e s s o   à   r e d e   W i - F i . 
 
 P a r a   t r a n s m i t i r   c o n t e ú d o s ,   a c e d a   à s   D e f i n i ç õ e s   e   a t i v e   a   o p ç ã o   " A c e s s o   à   r e d e   l o c a l "   p a r a   e s t a   a p p .od A c e d a   à s   D e f i n i ç õ e s   n e s t e   t e l e m ó v e l   e   v e r i f i q u e   s e   o   a c e s s o   à   r e d e   l o c a l   e s t á   a t i v a d o   p a r a   e s t a   a p p .o T r a n s m i s s ã o   e m   l i g a ç ã oi t e l e m ó v e lo0 A   s e s s ã o   d e   t r a n s m i s s ã o   d e   c o n t e ú d o   f o i   i n i c i a d ao7 C e r t i f i q u e - s e   d e   q u e   o   a c e s s o   à   r e d e   l o c a l   e s t á   a t i v a d oYEM DIRETOo1 A   s e s s ã o   d e   t r a n s m i s s ã o   d e   c o n t e ú d o   f o i   t e r m i n a d ao A v a n ç a r   3 0   s e g u n d o s  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-doàéþ	Àß'*Yâèñ		.	E	N	U	j	s		·	ø	ÿQ~
ã®ÝðSÄÎ3             T              \


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ro.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKUVolumi C o n e c t a iW(Label)o I n t r o d u c e i   c o d u l   P I No S e   p r o i e c t e a z   î n   c a m e r a   d e   z ij S u b t i t r r iW(title)Z(Subtitle)oF A t i n g e i   p e n t r u   a   p r o i e c t a   c o n i n u t   m e d i a   p e   t e l e v i z o r   i   î n   d i f u z o a r eo N u   m a i   p r o i e c t a iTpin0n S e   c o n e c t e a z &e A n u nn C o n i n u t   a u d i o](device name)i Î n c h i d e ig A n u l a im S e   c o n e c t e a zW(Title)_pin_cancel_buttonTpin2ZSubtitrareo Î n c h i d e i   a n u n u lo S e   r e d   a n u n u l . . .Tpin1_connecting_skip_button_welcome_cancel_buttono± I n t r o d u c e i   c o d u l   P I N   d i n   p a t r u   c i f r e   a f i a t   p e   e c r a n u l   d e   p o r n i r e   a l   u n u i   d i s p o z i t i v   d i n   a p r o p i e r e .   P r o p r i e t a r u l   d i s p o z i t i v u l u i   p o a t e   g s i   c o d u l   P I N   i   î n   a p l i c a i a   C h r o m e c a s t .g O m i t e io N i c i u n   c o n i n u t   m e d i a   s e l e c t a to+ A t i n g e i   p e n t r u   a   a c t i v a   c o n t r o l e r u l   e x t i n s_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono* S e l e c t a r e a   î n r e g i s t r r i i   a u d i o / s u b t i t r r i io A s c u l t a i   c o d u l   P I No C o m u t a i   î n t r e   r e d a r e / p a u z_(device status)UTitle_(multizone device name)o* C o n e c t a i - v   l a   d i s p o z i t i v u l   d i n   a p r o p i e r e_welcome_skip_buttonX(artist)]skip_ad_labelXTerminat_connecting_cancel_buttonm P r o i e c t a i   p eoU C a   s   v   c o n e c t a i ,   m i c r o f o n u l   v a   f i   f o l o s i t   t e m p o r a r   p e n t r u   a s c u l t a r e a   u n u i   c o d   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¢µ½ê)>FQà
'2O]p¢¶»Æë			0	H
­
¼
ûTin}¥ü%^pvçý



8
S             v               


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ro.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELn C o n i n u t   a u d i oo D e r u l a i   î n a p o i   3 0   d e   s e c u n d eo A f l a i   m a i   m u l t eo  P u t e i   î n c h i d e   a n u n u l   î n   % l d . . .ZMelodia %do S e   c o n e c t e a z   l af R e d a ioU A s i g u r a i - v   c   % @   i   d i s p o z i t i v u l   d e   p r o i e c i e   s u n t   c o n e c t a t e   l a   a c e e a i   r e e a   W i - F io S e l e c t a i   o   s u b t i t r a r eo! O p r i i   r e d a r e a   c o n i n u t u l u i   m e d i ad F rROKo& S e r v i c i u l   d e   p r o i e c i e   n u   s - a   c o n e c t a to< A p l i c a i a   n e c e s i t   a c c e s   î n   r e e a u a   l o c a l   p e n t r u   a   p r o i e c t aU--:--g Î n a i n t eo A c c e s a i   S e t t i n g s   ( S e t r i )m P r o i e c t a i   p eo A c t i v a i / d e z a c t i v a i   s u n e t u lj S u b t i t r r iWtabletaf S e t r if Î n a p o io V e r i f i c a i   r e e a u a   W i - F io# S e r v i c i u l   d e   p r o i e c i e   s - a   c o n e c t a to C o m u t a i   î n t r e   r e d a r e / p a u zk Î n t r e r u p e io P e n t r u   a   s e   c o n e c t a   l a   d i s p o z i t i v e ,   a p l i c a i a   n e c e s i t   a c c e s   l a   r e e a u a   W i - F i . 
 
 P e n t r u   a   p r o i e c t a ,   s e l e c t a i    O K    c â n d   a p l i c a i a   s o l i c i t   c o n e c t a r e a   l a   r e e a u a   l o c a l .   P u t e i   p e r m i t e   m a i   t â r z i u   a c c e s u l   a p l i c a i e i   î n   S e t t i n g s   ( S e t r i )   d e   p e   d i s p o z i t i v u l   i O S .[%d procente_Nu sunt disponibile dispozitiveo S e   p r o i e c t e a z   p e   % @oÎ P e n t r u   a   s e   c o n e c t a   l a   d i s p o z i t i v e ,   a p l i c a i a   n e c e s i t   a c c e s   l a   r e e a u a   W i - F i . 
 
 P e n t r u   a   p r o i e c t a ,   a c c e s a i   S e t t i n g s   ( S e t r i )   i   a c t i v a i    L o c a l   N e t w o r k   A c c e s s    ( A c c e s u l   î n   r e e a u a   l o c a l )   p e n t r u   a p l i c a i e .ol A c c e s a i   S e t r i   p e   t e l e f o n   i   v e r i f i c a i   d a c   a i   a c t i v a t   A c c e s u l   î n   r e e a u a   l o c a l   p e n t r u   a c e a s t   a p l i c a i eo$ S e r v i c i u l   d e   p r o i e c i e   s e   c o n e c t e a zYtelefonulo S e s i u n e a   d e   p r o i e c i e   a   î n c e p u to5 A s i g u r a i - v   c   a i   a c t i v a t   A c c e s u l   î n   r e e a u a   l o c a lTLIVEo" S e s i u n e a   d e   p r o i e c i e   s - a   î n c h e i a to Î n a i n t e   c u   3 0   d e   s e c u n d e  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-d¾á$/R_;Û	V	\	k	¢	½	ø


"
/
b
«
ä
û



/
ZùÔ)j×Ü#             T              V


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ru.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTOFUTVIWTXYWTZW[Q\E]^I_`a_bcR\dEefWgUDWTJ^hTiJjT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlebi@><:>ABLj>4:;NG8BLW(Label)o2548B5   P I N -:>4o*"@0=A;OF8O  =0  CAB@>9AB2>   ">;LH0O  :><=0B0 "h!C1B8B@KW(title)Z(Subtitle)o906<8B5 ,  GB>1K  =0G0BL  B@0=A;OF8N  =0  B5;5287>@  8;8  :>;>=:8o@5:@0B8BL  B@0=A;OF8No5@20O  F8D@0   P I N -:>40l>4:;NG5=85 &g 5:;0<0o2C:>2K5  4>@>6:8](device name)g0:@KBLfB<5=0W(Title)o"@5BLO  F8D@0   P I N -:>40j@>?CAB8BLn>:07  @5:;0<K &oB>@0O  F8D@0   P I N -:>40o2548B5  G5BK@5E7=0G=K9   P I N -:>4  A  M:@0=0  =0E>4OI53>AO  @O4><  CAB@>9AB20  8;8  ?>?@>A8B5  2;045;LF0  CAB@>9AB20  ?>A<>B@5BL  MB>B   P I N -:>4  2  ?@8;>65=88   G o o g l e   H o m e .o>=B5=B  =5  2K1@0=o306<8B5 ,  GB>1K  ?>:070BL  1>;LH5  M;5<5=B>2  C?@02;5=8Oo'5B25@B0O  F8D@0   P I N -:>40o@>?CAB8BL  @5:;0<Co>A?@>8725AB8   P I N -:>4j@>4>;68BLoK15@8B5  4>@>6:Co>A?@>872545=85 /?0C70_(device status)UTitle_(multizone device name)o-K?>;=8B5  ?>4:;NG5=85  :  CAB@>9AB2C  ?>1;87>AB8X(artist)f>B>2>oK15@8B5  CAB@>9AB2>od;O  CAB0=>2:8  ?>4:;NG5=8O  1C45B  8A?>;L7>20=  <8:@>D>=  =0  CAB@>9AB25 .  -B>  ?>72>;8B  @0A?>7=0BL   P I N -:>4 .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n±ÆÎïFW_jß9Ra¡®¶ãø		B
y
:a£Æó%Á             k              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ru.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELo2C:>2K5  4>@>6:8o5@5<>B0BL  =0   3 0  A5:C=4  =0704i>4@>1=55o# 5:;0<C  <>6=>  ?@>?CAB8BL  G5@57   % l d &j>@>6:0   % doK?>;=O5BAO  ?>4:;NG5=85 &o>A?@>872545=85oU#1548B5AL ,  GB>   % @  8  CAB@>9AB2>  4;O  B@0=A;OF88  ?>4:;NG5=K  :  >4=>9  8  B>9  65  A5B8   W i - F i .oK1@0BL  4>@>6:C  AC1B8B@>2oAB0=>28BL  2>A?@>872545=85a bo+=>?:0  B@0=A;OF88 ,  CAB@>9AB2>  =5  ?>4:;NG5=>o=;O  B@0=A;OF88  MB><C  ?@8;>65=8N  =C65=  4>ABC?  :  ;>:0;L=>9  A5B8U--:--e0;55oB:@KBL  =0AB@>9:8oK15@8B5  CAB@>9AB2>o:;NG8BL  8;8  2K:;NG8BL  72C:h!C1B8B@Kg?;0=H5Bi0AB@>9:8e0704o"@>25@LB5  ?>4:;NG5=85  :  A5B8   W i - F io(=>?:0  B@0=A;OF88 ,  CAB@>9AB2>  ?>4:;NG5=>o>A?@>872545=85 /?0C70e0C70oÂ@8;>65=8N  =5>1E>48<>  ?>4:;NG5=85  :  20H59  A5B8   W i - F i . 
 
'B>1K  <>6=>  1K;>  B@0=A;8@>20BL  :>=B5=B ,  =06<8B5   " " ,  :>340  >=>  70?@>A8B  4>ABC?  :  A5B8 .   07@5H8BL  ?>4:;NG5=85  <>6=>  ?>765  2  =0AB@>9:0E   i O S .T%d %o5B  4>ABC?=KE  CAB@>9AB2o"@0=A;OF8O  =0  CAB@>9AB2>   " % @ "o@8;>65=8N  =5>1E>48<>  ?>4:;NG5=85  :  20H59  A5B8   W i - F i . 
 
'B>1K  <>6=>  1K;>  B@0=A;8@>20BL  :>=B5=B ,  >B:@>9B5  =0AB@>9:8  8  ?@54>AB02LB5  ?@8;>65=8N  4>ABC?  :  A5B8 .o`B:@>9B5  =0AB@>9:8  B5;5D>=0  8  C1548B5AL ,  GB>  MB><C  ?@8;>65=8N  @07@5H5=  4>ABC?  ?>  ;>:0;L=>9  A5B8 .o*=>?:0  B@0=A;OF88 ,  2K?>;=O5BAO  ?>4:;NG5=85gB5;5D>=o"@0=A;OF8O  70?CI5=0o"5>1E>48<  4>ABC?  ?>  ;>:0;L=>9  A5B8o //  " !/&/o"@0=A;OF8O  7025@H5=0o5@5<>B0BL  =0   3 0  A5:C=4  2?5@Q4  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dÄ× 5h6k¢¥ª					¶	ß

)
8
K
V

ð(¯´å
"Ys«òB             T              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/si.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlec
Ä
»
Òi
Ä
¬  
´
»
Ò
¸
Ï
Àg
Ã
¶
³
Ò
±
Ê
±W(Label)o P I N  

­
Ô
Å
­
Ê  

»
±
Ê
±o

½
Ò
±
Ê
¯
º
§  
À
Ò

Ï
Á
º  

Ù
»
Úh

´
Ã
Ò
»
Ð
Ã
ÒW(title)Z(Subtitle)o5

¶
Ú   T V  
Ã
Ä  
Ã
Ê
´
Ó

»  
À
Ù
­  
¸
Ï
°
Ê 

º  
À
Ò

Ï
Á  

Ò
»
Ó
¸
§  
Ã
Ê
´
»
Ê
Á  

»
±
Ê
±m
À
Ò

Ï
Á
º  
±
À
­
±
Ê
±Tpin0o
Ã
¸
Ê
¶
±
Ê
°  
À
Ù
¸
Ò
±
Ê &g
¯
Ð
±
Ê
À
Ó
¸h
Á
Ê 

»
À
Ê 

º](device name)e
À
Ã
±
Ê
±l

À
½


Ô  

»
±
Ê
±i
Ã
¶
Ð
³
Ù
¸
Ò
±
ÊW(Title)_pin_cancel_buttonTpin2i

´
Ã
Ò
»
Ð
Ã
Ò
ºo
¯
Ð
±
Ê
À
Ó
¸  
¸
  
Ä
»
Ò
±
Ê
±o
¯
Ð
±
Ê
À
Ó
¸  
´
Ê 

»

­
Ò
º
Ú  
´
À
­
Ó . . .Tpin1_connecting_skip_button_welcome_cancel_buttono

À
§  

´
Ï


º
  
¸
Ô
½
Ê  
´
Ò
§
Ô  
­
Ò
»
º
Ú  
Ã

¯
»
Ê
Á
±
º  
À
±  

½

Ê

¸
Ê   4
  
»
Ä
Ã
Ê  



º  

­
Ô
Å
­
Ê  

»
±
Ê
± .  

´
Ï

  
Ä
Ò
¸
Ò

»
Ô
§   C h r o m e c a s t  
º
Ù
¯
Ô
¸
Ù
Ä
Ò  
»
Ä
Ã
Ê  



º  
Ã
Ù
Ï
º
Ï  

Ð
±
Ó
¸
§  
¯  
Ä
Ð

Ò  
À
Ù
º
Ò .i
¸
  
Ä
»
Ò
±
Ê
±o
¸
Ï
°
Ê 

º  
­
Ý
»
Ï  
±
Ð
­o.
¯
Ò
  
Ä
Ð
»
Ò
º  
´
Ï
½

º  

Ê 

»
Ò
º
Ï
­
Ê
¸
  

Ò
»
Ó
¸
§  
­
§
Ê
§
Ô  

»
±
Ê
±_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono
Á
Ê 

»
À
Ê 

º  

«
Ê
©  
­
Ú
»
Ó
¸o
»
Ä
Ã
Ê  



º  
Ã
³
Ä
Ï  
Ã
À
±
Ê  
¯
Ù
±
Ê
±o
À
Ï
¯
±  
À
Ò
»
Ï
¸  
§
Ü

½
º_(device status)UTitle_(multizone device name)o

À
§  

´
Ï


º
§  
Ã
¶
³
Ò
±
Ê
±_welcome_skip_buttonX(artist)]skip_ad_labelc

Å
Ï_connecting_cancel_buttono
¸
Ù
º
§  
À
Ò

Ï
Á  

»
±
Ê
±oI
Ã
¶
Ð
³
Ó
¸
§ ,  

¶
Ú  
¸
º
Ò

Ê 

»
Æ
Ý
±
º  
»
Ä
Ã
Ê  



º

Ê  
Ã
³
Ä
Ï  
Ã
À
±
Ê  
¯
Ó
¸
§  
­
Ï
À

Ï
½
Ò

À  
·
Ï
À
Ò
­  

Ù
»
Ú .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n ³ÂÊí)1<©ÄÉêù
#<OWkp¨Ýâû	
8
K
l
Ë
à
å
ôEz¯µÏø%,Gj             v              ÿ


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/si.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELh
Á
Ê 

»
À
Ê 

ºo
­
­
Ê
´
»   3 0

Ê  

´
Ã
Ê
Ã
§m
­
À
­
Ê  
¯
Ð
±  

±
Ê
±o%

¶
§   % l d  
Ä
Ò
¯
Ó  
¯
Ð
±
Ê
À
Ó
¸  
¸
  
Ä
Ð
»
Ò
º  
Ä
Ð
   . . .o
Á
Ê 

»
À
Ê 

º  

«
Ê
©
º   % do
¸
Ù
º
§  
Ã
¸
Ê
¶
±
Ê
°  

Ù
»
Úe
À
Ï
¯
±
ºo;

¶

Ú   % @  
Ã
Ä   c a s t  

´
Ï


º  


¸   W i - F i  
¢
Ï
½
º
Ú  

­
Ò  
¶
À  
Ã
Ä
­
Ò
  

»  

±
Ê
±o$
À
Ð
Ã
Ö  
Ã
Ò
»
Ã
Ê
­
½  
Á
Ê 

»
À
Ê 

º  

«
Ê
©
º

Ê  
­
Ý
»
±
Ê
±o
¸
Ï
°
Ê 

º  
´
Ã
Ô
°
Ï
À
±
º  
±
À
­
Ê  
À
±
Ê
±k

Ò
Ã
Ò
À

Ê  
±
Ð
­c
Ä
»
Òo
À
Ò

Ï
Á
º  
Ã
¸
Ê
¶
±
Ê
°  
±
Ð
­o6
¸
Ù
¸  
º
Ù
¯
Ô
¸
§  
À
Ò

Ï
Á
±  

Ò
»
Ó
¸
§  
Ã
Ê
®
Ï
±
Ó
º  
¢
Ï
½  
´
Ê 

»
À
Ú
Á
º  

À
Á
Ê 

º
º
ÒU--:--d
¸
Ó
Å
o
Ã
Ð

Ã
Ó
¸
Ê  
À
Ù
­  
º
±
Ê
±o
¸
Ù
º
§  
À
Ò

Ï
Á  

»
±
Ê
±o
±
Ò
Ä
¬  
­
­
Ê
­
Ê 

À
º  
§
Ü

½
Ê  

»
±
Ê
±l
À
Ð
Ã
Ö  
Ã
Ò
»
Ã
Ê
­
½g
§
Ð
¶
Ê
½
§
ºg
Ã
Ð

Ã
Ó
¸
Êc
´
Ù
»o

¶
Ú   W i - F i  
¢
Ï
½
º  
´
»
Ó

Ê
Â
Ï  

»
±
Ê
±o
À
Ò

Ï
Á
º  
Ã
¸
Ê
¶
±
Ê
°
Ò
­
º
Òo
À
Ï
¯
±  
À
Ò
»
Ï
¸  
§
Ü

½
ºf
À
Ò
»
Ï
¸
ºh

´
Ã
Ò
»
Ð
Ã
Òo×

¶
Ú  

´
Ï

  
Ã
¸
Ê
¶
±
Ê
°  

Ò
»
Ó
¸
§ ,  
¸
Ù
¸  
º
Ù
¯
Ô
¸
§  

¶
Ú   W i - F i  
¢
Ï
½
º  
À
Ù
­  
´
Ê 

»
À
Ú
Á  
À
Ó
¸  

À
Á
Ê 

º
º
Ò . 
 

À
Ò

Ï
Á
±  

Ò
»
Ó
¸
§ ,  
º
Ù
¯
Ô
¸  

¶
Ú  
Ã
Ê
®
Ï
±
Ó
º  
¢
Ï
½
º
§  
Ã
¸
Ê
¶
±
Ê
°  

Ò
»
Ó
¸
§  

½
Ê
½
±  
À
Ò
§   
Ä
»
Ò   
­
Ý
»
±
Ê
± .  
´
Ã
Ô
À  

¶
§  
¸
Ù
¸  
º
Ù
¯
Ô
¸  
Ã
³
Ä
Ï   i O S  
Ã
Ð

Ã
Ó
¸
Ê  
­
Ô
Å  
¯  
¸
Ù
º
§  

©  
¯
Ò
º  
Ä
Ð
 .h
Ã
Ò
º
º
§   % do

Ò
Ã
Ò
¯
Ô  

´
Ï


º

Ê  
±
Ü
¸
Ð
­o % @  
À
Ù
­  
À
Ò

Ï
Á  

Ù
»
Úo§

¶
Ú  

´
Ï

  
Ã
¸
Ê
¶
±
Ê
°  

Ò
»
Ó
¸
§ ,  
¸
Ù
¸  
º
Ù
¯
Ô
¸
§  

¶
Ú   W i - F i  
¢
Ï
½
º  
À
Ù
­  
´
Ê 

»
À
Ú
Á  
À
Ó
¸  

À
Á
Ê 

º
º
Ò . 
 

À
Ò

Ï
Á
±  

Ò
»
Ó
¸
§ ,  

¶
Ú  
Ã
Ð

Ã
Ó
¸
Ê  
À
Ù
­  

Ü
Ã
Ê  
¸
Ù
¸  
º
Ù
¯
Ô
¸  
Ã
³
Ä
Ï   
Ã
Ê
®
Ï
±
Ó
º  
¢
Ï
½  
´
Ê 

»
À
Ú
Á
º   
Ã

Ê 

»
Ó
º  

»
±
Ê
± .od
¸
Ù
¸  
¯
Ô
»

®
±
º  
¸
­  
Ã
Ð

Ã
Ó
¸
Ê  
À
Ù
­  

Ü
Ã
Ê  
¸
Ù
¸  
º
Ù
¯
Ô
¸  
Ã
³
Ä
Ï  
Ã
Ê
®
Ï
±
Ó
º  
¢
Ï
½  
´
Ê 

»
À
Ú
Á
º  
Ã

Ê 

»
Ò
º  

»  

­
Ò
¯
Ð
º
Ò  
´
»
Ó

Ê
Â
Ï  

»
±
Ê
±o
À
Ò

Ï
Á
º  
Ã
¸
Ê
¶
±
Ê
°  
À
Úg
¯
Ô
»

®
±
ºo
À
Ò

Ï
Á
±  
Ã
Ð
Ã
Ò
º  

»
¹
Ò
«
Òo5
Ã
Ê
®
Ï
±
Ó
º  
¢
Ï
½  
´
Ê 

»
À
Ú
Á
º  
Ã

Ê 

»
Ò
º  

»  

­
Ò  
¶
À  
­
Ä
À
Ô
»
Ô  

»  

±
Ê
±e
Ã
¢
Ó
À
Óo
À
Ò

Ï
Á
±  
Ã
Ð
Ã
Ò
º  
±
Ò
¸
Ï  
À
Ò
ºo
­
­
Ê
´
»   3 0  

¯
Ò
»
Ò
º
§  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-duµ'LWÐPgn		
		6	Y		§	¶	Å	Ì

.
Q
^
o 1^
ÔÄÓüit¡             U              Ä


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/sk.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKi H l a s i t o seh P r i p o j ieh (` t í t o k )[Zadajte PINo! P r e n áa a   s a   d o   z a r i a d e n i a   O b ý v a
 k aWTitulkyg ( n á z o v )j ( P o d n á z o v )o= K l e p n u t í m   m ô~ e t e   p r e n áa ae   m é d i á   d o   t e l e v í z o r a   a   r e p r o d u k t o r o vo Z a s t a v ie   p r e n o sTpin0k P r i p á j a   s a &WReklamaTZvuko ( n á z o v   z a r i a d e n i a )g Z a v r i eef Z r ua ieZPripojenieg ( N á z o v )o t l a
 i d l o _ z r ua e n i a _ k ó d u _ p i nTpin2o P r e s k o
 ie   r e k l a m uo P r e h r á v a   s a   r e k l a m a &Tpin1o t l a
 i d l o _ p r e s k o
 e n i a _ p r i p á j a n i ao t l a
 i d l o _ z r ua e n i a _ u v í t a n i ao Z a d a j t e  a t v o r m i e s t n y   P I N   z o b r a z e n ý   n a   p l o c h e   z a r i a d e n i a   v   b l í z k o s t i .   V l a s t n í k   z a r i a d e n i a   t e n t o   P I N   n á j d e   a j   v   a p l i k á c i i   C h r o m e c a s t .i P r e s k o
 ieo N i e   s ú   v y b r a n é  ~ i a d n e   m é d i áo& K l e p n u t í m   a k t i v u j e t e   r o z b a l e n ý   o v l á d a
o t l a
 i d l o _ k ó d u _ p i n _ p r i p o j e n i aTpin3o t l a
 i d l o _ p r e s k o
 e n i a _ r e k l a m yo t l a
 i d l o _ p o
 ú v a n i a _ k ó d u _ p i no u v í t a c i e _ t l a
 i d l o _ o kk V ý b e r   s t o p yo V y p o
 ue   z v u k o v ý   k ó d   P I No P r e p í n a
   P r e h r ae / p o z a s t a v ie_(stav zariadenia)e N á z o vo& ( n á z o v   z a r i a d e n i a   v o   v i a c e r ý c h   z ó n a c h )o$ P r i p o j t e   s a   k   z a r i a d e n i u   v   b l í z k o s t io t l a
 i d l o _ p r e s k o
 e n i a _ u v í t a n i a[(interpret)oa t í t o k _ p r e s k o
 e n i a _ r e k l a m yVHotovoo t l a
 i d l o _ z r ua e n i a _ p r i p o j e n i ak P r e n áa ae   d oo] A k   s a   c h c e t e   p r i p o j ie ,   v áa   m i k r o f ó n   b u d e   k r á t k o d o b o   p o u~ i t ý   n a   v y h> a d a n i e   z v u k o v é h o   k ó d u   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¯ÀÑÝ"*9NËìñ<KXcr©®Óþ		D	{


ÐZ_ÓþFí
8
u

¸
¿
ú             u              Î


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/sk.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELTZvuko O   3 0   s e k ú n d   s p äeo a la i e   i n f o r m á c i eo  R e k l a m u   m ô~ e t e   p r e s k o
 ie   o   % l d   &XStopa %do P r i p á j a   s a   k   z a r i a d e n i ug P r e h r aeo^ S k o n t r o l u j t e ,  
 i   s ú   v aa e   z a r i a d e n i e   % @   a   z a r i a d e n i e   n a   p r e n o s   p r i p o j e n é   k   r o v n a k e j   s i e t i   W i  F io V y b r ae   s t o p u   s k r y t ý c h   t i t u l k o vo& Z a s t a v ie   p r e h r á v a n i e   m e d i á l n e h o   o b s a h uf} i a d n eROKo P r e n o s   n i e   j e   p r i p o j e n ýo: T á t o   a p l i k á c i a   v y~ a d u j e   n a   p r e n o s   p r í s t u p   k   m i e s t n e j   s i e t iU--:--e a l e jo P r e j se   d o   N a s t a v e n ík P r e n áa ae   d oo V y p n úe   a l e b o   z a p n úe   z v u kn S k r y t é   t i t u l k yVtabletZNastaveniaf N a s p äeo S k o n t r o l u j t e   s i ee   W i  F io P r e n o s   j e   p r i p o j e n ýo P r e p í n a
   p r e h r ae / p o z a s t a v iej P o z a s t a v ieWTitulkyoù T á t o   a p l i k á c i a   v y~ a d u j e   n a   p r i p o j e n i e   s a   k   z a r i a d e n i a m   p r í s t u p   k   v aa e j   s i e t i   W i - F i . 
 
 A k   c h c e t e   s p u s t ie   p r e n o s ,   v y b e r t e   O K ,   k e   a p l i k á c i a   p o~ i a d a   o   p r i p o j e n i e   k   v aa e j   m i e s t n e j   s i e t i .   A p l i k á c i i   t o   m ô~ e t e   t i e~   p o v o l ie   n e s k ô r   v   N a s t a v e n i a c h   s y s t é m u   i O S .j % d   p e r c e n to% N i e   s ú   k   d i s p o z í c i i  ~ i a d n e   z a r i a d e n i a_ Prebieha prenos do zariadenia %@o» T á t o   a p l i k á c i a   v y~ a d u j e   n a   p r i p o j e n i e   s a   k   z a r i a d e n i a m   p r í s t u p   k   v aa e j   s i e t i   W i - F i . 
 
 A k   c h c e t e   s p u s t ie   p r e n o s ,   p r e j d i t e   d o   N a s t a v e n í   a   z a p n i t e   p r e   t ú t o   a p l i k á c i u   P r í s t u p   k   m i e s t n e j   s i e t i .op P r e j d i t e   v   t o m t o   t e l e f ó n e   d o   N a s t a v e n í   a   s k o n t r o l u j t e ,  
 i   j e   p r e   t ú t o   a p l i k á c i u   z a p n u t ý   p r í s t u p   k   m i e s t n e j   s i e t io P r e n o s   s a   p r i p á j ag t e l e f ó no R e l á c i a   p r e n o s u   b o l a   s p u s t e n áo4 S k o n t r o l u j t e ,  
 i   j e   z a p n u t ý   p r í s t u p   k   m i e s t n e j   s i e t if N A} I V Oo R e l á c i a   p r e n o s u   s a   s k o n
 i l ao O   3 0   s e k ú n d   v p r e d  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-di±ôý.=ü;Ë	B	H	S	|		Æ	ã	ê	õ

3
\

ª
²§¼
	
,¥­¼ùdqª             U              Ï


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/sl.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleVV reduXGlasnostf P o v e~ iW(Label)_Vnesite kodo PIN_Predvajanje v dnevni sobiYPodnapisiW(title)Z(Subtitle)oM D o t a k n i t e   s e ,  
 e  ~ e l i t e   p r e d v a j a t i   p r e d s t a v n o s t   p r e k   t e l e v i z o r j a   i n   z v o
 n i k o v_Ustavitev predvajanjaTpin0m P o v e z o v a n j e   &UOglasTZvok](device name)UZaprih P r e k l i
 i_Vzpostavljanje povezaveW(Title)_pin_cancel_buttonTpin2XPodnapisn P r e s k o
 i   o g l a s_Oglas se predvaja ...Tpin1_connecting_skip_button_welcome_cancel_buttono V n e s i t e  a t i r i m e s t n o   k o d o   P I N ,   p r i k a z a n o   n a   z a
 e t n e m   z a s l o n u   n a p r a v e   v   b l i~ i n i .   L a s t n i k   n a p r a v e   l a h k o   k o d o   P I N   n a j d e   t u d i   v   a p l i k a c i j i   C h r o m e c a s t .h P r e s k o
 i_Ni izbrane predstavnostio9 D o t a k n i t e   s e ,  
 e  ~ e l i t e   a k t i v i r a t i   r a za i r j e n   u p r a v l j a l n i k_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button_Izbira posnetka/podnapisao* P o s l ua a j ,   a l i   j e   b i l a   i z g o v o r j e n a   k o d a   P I No1 P r e k l o p   m e d   p r e d v a j a n j e m   i n   z a
 a s n o   z a u s t a v i t v i j o_(device status)UTitle_(multizone device name)o) V z p o s t a v i t e v   p o v e z a v e   z   n a p r a v o   v   b l i~ i n i_welcome_skip_buttonX(artist)]skip_ad_labelg K o n
 a n o_connecting_cancel_button_Predvajanje v napravioh Z a   v z p o s t a v i t e v   p o v e z a v e   b o   m i k r o f o n   z a
 a s n o   u p o r a b l j e n   z a   p o s l ua a n j e ,   a l i   j e   b i l a   i z g o v o r j e n a   k o d a   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n ©¶¾Ñí÷ÿ
§¿Äßåêøþ)1EJSp¦¾	ã	ô




­
Á
Õ
ñH­¿Åß4JSap£             v              
v


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/sl.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELTZvok_30 sekund nazaji V e
   o   t e mo" O g l a s   l a h k o   p r e s k o
 i t e  
 e z   % l d   . . .[Posnetek %d_!Vzpostavljanje povezave z napravo[PredvajanjeoO N a p r a v a   % @   i n   n a p r a v a   z a   p r e d v a j a n j e   m o r a t a   b i t i   p o v e z a n i   v   i s t o   o m r e~ j e   W i - F i ._Izbira podnapisov_#Ustavitev predvajanja predstavnostiTBrezVV redu_Cast ni povezanoI T a   a p l i k a c i j a   p o t r e b u j e   d o s t o p   d o   l o k a l n e g a   o m r e~ j a ,  
 e  ~ e l i t e   p r e d v a j a t iU--.--VNaprej\V nastavitve_Predvajanje v napravi_Vklop in izklop zvokaYPodnapisio t a b l i
 n i   r a
 u n a l n i kZNastavitveUNazajo P r e v e r i t e   o m r e~ j e   W i - F i_Cast je povezano1 P r e k l o p   m e d   p r e d v a j a n j e m   i n   z a
 a s n o   z a u s t a v i t v i j oo Z a
 a s n a   z a u s t a v i t e vo e  ~ e l i t e   v z p o s t a v i t i   p o v e z a v o   z   n a p r a v a m i ,   t a   a p l i k a c i j a   p o t r e b u j e   d o s t o p   d o   o m r e~ j a   W i - F i . 
 
 e  ~ e l i t e   p r e d v a j a t i ,   i z b e r i t e   » V   r e d u « ,   k o   v a s   a p l i k a c i j a   p o z o v e   k   v z p o s t a v i t v i   p o v e z a v e   z   l o k a l n i m   o m r e~ j e m .   T o   l a h k o   t u d i   o m o g o
 i t e   p o z n e j e   v   n a s t a v i t v a h   s i s t e m a   i O S   z a   t o   a p l i k a c i j o .T%d %_Nobena naprava ni na voljo_Predvajanje v napravi %@oÂ e  ~ e l i t e   v z p o s t a v i t i   p o v e z a v o   z   n a p r a v a m i ,   t a   a p l i k a c i j a   p o t r e b u j e   d o s t o p   d o   o m r e~ j a   W i - F i . 
 
 e  ~ e l i t e   p r e d v a j a t i ,   o d p r i t e   n a s t a v i t v e   i n   v k l o p i t e   » D o s t o p   d o   l o k a l n e g a   o m r e~ j a «   z a   t o   a p l i k a c i j o .om O d p r i t e   n a s t a v i t v e   v   t e m   t e l e f o n u   i n   p r e v e r i t e ,   a l i   j e   d o s t o p   d o   l o k a l n e g a   o m r e~ j a   z a   t o   a p l i k a c i j o   o m o g o
 e n ._Cast se povezujeWtelefono S e j a   p r e d v a j a n j a   s e   j e   z a
 e l ao. D o s t o p   d o   l o k a l n e g a   o m r e~ j a   m o r a   b i t i   o m o g o
 e nf V  } I V Oo S e j a   p r e d v a j a n j a   j e   k o n
 a n a_30 sekund naprej  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-di{Õá²Æìñø
¥¬¹Ñéó		'	-	^	p	Õ	þ27To
öÓæî+Ð             T              ã


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/sr.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleg>B2@48l0G8=0  72C:0f>2568W(Label)k#=5A8B5   P I No@510FCX5  A5  C  4=52=C  A>1Cg"8B;>28W(title)Z(Subtitle)o6>48@=8B5  40  18AB5  ?@510F820;8  <548X5  =0  "  8  72CG=8:5o0CAB028  ?@510F820Z5Tpin0n>257CX5  A5 . . .e3;0AeC48>](device name)g0B2>@8fB:068k>257CX5  A5W(Title)_pin_cancel_buttonTpin2n@5A:>G8  >3;0Ao3;0A  A5  @5?@>4C:CX5 &Tpin1_connecting_skip_button_welcome_cancel_buttono#=5A8B5   4 -F8D@5=8   P I N  :>X8  A5  ?@8:07CX5  =0  ?>G5B=><  5:@0=C  C@5R0X0  C  1;878=8 .  ;0A=8:  C@5R0X0  <>65  40  ?@>=0R5   P I N  8  C  0?;8:0F8X8   C h r o m e c a s t .h@5A:>G8o'8X5  8701@0=0  =8X54=0  <548XA:0  40B>B5:0o1>48@=8B5  40  18AB5  0:B828@0;8  ?@>H8@5=8  :>=B@>;5@_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono71>@  0C48>  A=8<:0o'5:0X  40  A5  873>2>@8   P I No$@5:840G  70  :><0=45  CAB8  8  0C78@0X_(device status)UTitle_(multizone device name)o>2568B5  A0  C@5R0X5<  C  1;878=8_welcome_skip_buttonX(artist)]skip_ad_labelf>B>2>_connecting_cancel_buttonl@510F8B5  =0oY0  18AB5  A5  ?>2570;8 ,  <8:@>D>=  [5  A5  ?@82@5<5=>  :>@8AB8B8  40  18  G5:0>  40  A5  873>2>@8   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¨ÁÎÖí$3;Fµàå
&5BYauzÄÉâú

&
w
Ü
ñ
ö-TÒäêCYbp}±             u              
f


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/sr.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELeC48>o@5<>B0X  C=0704   3 0  A5:C=48m!07=0XB5  28H5o*>65B5  40  ?@5A:>G8B5  >20X  >3;0A  70   % l d   . . .oC48>  A=8<0:   % dn>257CX5  A5  A0eCAB8o@#25@8B5  A5  40  AC   % @  8  C@5R0X  70  ?@510F820Z5  =0  8AB>X   W i F i  <@568 .o7015@8B5  >?F8>=0;=8  B8B;o0CAB028  @5?@>4C:F8XC  <548X0d5<0g>B2@48o8AB5  ?>2570=8  70  ?@510F820Z5o;2>X  0?;8:0F8X8  B@510  ?@8ABC?  ;>:0;=>X  <@568  70  ?@510F820Z5U--:--g!;545[5o48  C  >45H020Z0l@510F8B5  =0o#:YCG8B5  8;8  8A:YCG8B5  72C:d"8B;fB01;5Bj>45H020Z0i@5BE>4=>o@>25@8B5   W i F i  <@56Co>2570=8  AB5  70  ?@510F820Z5o$@5:840G  70  :><0=45  CAB8  8  0C78@0Xh0C78@0Xg"8B;>28o0  18  A5  ?>2570;0  A0  C@5R0X8<0 ,  >2>X  0?;8:0F8X8  B@510  ?@8ABC?   W i F i  <@568 . 
 
0  18AB5  ?@510F820;8 ,  87015@8B5   O K   (>B2@48 )  :040  0?;8:0F8X0  70B@068  40  A5  ?>2565  =0  ;>:0;=C  <@56C .  2>  <>65B5  40  4>72>;8B5  8  :0A=8X5  C   i O S   S e t t i n g s   (>45H020Z0   i O S -0 )  70  >2C  0?;8:0F8XC .S%d%o8X5  4>ABC?0=  =8X540=  C@5R0Xo@510FCX5  A5  =0   % @oÊ0  18  A5  ?>2570;0  A0  C@5R0X8<0 ,  >2>X  0?;8:0F8X8  B@510  ?@8ABC?   W i F i  <@568 . 
 
0  18AB5  ?@510F820;8 ,  848B5  C   S e t t i n g s   (>45H020Z0 )  8  C:YCG8B5   L o c a l   N e t w o r k   A c c e s s   (@8ABC?  ;>:0;=>X  <@568 )  70  >2C  0?;8:0F8XC .og48B5  C  >45H020Z0  =0  >2><  B5;5D>=C  8  C25@8B5  A5  40  X5  ?@8ABC?  ;>:0;=>X  <@568  C:YCG5=  70  >2C  0?;8:0F8XCo>257CX5B5  A5  70  ?@510F820Z5gB5;5D>=o!5A8X0  ?@510F820Z0  X5  70?>G5B0o/#25@8B5  A5  40  X5  C:YCG5=  ?@8ABC?  ;>:0;=>X  <@568e#o!5A8X0  ?@510F820Z0  X5  702@H5=0o@5<>B0X  C=0?@54   3 0  A5:C=48  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do¦Á9VaäT]l©	"	(	7	Z	s	¬	µ	Â	×	ê

N

ª
¹ÇË

-ÄÐßÉ             U              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/sv.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKUVolymVAnslutY(Etikett)[Ange pinkod_Castar till vardagsrummet[UndertexterW(titel)[(Undertext)o; T r y c k   h ä r   o m   d u   v i l l   c a s t a   m e d i a   t i l l   t v : n   e l l e r   h ö g t a l a r n a[Sluta castaTpin0j A n s l u t e r   &VAnnonsTLjud_(enhetens namn)e S t ä n gVAvbrytXAnsluterW(Titel)_pin_cancel_buttonTpin2YUndertexto H o p p a   ö v e r   a n n o n so A n n o n s e n   s p e l a s   u p p   &Tpin1_connecting_skip_button_welcome_cancel_buttono A n g e   d e n   f y r s i f f r i g a   p i n k o d e n   s o m   v i s a s   p å   s t a r t s k ä r m e n   p å   e n h e t e n   s o m   f i n n s   i   n ä r h e t e n .   E n h e t e n s   ä g a r e   h i t t a r   ä v e n   p i n k o d e n   i   C h r o m e c a s t - a p p e n .j H o p p a   ö v e r_Ingen media har valtso4 T r y c k   h ä r   o m   d u   v i l l   a k t i v e r a   d e n   u t ö k a d e   k o n t r o l l e n_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono T i l l g ä n g l i g a   s p å r_Lyssna efter pinkod_Spela upp och pausa^(enhetsstatus)TNamno ( e n h e t e n s   n a m n      f l e r a   z o n e r )o A n s l u t   t i l l   e n   e n h e t   i   n ä r h e t e n_welcome_skip_buttonX(artist)]skip_ad_labelTKlar_connecting_cancel_buttonZCasta tillo[ N ä r   d u   a n s l u t e r   a n v ä n d s   m i k r o f o n e n   t i l l f ä l l i g t   f ö r   a t t   f å n g a   u p p   l j u d s i g n a l e n   m e d   p i n k o d e n .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¢©³¿Ûçïût¡¦¸ÃÊÓÛïôþ#PUn	©	¾	Ö
A
V
[
j
~

·
Í
ã
ò
÷4u¢§ÂÍ             v              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/sv.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELTLjud_Spola tillbaka 30 sekunderg L ä s   m e ro# D u   k a n   h o p p a   ö v e r   a n n o n s e n   o m   % l d   &g S p å r   % d]Ansluter tillYSpela uppoG K o n t r o l l e r a   a t t   % @   o c h   C a s t - e n h e t e n   ä r   a n s l u t n a   t i l l   s a m m a   w i f i - n ä t v e r ko V ä l j   e t t   t e x t n i n g s s p å r_Stoppa medieuppspelningTIngaROKo C a s t a      i n t e   a n s l u t e noA D u   m å s t e   g e   a p p e n   å t k o m s t   t i l l   d e t   l o k a l a   n ä t v e r k e t   f ö r   a t t   c a s t aU--:--e N ä s t ao Ö p p n a   I n s t ä l l n i n g a rZCasta tillj L j u d   a v / p åXTextningZsurfplattam I n s t ä l l n i n g a rj F ö r e g å e n d eo K o n t r o l l e r a   w i f i - n ä t v e r k e to C a s t a      a n s l u t e n_Spela upp och pausaUPausa[Undertexteroô A p p e n   m å s t e   h a   å t k o m s t   t i l l   w i f i - n ä t v e r k e t   f ö r   a t t   k u n n a   a n s l u t a   t i l l   d i n a   e n h e t e r . 
 
 O m   d u   v i l l   c a s t a   v ä l j e r   d u   O K   n ä r   a p p e n   b e r   o m   a t t   a n s l u t a   t i l l   d e t   l o k a l a   n ä t v e r k e t .   D u   k a n   ä v e n   t i l l å t a   d e t t a   s e n a r e   i   i O S - i n s t ä l l n i n g a r n a   f ö r   d e n   h ä r   a p p e n .j % d   p r o c e n to I n g a   t i l l g ä n g l i g a   e n h e t e r^Castar till %@oº A p p e n   m å s t e   h a   å t k o m s t   t i l l   w i f i - n ä t v e r k e t   f ö r   a t t   k u n n a   a n s l u t a   t i l l   d i n a   e n h e t e r . 
 
 O m   d u   v i l l   c a s t a   ö p p n a r   d u   I n s t ä l l n i n g a r   o c h   a k t i v e r a r   Å t k o m s t   t i l l   l o k a l t   n ä t v e r k   f ö r   d e n   h ä r   a p p e n .os Ö p p n a   i n s t ä l l n i n g a r n a   p å   t e l e f o n e n   o c h   k o n t r o l l e r a   a t t   Å t k o m s t   t i l l   l o k a l t   n ä t v e r k   h a r   a k t i v e r a t s   f ö r   d e n   h ä r   a p p e no C a s t a      a n s l u t e rWtelefon_Castsessionen har startato: K o n t r o l l e r a   a t t   Å t k o m s t   t i l l   l o k a l t   n ä t v e r k   h a r   a k t i v e r a t sTLIVE_Castsession har avslutatso S p o l a   f r a m å t   3 0   s e k u n d e r  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-diÞíûÅßäçªÓÞóü		"	7	n		§	­	¹¤¹îý
t]¤ <             U              o


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/sw.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFDQRSTFUVWIXSYZ[\]^_D`abcIdefghiQ`jEklmnUD^SJopqrJsS_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleTSawaUSautiYUnganishaW(Label)XWeka PIN_Inatuma SebuleniWManukuuW(title)Z(Subtitle)_.Gusa ili utume maudhui kwenye TV na Spika zako[Acha kutumaTpin0_Inaunganisha...WTangazo_(jina la kifaa)UFungaVGhairi\InaunganishaW(Title)_pin_cancel_buttonTpin2\Ruka Tangazo_Tangazo linaendelea...Tpin1_connecting_skip_button_welcome_cancel_button_ Weka PIN ya tarakimu 4 inayoonekana kwenye skrini ya kwanza ya kifaa kilicho karibu nawe. Mmiliki wa kifaa anaweza pia kupata PIN katika programu ya Chromecast.TRuka_Hakuna maudhui yaliyochaguliwa_+Gusa ili uwezeshe kidhibiti kilichopanuliwa_pin_connect_buttonTpin3_kitufe_cha_ruka_tangazo_pin_listen_button_welcome_ok_button^Kuchagua Wimbo\Sikiliza PIN_Kitufe cha cheza sitisha geuza_(device status)TJina_(multizone device name)_*Unganisha kwenye kifaa kilicho karibu nawe_welcome_skip_buttonX(artist)_ruka_lebo_ya_tangazoYYamefutwa_ Inaunganisha_kitufe_cha_kughairi[Tuma kwenye_BIli uunganishe, maikrofoni yako itatumiwa kwa muda kusikiliza PIN.   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¤®¶¿ÒÚâí*/AI[ahu}£¼ÁÚò»éþ			1	E	T	a				³	à	ö	ÿ

 
C
O             t              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/sw.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUSauti_Rudisha nyuma kwa sekunde 30_Pata maelezo zaidi_,Unaweza kuruka tangazo hili baada ya %ld ...[Wimbo wa %d_Inaunganisha kwenyeUCheza_THakikisha kuwa %@ yako na kifaa kinachotuma maudhui vinatumia mtandao mmoja wa Wi-Fi_Chagua wimbo wenye manukuu_Sitisha kucheza maudhuiUHamnaTSawa_%Kipengele cha kutuma hakijaunganishwa_KProgramu hii inahitaji Idhini ya Kufikia Mtandao wa Karibu ili iweze KutumaU--:--WEndelea_Nenda kwenye Mipangilio[Tuma kwenye_Geuza hali ya kuzima sautiWManukuu^kompyuta kibaoZMipangilio]Iliyotangulia_Kagua mtandao wako wa Wi-Fi_#Kipengele cha kutuma kimeunganishwa_Kitufe cha cheza sitisha geuzaWSitishao I l i   k u u n g a n i s h a   k w e n y e   v i f a a   v y a k o ,   p r o g r a m u   h i i   i n a h i t a j i   i d h i n i   y a   k u f i k i a   m t a n d a o   w a k o   w a   W i - F i . 
 
 I l i   u w e z e   k u t u m a ,   c h a g u a    S a w a    p r o g r a m u   i t a k a p o o m b a   r u h u s a   y a   k u u n g a n i s h a   k w e n y e   m t a n d a o   w a k o   w a   k a r i b u .   U n a w e z a   p i a   k u i r u h u s u   b a a d a y e   k a t i k a   M i p a n g i l i o   y a   i O S   y a   p r o g r a m u   h i i .[Asilimia %d_Hakuna vifaa vinavyopatikana^Tuma kwenye %@oá I l i   k u u n g a n i s h a   k w e n y e   v i f a a   v y a k o ,   p r o g r a m u   h i i   i n a h i t a j i   i d h i n i   y a   k u f i k i a   m t a n d a o   w a k o   w a   W i - F i . 
 
 I l i   u w e z e   k u t u m a ,   n e n d a   k w e n y e   M i p a n g i l i o   y a k o   k i s h a   u w a s h e    I d h i n i   y a   K u f i k i a   M t a n d a o   w a   K a r i b u    k w a   a j i l i   y a   p r o g r a m u   h i i ._Nenda kwenye Mipangilio kwenye simu hii na uhakikishe umewasha kipengele cha Idhini ya Kufikia Mtandao wa Karibu kwa ajili ya programu hii_#Kipengele cha kutuma kinaunganishwaTsimu_Kipindi cha kutuma kimeanza_KHakikisha kwamba umewasha kipengele cha Idhini ya Kufikia Mtandao wa Karibu]MOJA KWA MOJA_Kipindi cha kutuma kimekwisha_Sogeza mbele kwa sekunde 30  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-djÍÙïõLi¶
,8U]lw£Éêò".M\
!
®
Ô
Ù
÷ESs             T              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ta.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlec°¿g²¿¯³µÁc£ÈW(Label)oª¿©Í©È  ³Í³¿ÁÍ³Ío¹¾²ÁÍÁ  ©ÁªÍªÁ¿±¤ÁnªÍÈÍ¿²Í³ÍW(title)Z(Subtitle)o5¿µ¿ÍÁ®Í  ¸ÍªÀÍ°Í³ÁÍÁ®Í  ®À¿¯¾µÈ  ©ÁªÍª  ¤ÊµÁ®Ío©ÁªÍªÁµ¤È  ¨¿±Á¤Í¤Áeª¿©Í 0m£ÈÍ¿±¤Á . . .iµ¿³®Íª°®Íe¿¯Ë](device name)f®ÂÁ®Íi°¤Í¤ÁÆ¯Íj£ÈÍ¿±¤ÁW(Title)_pin_cancel_buttoneª¿©Í 2eµ©®Íoµ¿³®Íª°¤Í¤È¤Í  ¤µ¿°Íoµ¿³®Íª°®Í  ª¿³Ç  ¿±¤Á . . .eª¿©Í 1_connecting_skip_button_welcome_cancel_buttono°Á¿²Á³Í³  ¾¤©¤Í¤¿©Í  ®ÁªÍªÁ¤Í  ¤¿°È¯¿²Í  ¾ÍªÍªÁ®Í   4  ²ÍªÍ  ª¿©Í©È  ³Í³¿µÁ®Í .  ¾¤©¤Í¤¿©Í  °¿®È¯¾³°Í   C h r o m e c a s t  ªÍ¸¿²Á®Í  ª¿©Í©ÈªÍ  ª¾°ÍÍ  ®Á¿¯Á®Í .e¤µ¿°Ío&®À¿¯¾  ¤ÁµÁ®Í  ¤Ç°Í¨Í¤ÆÁÍªÍªµ¿²Í²Èo(Í¸ÍªÇ£ÍÍ  £ÍÍ°Ë²°È  ¯Í¤Í  ¤ÍµÁ®Í_pin_connect_buttoneª¿©Í 3^skip_ad_button_pin_listen_button_welcome_ok_buttono¿°¾Í  ¤Ç°Í¨Í¤ÆÁªÍªÁmª¿©Í©ÈÍ  Â±Áo/¯ÍÁ¤²Í /È¨¿±Á¤Í¤Á¤²ÁÍÁ  È¯Ç  ¨¿²È®¾±Í±Á®Í_(device status)UTitle_(multizone device name)o!°Á¿²Á³Í³  ¾¤©¤Í¤Á©Í  £ÈÍµÁ®Í_welcome_skip_buttonX(artist)]skip_ad_labeli®Á¿¨Í¤¤Á_connecting_cancel_buttono¤±ÍÁ  ©ÁªÍªÁ :oe°Á¿²Á³Í³  ¾¤©¤Í¤Á©Í  £ÈÍ  ª¿©Í©ÈÍ  ÇÍª¤±ÍÁ  Í³Í  ®ÈÍ°ËªË©Í  ¤±Í¾²¿®¾ªÍ  ª¯©ÍªÁ¤Í¤ªÍªÁ®Í .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n ¯¶¾ç19D±Úå ,9Lai}¼ïú		+
^
i
¸ +:Nbª#=¡¯ÂÝþ             v              
Ë


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/ta.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe¿¯Ëo 3 0  µ¿©¾¿³Í  ª¿©ÍÆ²Í²Á®Ík®Ç²Á®Í  ±¿o&µ¿³®Íª°¤Í¤È¤Í  ¤µ¿°ÍÍ  ©Í©Á®Í   % l d   . . .i¿°¾Í   % do£ÈÍªÍªÁ®Í  ¾¤©®Í :mª¿³Ç  Æ¯Í¯Á®ÍofÍ³Í   % @  ®±Í±Á®Í  ©ÁªÍªÁ®Í  ¾¤©®Í  °Ç  µÈªÈ  ¨ÆÍµÊ°ÍÍ¿²Í  £ÈÍªÍªÍ¿°ÁªÍª¤È  ±Á¤¿Æ¯Í¤Á  Ê³Í³µÁ®Ío4µ¿µ°¿ªÍªÁ  ªÍÈÍ¿²Í³Í  ¿°¾ÍÈ¤Í  ¤Ç°Í¨Í¤ÆÁÍÁ®Ío®À¿¯¾  ª¿³Ç  µ¤È  ¨¿±Á¤Í¤Á®Ík¤ÁµÁ®¿²Í²Èc°¿o²Èª°ªÍªÁ  £ÈÍªÍªµ¿²Í²Èo-¨Í¤  ªÍ¸Í  ²Èª°ªÍª    ¨ÆÍµÊ°ÍÍ  £Á²Í  ¤ÇµÈU--:--gÁ¤Í¤Áo®ÈªÍªÁ³ÁÍÁ  Æ²Ío¤±ÍÁ  ©ÁªÍªÁ :o¯Í  ¨¿²ÈÍÁ  ®¾±Í±Á®Íoµ¿µ°¿ªÍªÁ  ªÍÈÍ¿²Í³ÍhÇªÍ²ÆÍj®ÈªÍªÁ³Íi®Á¨Í¤È¯¤ÁoµÈªÈ  £ÈªÍªÈÍ  °¿ª¾°ÁÍ³Ío²Èª°ªÍªÁ  £ÈÍªÍªÍ¤Áo/¯ÍÁ¤²Í /È¨¿±Á¤Í¤Á¤²ÁÍÁ  È¯Ç  ¨¿²È®¾±Í±Á®ÍmÈ¨¿±Á¤Í¤Á®ÍnªÍÈÍ¿²Í³ÍoéÍ³Í  ¾¤©Í³Á©Í  £ÈÍ ,  ¨Í¤  ªÍ¸ÁÍÁ  µÈªÈ  ¨ÆÍµÊ°ÍÍ¿©Í  £Á²Í  ¤ÇµÈ . 
 
²Èª°ªÍª ,  Í³Í    ¨ÆÍµÊ°ÍÍÁ©Í  £ÈÍ  ªÍ¸Í  Ë°Á®ÍªË¤Á   °¿   ©Íª¤È¤Í  ¤Ç°Í¨Í¤ÆÁÍµÁ®Í .  ¨Í¤  ªÍ¸ÁÍ¾©   i O S  ®ÈªÍªÁ³¿²Á®Í  ¤ÈªÍ  ª¿±Á  ©Á®¤¿Í²¾®Í .j % d  ¤µÀ¤®Ío¾¤©Í³Í  ¤ÁµÁ®¿²Í²Èo % @ÍÁ  ©ÁªÍªÁ¿±¤Áo¬Í³Í  ¾¤©Í³Á©Í  £ÈÍ ,  ¨Í¤  ªÍ¸ÁÍÁ  µÈªÈ  ¨ÆÍµÊ°ÍÍ¿©Í  £Á²Í  ¤ÇµÈ . 
 
²Èª°ªÍª ,  ®ÈªÍªÁ³ÁÍÁÍ  Æ©Í±Á  ¨Í¤  ªÍ¸ÁÍ¾©     ¨ÆÍµÊ°ÍÍ  £Á²Í   ©Íª¤È  ©Í  Æ¯Í¯µÁ®Í .of®ÊªÈ²Í  ®ÈªÍªÁ³ÁÍÁÍ  Æ©Í±Á  ¨Í¤  ªÍ¸¿±Í¾©    ¨ÆÍµÊ°ÍÍ  £Á²Í  ¯ÍªÍªÍÁ³Í³¤¾  ©ªÍ  ª¾°ÍÍµÁ®Ío²Èª°ªÍªÁ  £ÈÍªÍªÁ¿±¤Áf®ÊªÈ²Ío©ÁªÍªÁ¤²Í  ®°ÍµÁ  ¤ÊÍ¿¯¤Áo>  ¨ÆÍµÊ°ÍÍ  £Á²Í  ¯ÍªÍªÍÁ³Í³¤È  ±Á¤¿Æ¯Í¤Á  Ê³Í³ÁÍ³Íe¨Ç°²Èo©ÁªÍªÁ¤²Í  ®°ÍµÁ  ®Á¿¨Í¤¤Áo 3 0  µ¿©¾¿³Í  ®Á©ÍÆ²Í²Á®Í  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do¤»
Je4Øïö	-				È	é

M
^
s

Á
ôUp
b
w
¤
Í(÷.;võ 9             U              n


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/th.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitled%j#01@*5"i@
7H-!H-W(Label)hI-   P I No3%1A*LD"1+I-1H@%Hh3##"2"W(title)Z(Subtitle)o(A0@7H-A*L*7H-D"15'5A%0%3B-8i+"8A*LTpin0o3%1@
7H-!H- . . .eB)2e@*5"](device name)c4f"@%4n3%1@
7H-!H-W(Title)_pin_cancel_buttonTpin2iI2!B)2o3%1A*B)2 . . .Tpin1_connecting_skip_button_welcome_cancel_buttonoqI-   P I N   4  +%15H#2+I2-+%1--8#L5H-"9HC%I@5"  @I2--8#L"19   P I N  CA-   C h r o m e c a s t  DI-5I'"dI2!oD!HDI@%7-*7H-D'Io"A0@7H-@4C
I21''8!5H"2"_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono#2"2#A#G5H@%7-g1   P I No*%12#@%H /+"8
1H'#2'_(device status)UTitle_(multizone device name)o@
7H-!H--8#L5H-"9HC%I_welcome_skip_buttonX(artist)]skip_ad_labele@*#G_connecting_cancel_buttonjA*LD"1o;C2#@
7H-!H-  #00C
ID!B#B@G2#
1H'#2'@7H-1   P I N   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¢·ÊÒã-5@¦«ÐÛæôû%-AFY~´		¢	É

%
*
9
M
a


Ì
Þ
ä
þ7MVdo             u              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/th.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe@*5"o#-%1   3 0  '425o9I-!9%@4H!@4!o8I2!B)25IDIC-5   % l d   . . .hA#G   % do3%1@
7H-!H-1d@%HoC#'*-'H2   % @  A%0-8#LA*L-8@
7H-!H--"9H@#7-H2"@5"'1o@%7-A#G3##"2"A@*5"l+"8@%H*7H-eD!H!5d%oA*LD!H@
7H-!H-o3A-5II-C
I2#@I26H2@#7-H2"   L A N  @7H-A*LU--:--e1DoD5H2#1IH2jA*LD"1o*%1*202#4@*5"o3##"2"A@*5"hAG@%Gj2#1IH2hH-+I2o#'*-@#7-H2"   W i - F i  -8o@
7H-!H-@7H-A*LA%I'o*%12#@%H /+"8
1H'#2'l+"8
1H'#2'h3##"2"oÏA-5II-@I26@#7-H2"   W i - F i  @7H-@
7H-!H-1-8#L-8 
 
+2I-2#A*L  C+I@%7-   "% "  @!7H-A--@
7H-!H-1@#7-H2"   L A N  -8  80-8
22#@
7H-!H-5I 2"+%1C2#1IH2   i O S  *3+#1A-5IGDIn % d  @-#L@GLoD!H!5-8#L5HC
IDImA*LD"1   % @oA-5II-@I26@#7-H2"   W i - F i  @7H-@
7H-!H-1-8#L-8 
 
+2I-2#A*L  C+ID5H2#1IH2A%0@4   "2#@I26H2@#7-H2"   L A N "  *3+#1A-5IoUD"12#1IH2CB#(1LA%0#'*-'H2@4   "2#@I26@#7-H2"   L A N "  *3+#1A-5IA%I'o3%1@
7H-!H-@7H-A*LhB#(1Lo@#4H!@*
12#A*LA%I'o0#'*-'H2DI@42#@I26@#7-H2"   L A N  D'IA%I'b*o*4I*8@*
12#A*LA%I'o#-DI2+I2   3 0  '425  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do¹ú09Âù&K´ºÅæû	&	I	Z	o		½	î
!
:
Kì	6Q
~+^o =             U              n


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/tr.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleUTamamj S e s   d ü z e y if B a l a nW(Label)YPIN girino O t u r m a   O d a s1 n a   Y a y1 n l a n1 y o rj A l t y a z1 l a rW(title)Z(Subtitle)o4 T V   v e   H o p a r l ö r l e r i n i z e   m e d y a   y a y1 n l a m a k   i ç i n   d o k u n u nm Y a y1 n1   d u r d u rTpin0o B a l a n1 l1 y o r . . .VReklamSSes](device name)UKapate0 p t a lj B a l a n1 y o rW(Title)o p i n _ i p t a l _ d ü m e s iTpin2g A l t y a z1l R e k l a m1   A t l a_Reklam devam ediyor...Tpin1o b a l a n t1 _ a t l a _ d ü m e s io h o_ _ g e l d i n i z _ i p t a l _ d ü m e s io Y a k1 n d a k i   b i r   c i h a z1 n   a n a   e k r a n1 n d a   g ö r ü n t ü l e n e n   4   b a s a m a k l1   P I N ' i   g i r i n .   C i h a z1 n   s a h i b i ,   P I N ' i   C h r o m e c a s t   u y g u l a m a s1 n d a   d a   b u l a b i l i r .TAtlao M e d y a   s e ç i l m e d io7 G e n i_ l e t i l m i_   d e n e t l e y i c i y i   e t k i n l e_ t i r m e k   i ç i n   d o k u n u no p i n _ b a l a n _ d ü m e s iTpin3o r e k l a m1 _ a t l a _ d ü m e s io p i n _ d i n l e _ d ü m e s io h o_ _ g e l d i n i z _ t a m a m _ d ü m e s il P a r ç a   S e ç i m io P I N   g i r i_ i n i   d i n l eo O y n a t / d u r a k l a t   d ü m e s i_(device status)UTitle_(multizone device name)o Y a k1 n d a k i   c i h a z a   b a l a n1 no h o_ _ g e l d i n i z _ a t l a _ d ü m e s iX(artist)o r e k l a m1 _ a t l a _ e t i k e t iUBittio b a l a n1 y o r _ i p t a l _ d ü m e s io Y a y1 n l a n a c a k   c i h a zo\ B a l a n m a k   i ç i n   P I N   g i r i_ i   d i n l e n e c e k .   B u n u n   i ç i n   m i k r o f o n u n u z   g e ç i c i   o l a r a k   k u l l a n1 l a c a k t1 r .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n´ÁÉÓ!)4º¿àçëùÿ
'LQ`yÄû



0
¡
È
Í
øTmÃÕÛõ*_hÌó             v              
®


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/tr.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELSSes_30 saniye geri git_Daha fazla bilgio/ R e k l a m1   % l d   s a n i y e   i ç i n d e   a t l a y a b i l e c e k s i n i z . . .i % d .   P a r ç ao B a l a n1 l a c a k   c i h a z :UOynatoE % @   v e   y a y1 n   c i h a z1 n1 z1 n   a y n1   k a b l o s u z   a a   b a l1   o l d u u n d a n   e m i n   o l u n .o A l t y a z1   k a n a l1   s e ço M e d y a   o y n a t m a y1   d u r d u rSYokUTamamo C a s t   b a l a n m a d1o: B u   u y g u l a m a ,   Y a y1 n l a m a k   i ç i n   Y e r e l   A   E r i_ i m i   g e r e k t i r i y o rU--:--WSonraki]Ayarlar'a gito Y a y1 n l a n a c a k   c i h a zo S e s i   k a p a t m a   d u r u m u n u   d e i_ t i rj A l t y a z1 l a rVtabletWAyarlarf Ö n c e k io K a b l o s u z   a1 n1 z1   k o n t r o l   e d i nm C a s t   b a l a n d1o O y n a t / d u r a k l a t   d ü m e s iXDuraklatoè B u   u y g u l a m a n1 n ,   c i h a z l a r1 n1 z a   b a l a n m a k   i ç i n   k a b l o s u z   a1 n1 z a   e r i_ m e s i   g e r e k i y o r . 
 
 Y a y1 n l a m a k   i ç i n ,   u y g u l a m a   y e r e l   a1 n1 z a   b a l a n m a k   i s t e d i i n d e   " T a m a m "1   s e ç i n .   B u   u y g u l a m a   i ç i n   b u   i z n i   d a h a   s o n r a   i O S   A y a r l a r1 ' n d a   d a   v e r e b i l i r s i n i z .h Y ü z d e   % do K u l l a n1 l a b i l i r   c i h a z   y o ko % @   c i h a z1 n a   y a y1 n l a n1 y o ro¡ B u   u y g u l a m a n1 n ,   c i h a z l a r1 n1 z a   b a l a n m a k   i ç i n   k a b l o s u z   a1 n1 z a   e r i_ m e s i   g e r e k i y o r . 
 
 Y a y1 n l a m a k   i ç i n   A y a r l a r1 n1 z a   g i d i p   b u   u y g u l a m a   i ç i n    Y e r e l   A   E r i_ i m i  n i   a ç1 n .og B u   t e l e f o n d a   A y a r l a r ' a   g i d i p   Y e r e l   A   E r i_ i m i ' n i n   b u   u y g u l a m a   i ç i n   a ç1 l m1_   o l u p   o l m a d11 n1   k o n t r o l   e d i no C a s t   b a l a n1 y o rWtelefono Y a y1 n l a m a   o t u r u m u   b a_ l a t1 l d1o- Y e r e l   A   E r i_ i m i n i n   a ç1 k   o l d u u n d a n   e m i n   o l u nUCANLIo Y a y1 n l a m a   o t u r u m u   b i t i r i l d i_30 saniye ileri git  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dh}ñ-3Àç A¸¾ÆÔû	:	O	V	^	k	¨	Ã	ò	ûÎßE
[|¿"[             T              q


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/uk.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKhCG=VABLjV4:;NG8B8W(Label)o254VBL   P I N -:>4o"@0=A;OFVO  C  2VB0;L=Vh!C1B8B@8W(title)Z(Subtitle)o=0B8A=VBL ,  I>1  B@0=A;N20B8  <54V02<VAB  =0  B5;52V7>@  V  48=0<V:8o@8?8=8B8  B@0=A;OFVNi P I N -:>4   0lV4:;NG5==O &g 5:;0<0jC4V>D09;8](device name)g0:@8B8i!:0AC20B8kV4:;NG5==OW(Title)o#:=>?:0  A:0AC20B8  >B@8<0==O   P I N -:>4Ci P I N -:>4   2o@>?CAB8B8  @5:;0<Co"@820T  @5:;0<0 &i P I N -:>4   1o%:=>?:0  ?@>?CAB8B8  ?V4  G0A  ?V4:;NG5==Oo#:=>?:0  A:0AC20B8  ?V4  G0A  ?@82VB0==Oo254VBL   4 -7=0G=89   P I N -:>4 ,  O:89  7 'O28BLAO  =0  3>;>2=><C  5:@0=V  ?@8AB@>N  ?>@CG .  ;0A=8:  ?@8AB@>N  <>65  7=09B8  F59   P I N -:>4  C  4>40B:C   C h r o m e c a s t .j@>?CAB8B8o5  281@0=>  <54V02<VABo.0B8A=VBL ,  I>1  0:B82C20B8  @>7H8@5=89  :>=B@>;5@o):=>?:0  ?V4:;NG5==O  4;O  >B@8<0==O   P I N -:>4Ci P I N -:>4   3o:=>?:0  ?@>?CAB8B8  @5:;0<Co:=>?:0  >B@8<0B8   P I N -:>4o:=>?:0   O K  ?V4  G0A  ?@82VB0==Oo81V@  AC1B8B@V2oB@8<0B8   P I N -:>4o"5@5<8:0G  2V4B2>@5==O /?@87C?8=5==O_(device status)UTitle_(multizone device name)oV4:;NGVBL  ?@8AB@V9  ?>@CGo$:=>?:0  ?@>?CAB8B8  ?V4  G0A  ?@82VB0==OX(artist)o<VB:0  ?@>?CAB8B8  @5:;0<Cf>B>2>o$:=>?:0  A:0AC20B8  ?V4  G0A  ?V4:;NG5==On"@0=A;N20B8  =0oIV4  G0A  ?V4:;NG5==O  B8<G0A>2>  22V<:=5BLAO  <V:@>D>= ,  I>1  >B@8<0B8   P I N -:>4 .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n­ÂÊë)1<¹ä÷4BQd{Ìß		'	:		Ð
ë -áô)Z¶Ù
 
2
8
R

Ò
Ûf             u              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/uk.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELjC4V>D09;8o5@5<>B0B8  =0704  =0   3 0  A5:C=4j>:;04=VH5o# 5:;0<C  <>6=0  ?@>?CAB8B8  G5@57   % l d &m><?>78FVO   % doV4:;NG5==O  4>  ?@8AB@>N :jV4B2>@8B8oP5@5:>=09B5AO ,  I>   % @  V  ?@8AB@V9  4;O  B@0=A;OFVW  ?V4:;NG5=>  4>  >4=VTW  <5@56V   W i - F io81@0B8  AC1B8B@8o C?8=8B8  2V4B2>@5==O  <54V0D09;V2e5<0TROKo G o o g l e   C a s t  =5  ?V4:;NG5=>oJ)>1  B@0=A;N20B8  :>=B5=B ,  FL><C  4>40B:C  ?>B@V15=  4>ABC?  4>  ;>:0;L=>W  <5@56VU--:--d0;Vi0@0<5B@8n"@0=A;N20B8  =0o#2V<:=CB8  01>  28<:=CB8  72C:h!C1B8B@8g?;0=H5Bl0;0HBC20==Oe0704o%5@52V@B5  ?V4:;NG5==O  4>  <5@56V   W i - F io G o o g l e   C a s t  ?V4:;NG5=>o"5@5<8:0G  2V4B2>@5==O /?@87C?8=5==Ok@87C?8=8B8oö)>1  ?V4:;NG8B8AO  4>  20H8E  ?@8AB@>W2 ,  FL><C  4>40B:C  ?>B@V15=  4>ABC?  4>  <5@56V   W i - F i . 
 
)>1  B@0=A;N20B8  :>=B5=B ,  =0B8A=VBL   " O K " ,  :>;8  2  4>40B:C  7 'O2;OTBLAO  70?8B  =0  ?V4:;NG5==O  4>  ;>:0;L=>W  <5@56V .  8  B0:>6  <>65B5  =040B8  F59  4>72V;  C  ?0@0<5B@0E   i O S .S%d%o5<0T  4>ABC?=8E  ?@8AB@>W2o"@0=A;OFVO  =0  ?@8AB@V9   " % @ "o½)>1  ?V4:;NG8B8AO  4>  20H8E  ?@8AB@>W2 ,  FL><C  4>40B:C  ?>B@V15=  4>ABC?  4>  <5@56V   W i - F i . 
 
)>1  B@0=A;N20B8  :>=B5=B ,  2V4:@89B5  ?0@0<5B@8  9  C2V<:=VBL   ">ABC?  4>  ;>:0;L=>W  <5@56V "  4;O  FL>3>  4>40B:0 .o^)>1  ?5@52V@8B8 ,  G8  <0T  F59  4>40B>:  4>ABC?  4>  ;>:0;L=>W  <5@56V ,  2V4:@89B5  =0;0HBC20==O  B5;5D>=0oV4:;NG5==O   G o o g l e   C a s tgB5;5D>=o!50=A  B@0=A;OFVW  ?>G02AOo65@5:>=09B5AO ,  I>  4>ABC?  4>  ;>:0;L=>W  <5@56V  22V<:=5=>fo!50=A  B@0=A;OFVW  70:V=G82AOo5@5<>B0B8  2?5@54  =0   3 0  A5:C=4  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dy¶Ë/bw=Ã	Z	`	i	|		Ò	ã	ò


c

Ù
ðßã

QÎ¾Í o|µ             T              ô


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/vi.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKh Â m   l°ã n gg K¿ t   nÑ iW(Label)k N h­ p   m ã   P I No a n g   t r u yÁ n   tÛ i   p h ò n g   k h á c hf P hå  ÁW(title)Z(Subtitle)o4 C h¡ m  Ã   t r u yÁ n   nÙ i   d u n g   a   p h°¡ n g   t iÇ n   tÛ i   T V   v à   l o ak Dë n g   t r u yÁ nTpin0m a n g   k¿ t   nÑ i &i Q u£ n g   c á oh Â m   t h a n h](device name)d ó n gc Hç yl a n g   k¿ t   nÑ iW(Title)_pin_cancel_buttonTpin2o BÏ   q u a   q u£ n g   c á oo a n g   p h á t   q u£ n g   c á o . . .Tpin1_connecting_skip_button_welcome_cancel_buttono N h­ p   m ã   P I N   gÓ m   4   c hï   sÑ   h iÃ n   t hË   t r ê n   m à n   h ì n h   c h í n h   cç a   t h i¿ t   bË  ß   g§ n .   C hç   sß   hï u   t h i¿ t   bË   ci n g   c ó   t hÃ   t ì m   m ã   P I N   t r o n g  é n g   då n g   C h r o m e c a s t .f BÏ   q u ao% C h° a   c hÍ n   nÙ i   d u n g   a   p h°¡ n g   t iÇ n   n à oo' N h¥ n  Ã   k í c h   h o¡ t   bÙ   iÁ u   k h iÃ n   mß   rÙ n g_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono Lñ a   c hÍ n   b£ n   â m   t h a n h / p hå  Ák N g h e   m ã   P I No N ú t   p h á t / t¡ m   dë n g_(device status)UTitle_(multizone device name)o K¿ t   nÑ i   vÛ i   t h i¿ t   bË  ß   g§ n_welcome_skip_buttonX(artist)]skip_ad_labelTXong_connecting_cancel_buttonj T r u yÁ n   tÛ io?Ã   k¿ t   nÑ i ,   m i c r ô   cç a   b¡ n   s½  °ã c   d ù n g   t¡ m   t hÝ i  Ã   n g h e   m ã   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n­¼ÄÛ!)4¶»Öéú19MRu¤©ÂÚ	û

U
¦
»
À
Ï
ã
÷2In ×íö	$9             u              º


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/vi.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELh Â m   t h a n ho T u a   l¡ i   3 0   g i â ym T ì m   h iÃ u   t h ê mo' B¡ n   c ó   t hÃ   bÏ   q u a   q u£ n g   c á o   s a u   % l d   . . .i B£ n   sÑ   % do a n g   k ê t   n ô i   v¡ id P h á to9£ m   b£ o   % @   v à   t h i¿ t   bË   t r u yÁ n   c ù n g   sí   då n g   mÙ t   m¡ n g   W i - F io C hÍ n   mÙ t   b£ n   p hå  Áo% Dë n g   p h á t   l¡ i   nÙ i   d u n g   a   p h°¡ n g   t iÇ ne K h ô n gROKo N ú t   T r u yÁ n   c h° a   k¿ t   nÑ io8è n g   då n g   n à y   c§ n   c ó   Q u yÁ n   t r u y   c­ p   m¡ n g   cå c   bÙ  Ã   t r u yÁ nU--:--i T i¿ p   t h e oo C h u yÃ n  ¿ n   p h§ n   C à i  · tj T r u yÁ n   tÛ io B­ t   t i¿ n g / t¯ t   t i¿ n go P hå  Á   c h i   t i¿ tm m á y   t í n h   b£ n gg C à i  · te T r°Û co K iÃ m   t r a   m¡ n g   W i - F i   cç a   b¡ no N ú t   T r u yÁ n   ã   k¿ t   nÑ io N ú t   p h á t / t¡ m   dë n gh T¡ m   dë n gf P hå  ÁoüÃ   k¿ t   nÑ i   vÛ i   c á c   t h i¿ t   bË   cç a   b¡ n ,  é n g   då n g   n à y   c§ n   c ó   q u yÁ n   t r u y   c­ p   v à o   m¡ n g   W i - F i . 
 
Ã   t r u yÁ n ,   h ã y   c hÍ n    O K    k h i  é n g   då n g   n à y   m uÑ n   k¿ t   nÑ i   vÛ i   m¡ n g   cå c   bÙ   cç a   b¡ n .   B¡ n   ci n g   c ó   t hÃ   c¥ p   q u yÁ n   n à y   v à o   l ú c   k h á c   t r o n g   p h§ n   C à i  · t   i O S   c h o  é n g   då n g   n à y .l % d   p h§ n   t r mo K h ô n g   c ó   t h i¿ t   bË   n à oo a n g   t r u yÁ n   tÛ i   % @o¶Ã   k¿ t   nÑ i   vÛ i   c á c   t h i¿ t   bË   cç a   b¡ n ,  é n g   då n g   n à y   c§ n   c ó   q u yÁ n   t r u y   c­ p   v à o   m¡ n g   W i - F i . 
 
Ã   t r u yÁ n ,   h ã y   c h u yÃ n  ¿ n   p h§ n   C à i  · t   rÓ i   b­ t    Q u yÁ n   t r u y   c­ p   m¡ n g   cå c   bÙ    c h o  é n g   då n g   n à y .o~ C h u yÃ n  ¿ n   p h§ n   C à i  · t   t r ê n   iÇ n   t h o¡ i   n à y   v à   k iÃ m   t r a  Ã  £ m   b£ o   r± n g   b¡ n   ã   b­ t   Q u yÁ n   t r u y   c­ p   m¡ n g   cå c   bÙ   c h o  é n g   då n g   n à yo N ú t   T r u yÁ n   a n g   k¿ t   nÑ ij iÇ n   t h o¡ io P h i ê n   t r u yÁ n   ã   b¯ t  § uo-£ m   b£ o   b¡ n   ã   b­ t   Q u yÁ n   t r u y   c­ p   m¡ n g   cå c   bÙi T Rð C   T I¾ Po P h i ê n   t r u yÁ n   ã   k¿ t   t h ú cn T u a   i   3 0   g i â y  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-du±>G¼å2=@qäêý	.	C	l		¨	·	Â	û
(
M
^
kf¬ÓBAr¸([             U              x


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/zh.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlebxn[bóÏbÞc¥W(Label)hQe   P I N  xgkcW(be>R0[¢Sb[W^UW(title)Z(Subtitle)o{æSsSï\ZOSQ[¹be>R0`¨vu5ÆTóTÍ¾YdP\kbbe>Tpin0ekcW(Þc¥ &b^TJbó](device name)bQsíbSÖmdkcW(Þc¥W(Title)_pin_cancel_buttonTpin2dóÇ^TJgkcW(d­e>^TJ &Tpin1_connecting_skip_button_welcome_cancel_buttono?÷QeDÑ¾YvN;\O^UN
f>y:v   4  OMep   P I N  x0vø^¾Yvb@g	N_SïW(   C h r o m e c a s t  ^u(N-b~R0å   P I N  x0bóÇig*	béNûOUZOSQ[¹mp¹c	SsSïT/u(\U_ Tvc§R6Vh_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonh	béóhb[W^UhhT,SÖ   P I N  xm d­e>  / fP\ Rcbc	®_(device status)UTitle_(multizone device name)hÞc¥R0DÑv¾Y_welcome_skip_buttonX(artist)]skip_ad_labelb[b_connecting_cancel_buttoncbe>R0oN:N^úzËÞc¥ÿ`¨v¦QKÎ\feöu(NT,SÖ   P I N  x0   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£¨°ÁÐÕÝè#.38FKPYauz°ÈINa|¥¹ÍÞï	
		"	<	M	c	l	z			¡             u              	Ø


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/zh.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFG?HIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELbógT    3 0  yÒdNãæ`Åo`¨SïW(   % l d  yÒTóÇ^TJ &fóh   % dekcW(Þc¥R0bd­e>o÷xnOÝ`¨v % @Tb@u(be>¾YOu(vf/TN N*   W i - F i  Q~Üe	bé[W^UhhP\kbd­e>ZOSQ[¹aeàcwåSNog*Þc¥R0   C h r o m e c a s tokd^u( ·_[ùg,W0Q~Üv¿îgCPbMýbe>Q[¹U--:--cNN N*flR0 ¾n cbe>R0i_ T/ /QsíYór¶`b[W^Ud^sgu5b¾ncN
N N*f[W^Uh   % dn÷hÀgå`¨v   W i - F i  Q~Üo]òÞc¥R0   C h r o m e c a s tm d­e>  / fP\ Rcbc	®bfP\oZkd^u( g	gC¿î`¨v   W i - F i  Q~ÜÿbMýÞc¥R0`¨v¾Y0 
 
Y ÛLbe>ÿ÷W(kd^u(÷lBÞc¥R0`¨vg,W0Q~Üeö	bé xn[ 0`¨N_SïNeåTNÎ   i O S  ¾nN-Tkd^u(cNÙygCP0fv~RNK   % dgl¡g	Sïu(v¾YgkcW(be>R0 % @oAkd^u( g	gC¿î`¨v   W i - F i  Q~ÜÿbMýÞc¥R0`¨v¾Y0 
 
Y ÛLbe>ÿ÷lR0 ¾n ^vN:kd^u(_ T/ g,W0Q~Ü¿îgCP 0o)÷RM_ÙèbKg:N
v ¾n èRhÀgåvø^¾nÿxnOÝ]òN:å^u(_ T/ g,W0Q~Ü¿îgCP okcW(Þc¥R0   C h r o m e c a s tbbKg:gbe>OÝ]ò_ YËo÷xnOÝ]ò_ T/ g,W0Q~Ü¿îgCP bvôd­gbe>OÝ]ò~Óg_g_ëÛ   3 0  yÒ  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dix¢¯º¿þ	$Ev|ª¯¸½ÄÑî*/æó				ë


"
E
J
Y             U              
h


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/zh_CN.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlebxn[bóÏbÞc¥W(Label)hQe   P I N  xgkcW(be>R0[¢Sb[W^UW(title)Z(Subtitle)o{æSsSï\ZOSQ[¹be>R0`¨vu5ÆTóTÍ¾YdP\kbbe>Tpin0ekcW(Þc¥ &b^TJbó](device name)bQsíbSÖmdkcW(Þc¥W(Title)_pin_cancel_buttonTpin2dóÇ^TJgkcW(d­e>^TJ &Tpin1_connecting_skip_button_welcome_cancel_buttono?÷QeDÑ¾YvN;\O^UN
f>y:v   4  OMep   P I N  x0vø^¾Yvb@g	N_SïW(   C h r o m e c a s t  ^u(N-b~R0å   P I N  x0bóÇig*	béNûOUZOSQ[¹mp¹c	SsSïT/u(\U_ Tvc§R6Vh_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonh	béóhb[W^UhhT,SÖ   P I N  xm d­e>  / fP\ Rcbc	®_(device status)UTitle_(multizone device name)hÞc¥R0DÑv¾Y_welcome_skip_buttonX(artist)]skip_ad_labelb[b_connecting_cancel_buttoncbe>R0oN:N^úzËÞc¥ÿ`¨v¦QKÎ\feöu(NT,SÖ   P I N  x0   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£¨°ÁÐÕÝè#.38FKPYauz°ÈINa|¥¹ÍÞï	
		"	<	M	c	l	z			¡             u              	Ø


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/zh_CN.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFG?HIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELbógT    3 0  yÒdNãæ`Åo`¨SïW(   % l d  yÒTóÇ^TJ &fóh   % dekcW(Þc¥R0bd­e>o÷xnOÝ`¨v % @Tb@u(be>¾YOu(vf/TN N*   W i - F i  Q~Üe	bé[W^UhhP\kbd­e>ZOSQ[¹aeàcwåSNog*Þc¥R0   C h r o m e c a s tokd^u( ·_[ùg,W0Q~Üv¿îgCPbMýbe>Q[¹U--:--cNN N*flR0 ¾n cbe>R0i_ T/ /QsíYór¶`b[W^Ud^sgu5b¾ncN
N N*f[W^Uh   % dn÷hÀgå`¨v   W i - F i  Q~Üo]òÞc¥R0   C h r o m e c a s tm d­e>  / fP\ Rcbc	®bfP\oZkd^u( g	gC¿î`¨v   W i - F i  Q~ÜÿbMýÞc¥R0`¨v¾Y0 
 
Y ÛLbe>ÿ÷W(kd^u(÷lBÞc¥R0`¨vg,W0Q~Üeö	bé xn[ 0`¨N_SïNeåTNÎ   i O S  ¾nN-Tkd^u(cNÙygCP0fv~RNK   % dgl¡g	Sïu(v¾YgkcW(be>R0 % @oAkd^u( g	gC¿î`¨v   W i - F i  Q~ÜÿbMýÞc¥R0`¨v¾Y0 
 
Y ÛLbe>ÿ÷lR0 ¾n ^vN:kd^u(_ T/ g,W0Q~Ü¿îgCP 0o)÷RM_ÙèbKg:N
v ¾n èRhÀgåvø^¾nÿxnOÝ]òN:å^u(_ T/ g,W0Q~Ü¿îgCP okcW(Þc¥R0   C h r o m e c a s tbbKg:gbe>OÝ]ò_ YËo÷xnOÝ]ò_ T/ g,W0Q~Ü¿îgCP bvôd­gbe>OÝ]ò~Óg_g_ëÛ   3 0  yÒ  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dix¢¯º¿þ	$Ev|ª¯¸½ÄÑî*/æó				ë


"
E
J
Y             U              
h


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/zh_TW.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlebxº[bóÏb#}ÚW(Label)h8Qe   P I N  x¼ebe>R0[¢^ób[W^UW(title)Z(Subtitle)oøSsSï\ZÔbe>R0ûTcÚrVhdP\kbbe>Tpin0f#}ÚN- . . .b^ãTJbó
](device name)bÜbSÖmc#}ÚN-W(Title)_pin_cancel_buttonTpin2dueN^ãTJikcW(d­e>^ãTJ . . .Tpin1_connecting_skip_button_welcome_cancel_buttono?Ë8QeDÑÝnN;ukbN
oy:v   4  OMex   P I N  x¼0ÝndÁg	N_SïNåW(   C h r o m e c a s t  aÉu(z_N-b~R0P   P I N  x¼0bueNgg*xSÖNûOUZÔløSsSïU_u(\Uvc§R6Vh_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttondfòvîxdÇh}SÖ   P I N  x¼gd­e> /f«P\RcÛ_(device status)UTitle_(multizone device name)h#}ÚóDÑvÝn_welcome_skip_buttonX(artist)]skip_ad_labelb[b_connecting_cancel_buttoncbe>óoY#}Úÿ_Åf«fBOu(¥QK¨O}SÖ   P I N  x¼0   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£¨°ÁÌÑÙä"',:?DKSglu¦¾?DSl©½Æ×æøþ		)	?	H	V	[	v	}             u              	°


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/GoogleCastUIResources.bundle/zh_TW.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELbó
gPI   3 0  yÒdw­ãs`ÅoO`SïNåW(   % l d  yÒ_ueN^ãTJ . . .efòvî   % dekcW(#}Úóbd­e>oËxº % @Tbe>Ýn]ò#N
TN P   W i - F i  }²ïjxSÖ±Ï_R©[W^UÌfP\kbd­e>ZÔaq!bxº[koy:pºg*#}Úvbe>c	oPaÉu(z_ S@Wß}²ï[XSÖk
bMýbe>Qg[¹U--:--cNN dRM_-[cbe>ófRcÛ\órÀaKg±Ï_R©[W^Ud^sgûfb-[cN
N kj¢gå   W i - F i  }²ïkoy:pº]ò#}Úvbe>c	gd­e> /f«P\RcÛbf«P\b[W^UoaY#}ÚóO`vÝnÿPaÉu(z__Å[XSÖO`v   W i - F i  }²ï0 
 
Y2Lbe>ÿËW(aÉu(z_lB#}ÚóO`vS@Wß}²ïfBxSÖ   [xº[ ]0O`N_SïNåeå_QN   i O S  v0-[0
aÉu(z_QA1k
P0fv~RNK   % dflg	Sïu(ÝnikcW(be>ó0 % @0
oWY#}ÚóO`vÝnÿPaÉu(z__Å[XSÖO`v   W i - F i  }²ï0 
 
Y2Lbe>ÿËRM_0-[0
aÉu(z_ÿN&pºPaÉu(z_U_   [ L o c a l   N e t w o r k   A c c e s s ]0oËRM_bKj_v0-[0
bÿxºPaÉu(z_]òU_u(S@Wß}²ï[XSÖk
koy:pº#}ÚN-vbe>c	bbKj_ibe>]åO\kµ]òYËlxº]òU_u(S@Wß}²ï[XSÖk
dSsfBN2mAibe>]åO\kµ]ò}Pg_g_ëI   3 0  yÒ  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dix¨³¾Ãø
"9fls|¨­´ËâñöûÀÍÚí		ß	ö	û

'
0
C             U              
R


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKAdBreakClipInfo.h
================================================
// Copyright 2013 Google Inc.

#import <Foundation/Foundation.h>

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaRequestItem.h>
#import <GoogleCast/GCKVastAdsRequest.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * The value for the @ref whenSkippable field if an ad is not skippable.
 *
 * @since 4.3
 */
GCK_EXTERN const int kAdBreakClipNotSkippable;

// This is left here for backwards compatibility reasons.
GCK_EXPORT
GCK_DEPRECATED("Deprecated. Use GCKVASTAdsRequest instead.")
@interface GCKAdBreakClipVastAdsRequest : GCKVASTAdsRequest
@end

/**
 * A class representing an ad break clip.
 *
 * @since 3.3
 */
GCK_EXPORT
@interface GCKAdBreakClipInfo : NSObject <NSCopying, NSSecureCoding>

/** A string that uniquely identifies this ad break clip. */
@property(nonatomic, readonly) NSString *adBreakClipID;

/** The clip's duration. */
@property(nonatomic, readonly) NSTimeInterval duration;

/** The clip's title. */
@property(nonatomic, readonly, nullable) NSString *title;

/** The click-through URL for this clip. */
@property(nonatomic, readonly, nullable) NSURL *clickThroughURL;

/** URL for the content that represents this clip (typically an image). */
@property(nonatomic, readonly, nullable) NSURL *contentURL;

/** MIME type of the content referenced by @ref contentURL. */
@property(nonatomic, readonly, nullable) NSString *mimeType;

/**
 * The content's ID.
 * @since 4.1
 */
@property(nonatomic, readonly, nullable) NSString *contentID;

/**
 * The poster URL for this clip.
 * @since 4.1
 */
@property(nonatomic, readonly, nullable) NSURL *posterURL;

/**
 * The length of time into the clip when it can be skipped in seconds.
 * @since 4.3
 */
@property(nonatomic, readonly) NSTimeInterval whenSkippable;

/**
 * The HLS segment format for this clip.
 * @since 4.1
 */
@property(nonatomic, readonly) GCKHLSSegmentFormat hlsSegmentFormat;

/**
 * The VAST ad request configuration if any. See more here:
 * <a href="https://www.iab.com/guidelines/digital-video-ad-serving-template-vast-4-0/">
 * Digital Video Ad Serving Template 4.0</a>.
 * If this is non-nil, all other fields will be ignored.
 *
 * @since 4.1
 */
@property(nonatomic, readonly, nullable) GCKVASTAdsRequest *vastAdsRequest;

/** Custom application-specific data associated with the clip. */
@property(nonatomic, strong, readonly, nullable) id customData;

- (instancetype)init NS_UNAVAILABLE;

@end  // GCKAdBreakClipInfo

/**
 * A builder object for constructing new or derived GCKAdBreakClipInfo instances. The builder may
 * be used to derive a GCKAdBreakClipInfo from an existing one:
 *
 * @code
 * GCKAdBreakClipInfoBuilder *builder =
 *     [[GCKAdBreakClipInfoBuilder alloc] initWithAdBreakClipInfo:originalAdBreakClipInfo];
 * builder.adBreakClipID = ...; // Change the ad break clip ID.
 * builder.duration = 100; // Change the ad break's duration.
 * GCKAdBreakClipInfo *derivedAdBreakClipInfo = [builder build];
 * @endcode
 *
 * It can also be used to construct a new GCKAdBreakClipInfo from scratch:
 *
 * @code
 * GCKAdBreakClipInfoBuilder *builder =
 *     [[GCKAdBreakClipInfoBuilder alloc] initWithAdBreakClipID:...];
 * builder.title = ...;
 * builder.contentURL = ...;
 * builder.contentID = ...;
 * // Set all other desired propreties...
 * GCKAdBreakClipInfo *newAdBreakClipInfo = [builder build];
 * @endcode
 *
 * @since 4.3.4
 */
GCK_EXPORT
@interface GCKAdBreakClipInfoBuilder : NSObject

/** A string that uniquely identifies this ad break clip. */
@property(nonatomic, copy) NSString *adBreakClipID;

/** The clip's duration. */
@property(nonatomic) NSTimeInterval duration;

/** The clip's title. */
@property(nonatomic, copy, nullable) NSString *title;

/** The click-through URL for this clip. */
@property(nonatomic, copy, nullable) NSURL *clickThroughURL;

/** URL for the content that represents this clip (typically an image). */
@property(nonatomic, copy, nullable) NSURL *contentURL;

/** MIME type of the content referenced by @ref contentURL. */
@property(nonatomic, copy, nullable) NSString *mimeType;

/**
 * The content's ID.
 */
@property(nonatomic, copy, nullable) NSString *contentID;

/**
 * The poster URL for this clip.
 */
@property(nonatomic, copy, nullable) NSURL *posterURL;

/**
 * The length of time into the clip when it can be skipped in seconds.
 */
@property(nonatomic) NSTimeInterval whenSkippable;

/**
 * The HLS segment format for this clip.
 */
@property(nonatomic) GCKHLSSegmentFormat hlsSegmentFormat;

/**
 * The VAST ad request configuration if any. See more here:
 * <a href="https://www.iab.com/guidelines/digital-video-ad-serving-template-vast-4-0/">
 * Digital Video Ad Serving Template 4.0</a>.
 */
@property(nonatomic, nullable) GCKVASTAdsRequest *vastAdsRequest;

/** Custom application-specific data associated with the clip. */
@property(nonatomic, nullable) id customData;

/**
 * Constructs a new GCKAdBreakClipInfoBuilder with all of the fields of the adBreakClipInfo object.
 *
 * @param adBreakClipInfo The ad break clip info to get the fields from.
 */
- (instancetype)initWithAdBreakClipInfo:(GCKAdBreakClipInfo *)adBreakClipInfo;

/**
 * Constructs a new GCKAdBreakClipInfoBuilder with the ad break clip ID and all other attributes
 * initialized to default values.
 *
 * @param adBreakClipID The clip ID of the ad break clip info.
 */
- (instancetype)initWithAdBreakClipID:(NSString *)adBreakClipID NS_DESIGNATED_INITIALIZER;

- (instancetype)init NS_UNAVAILABLE;

/**
 * Builds a GCKAdBreakClipInfo using the builder's current attributes.
 *
 * @return The new GCKAdBreakClipInfo instance.
 */
- (GCKAdBreakClipInfo *)build;

@end  // GCKAdBreakClipInfoBuilder

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKAdBreakInfo.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKAdBreakClipInfo.h>
#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class representing an ad break.
 *
 * @since 3.1
 */
GCK_EXPORT
@interface GCKAdBreakInfo : NSObject <NSCopying, NSSecureCoding>

/**
 * A string that uniquely identifies this ad break.
 *
 * @since 3.3
 */
@property(nonatomic, strong, readonly) NSString *adBreakID;

/**
 * The playback position, in seconds, at which this ad will start playing.
 *
 * @since 3.1
 */
@property(nonatomic, assign, readonly) NSTimeInterval playbackPosition;

/**
 * A list of identifier strings for the ad break clips contained by this ad break.
 *
 * @since 3.3
 */
@property(nonatomic, strong, readonly, nullable) NSArray<NSString *> *adBreakClipIDs;

/**
 * Whether the ad break has already been watched or not.
 *
 * @since 3.3
 */
@property(nonatomic, assign, readonly) BOOL watched;

/**
 * Whether the ad break is embedded.
 *
 * @since 4.1
 */
@property(nonatomic, assign, readonly) BOOL embedded;

/**
 * Whether the ad break is expanded.
 *
 * @since 4.7.0
 */
@property(nonatomic, assign, readonly) BOOL expanded;

/**
 * This is here for backwards compatibility reasons, but will return nil.
 */
- (instancetype)initWithPlaybackPosition:(NSTimeInterval)playbackPosition
    GCK_DEPRECATED("Use the GCKAdBreakInfoBuilder to initialize GCKAdBreakInfos.");

- (instancetype)init NS_UNAVAILABLE;

@end  // GCKAdBreakInfo

/**
 * A builder object for constructing new or derived GCKAdBreakInfo instances. The builder may
 * be used to derive a GCKAdBreakInfo from an existing one:
 *
 * @code
 * GCKAdBreakInfoBuilder *builder =
 *     [[GCKAdBreakInfoBuilder alloc] initWithAdBreakInfo:originalAdBreakInfo];
 * builder.adBreakID = ...; // Change the ad break clip ID.
 * builder.playbackPosition = 100; // Change the ad break's duration.
 * GCKAdBreakInfo *derivedAdBreakInfo = [builder build];
 * @endcode
 *
 * It can also be used to construct a new GCKAdBreakInfo from scratch:
 *
 * @code
 * GCKAdBreakInfoBuilder *builder =
 *     [[GCKAdBreakInfoBuilder alloc] initWithAdBreakID:...];
 * builder.title = ...;
 * builder.contentURL = ...;
 * builder.contentID = ...;
 * // Set all other desired propreties...
 * GCKAdBreakInfo *newAdBreakInfo = [builder build];
 * @endcode
 *
 * @since 4.3.4
 */
GCK_EXPORT
@interface GCKAdBreakInfoBuilder : NSObject

/**
 * A string that uniquely identifies this ad break.
 */
@property(nonatomic, copy) NSString *adBreakID;

/**
 * The playback position, in seconds, at which this ad will start playing.
 */
@property(nonatomic, assign) NSTimeInterval playbackPosition;

/**
 * A list of identifier strings for the ad break clips contained by this ad break.
 */
@property(nonatomic, copy, nullable) NSArray<NSString *> *adBreakClipIDs;

/**
 * Whether the ad break has already been watched or not.
 */
@property(nonatomic, assign) BOOL watched;

/**
 * Whether the ad break is embedded.
 */
@property(nonatomic, assign) BOOL embedded;

/**
 * Whether the ad break is expanded.
 */
@property(nonatomic, assign) BOOL expanded;

/*
 * Constructor for GCKAdBreakInfoBuilder using an existing adBreakInfo object.
 *
 * @param adBreakInfo The Ad Break Info object to copy fields from.
 */
- (instancetype)initWithAdBreakInfo:(GCKAdBreakInfo *)adBreakInfo;

/*
 * Constructor for GCKAdBreakInfoBuilder other fields will be set to default values.
 *
 * @param adBreakID The adBreakID of the ad break to be built.
 * @param adBreakClipIDs The list of ad break clip IDs in this ad break.
 */
- (instancetype)initWithAdBreakID:(NSString *)adBreakID
                   adBreakClipIds:(nullable NSArray<NSString *> *)adBreakClipIDs
    NS_DESIGNATED_INITIALIZER;

- (instancetype)init NS_UNAVAILABLE;

- (GCKAdBreakInfo *)build;

@end  // GCKAdBreakInfoBuilder

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKAdBreakStatus.h
================================================
// Copyright 2016 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class representing the ad break status.
 *
 * @since 3.3
 */
GCK_EXPORT
@interface GCKAdBreakStatus : NSObject <NSCopying>

/** The current time within the current ad break. */
@property(nonatomic, assign, readonly) NSTimeInterval currentAdBreakTime;

/** The current time within the current ad clip break. */
@property(nonatomic, assign, readonly) NSTimeInterval currentAdBreakClipTime;

/**
 * The minimum count in seconds into the clip required to enable skipping.
 *
 * @since 4.4.5
 */
@property(nonatomic, assign, readonly) NSTimeInterval whenSkippable;

/** The string identifier for the current ad break. */
@property(nonatomic, strong, readonly) NSString *adBreakID;

/** The string identifier for the current ad clip break. */
@property(nonatomic, strong, readonly) NSString *adBreakClipID;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKApplicationMetadata.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKImage;
@class GCKSenderApplicationInfo;

NS_ASSUME_NONNULL_BEGIN

/**
 * Information about a receiver application.
 */
GCK_EXPORT
@interface GCKApplicationMetadata : NSObject <NSCopying>

/** The application's unique ID. */
@property(nonatomic, copy, readonly) NSString *applicationID;

/** The application's name, in a format that is appropriate for display. */
@property(nonatomic, copy, readonly) NSString *applicationName;

/** Any icon images for the application, as an array of GCKImage objects. */
@property(nonatomic, copy, readonly, nullable)
    NSArray<GCKImage *> *images GCK_DEPRECATED("Use iconURL.");

/**
 * The icon URL for the application.
 *
 * @since 4.3.5
 */
@property(nonatomic, copy, readonly, nullable) NSURL *iconURL;

/** The set of protocol namespaces supported by this application. */
@property(nonatomic, copy, readonly, nullable) NSArray<NSString *> *namespaces;

/**
 * Information about the sender application that is the counterpart to the receiver application,
 * if any.
 */
@property(nonatomic, copy, readonly, nullable) GCKSenderApplicationInfo *senderApplicationInfo;

/**
 * The identifier (app ID) of the sender application that is the counterpart to the receiver
 * application, if any.
 */
- (nullable NSString *)senderAppIdentifier;

/**
 * The launch URL (URL scheme) for the sender application that is the counterpart to the receiver
 * application, if any.
 */
- (nullable NSURL *)senderAppLaunchURL;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKCastChannel.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKError;

NS_ASSUME_NONNULL_BEGIN

/**
 * A virtual communication channel for exchanging messages between a Cast sender and a Cast
 * receiver. Each channel is tagged with a unique namespace, so multiple channels may be multiplexed
 * over a single network connection between a sender and a receiver.
 *
 * A channel must be registered with a GCKCastSession before it can be used. When the associated
 * session is established, the channel will be connected automatically and can then send and receive
 * messages.
 *
 * Subclasses should implement the @ref didReceiveTextMessage: method to process incoming messages,
 * and will typically provide additional methods for sending messages that are specific to a given
 * namespace.
 */
GCK_EXPORT
@interface GCKCastChannel : NSObject

/** The channel's namespace. */
@property(nonatomic, copy, readonly) NSString *protocolNamespace;

/** A flag indicating whether this channel is currently connected. */
@property(nonatomic, assign, readonly) BOOL isConnected;

/**
 * A flag indicating whether this channel is currently writable.
 *
 * @since 4.0
 */
@property(nonatomic, assign, readonly) BOOL isWritable;

/**
 * Designated initializer. Constructs a new GCKCastChannel with the given namespace.
 *
 * @param protocolNamespace The namespace.
 */
- (instancetype)initWithNamespace:(NSString *)protocolNamespace;

/**
 * Default initializer is not available.
 */
- (instancetype)init NS_UNAVAILABLE;

/**
 * Called when a text message has been received on this channel. The default implementation is a
 * no-op.
 *
 * @param message The message.
 */
- (void)didReceiveTextMessage:(NSString *)message;

/**
 * Sends a text message on this channel.
 *
 * @param message The message.
 * @param error A pointer at which to store the error result. May be <code>nil</code>.
 * @return <code>YES</code> on success or <code>NO</code> if the message could not be sent.
 */
- (BOOL)sendTextMessage:(NSString *)message
                  error:(GCKError *_Nullable *_Nullable)error;

/**
 * Generates a request ID for a new message.
 *
 * @return The generated ID, or @ref kGCKInvalidRequestID if the channel is not currently connected.
 */
- (NSInteger)generateRequestID;

/**
 * A convenience method which wraps the result of @ref generateRequestID in an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>.
 *
 * @return The generated ID, or <code>nil</code> if the channel is not currently connected.
 */
- (nullable NSNumber *)generateRequestNumber;

/**
 * Called when this channel has been connected, indicating that messages can now be exchanged with
 * the Cast device over this channel. The default implementation is a no-op.
 */
- (void)didConnect;

/**
 * Called when this channel has been disconnected, indicating that messages can no longer be
 * exchanged with the Cast device over this channel. The default implementation is a no-op.
 */
- (void)didDisconnect;

/**
 * Called when the writable state of this channel has changed. The default implementation is a
 * no-op.
 *
 * @param isWritable Whether the channel is now writable.
 *
 * @since 4.0
 */
- (void)didChangeWritableState:(BOOL)isWritable;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKCastContext+UI.h
================================================
// Copyright 2016 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKCastContext.h>

#import <GoogleCast/GCKCommon.h>
#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

@class GCKUICastButton;
@class GCKUICastContainerViewController;
@class GCKUIExpandedMediaControlsViewController;
@class GCKUIMiniMediaControlsViewController;

@protocol GCKUIImageCache;
@protocol GCKUIImagePicker;

NS_ASSUME_NONNULL_BEGIN

/**
 * The name of the notification that will be published when the expanded media controls should be
 * presented to users.
 *
 * @memberof GCKCastContext
 */
GCK_EXTERN NSString *const kGCKExpandedMediaControlsTriggeredNotification;

/**
 * The name of the notification that will be published when the Cast dialog is about to be shown.
 *
 * @memberof GCKCastContext
 * @since 3.4
 */
GCK_EXTERN NSString *const kGCKUICastDialogWillShowNotification;

/**
 * The name of the notification that will be published when the Cast dialog has been dismissed.
 *
 * @memberof GCKCastContext
 * @since 3.4
 */
GCK_EXTERN NSString *const kGCKUICastDialogDidHideNotification;

/**
 * A category on GCKCastContext containing UI-specific APIs.
 *
 * @since 3.0
 */
@interface GCKCastContext (UI)

/**
 * The image cache implementation that will be used by the framework to fetch images that are
 * referenced in media metadata. A default implementation will be used if one is not provided by the
 * application. May be set to <code>nil</code> to reinstate the default image cache.
 */
@property(nonatomic, strong, nullable) id<GCKUIImageCache> imageCache;

/**
 * The image picker implementation that will be used to select an image for a specific purpose.
 * A default implementation will be used if one is not provided by the application. May be set to
 * <code>nil</code> to reinstate the default image picker.
 */
@property(nonatomic, strong, nullable) id<GCKUIImagePicker> imagePicker;

/**
 * Displays the Cast dialog.
 */
- (void)presentCastDialog;

/**
 * Constructs a GCKUICastContainerViewController that embeds the given view controller.
 */
- (GCKUICastContainerViewController *)createCastContainerControllerForViewController:
    (UIViewController *)viewController;

/**
 * Constructs a GCKUIMiniMediaControlsViewController.
 */
- (GCKUIMiniMediaControlsViewController *)createMiniMediaControlsViewController;

/**
 * If it has not been shown before, presents a fullscreen modal view controller
 * that calls attention to the Cast button and displays some brief instructional
 * text about its use.
 *
 * @return <code>YES</code> if the view controller was shown, <code>NO</code> if
 * it was not shown because it had already been shown before. Since version 4.1,
 * <code>NO</code> is also returned if the Cast Button was not found.
 * @deprecated Use presentCastInstructionsViewControllerOnceWithCastButton:.
 */
- (BOOL)presentCastInstructionsViewControllerOnce
    GCK_DEPRECATED("Use presentCastInstructionsViewControllerOnceWithCastButton:");

/**
 * If it has not been shown before, presents a fullscreen modal view controller
 * that calls attention to the Cast button, whose view is passed in, and displays
 * some brief instructional text about its use.
 *
 * @return <code>YES</code> if the view controller was shown, <code>NO</code> if
 * it was not shown because it had already been shown before. <code>NO</code> is
 * also returned if the Cast Button was not found.
 *
 * @since 4.1
 */
- (BOOL)presentCastInstructionsViewControllerOnceWithCastButton:(GCKUICastButton *)castButton;

/**
 * Clears the persistent flag that tracks whether the Cast instructions modal view controller has
 * been shown.
 */
- (void)clearCastInstructionsShownFlag;

/**
 * Displays the default Cast expanded media controls.
 */
- (void)presentDefaultExpandedMediaControls;

/**
 * Configures the behavior of the framework when there's a user action that should result in the
 * presentation of the expanded controls. If <code>YES</code>, the framework will present the
 * default expaned controls view. If <code>NO</code>, the framework will just trigger a
 * @ref GCKCastContext::kGCKExpandedMediaControlsTriggeredNotification.
 */
@property(nonatomic, assign) BOOL useDefaultExpandedMediaControls;

/**
 * The instance of the default Cast expanded media controls view controller.
 */
@property(nonatomic, strong, readonly)
    GCKUIExpandedMediaControlsViewController *defaultExpandedMediaControlsViewController;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKCastContext.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKCommon.h>
#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKCastOptions;
@class GCKCredentialsData;
@class GCKDiscoveryManager;
@class GCKDeviceProvider;
@class GCKError;
@class GCKMediaRequestItem;
@class GCKSessionManager;

/**
 * @file GCKCastContext.h
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * The <code>userInfo</code> key for the new Cast state in a Cast state change notification.
 *
 * @memberof GCKCastContext
 */
GCK_EXTERN NSString *const kGCKNotificationKeyCastState;

/**
 * The name of the notification that will be published when the Cast state changes.
 *
 * @memberof GCKCastContext
 */
GCK_EXTERN NSString *const kGCKCastStateDidChangeNotification;

/**
 * A class containing global objects and state for the framework. The context must be initialized
 * early in the application's lifecycle via a call to @ref setSharedInstanceWithOptions:.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKCastContext : NSObject

/**
 * The current casting state for the application. Changes to this property can be monitored with
 * KVO or by listening for @ref kGCKCastStateDidChangeNotification notifications.
 */
@property(nonatomic, assign, readonly) GCKCastState castState;

/**
 * The discovery manager. This object handles the discovery of receiver devices.
 */
@property(nonatomic, strong, readonly) GCKDiscoveryManager *discoveryManager;

/**
 * The session manager. This object manages the interaction with receiver devices.
 */
@property(nonatomic, strong, readonly) GCKSessionManager *sessionManager;

/**
 * Sets the shared instance, supplying a Cast options object. If the shared instance is already
 * initialized, an exception will be thrown.
 *
 * @param options The Cast options.
 */
+ (void)setSharedInstanceWithOptions:(GCKCastOptions *)options;

/**
 * Sets the shared instance, supplying a Cast options object. The call will fail if the context is
 * already initialized. This method must be called on the main thread.
 *
 * @param options The Cast options.
 * @param error A pointer at which to store the error in case of a failure.
 * @return <code>YES</code> on success, <code>NO</code> on failure.
 * @since 4.0
 */
+ (BOOL)setSharedInstanceWithOptions:(GCKCastOptions *)options
                               error:(GCKError *_Nullable *_Nullable)error;

/**
 * Returns the singleton instance. If a shared instance has not yet been initialized, an exception
 * will be thrown.
 */
+ (instancetype)sharedInstance;

/**
 * Tests if the singleton instance has been initialized yet.
 *
 * @since 3.5.4
 */
+ (BOOL)isSharedInstanceInitialized;

/**
 * Registers a device provider, which adds support for a new type of (non-Cast) device.
 *
 * @param deviceProvider An instance of a GCKDeviceProvider subclass for managing the devices.
 */
- (void)registerDeviceProvider:(GCKDeviceProvider *)deviceProvider;

/**
 * Unregisters the device provider for a given device category.
 *
 * @param category A string that uniquely identifies the type of device.
 */
- (void)unregisterDeviceProviderForCategory:(NSString *)category;

/**
 * Sets the credentials data of the current user. You should call this API with the current user
 * information before starting a cast session and whenever user account is changed.
 *
 * The credentials data will be embedded in the launch request. If it is to launch an
 * Android TV app, the app can use the credentials data to determine if the app supports
 * this specific user. If not, the cast app will be launched instead.
 *
 * If an Android TV app is launched, the credential data will be passed to the app, within
 * the launch intent. The app can use this data to personalize the user experience.
 *
 * @param credentialsData An instance of @c GCKCredentialsData. May be <code>nil</code>.
 */
- (void)setLaunchCredentialsData:(GCKCredentialsData *_Nullable)credentialsData;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKCastOptions.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKDiscoveryCriteria;
@class GCKLaunchOptions;

NS_ASSUME_NONNULL_BEGIN

/**
 * Options that affect the discovery of Cast devices and the behavior of Cast sessions. Writable
 * properties must be set before passing this object to the GCKCastContext.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKCastOptions : NSObject <NSCopying, NSSecureCoding>

/**
 * Constructs a new GCKCastOptions object with the specified discovery criteria.
 *
 * @param discoveryCriteria The discovery criteria to apply to discovered Cast devices. Only those
 * devices that satisfy the criteria will be made available to the application.
 *
 * @since 4.0
 */
- (instancetype)initWithDiscoveryCriteria:(GCKDiscoveryCriteria *)discoveryCriteria;

/**
 * Constructs a new GCKCastOptions object with the specified receiver application ID.
 *
 * @param applicationID The ID of the receiver application which must be supported by discovered
 * Cast devices, and which will be launched when starting a new Cast session.
 *
 * @deprecated Use initWithDiscoveryCriteria:.
 */
- (instancetype)initWithReceiverApplicationID:(NSString *)applicationID
    GCK_DEPRECATED("Use initWithDiscoveryCriteria:");

/**
 * Constructs a new GCKCastOptions object with the specified list of namespaces.
 *
 * @param namespaces A list of namespaces which must be supported by the currently running receiver
 * application on each discovered Cast device.
 *
 * @deprecated Use initWithDiscoveryCriteria:.
 */
- (instancetype)initWithSupportedNamespaces:(NSArray<NSString *> *)namespaces
    GCK_DEPRECATED("Use initWithDiscoveryCriteria:");

/**
 * A flag indicating whether the sender device's physical volume buttons should control the
 * session's volume.
 */
@property(nonatomic, assign) BOOL physicalVolumeButtonsWillControlDeviceVolume;

/**
 * A flag indicating whether the discovery of Cast devices should start automatically at
 * context initialization time. If set to <code>NO</code>, discovery can be started and stopped
 * on-demand by using the methods GCKDiscoveryManager::startDiscovery and
 * GCKDiscoveryManager::stopDiscovery. By default this option is set to @c NO.
 *
 * @since 3.4
 */
@property(nonatomic, assign) BOOL disableDiscoveryAutostart;

/**
 * A flag which is used to disable or enable collection of diagnostic data to improve the
 * reliability of Cast device discovery. The default value is <code>NO</code> (enabled); it may be
 * disabled by setting the value to <code>YES</code>.
 *
 * @since 4.0
 */
@property(nonatomic, assign) BOOL disableAnalyticsLogging;

/**
 * The receiver launch options to use when starting a Cast session.
 */
@property(nonatomic, copy, nullable) GCKLaunchOptions *launchOptions;

/**
 * The shared container identifier to use for background HTTP downloads that are performed by the
 * framework.
 *
 * @since 3.2
 */
@property(nonatomic, copy, nullable) NSString *sharedContainerIdentifier;

/**
 * Whether sessions should be suspended when the sender application goes into the background (and
 * resumed when it returns to the foreground). By default this option is set to <code>YES</code>.
 * It is appropriate to set this to <code>NO</code> in applications that are able to maintain
 * network connections indefinitely while in the background.
 *
 * @since 3.4
 */
@property(nonatomic, assign) BOOL suspendSessionsWhenBackgrounded;

/**
 * Whether the receiver application should be terminated when the user ends the session via the
 * "Stop Casting" button. By default this option is set to <code>NO</code>.
 *
 * @since 4.0
 */
@property(nonatomic, assign) BOOL stopReceiverApplicationWhenEndingSession;

/**
 * Whether cast devices discovery start only after a user taps on the @c GCKUICastButton the first
 * time.
 *
 * If set to <code>YES</code>, @c GCKUICastButton is displayed until a user taps on the cast button
 * the first time. On the first tap, an interstitial is presented to explain why local network
 * access permission is required for the cast to work. Discovery starts once the interstitial is
 * dismissed. The cast button is shown again only when the device is connected to a Wi-Fi network.
* When a Wi-Fi network connection is not present, the cast button is hidden.
 * If set to <code>NO</code>, discovery starts based on the flag @c disableDiscoveryAutoStart. This
 * flag comes into effect only on iOS 14 and above if the flag @c disableDiscoveryAutoStart is set
 * to <code>NO</code>. Default value is <code>YES</code>.
 *
 * @since 4.5.3
 */
@property(nonatomic, assign) BOOL startDiscoveryAfterFirstTapOnCastButton;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKCastSession.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKSession.h>
#import <GoogleCast/GCKSessionOptions.h>

#import <Foundation/Foundation.h>

@class GCKApplicationMetadata;
@class GCKCastChannel;
@class GCKCastOptions;
@class GCKDevice;
@class GCKDynamicDevice;
@class GCKMultizoneDevice;
@class GCKMultizoneStatus;
@class GCKRequest;
@class GCKSessionEndpoint;
@protocol GCKCastDeviceStatusListener;

NS_ASSUME_NONNULL_BEGIN

/**
 * A class that manages a Cast session with a receiver device.
 *
 * Sessions are created and managed automatically by the GCKSessionManager. The application should
 * not directly call the session lifecycle methods such as @ref start or @ref endWithAction:.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKCastSession : GCKSession

/**
 * The device's current "active input" status.
 */
@property(nonatomic, assign, readonly) GCKActiveInputStatus activeInputStatus;

/**
 * The device's current "standby" status.
 */
@property(nonatomic, assign, readonly) GCKStandbyStatus standbyStatus;

/**
 * The metadata for the receiver application that is currently running on the receiver device, if
 * any; otherwise <code>nil</code>.
 */
@property(nonatomic, copy, readonly, nullable) GCKApplicationMetadata *applicationMetadata;

/**
 * Constructs a new Cast session with the given Cast options.
 *
 * @param device The receiver device.
 * @param sessionID The session ID, if resuming; otherwise <code>nil</code>.
 * @param sessionOptions The session options, if any; otherwise <code>nil</code>.
 * @param castOptions The Cast options.
 *
 * @since 4.0
 */
- (instancetype)initWithDevice:(GCKDevice *)device
                     sessionID:(nullable NSString *)sessionID
                sessionOptions:(nullable GCKSessionOptions *)sessionOptions
                   castOptions:(GCKCastOptions *)castOptions;

/**
 * Registers a channel with the session.
 *
 * If the session is connected and the receiver application supports the channel's namespace, the
 * channel will be automatically connected. If the session is not connected, the channel will remain
 * in a disconnected state until the session is started.
 *
 * @param channel The channel to register.
 * @return <code>YES</code> if the channel was registered successfully, <code>NO</code> otherwise.
 */
- (BOOL)addChannel:(GCKCastChannel *)channel;

/**
 * Removes a previously registered channel from the session.
 *
 * @param channel The channel to unregister.
 * @return <code>YES</code> if the channel was unregistered successfully, <code>NO</code> otherwise.
 */
- (BOOL)removeChannel:(GCKCastChannel *)channel;

/**
 * Adds a GCKCastDeviceStatusListener to this object's list of listeners.
 *
 * The added listener is weakly held, and should be retained to avoid unexpected deallocation.
 *
 * @param listener The listener to add.
 */
- (void)addDeviceStatusListener:(id<GCKCastDeviceStatusListener>)listener;

/**
 * Removes a GCKCastDeviceStatusListener from this object's list of listeners.
 *
 * @param listener The listener to remove.
 */
- (void)removeDeviceStatusListener:(id<GCKCastDeviceStatusListener>)listener;

/**
 * Sets the individual device's volume in a multizone group. This is an asynchronous operation.
 *
 * @param volume The new volume, in the range [0.0, 1.0].
 * @param device The multizone device.
 * @return A GCKRequest object for tracking the request.
 */
- (GCKRequest *)setDeviceVolume:(float)volume forMultizoneDevice:(GCKMultizoneDevice *)device;

/**
 * Sets the individual device's muted state in a multizone group. This is an asynchronous operation.
 *
 * @param muted The new muted state.
 * @param device The multizone device.
 * @return A GCKRequest object for tracking the request.
 */
- (GCKRequest *)setDeviceMuted:(BOOL)muted forMultizoneDevice:(GCKMultizoneDevice *)device;

/**
 * Request multizone status from a multizone group. This is an asynchronous operation. When the
 * multizone status is received, the
 * GCKCastDeviceStatusListener::castSession:didReceiveMultizoneStatus: delegate method will be
 * messaged.
 *
 * @return A GCKRequest object for tracking the request.
 */
- (GCKRequest *)requestMultizoneStatus;

@end  // GCKCastSession

/**
 * A listener protocol for receiving Cast device status change notifications.
 *
 * @since 3.0
 */
@protocol GCKCastDeviceStatusListener <NSObject>

@optional

/**
 * Called when the Cast device's active input status has changed.
 *
 * @param castSession The Cast session.
 * @param activeInputStatus The new active input status.
 */
- (void)castSession:(GCKCastSession *)castSession
    didReceiveActiveInputStatus:(GCKActiveInputStatus)activeInputStatus;

/**
 * Called when the Cast device's standby status has changed.
 *
 * @param castSession The Cast session.
 * @param standbyStatus The new standby status.
 */
- (void)castSession:(GCKCastSession *)castSession
    didReceiveStandbyStatus:(GCKStandbyStatus)standbyStatus;

/**
 * Called when the Cast device's multizone status has changed.
 *
 * @param castSession The Cast session.
 * @param multizoneStatus The new multizone status.
 */
- (void)castSession:(GCKCastSession *)castSession
    didReceiveMultizoneStatus:(GCKMultizoneStatus *)multizoneStatus;

/**
 * Called whenever a multizone device is added.
 *
 * @param castSession The Cast session.
 * @param device The newly-added multizone device.
 */
- (void)castSession:(GCKCastSession *)castSession
    didAddMultizoneDevice:(GCKMultizoneDevice *)device;

/**
 * Called whenever a multizone device is updated.
 *
 * @param castSession The Cast session.
 * @param device The updated multizone device.
 */
- (void)castSession:(GCKCastSession *)castSession
    didUpdateMultizoneDevice:(GCKMultizoneDevice *)device;

/**
 * Called whenever a multizone device is removed.
 *
 * @param castSession The Cast session.
 * @param deviceID The deviceID of the removed multizone device.
 */
- (void)castSession:(GCKCastSession *)castSession
    didRemoveMultizoneDeviceWithID:(NSString *)deviceID;

@end  // GCKCastDeviceStatusListener

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKColor.h
================================================
// Copyright 2013 Google Inc.

#import <Foundation/Foundation.h>
#if TARGET_OS_IPHONE
#include <UIKit/UIColor.h>
#else
#include <AppKit/NSColor.h>
#endif

#import <GoogleCast/GCKDefines.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class that represents an RGBA color.
 */
GCK_EXPORT
@interface GCKColor : NSObject <NSCopying, NSSecureCoding>

/** The red intensity of the color; a value in the range [0.0, 1.0]. */
@property(nonatomic, readonly) CGFloat red;
/** The green intensity of the color; a value in the range [0.0, 1.0]. */
@property(nonatomic, readonly) CGFloat green;
/** The blue intensity of the color; a value in the range [0.0, 1.0]. */
@property(nonatomic, readonly) CGFloat blue;
/** The alpha (transparency) of the color; a value in the range [0.0, 1.0]. */
@property(nonatomic, readonly) CGFloat alpha;

/**
 * Designated initializer. Constructs a GCKColor object with the given red, green, blue, and alpha
 * values. All color components are in the range [0.0, 1.0].
 */
- (instancetype)initWithRed:(CGFloat)red
                      green:(CGFloat)green
                       blue:(CGFloat)blue
                      alpha:(CGFloat)alpha;

/**
 * Constructs a GCKColor object with the given red, green, blue values and an alpha value of 1.0
 * (full opacity). All color components are in the range [0.0, 1.0].
 */
- (instancetype)initWithRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue;

#if TARGET_OS_IPHONE

/**
 * Constructs a GCKColor object from a UIColor.
 */
- (instancetype)initWithUIColor:(UIColor *)color;

#else

/**
 * Constructs a GCKColor object from an NSColor.
 */
- (instancetype)initWithNSColor:(NSColor *)color;

#endif  // TARGET_OS_IPHONE

/**
 * Constructs a GCKColor object from a CGColor.
 */
- (instancetype)initWithCGColor:(CGColorRef)color;

/**
 * Constructs a GCKColor object from a CGColor and a given alpha value.
 *
 * @since 4.0
 */
- (instancetype)initWithCGColor:(CGColorRef)color alpha:(CGFloat)alpha;

/**
 * Constructs a GCKColor object from a CSS string representation in the form "#RRGGBBAA" or
 * "#RRGGBB".
 */
- (instancetype)initWithCSSString:(NSString *)CSSString;

/**
 * Returns a CSS string representation of the color, in the form "#RRGGBBAA".
 */
- (NSString *)CSSString;

/** The color black. */
+ (GCKColor *)black;
/** The color red. */
+ (GCKColor *)red;
/** The color green. */
+ (GCKColor *)green;
/** The color blue. */
+ (GCKColor *)blue;
/** The color cyan. */
+ (GCKColor *)cyan;
/** The color magenta. */
+ (GCKColor *)magenta;
/** The color yellow. */
+ (GCKColor *)yellow;
/** The color white. */
+ (GCKColor *)white;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKCommon.h
================================================
// Copyright 2014 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/**
 * @file GCKCommon.h
 * GCKCastState, GCKConnectionState, GCKConnectionSuspendReason, GCKActiveInputStatus, and
 * GCKStandbyStatus enums.
 */

/**
 * @var kGCKFrameworkVersion
 * A string constant containing the version number of the GoogleCast framework.
 */
GCK_EXTERN NSString *const kGCKFrameworkVersion;

/**
 * @var kGCKInvalidRequestID
 * An invalid request ID; if a method returns this request ID, it means that the request could
 * not be made.
 */
GCK_EXTERN const NSInteger kGCKInvalidRequestID;

/**
 * @var kGCKThreadException
 * An exception type indicating that an API was called from an invalid thread.
 */
GCK_EXTERN NSString *const kGCKThreadException;

/**
 * @enum GCKConnectionState
 * Enum defining Cast connection states.
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKConnectionState) {
  /** Disconnected from the device or application. */
  GCKConnectionStateDisconnected = 0,
  /** Connecting to the device or application. */
  GCKConnectionStateConnecting = 1,
  /** Connected to the device or application. */
  GCKConnectionStateConnected = 2,
  /** Disconnecting from the device. */
  GCKConnectionStateDisconnecting = 3
};

/**
 * @enum GCKConnectionSuspendReason
 * Enum defining the reasons for a connection becoming suspended.
 */
typedef NS_ENUM(NSInteger, GCKConnectionSuspendReason) {
  GCKConnectionSuspendReasonUnknown = -1,
  GCKConnectionSuspendReasonNone = 0,
  /** The connection was suspended because the application is going into the background. */
  GCKConnectionSuspendReasonAppBackgrounded = 1,
  /** The connection was suspended because of a network I/O or protocol error. */
  GCKConnectionSuspendReasonNetworkError = 2,
  /** The connection was suspended because the network is not reachable. */
  GCKConnectionSuspendReasonNetworkNotReachable = 3,
  /** The connection was suspended because app was terminated while connected. */
  GCKConnectionSuspendReasonAppTerminated = 4,
};

/**
 * @enum GCKActiveInputStatus
 * An enum describing the active input status states. This status indicates whether a receiver
 * device is currently the active input on its connected TV or AVR.
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKActiveInputStatus) {
  /** The active input status is unknown. */
  GCKActiveInputStatusUnknown = -1,
  /** The input is inactive. */
  GCKActiveInputStatusInactive = 0,
  /** The input is active. */
  GCKActiveInputStatusActive = 1,
};

/**
 * @enum GCKStandbyStatus
 * An enum describing the standby status states. This status indicates whether a receiver device's
 * connected TV or AVR is currently in "standby" mode.
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKStandbyStatus) {
  /** The standby status is unknown.  */
  GCKStandbyStatusUnknown = -1,
  /** The device is not in standby mode.  */
  GCKStandbyStatusInactive = 0,
  /** The device is in standby mode.  */
  GCKStandbyStatusActive = 1,
};

/**
 * @enum GCKCastState
 *
 * An enum describing the possible casting states for the sender application.
 */
typedef NS_CLOSED_ENUM(NSUInteger, GCKCastState) {
  /** No Cast session is established, and no Cast devices are available. */
  GCKCastStateNoDevicesAvailable = 0,
  /** No Cast session is establishd, and Cast devices are available. */
  GCKCastStateNotConnected = 1,
  /** A Cast session is being established. */
  GCKCastStateConnecting = 2,
  /** A Cast session is established. */
  GCKCastStateConnected = 3,
};



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKCredentialsData.h
================================================
#import <Foundation/Foundation.h>

#import <GoogleCast/GCKDefines.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class to maintain the application specific credentials data to identify and
 * possibly authenticates the user.
 *
 * @since 4.4.8
 */
GCK_EXPORT
@interface GCKCredentialsData : NSObject

- (instancetype)init NS_UNAVAILABLE;

/**
 * Initializes and returns a newly allocated @c GCKCredentialsData object with the specified
 * credentials.
 *
 * The @c credentialsType is assigned "ios" as default value to indicate it comes from an iOS
 * sender.
 *
 * @param credentials A string to identify and possibly authenticate the user. May be
 * <code>nil</code>.
 */
- (instancetype)initWithCredentials:(NSString *_Nullable)credentials;

/**
 * Initializes and returns a newly allocated @c GCKCredentialsData object with the specified
 * credentials and credentials type.
 *
 * @param credentials A string to identify and possibly authenticate the user. May be
 * <code>nil</code>.
 * @param credentialsType A string to identify the type of the credentials. May be <code>nil</code>.
 */
- (instancetype)initWithCredentials:(NSString *_Nullable)credentials
                    credentialsType:(NSString *_Nullable)credentialsType NS_DESIGNATED_INITIALIZER;

- (NSString *_Nullable)credentials;
- (NSString *_Nullable)credentialsType;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKDefines.h
================================================
// Copyright 2014 Google Inc.

#import <Availability.h>

#define GCK_VERSION_MAJOR 4
#define GCK_VERSION_MINOR 8
#define GCK_VERSION_FIX 3

#define GCK_VERSION_IS_LESS_THAN(__major, __minor, __fix)               \
  ((__major > GCK_VERSION_MAJOR)                                        \
   || ((__major == GCK_VERSION_MAJOR) && (__minor > GCK_VERSION_MINOR)) \
   || ((__major == GCK_VERSION_MAJOR) && (__minor == GCK_VERSION_MINOR) \
       && (__fix > GCK_VERSION_FIX)))

#define GCK_VERSION_IS_AT_LEAST(__major, __minor, __fix)                              \
  (!GCK_VERSION_IS_LESS_THAN(__major, __minor, __fix))

#define GCK_VERSION_IS_EQUAL_TO(__major, __minor, __fix)                              \
  ((__major == GCK_VERSION_MAJOR) && (__minor == GCK_VERSION_MINOR)                   \
   && (__fix == GCK_VERSION_FIX))

#define GCK_EXPORT __attribute__((visibility("default")))
#define GCK_DEPRECATED(message) __attribute__((deprecated(message)))
#define GCK_HIDDEN __attribute__((visibility("hidden")))

#ifdef __cplusplus
#define GCK_EXTERN extern "C" GCK_EXPORT
#else
#define GCK_EXTERN extern GCK_EXPORT
#endif

// The macros below are all deprecated, but are left for backwards compatibility reasons.
#if __has_feature(nullability)
  #define GCK_NULLABLE_TYPE _Nullable
  #define GCK_NONNULL_TYPE _Nonnull
  #define GCK_NULLABLE nullable
  #define GCK_NONNULL nonnull
#else
  #define GCK_NULLABLE_TYPE
  #define GCK_NONNULL_TYPE
  #define GCK_NULLABLE
  #define GCK_NONNULL
#endif  // __has_feature(nullability)

#if __has_feature(assume_nonnull)
  #define GCK_ASSUME_NONNULL_BEGIN _Pragma("clang assume_nonnull begin")
  #define GCK_ASSUME_NONNULL_END   _Pragma("clang assume_nonnull end")
#else
  #define GCK_ASSUME_NONNULL_BEGIN
  #define GCK_ASSUME_NONNULL_END
#endif  // __has_feature(assume_nonnull)



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKDevice.h
================================================
// Copyright 2012 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

#import <GoogleCast/GCKNetworkAddress.h>

/**
 * @file GCKDevice.h
 * GCKDeviceStatus enum.
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKDeviceStatus
 * Enum defining the device status at the time the device was scanned.
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKDeviceStatus) {
  /** Unknown status. */
  GCKDeviceStatusUnknown = -1,
  /** Idle device status. */
  GCKDeviceStatusIdle = 0,
  /** Busy/join device status. */
  GCKDeviceStatusBusy = 1,
};

/**
 * @enum GCKDeviceCapabilities
 * Enum defining the capabilities of a receiver device.
 */
typedef NS_OPTIONS(NSInteger, GCKDeviceCapabilities) {
  /** The device has video-out capability. */
  GCKDeviceCapabilityVideoOut = 1 << 0,
  /** The device has video-in capability. */
  GCKDeviceCapabilityVideoIn = 1 << 1,
  /** The device has audio-out capability. */
  GCKDeviceCapabilityAudioOut = 1 << 2,
  /** The device has audio-in capability. */
  GCKDeviceCapabilityAudioIn = 1 << 3,
  /** The device is a multizone group. */
  GCKDeviceCapabilityMultizoneGroup = 1 << 5,
  /** The device is a dynamic group. */
  GCKDeviceCapabilityDynamicGroup = 1 << 6,
  /**
   * The device is a multichannel group.
   *
   * @since 4.4.7
   */
  GCKDeviceCapabilityMultiChannelGroup = 1 << 7,
  /**
   * The device is a multichannel member.
   *
   * @since 4.4.7
   */
  GCKDeviceCapabilityMultiChannelMember = 1 << 8,
  /** The device has master or fixed volume mode capability. */
  GCKDeviceCapabilityMasterOrFixedVolume = 1 << 11,
  /** The device has attenuation or fixed volume mode capability. */
  GCKDeviceCapabilityAttenuationOrFixedVolume = 1 << 12,
  /** The device can be part of a dynamic group. */
  GCKDeviceCapabilityDynamicGroupingSupported = 1 << 16,
};

/**
 * This is left for backwards compatibility reasons.
 */
typedef GCKDeviceCapabilities GCKDeviceCapability;

/**
 * @enum GCKDeviceType
 * Device types.
 * @since 3.3
 */
typedef NS_ENUM(NSInteger, GCKDeviceType) {
  /** Generic Cast device. */
  GCKDeviceTypeGeneric = 0,
  /** Cast-enabled TV. */
  GCKDeviceTypeTV,
  /** Cast-enabled speaker or other audio device. */
  GCKDeviceTypeSpeaker,
  /** Speaker group. */
  GCKDeviceTypeSpeakerGroup,
  /**
   * The "Nearby Devices" pseudo-device, which represents any nearby unpaired guest-mode devices.
   */
  GCKDeviceTypeNearbyUnpaired
};

/**
 * @var kGCKCastDeviceCategory
 * The device category that identifies Cast devices.
 */
GCK_EXTERN NSString *const kGCKCastDeviceCategory;

@class GCKImage;

/**
 * An object representing a receiver device.
 */
GCK_EXPORT
@interface GCKDevice : NSObject <NSCopying, NSSecureCoding>

- (instancetype)init NS_UNAVAILABLE;

/**
 * @deprecated Use @ref networkAddress
 * The device's IPv4 address, in dot-notation. Used when making network requests.
 * This will be an empty string for @ref GCKDevice objects that are created with an IPv6 address.
 */
@property(nonatomic, copy, readonly)
    NSString *ipAddress GCK_DEPRECATED("Use networkAddress for both IPv4 and IPv6 support");

/**
 * The device's IP address. Used when making network requests.
 * @since 4.2
 */
@property(nonatomic, copy, readonly) GCKNetworkAddress *networkAddress;

/** The device's service port. */
@property(nonatomic, readonly) uint16_t servicePort;

/** A unique identifier for the device. */
@property(nonatomic, copy, readonly) NSString *deviceID;

/** The device's friendly name. This is a user-assignable name such as "Living Room". */
@property(nonatomic, copy, nullable) NSString *friendlyName;

/** The device's model name. */
@property(nonatomic, copy, nullable) NSString *modelName;

/** An array of GCKImage objects containing icons for the device. */
@property(nonatomic, copy, nullable) NSArray<GCKImage *> *icons;

/** The device's status at the time that it was most recently scanned. */
@property(nonatomic) GCKDeviceStatus status;

/** The status text reported by the currently running receiver application, if any. */
@property(nonatomic, copy, nullable) NSString *statusText;

/** The device's protocol version. */
@property(nonatomic, copy, nullable) NSString *deviceVersion;

/** YES if this device is on the local network. */
@property(nonatomic, readonly) BOOL isOnLocalNetwork;

/**
 * The device type.
 *
 * @since 3.3
 */
@property(nonatomic, readonly) GCKDeviceType type;

/**
 * The device category, a string that uniquely identifies the type of device. Cast devices have
 * a category of @ref kGCKCastDeviceCategory.
 */
@property(nonatomic, copy, readonly) NSString *category;

/**
 * A globally unique ID for this device. This is a concatenation of the @ref category and
 * @ref deviceID properties.
 */
@property(nonatomic, copy, readonly) NSString *uniqueID;

/**
 * Tests if this device refers to the same physical device as another. Returns <code>YES</code> if
 * both GCKDevice objects have the same category, device ID, IP address, service port, and protocol
 * version.
 */
- (BOOL)isSameDeviceAs:(const GCKDevice *)other;

/**
 * Returns <code>YES</code> if the device supports all of the given capabilities.
 *
 * @param deviceCapabilities A bitwise-OR of one or more of the @ref GCKDeviceCapabilities
 * constants.
 */
- (BOOL)hasCapabilities:(GCKDeviceCapabilities)deviceCapabilities;

/**
 * Sets an arbitrary attribute in the object. May be used by custom device providers to store
 * device-specific information for non-Cast devices.
 *
 * @param attribute The attribute value, which must be key-value coding compliant, and cannot be
 * <code>nil</code>.
 * @param key The key that identifies the attribute. The key is an arbitrary string. It cannot be
 * <code>nil</code>.
 */
- (void)setAttribute:(NSObject<NSSecureCoding> *)attribute forKey:(NSString *)key;

/**
 * Looks up an attribute in the object.
 *
 * @param key The key that identifies the attribute. The key is an arbitrary string. It cannot be
 * <code>nil</code>.
 * @return The value of the attribute, or <code>nil</code> if no such attribute exists.
 */
- (nullable NSObject<NSSecureCoding> *)attributeForKey:(NSString *)key;

/**
 * Removes an attribute from the object.
 *
 * @param key The key that identifies the attribute. The key is an arbitrary string. It cannot be
 * <code>nil</code>.
 */
- (void)removeAttributeForKey:(NSString *)key;

/**
 * Removes all attributes from the object.
 */
- (void)removeAllAttributes;

/**
 * Extracts the device category from a device unique ID.
 */
+ (NSString *)deviceCategoryForDeviceUniqueID:(NSString *)deviceUniqueID;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKDeviceProvider+Protected.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDeviceProvider.h>

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKDevice.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * Convenience methods for constructing GCKDevice objects and sending discovery notifications to the
 * framework.
 *
 * @since 3.0
 */
@interface GCKDeviceProvider (Protected)

/**
 * Notifies the discovery manager that discovery has started.
 */
- (void)notifyDidStartDiscovery;

/**
 * Notifies the discovery manager that a new device has been published.
 */
- (void)notifyDidPublishDevice:(GCKDevice *)device;

/**
 * Notifies the discovery manager that a previously-published device has been unpublished, because
 * it is no longer available.
 */
- (void)notifyDidUnpublishDevice:(GCKDevice *)device;

/**
 * Notifies the discovery manager that one or more of a previously-published device's display
 * attributes (such as friendly name or icons) have changed.
 */
- (void)notifyDidUpdateDevice:(GCKDevice *)device;

/**
 * @deprecated Use createDeviceWithID:networkAddress:servicePort: for IPv4 and IPv6 support
 *
 * Factory method for constructing new GCKDevice instances. The parameters correspond to
 * immutable properties of a GCKDevice.
 *
 * @param deviceID The unique ID identifying this device. This value must be unique among all
 * GCKDevice objects that are created by this provider.
 * @param ipAddress The IP address of the device, in numeric form (for example,
 * <code>@@"10.0.0.10"</code>). May not be <code>nil</code>. Supports IPv4 only.
 * @param servicePort The service port on which connections should be made to this device. May be
 * 0 if a service port is not applicable.
 */
- (GCKDevice *)createDeviceWithID:(NSString *)deviceID
                        ipAddress:(NSString *)ipAddress
                      servicePort:(uint16_t)servicePort
    GCK_DEPRECATED("Use createDeviceWithID:networkAddress:servicePort: for IPv4 and IPv6 support");

/**
 * Factory method for constructing new GCKDevice instances. The parameters correspond to
 * immutable properties of a GCKDevice.
 *
 * @param deviceID The unique ID identifying this device. This value must be unique among all
 * GCKDevice objects that are created by this provider.
 * @param networkAddress The IP address of the device, either IPv4 or IPv6
 * @param servicePort The service port on which connections should be made to this device. May be
 * 0 if a service port is not applicable.
 *
 * @since 4.2
 */
- (GCKDevice *)createDeviceWithID:(NSString *)deviceID
                   networkAddress:(GCKNetworkAddress *)networkAddress
                      servicePort:(uint16_t)servicePort;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKDeviceProvider.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKDevice.h>
#import <GoogleCast/GCKSession.h>
#import <GoogleCast/GCKSessionOptions.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * An abstract base class for performing device discovery and session construction. Support for
 * additional device types can be added by extending this class. See the
 * @ref GCKDeviceProvider(Protected) category for a list of helper methods intended for use by
 * subclasses. New device providers are registered with the framework using @ref
 * GCKCastContext::registerDeviceProvider:.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKDeviceProvider : NSObject

/**
 * A string that uniquely identifies the type of device that will be discovered by this provider.
 */
@property(nonatomic, copy, readonly) NSString *deviceCategory;

/**
 * Whether the scan should be a passive scan. A passive scan sends discovery queries less
 * frequently, so it is more efficient, but the results will not be as fresh. It's appropriate to
 * do a passive scan when the user is not actively selecting a Cast target. Not all implementations
 * will honor this property.
 */
@property(nonatomic, assign) BOOL passiveScan;

/** The array of discovered devices. */
@property(nonatomic, copy, readonly) NSArray<GCKDevice *> *devices;

/**
 * Designated initializer. Constructs a new GCKDeviceProvider for devices of the specified type.
 *
 * @param deviceCategory A string that uniquely identifies the type of device that is managed by
 * by this provider.
 */
- (instancetype)initWithDeviceCategory:(NSString *)deviceCategory NS_DESIGNATED_INITIALIZER;

/**
 * Starts a new discovery scan. This is (commonly) an asynchronous operation. If any of the
 * devices discovered by the previous scan are no longer valid, the provider should unpublish them
 * at this time. Must be overridden by subclasses.
 *
 * The provider <b>must</b> notify the discovery manager once the scan has been started (and any
 * stale devices have been unpublished) by calling @ref GCKDeviceProvider::notifyDidStartDiscovery.
 * If a particular implementation of this method has no asynchronous work to do when starting a
 * scan, it can call the notification method directly before returning.
 */
- (void)startDiscovery;

/**
 * Stops the discovery scan. Must be overridden by subclasses.
 */
- (void)stopDiscovery;

/**
 * Constructs a new session for the given device and optionally an existing session ID.
 * Must be overridden by subclasses.
 *
 * @param device The device to connect to.
 * @param sessionID The ID of the session to resume; or <code>nil</code> to start a new session.
 * @param sessionOptions The session options, if any; otherwise <code>nil</code>.
 *
 * @since 4.0
 */
- (GCKSession *)createSessionForDevice:(GCKDevice *)device
                             sessionID:(nullable NSString *)sessionID
                        sessionOptions:(nullable GCKSessionOptions *)sessionOptions;

/**
 * Constructs a new session for the given device and optionally an existing session ID.
 *
 * @param device The device to connect to.
 * @param sessionID The ID of the session to resume; or <code>nil</code> to start a new session.
 *
 * @deprecated Subclasses should call createSessionForDevice:sessionID:sessionOptions instead.
 */
- (GCKSession *)createSessionForDevice:(GCKDevice *)device
                             sessionID:(nullable NSString *)sessionID
    GCK_DEPRECATED("Use createSessionForDevice:sessionID:sessionOptions:");

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKDiscoveryCriteria.h
================================================
// Copyright 2016 Google Inc.

#import <Foundation/Foundation.h>

#import <GoogleCast/GCKDefines.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * The receiver application ID for the Default Media Receiver.
 *
 * @memberof GCKDiscoveryCriteria
 */
GCK_EXTERN NSString *const kGCKDefaultMediaReceiverApplicationID;

/**
 * Device discovery filter criteria.
 *
 * @since 4.0
 */
GCK_EXPORT
@interface GCKDiscoveryCriteria : NSObject<NSCopying, NSSecureCoding>

/** A list of supported receiver application IDs to test for. */
@property(nonatomic, strong, readonly, nullable) NSOrderedSet<NSString *> *applicationIDs;

/** Whether the discovery criteria includes any application IDs. */
@property(nonatomic, assign, readonly) BOOL hasApplicationIDs;

/** A list of supported namespaces to test for. */
@property(nonatomic, strong, readonly, nullable) NSSet<NSString *> *namespaces;

/** Whether the discovery criteria includes any namespaces. */
@property(nonatomic, assign, readonly) BOOL hasNamespaces;

/** The discovery criteria as a set of mDNS subtypes. */
@property(nonatomic, strong, readonly) NSSet<NSString *> *allSubtypes;

/**
 * Initializes a new GCKDiscoveryCriteria with a receiver application ID.
 *
 * @param applicationID The receiver application ID.
 */
- (instancetype)initWithApplicationID:(NSString *)applicationID;

/**
 * Initializes a new GCKDiscoveryCriteria with the given attributes.
 *
 * @param namespaces A set of namespaces.
 */
- (instancetype)initWithNamespaces:(NSSet<NSString *> *)namespaces;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKDiscoveryManager.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKDevice;

NS_ASSUME_NONNULL_BEGIN

GCK_EXTERN NSString *const kGCKKeyHasDiscoveredDevices;

typedef NS_ENUM(NSInteger, GCKDiscoveryState) {
  GCKDiscoveryStateStopped = 0,
  GCKDiscoveryStateRunning = 1
};

@protocol GCKDiscoveryManagerListener;

/**
 * A class that manages the device discovery process. GCKDiscoveryManager manages a collection of
 * GCKDeviceProvider subclass instances, each of which is responsible for discovering devices of
 * a specific type. It also maintains a lexicographically ordered list of the currently discovered
 * devices.
 *
 * The framework automatically starts the discovery process when the application moves to the
 * foreground and suspends it when the application moves to the background. It is generally not
 * necessary for the application to call GCKDiscoveryManager::startDiscovery and
 * GCKDiscoveryManager::stopDiscovery, except as an optimization measure to reduce network traffic
 * and CPU utilization in areas of the application that do not use Cast functionality.
 *
 * If the application is using the framework's Cast dialog, either by way of GCKUICastButton or
 * by presenting it directly, then that dialog will use GCKDiscoveryManager to populate its list
 * of available devices. If however the application is providing its own device selection/control
 * dialog UI, then it should use the GCKDiscoveryManager and its associated listener protocol,
 * GCKDiscoveryManagerListener, to populate and update its list of available devices.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKDiscoveryManager : NSObject

/**
 * The current discovery state.
 */
@property(nonatomic, assign, readonly) GCKDiscoveryState discoveryState;

/**
 * A flag indicating whether any devices have been discovered by any of the discovery providers
 * managed by this object.
 */
@property(nonatomic, assign, readonly) BOOL hasDiscoveredDevices;

/**
 * A flag indicating whether discovery should employ a "passive" scan. Passive scans are less
 * resource-intensive but do not provide results that are as fresh as active scans.
 */
@property(nonatomic, assign) BOOL passiveScan;

/**
 * A flag indicating whether discovery is active or not.
 *
 * @since 3.4
 */
@property(nonatomic, assign, readonly) BOOL discoveryActive;

/**
 * The number of devices that are currently discovered.
 */
@property(nonatomic, assign, readonly) NSUInteger deviceCount;

/**
 * Default initializer is not available.
 */
- (instancetype)init NS_UNAVAILABLE;

/**
 * Adds a listener that will receive discovery notifications.
 *
 * The added listener is weakly held, and should be retained to avoid unexpected deallocation.
 *
 * @param listener The listener to add.
 */
- (void)addListener:(id<GCKDiscoveryManagerListener>)listener;

/**
 * Removes a previously registered listener.
 *
 * @param listener The listener to remove.
 */
- (void)removeListener:(id<GCKDiscoveryManagerListener>)listener;

/**
 * Starts the discovery process.
 */
- (void)startDiscovery;

/**
 * Stops the discovery process.
 */
- (void)stopDiscovery;

/**
 * Tests whether discovery is currently active for the given device category.
 */
- (BOOL)isDiscoveryActiveForDeviceCategory:(NSString *)deviceCategory;

/**
 * Returns the device at the given index in the manager's list of discovered devices.
 */
- (GCKDevice *)deviceAtIndex:(NSUInteger)index;

/**
 * Returns the device with the given unique ID in the manager's list of discovered devices.
 *
 * @param uniqueID The device's unique ID.
 * @return The matching GCKDevice object, or <code>nil</code> if a matching device was not found.
 */
- (nullable GCKDevice *)deviceWithUniqueID:(NSString *)uniqueID;

/**
 * Waits for a device with the given unique ID to be discovered, and invokes a completion block. If
 * a matching device is already in the discovered device list, the completion block will be invoked
 * immediately (but after this method returns). Only one find operation can be active at a time;
 * starting a new find operation while another one is in progress will cancel the current one.
 *
 * @param uniqueID The unique ID of the device.
 * @param timeout The maximum amount of time to wait for the device to be discovered.
 * @param completion The completion block to invoke when either the device is found or the timeout
 * is reached. The device (if found) or <code>nil</code> (if not found) will be passed to the
 * completion block.
 *
 * @since 4.0
 */
- (void)findDeviceWithUniqueID:(NSString *)uniqueID
                       timeout:(NSTimeInterval)timeout
                    completion:(void (^)(GCKDevice *))completion;

/**
 * Cancels any in-progress find operation started by findDeviceWithUniqueID:timeout:completion:.
 *
 * @since 4.0
 */
- (void)cancelFindOperation;

@end

/**
 * The GCKDiscoveryManager listener protocol.
 *
 * @since 3.0
 */
@protocol GCKDiscoveryManagerListener <NSObject>

@optional

/**
 * Called when discovery has started for the given device category.
 */
- (void)didStartDiscoveryForDeviceCategory:(NSString *)deviceCategory;

/**
 * Called when the list of discovered devices is about to be updated in some way.
 */
- (void)willUpdateDeviceList;

/**
 * Called when the list of discovered devices has been updated in some way.
 */
- (void)didUpdateDeviceList;

/**
 * Called when a newly-discovered device has been inserted into the list of devices.
 *
 * @param device The device that was inserted.
 * @param index The list index at which the device was inserted.
 */
- (void)didInsertDevice:(GCKDevice *)device atIndex:(NSUInteger)index;

/**
 * Called when a previously-discovered device has been updated.
 *
 * @param device The device that was updated.
 * @param index The list index of the device.
 */
- (void)didUpdateDevice:(GCKDevice *)device atIndex:(NSUInteger)index;

/**
 * Called when a previously-discovered device has been updated and/or reordered within the list.
 *
 * @param device The device that was updated.
 * @param index The previous list index of the device.
 * @param newIndex The current list index of the device.
 */
- (void)didUpdateDevice:(GCKDevice *)device
                atIndex:(NSUInteger)index
         andMoveToIndex:(NSUInteger)newIndex;

/**
 * Called when a previously-discovered device has gone offline and has been removed from the list of
 * devices.
 *
 * @param index The list index of the device that was removed.
 */
- (void)didRemoveDeviceAtIndex:(NSUInteger)index;

/**
 * Called when a previously-discovered device has gone offline and has been
 * removed from the list of devices. This is an alternative to @ref
 * didRemoveDeviceAtIndex:. If both are implemented, both will be called.
 *
 * @param device The device that was removed.
 * @param index The list index of the device that was removed.
 *
 * @since 4.1
 */
- (void)didRemoveDevice:(GCKDevice *)device atIndex:(NSUInteger)index;

/**
 * Called when there are some previously-discovered devices in the list before the discovery process
 * starts. These devices are still valid and not expired since being discovered by the last
 * discovery process. The full list of previously-discovery devices can be obtained by using @ref
 * deviceCount: and @ref deviceAtIndex:.
 *
 * @since 4.4.1
 */
- (void)didHaveDiscoveredDeviceWhenStartingDiscovery;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKDynamicDevice.h
================================================
#import <GoogleCast/GCKDevice.h>

#import <Foundation/Foundation.h>

#import <GoogleCast/GCKDefines.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A device object that can be part of a multizone group.
 *
 * @since 4.3.5
 */
GCK_EXPORT
@interface GCKDynamicDevice : NSObject <NSCopying, NSSecureCoding>

/** The unique device ID. */
@property(nonatomic, copy, readonly) NSString *deviceID;

/** The friendly name of the device. */
@property(nonatomic, copy, readonly, nullable) NSString *friendlyName;

/** The device capabilities. */
@property(nonatomic, assign, readonly) GCKDeviceCapabilities capabilities;

- (instancetype)init NS_UNAVAILABLE;

/**
 * Returns <code>YES</code> if the device supports the given capabilities.
 *
 * @param deviceCapabilities A bitwise-OR of one or more of the @ref GCKDeviceCapability constants.
 */
- (BOOL)hasCapabilities:(GCKDeviceCapabilities)deviceCapabilities;

@end  // GCKDynamicDevice

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKError.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/** @file GCKError.h
 * Framework errors.
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKErrorCode
 * Framework error codes.
 */
typedef NS_ENUM(NSInteger, GCKErrorCode) {
  /**
   * Error Code indicating no error.
   */
  GCKErrorCodeNoError = 0,

  /**
   * Error code indicating a network I/O error.
   */
  GCKErrorCodeNetworkError = 1,

  /**
   * Error code indicating that an operation has timed out.
   */
  GCKErrorCodeTimeout = 2,

  /**
   * Error code indicating an authentication error.
   */
  GCKErrorCodeDeviceAuthenticationFailure = 3,

  /**
   * Error code indicating that an invalid request was made.
   */
  GCKErrorCodeInvalidRequest = 4,

  /**
   * Error code indicating that an in-progress request has been cancelled, most likely because
   * another action has preempted it.
   */
  GCKErrorCodeCancelled = 5,

  /**
   * Error code indicating that a request has been replaced by another request of the same type.
   */
  GCKErrorCodeReplaced = 6,

  /**
   * Error code indicating that the request was disallowed and could not be completed.
   */
  GCKErrorCodeNotAllowed = 7,

  /**
   * Error code indicating that a request could not be made because the same type of request is
   * still in process.
   */
  GCKErrorCodeDuplicateRequest = 8,

  /**
   * Error code indicating that the request is not allowed in the current state.
   */
  GCKErrorCodeInvalidState = 9,

  /**
   * Error code indicating that data could not be sent because the send buffer is full.
   */
  GCKErrorCodeSendBufferFull = 10,

  /**
   * Error indicating that the request could not be sent because the message exceeds the maximum
   * allowed message size.
   */
  GCKErrorCodeMessageTooBig = 11,

  /**
   * Error indicating that a channel operation could not be completed because the channel is not
   * currently connected.
   */
  GCKErrorCodeChannelNotConnected = 12,

  /**
   * Error indicating that the user is not authorized to use a Cast device.
   */
  GCKErrorCodeDeviceAuthorizationFailure = 13,

  /**
   * Error indicating that a device request could not be completed because there is no connection
   * currently established to the device.
   */
  GCKErrorCodeDeviceNotConnected = 14,

  /**
   * Error indicating that there is a mismatch between the protocol versions being used on the
   * sender and the receiver for a given namespace implementation.
   */
  GCKErrorCodeProtocolVersionMismatch = 15,

  /**
   * Error indicating that the maximum number of users is already connected to the receiver.
   */
  GCKErrorCodeMaxUsersConnected = 16,

  /**
   * Error indicating that the network is not reachable.
   */
  GCKErrorCodeNetworkNotReachable = 17,

  /**
   * Error indicating a protocol error (invalid data received).
   */
  GCKErrorCodeProtocolError = 18,

  /**
   * Error indicating that an attempt was made to initialize an already initialized singleton.
   */
  GCKErrorCodeAlreadyInitialized = 19,

  /**
   * Error code indicating that a requested application could not be found.
   */
  GCKErrorCodeApplicationNotFound = 20,

  /**
   * Error code indicating that a requested application is not currently running.
   */
  GCKErrorCodeApplicationNotRunning = 21,

  /**
   * Error code indicating that the application session ID was not valid.
   */
  GCKErrorCodeInvalidApplicationSessionID = 22,

  /**
   * Error code indicating a TLS error. The underlying error is one of the
   * error codes as documented here:
   * https://developer.apple.com/library/mac/documentation/Security/Reference/secureTransportRef/
   */
  GCKErrorCodeSecureTransportError = 23,

  /**
   * Error indicating that a connect attempt was made on a socket that is already connected.
   */
  GCKErrorCodeSocketAlreadyConnected = 24,

  /**
   * Error indicating that an invalid network or socket address or address type was supplied to
   * a method or initializer.
   */
  GCKErrorCodeSocketInvalidAddress = 25,

  /**
   * Error indicating that an invalid parameter was supplied to a method or initializer.
   */
  GCKErrorCodeSocketInvalidParameter = 26,

  /**
   * Error indicating that the response received was invalid.
   */
  GCKErrorCodeInvalidResponse = 27,

  /**
   * Error indicating that the session update went through, but all devices could not be moved.
   */
  GCKErrorCodeFailedSessionUpdate = 28,

  /**
   * Error indicating that a device request could not be completed because the current session is
   * not active.
   *
   * @since 4.4.5
   */
  GCKErrorCodeSessionIsNotActive = 29,

  /**
   * Error code indicating that a media load failed on the receiver side.
   */
  GCKErrorCodeMediaLoadFailed = 30,

  /**
   * Error code indicating that a media media command failed because of the media player state.
   */
  GCKErrorCodeInvalidMediaPlayerState = 31,

  /**
   * Error indicating that no media session is currently available.
   */
  GCKErrorCodeNoMediaSession = 32,

  /**
   * Error code indicating that the current session is not a cast session.
   */
  GCKErrorCodeNotCastSession = 33,

  /**
   * Error code indicating that a generic media error happens.
   */
  GCKErrorCodeMediaError = 34,

  /**
   * Error code indicating that device authentication failed due to error received.
   */
  GCKErrorCodeAuthenticationErrorReceived = 40,

  /**
   * Error code indicating that device authentication failed because a malformed client certificate
   * is received.
   */
  GCKErrorCodeMalformedClientCertificate = 41,

  /**
   * Error code indicating that device authentication failed because certificate received from
   * Chromecast is not expected format.
   */
  GCKErrorCodeNotX509Certificate = 42,

  /**
   * Error code indicating that device authentication failed because the device certificate is not
   * trusted.
   */
  GCKErrorCodeDeviceCertificateNotTrusted = 43,

  /**
   * Error code indicating that device authentication failed because the SSL certificate is not
   * trusted.
   */
  GCKErrorCodeSSLCertificateNotTrusted = 44,

  /**
   * Error code indicating that device authentication failed because the response from device is
   * malformed.
   */
  GCKErrorCodeMalformedAuthenticationResponse = 45,

  /**
   * Error code indicating that device authentication failed because the device capability shows
   * unsupported.
   */
  GCKErrorCodeDeviceCapabilityNotSupported = 46,

  /**
   * Error code indicating that device authentication failed because CRL from device is invalid.
   */
  GCKErrorCodeCRLInvalid = 47,

  /**
   * Error code indicating that device authentication failed because device certificate is revoked
   * by CRL.
   */
  GCKErrorCodeCRLCheckFailed = 48,

  /**
   * Error code indicating that the broadcast message failed to encrypt.
   */
  GCKErrorCodeBroadcastMessageEncryptionFailed = 50,

  /**
   * Error code indicating that the key exchange response is invalid.
   */
  GCKErrorCodeBroadcastKeyExchangeInvalidResponse = 51,

  /**
   * Error code indicating that the key exchange response shows an invalid input error.
   */
  GCKErrorCodeBroadcastKeyExchangeInvalidInput = 52,

  /**
   * Error code indicating that the key exchange response doesn't contain a wrapped sender key.
   */
  GCKErrorCodeBroadcastKeyExchangeEmptyResponse = 53,

  /**
   * Error code indicating that the key exchange request has timed out.
   */
  GCKErrorCodeBroadcastKeyExchangeRequestTimeout = 54,

  /**
   * Error code indicating that no device that is capable for key exchange can be found.
   */
  GCKErrorCodeBroadcastKeyExchangeFailedToFindDevice = 55,

  /**
   * Error code indicating that it failed to connect to the device that is capable for key exchange.
   */
  GCKErrorCodeBroadcastKeyExchangeFailedToConnect = 56,

  /**
   * Error code indicating that the broadcast message is dropped because of cache limit.
   */
  GCKErrorCodeBroadcastMessageDropped = 57,

  /**
   * Error code indicating that the broadcast message is not sent out due to socket error.
   */
  GCKErrorCodeBroadcastSocketError = 58,

  /**
   * Error code indicating that the broadcast encryption key is failed to be generated.
   */
  GCKErrorCodeBroadcastFailedToGenerateEncryptionKey = 59,

  /**
   * Error code indicating that the listening failed.
   */
  GCKErrorCodeGuestModeListenFailed = 60,

  /**
   * Error code indicating that an unspecified Remote Display error has occurred. Additional details
   * may be available in the value associated with the key kGCKErrorExtraInfoKey in the user info.
   */
  GCKErrorCodeRemoteDisplayError = 80,

  /**
   * Error code indicating that the target device does not support Remote Display.
   */
  GCKErrorCodeRemoteDisplayDeviceNotSupported = 81,

  /**
   * Error code indicating that the target device does not support a paraticular Remote Display
   * feature.
   */
  GCKErrorCodeRemoteDisplayFeatureNotSupported = 82,

  /**
   * Error code indicating that the provided Remote Display configuration has been rejected by the
   * receiver device.
   */
  GCKErrorCodeRemoteDisplayConfigurationRejectedByReceiver = 83,

  /**
   * Error indicating that an OpenGL error has occurred. Additional details may be available in the
   * value associated with the key kGCKErrorExtraInfoKey in the user info.
   */
  GCKErrorCodeRemoteDisplayOpenGLError = 84,

  /**
   * Error indicating that a Metal error has occurred. Additional details may be available in the
   * value associated with the key kGCKErrorExtraInfoKey in the user info.
   */
  GCKErrorCodeRemoteDisplayMetalError = 85,

  /**
   * Error indicating that an audio conversion error has occurred. Additional details may be
   * available in the value associated with the key kGCKErrorExtraInfoKey in the user info.
   */
  GCKErrorCodeRemoteDisplayAudioConversionError = 86,

  /**
   * Error code indicating that the application moved to the background.
   */
  GCKErrorCodeAppDidEnterBackground = 91,

  /**
   * Error code indicating that the connection to the receiver was closed.
   */
  GCKErrorCodeDisconnected = 92,

  /**
   * Error code indicating that the feature or action is unsupported either on this iOS device or
   * the receiver.
   */
  GCKErrorCodeUnsupportedFeature = 93,

  /**
   * Error code indicating that an unknown, unexpected error has occurred.
   */
  GCKErrorCodeUnknown = 99,

  /**
   * Error code indicating that the authentication message received was not properly formatted and
   * encountered an error while parsing.
   *
   * @since 4.4.5
   */
  GCKErrorCodeDeviceAuthenticationMessageParseFailure = 100,

  /**
   * Error code indicating that the authentication message received had the <code>challenge</code>
   * property set to a non-null value.
   *
   * @since 4.4.5
   */
  GCKErrorCodeDeviceAuthenticationMessageChallengeReceivedFailure = 101,

  /**
   * Error code indicating that the authentication message request timed out.
   *
   * @since 4.4.5
   */
  GCKErrorCodeDeviceAuthenticationTimeoutFailure = 102,

  /**
   * Error code indicating that an  Application launch request was cancelled.
   *
   * @since 4.6.0
   */
  GCKErrorCodeLaunchRequestCancelled = 103,

  /**
   * Error code indicating that a requested application is not currently running due to a mismatched
   * namespace.
   */
  GCKErrorCodeApplicationNotRunningWithNamespaceMismatched = 104,

  /**
   * Error code indicating that a requested application is not currently running when resumed.
   */
  GCKErrorCodeApplicationNotRunningWhenResumed = 105,

  /**
   * Error code indicating that a request application can not be joined.
   */
  GCKErrorCodeApplicationNotRunningForJoin = 106,

  /**
   * Error code indicating that a requested application can not be joined when reconnecting.
   */
  GCKErrorCodeApplicationNotRunningForJoinWhenReconnecting = 107,

  /**
   * Error code indicating that a requested application is not currently running due to a mismatched
   * applicationID.
   */
  GCKErrorCodeApplicationNotRunningWithApplicationIDMismatch = 108,
};

/**
 * The key for the customData JSON object associated with the error in the userInfo dictionary.
 */
GCK_EXTERN NSString *const kGCKErrorCustomDataKey;

/**
 * The key for an API-specific detailed error code.
 *
 * @since 4.4.3
 */
GCK_EXTERN NSString *const kGCKErrorDetailedCodeKey;

/**
 * The key for extra error information, such as an API-specific error description.
 */
GCK_EXTERN NSString *const kGCKErrorExtraInfoKey;

/**
 * The key for an API-specific error reason.
 *
 * @since 4.4.3
 */
GCK_EXTERN NSString *const kGCKErrorReasonKey;

/**
 * The error domain for GCKErrorCode.
 */
GCK_EXTERN NSString *const kGCKErrorDomain;

/**
 * A subclass of <a href="https://goo.gl/WJbrdL"><b>NSError</b></a> for framework errors.
 */
GCK_EXPORT
@interface GCKError : NSError

/** Constructs a GCKError with the given error code. */
+ (GCKError *)errorWithCode:(GCKErrorCode)code;

/** Constructs a GCKError with the given error code and optional custom data. */
+ (GCKError *)errorWithCode:(GCKErrorCode)code customData:(nullable id)customData;

/** Returns the human-readable description for a given error code. */
+ (NSString *)enumDescriptionForCode:(GCKErrorCode)code;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKGenericChannel.h
================================================
// Copyright 2014 Google Inc.

#import <GoogleCast/GCKCastChannel.h>
#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@protocol GCKGenericChannelDelegate;

NS_ASSUME_NONNULL_BEGIN

/**
 * A generic GCKCastChannel implementation, suitable for use when subclassing is not desired.
 * GCKGenericChannel forwards message and connectivity events to its delegate, and has no
 * processing logic of its own.
 *
 * See GCKGenericChannelDelegate for the delegate protocol.
 */
GCK_EXPORT
@interface GCKGenericChannel : GCKCastChannel

/**
 * The delegate for receiving notifications about changes in the channel's state.
 */
@property(nonatomic, weak, nullable) id<GCKGenericChannelDelegate> delegate;

/**
 * Designated initializer.
 *
 * @param protocolNamespace The namespace for this channel. This namespace must be unique across
 * all channels used by a given application.
 */
- (instancetype)initWithNamespace:(NSString *)protocolNamespace NS_DESIGNATED_INITIALIZER;

@end

/**
 * The GCKGenericChannel delegate protocol.
 */
GCK_EXPORT
@protocol GCKGenericChannelDelegate <NSObject>

/**
 * Called when a text message has been received on the channel.
 */
- (void)castChannel:(GCKGenericChannel *)channel
    didReceiveTextMessage:(NSString *)message
            withNamespace:(NSString *)protocolNamespace;

@optional

/**
 * Called when the channel has been connected, indicating that messages can now be exchanged with
 * the Cast device over the channel.
 *
 * @param channel The channel.
 */
- (void)castChannelDidConnect:(GCKGenericChannel *)channel;

/**
 * Called when the channel has been disconnected, indicating that messages can no longer be
 * exchanged with the Cast device over the channel.
 *
 * @param channel The channel.
 */
- (void)castChannelDidDisconnect:(GCKGenericChannel *)channel;

/**
 * Called when the writable state of the channel has changed.
 *
 * @param channel The channel.
 * @param writable Whether the channel is now writable.
 * @since 4.0
 */
- (void)castChannel:(GCKCastChannel *)channel didChangeWritableState:(BOOL)writable;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKHLSSegmentFormat.h
================================================
#import <Foundation/Foundation.h>

#import <GoogleCast/GCKDefines.h>

/**
 * @file GCKHLSSegmentFormat.h
 * GCKHLSSegmentFormat enum.
 */

NS_ASSUME_NONNULL_BEGIN

/** HLS segment types. */
typedef NS_ENUM(NSInteger, GCKHLSSegmentFormat) {
  /** Undefined. Used when streaming protocol is not HLS. */
  GCKHLSSegmentFormatUndefined = 0,
  /** HLS segment type AAC. */
  GCKHLSSegmentFormatAAC = 1,
  /** HLS segment type AC3. */
  GCKHLSSegmentFormatAC3 = 2,
  /** HLS segment type MP3. */
  GCKHLSSegmentFormatMP3 = 3,
  /** HLS segment type TS. */
  GCKHLSSegmentFormatTS = 4,
  /** HLS segment type TS AAC. */
  GCKHLSSegmentFormatTS_AAC = 5,
  /** HLS segment type E AC3. */
  GCKHLSSegmentFormatE_AC3 = 6,
  /** HLS segment type FMP4. */
  GCKHLSSegmentFormatFMP4 = 7,
};

/**
 * Class that provides helpers to convert between @c GCKHLSSegmentFormat and
 * @c NSString.
 */
GCK_EXPORT
@interface GCKHLSSegment : NSObject

/**
 * Helper method to convert from @c GCKHLSSegmentFormat to @c NSString.
 *
 * @return NSString The string value corresponding to @c GCKHLSSegmentFormat. @c nil for @c
 * GCKHLSSegmentFormatUndefined and invalid enum values.
 *
 * @since 4.6.0
 */
+ (nullable NSString *)mapHLSSegmentFormatToString:(GCKHLSSegmentFormat)hlsSegmentFormat;

/**
 * Helper method to convert from @c NSString to @c GCKHLSSegmentFormat. The
 * comparison is case insensitive.
 *
 * @return GCKHLSSegmentFormat The corresponding @c GCKHLSSegmentFormat enum value. @c
 * GCKHLSSegmentFormatUndefined for invalid string.
 *
 * @since 4.6.0
 */
+ (GCKHLSSegmentFormat)mapHLSSegmentFormatStringToEnum:(NSString *)hlsSegmentFormatString;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKHLSVideoSegmentFormat.h
================================================
#import <Foundation/Foundation.h>

#import <GoogleCast/GCKDefines.h>

/**
 * @file GCKHLSVideoSegmentFormat.h
 * GCKHLSVideoSegmentFormat enum.
 */

NS_ASSUME_NONNULL_BEGIN

/** HLS video segment types. */
typedef NS_ENUM(NSInteger, GCKHLSVideoSegmentFormat) {
  /** Undefined. Used when streaming protocol is not HLS. */
  GCKHLSVideoSegmentFormatUndefined = 0,
  /** HLS segment type MPEG2 TS. */
  GCKHLSVideoSegmentFormatMPEG2_TS = 1,
  /** HLS segment type FMP4. */
  GCKHLSVideoSegmentFormatFMP4 = 2,
};

/**
 * Class that provides helpers to convert between @c GCKHLSVideoSegmentFormat and
 * @c NSString.
 */
GCK_EXPORT
@interface GCKHLSVideoSegment : NSObject

/**
 * Helper method to convert from @c GCKHLSVideoSegmentFormat to @c NSString.
 *
 * @return NSString The string value corresponding to @c GCKHLSVideoSegmentFormat. @c nil for @c
 * GCKHLSVideoSegmentFormatUndefined and invalid enum values.
 *
 * @since 4.6.0
 */
+ (nullable NSString *)mapHLSVideoSegmentFormatToString:
    (GCKHLSVideoSegmentFormat)hlsVideoSegmentFormat;

/**
 * Helper method to convert from @c to @c GCKHLSVidoeSegmentFormat. The
 * comparison is case insensitive.
 *
 * @return GCKHLSVideoSegmentFormat The corresponding @c GCKHLSVideoSegmentFormat enum value. @c
 * GCKHLSVideoSegmentFormatUndefined for invalid string.
 *
 * @since 4.6.0
 */
+ (GCKHLSVideoSegmentFormat)mapHLSVideoSegmentFormatStringToEnum:
    (NSString *)hlsVideoSegmentFormatString;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKImage.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class that represents an image that is located on a web server. Used for such things as
 * GCKDevice icons and GCKMediaMetadata artwork.
 */
GCK_EXPORT
@interface GCKImage : NSObject <NSCopying, NSSecureCoding>

/**
 * The image URL.
 */
@property(nonatomic, strong, readonly) NSURL *URL;

/**
 * The image width, in pixels.
 */
@property(nonatomic, assign, readonly) NSInteger width;

/**
 * The image height, in pixels.
 */
@property(nonatomic, assign, readonly) NSInteger height;

/**
 * Constructs a new GCKImage with the given URL and dimensions. Designated initializer.
 *
 * @param URL The URL of the image.
 * @param width The width of the image, in pixels.
 * @param height The height of the image, in pixels.
 * @throw NSInvalidArgumentException if the URL is <code>nil</code> or empty, or the dimensions are
 * invalid.
 */
- (instancetype)initWithURL:(NSURL *)URL width:(NSInteger)width height:(NSInteger)height;

/**
 * Default initializer is not available.
 */
- (instancetype)init NS_UNAVAILABLE;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKJSONUtils.h
================================================
// Copyright 2012 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * Utility methods for working with JSON data.
 */
GCK_EXPORT
@interface GCKJSONUtils : NSObject

/**
 * Parses a JSON string into an object.
 *
 * @param json The JSON string to parse.
 * @return The root object of the object hierarchy that represents the data (either an
 * <a href="https://goo.gl/q3tY5n"><b>NSArray</b></a> or an
 * <a href="https://goo.gl/0kFoNp"><b>NSDictionary</b></a>), or <code>nil</code> if the parsing
 * failed.
 */
+ (nullable id)parseJSON:(NSString *)json;

/**
 * Parses a JSON string into an object.
 *
 * @param json The JSON string to parse.
 * @param error If not nil, the location at which to store a pointer to an
 * <a href="https://goo.gl/WJbrdL"><b>NSError</b></a> if the parsing fails.
 * @return The root object of the object hierarchy that represents the data (either an
 * <a href="https://goo.gl/q3tY5n"><b>NSArray</b></a> or an
 * <a href="https://goo.gl/0kFoNp"><b>NSDictionary</b></a>), or <code>nil</code> if the parsing
 * failed.
 */
+ (nullable id)parseJSON:(NSString *)json error:(NSError **)error;

/**
 * Writes an object hierarchy of data to a JSON string.
 *
 * @param object The root object of the object hierarchy to encode. This must be either an
 * <a href="https://goo.gl/q3tY5n"><b>NSArray</b></a> or an
 * <a href="https://goo.gl/0kFoNp"><b>NSDictionary</b></a>.
 * @return An <a href="https://goo.gl/5dXzU6"><b>NSString</b></a> containing the JSON encoding, or
 * <code>nil</code> if the data could not be encoded.
 */
+ (NSString *)writeJSON:(id)object;

/**
 * Tests if two JSON strings are equivalent. This does a deep comparison of the JSON data in the
 * two strings, but ignores any differences in the ordering of keys within a JSON object. For
 * example, <code>{ "width":64, "height":32 }</code> is considered to be equivalent to
 * <code>{ "height":32, "width":64 }</code>.
 */
+ (BOOL)isJSONString:(NSString *)actual equivalentTo:(NSString *)expected;

/**
 * Tests if two JSON objects are equivalent. This does a deep comparison of the JSON data in the
 * two objects, but ignores any differences in the ordering of keys within a JSON object. For
 * example, <code>{ "width":64, "height":32 }</code> is considered to be equivalent to
 * <code>{ "height":32, "width":64 }</code>.
 */
+ (BOOL)isJSONObject:(id)actual equivalentTo:(id)expected;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKLaunchOptions.h
================================================
// Copyright 2014 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * Receiver application launch options. Changes to this object must be made before passing it to the
 * GCKCastContext.
 */
GCK_EXPORT
@interface GCKLaunchOptions : NSObject <NSCopying, NSSecureCoding>

/** The sender's language code as per RFC 5646. The default is the sender device's language. */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 * A flag indicating whether the receiver application should be relaunched if it is already
 * running. The default is <code>NO</code>.
 */
@property(nonatomic, assign) BOOL relaunchIfRunning;

/**
 * A flag indicating whether the sender application supports casting to an Android TV application.
 * Default value is <code>NO</code>.
 *
 * @since 4.4.7
 */
@property(nonatomic, assign) BOOL androidReceiverCompatible;

/** Initializes the object with default values. */
- (instancetype)init;

/**
 * Initializes the object with the sender device's language code and the specified relaunch
 * behavior.
 */
- (instancetype)initWithRelaunchIfRunning:(BOOL)relaunchIfRunning;

/**
 * Initializes the object with the specified language code and relaunch behavior.
 *
 * @param languageCode The language code as per RFC 5646.
 * @param relaunchIfRunning A flag indicating whether the receiver application should be relaunched
 * if it is already running.
 */
- (instancetype)initWithLanguageCode:(nullable NSString *)languageCode
                   relaunchIfRunning:(BOOL)relaunchIfRunning;

/**
 * Initializes the object with the sender device's language code, the specified relaunch
 * behavior and if the sender application supports Android TV application.
 *
 * @since 4.4.7
 */
- (instancetype)initWithRelaunchIfRunning:(BOOL)relaunchIfRunning
                androidReceiverCompatible:(BOOL)androidReceiverCompatible;

/**
 * Designated initializer. Initializes the object with the specified language code,
 * relaunch behavior and support for Android TV application.
 *
 * @param relaunchIfRunning A flag indicating whether the receiver application should be relaunched
 * @param languageCode The language code as per RFC 5646.
 * @param androidReceiverCompatible A flag indicating whether the sender application supports
 * Android application on the receiver side.
 *
 * @since 4.4.7
 */
- (instancetype)initWithRelaunchIfRunning:(BOOL)relaunchIfRunning
                             languageCode:(nullable NSString *)languageCode
                androidReceiverCompatible:(BOOL)androidReceiverCompatible;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKLogger.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKLoggerCommon.h>

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@protocol GCKLoggerDelegate;
@class GCKLoggerFilter;

NS_ASSUME_NONNULL_BEGIN

/**
 * A singleton object used for logging by the framework. If a delegate is assigned, the formatted
 * log messages are passed to the delegate. Otherwise, the messages are written using
 * <a href="https://goo.gl/EwUYP8"><b>NSLog()</b></a> in debug builds and are discarded otherwise.
 *
 * See GCKLoggerDelegate for the delegate protocol.
 */
GCK_EXPORT
@interface GCKLogger : NSObject

/** The delegate to pass log messages to. */
@property(nonatomic, weak, nullable) id<GCKLoggerDelegate> delegate;

/**
 * The filter to apply to log messages.
 *
 * @since 3.0
 */
@property(nonatomic, strong, nullable) GCKLoggerFilter *filter;

/**
 * Flag for enabling or disabling logging. On by default.
 *
 * @since 3.0
 */
@property(nonatomic, assign) BOOL loggingEnabled;

/**
 * Flag for enabling or disabling file logging. Off by default. If enabled, log messages are
 * written to a set of rotating files in the app's cache directory. The number and maximum size
 * of these files can be configured via other properties of this class.
 *
 * @since 3.1
 */
@property(nonatomic, assign) BOOL fileLoggingEnabled;

/**
 * Flag for enabling or disabling logging directly to the console (via NSLog). Off by default.
 *
 * @since 4.1
 */
@property(nonatomic, assign) BOOL consoleLoggingEnabled;

/**
 * The maximum size of a log file, in bytes. The minimum is 32 KiB. If the value is 0, the default
 * maximum size of 2 MiB will be used.
 *
 * @since 3.1
 */
@property(nonatomic, assign) NSUInteger maxLogFileSize;

/**
 * The maximum number of log files. The minimum is 2.
 *
 * @since 3.1
 */
@property(nonatomic, assign) NSUInteger maxLogFileCount;

/**
 * The minimum logging level that will be logged.
 *
 * @since 3.0
 * @deprecated Specify minimum logging level in GCKLoggerFilter.
 */
@property(nonatomic, assign) GCKLoggerLevel minimumLevel GCK_DEPRECATED("Use minimumLevel property of GCKLoggerFilter class");

/**
 * Returns the GCKLogger singleton instance.
 */
+ (GCKLogger *)sharedInstance;

@end

/**
 * The GCKLogger delegate protocol.
 */
GCK_EXPORT
@protocol GCKLoggerDelegate <NSObject>

@optional

/**
 * Called by the framework to log a message.
 *
 * @param message The log message.
 * @param function The calling function or method.
 * @param level The logging level.
 * @param location The source code location of the log statement.
 *
 * @since 4.0
 */
- (void)logMessage:(NSString *)message
           atLevel:(GCKLoggerLevel)level
      fromFunction:(NSString *)function
          location:(NSString *)location;

/**
 * Called by the framework to log a message.
 *
 * @param function The calling function, normally obtained from <code>__func__</code>.
 * @param message The log message.
 *
 * @deprecated Use GCKLoggerDelegate::logMessage:atLevel:fromFunction:location: instead.
 */
- (void)logMessage:(NSString *)message fromFunction:(NSString *)function
    GCK_DEPRECATED("Use -[GCKLoggerDelegate logMessage:atLevel:fromFunction:location:]");

@end

NS_ASSUME_NONNULL_END

/**
 * @macro GCKLog
 * @deprecated Equivalent to NSLog().
 */
#define GCKLog NSLog



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKLoggerCommon.h
================================================
// Copyright 2016 Google Inc.

/**
 * @file GCKLoggerCommon.h
 * GCKLoggerLevel enum.
 */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/**
 * @enum GCKLoggerLevel
 * Logging levels.
 *
 * @since 3.1
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKLoggerLevel) {
  /** No logging level (for backward compatibility). */
  GCKLoggerLevelNone = 0,
  /** Verbose messages. */
  GCKLoggerLevelVerbose = 1,
  /** Debug messages. */
  GCKLoggerLevelDebug = 2,
  /** Informational messages. */
  GCKLoggerLevelInfo = 3,
  /** Warning messages. */
  GCKLoggerLevelWarning = 4,
  /** Error messages. */
  GCKLoggerLevelError = 5,
  /** Assertion failure messages. */
  GCKLoggerLevelAssert = 6
};



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKLoggerFilter.h
================================================
// Copyright 2016 Google Inc.

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKLoggerCommon.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class for filtering log messages that are produced using GCKLogger.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKLoggerFilter : NSObject

/**
 * A flag indicating whether the filter is exclusive (<code>YES</code>) or inclusive
 * (<code>NO</code>). By default filters are inclusive, that is, they accept all log messages that
 * match the filter.
 *
 * @deprecated No longer implemented; value is ignored.
 */
@property(nonatomic, assign) BOOL exclusive GCK_DEPRECATED("Not supported");

/**
 * The minimum logging level that will be logged from this filter.
 *
 * @since 3.2
 */
@property(nonatomic, assign) GCKLoggerLevel minimumLevel;

/**
 * Constructs a new GCKLoggerFilter with empty criteria.
 */
- (instancetype)init;

/**
 * Sets the minimum logging level that will be passed by the filter for the set of matching classes.
 * Glob patterns are supported for the class names.
 *
 * @param minimumLevel The minimum logging level for these classes. May be GCKLoggerLevelVerbose.
 * to include all levels.
 * @param classNames A list of class names.
 *
 * @since 3.3
 */
- (void)setLoggingLevel:(GCKLoggerLevel)minimumLevel forClasses:(NSArray<NSString *> *)classNames;

/**
 * Sets the minimum logging level that will be passed by the filter for the set of matching function
 * names. Glob patterns are supported.
 *
 * @param minimumLevel The minimum logging level for these functions. May be GCKLoggerLevelVerbose
 * to include all levels.
 * @param functionNames A list of function names.
 *
 * @since 3.3
 */
- (void)setLoggingLevel:(GCKLoggerLevel)minimumLevel
           forFunctions:(NSArray<NSString *> *)functionNames;

/**
 * Adds a list of class names to be matched by the filter. A class name can be a simple name or the
 * name of an extension, for example, <code>@@"MyClass"</code> or
 * <code>@@"MyClass(MyExtension)"</code>. If an extension is not included in the name, all
 * extensions of the class will be included implicitly. Glob patterns are supported.
 *
 * @deprecated Use @ref setLoggingLevel:forClasses: instead.
 */
- (void)addClassNames:(NSArray<NSString *> *)classNames
    GCK_DEPRECATED("Use setLoggingLevel:forClasses: instead");

/**
 * Adds a list of class names to be matched by the filter, specifying a minimum logging level. A
 * class name can be a simple name or the name of an extension, for example,
 * <code>@@"MyClass"</code> or <code>@@"MyClass(MyExtension)"</code>. If an extension is
 * not included in the name, all extensions of the class will be included implicitly. Glob patterns
 * are supported.
 *
 * @deprecated Use @ref setLoggingLevel:forClasses: instead.
 *
 * @param classNames The class names.
 * @param minimumLogLevel The minimum level to log; may be GCKLoggerLevelVerbose to log all levels.
 *
 * @since 3.2
 */
- (void)addClassNames:(NSArray<NSString *> *)classNames
      minimumLogLevel:(GCKLoggerLevel)minimumLogLevel
    GCK_DEPRECATED("Use setLoggingLevel:forClasses: instead");

/**
 * Adds a list of non-member function names to be matched by the filter. Glob patterns are
 * supported.
 *
 * @deprecated Use @ref setLoggingLevel:forFunctions: instead.
 */
- (void)addFunctionNames:(NSArray<NSString *> *)functionNames
    GCK_DEPRECATED("Use setLoggingLevel:forFunctions: instead");

/**
 * Adds a list of non-member function names to be matched by the filter, specifying a minimum
 * logging level. Glob patterns are supported.
 *
 * @deprecated Use @ref setLoggingLevel:forFunctions: instead.
 *
 * @param functionNames The function names.
 * @param minimumLogLevel The minimum level to log; may be GCKLoggerLevelVerbose to log all levels.
 *
 * @since 3.2
 */
- (void)addFunctionNames:(NSArray<NSString *> *)functionNames
         minimumLogLevel:(GCKLoggerLevel)minimumLogLevel
    GCK_DEPRECATED("Use setLoggingLevel:forFunctions: instead");

/**
 * Adds a list of regular expression patterns for matching the text of the log messages.
 */
- (void)addMessagePatterns:(NSArray<NSString *> *)messagePatterns;

/**
 * Adds a list of regular expression patterns for matching the text of the log messages with
 * optional case-insensitivity.
 *
 * @deprecated Use @ref addMessagePatterns: with inline (?-i) or (?i) instead.
 *
 */
- (void)addMessagePatterns:(NSArray<NSString *> *)messagePatterns
           caseInsensitive:(BOOL)caseInsensitive
  GCK_DEPRECATED("Use addMessagePatterns: with inline (?-i) or (?i) instead");

/**
 * Resets the filter; removing all match criteria.
 */
- (void)reset;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMediaCommon.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/**
 * @file GCKMediaCommon.h
 * GCKMediaResumeState and GCKMediaRepeatMode enums.
 */

/**
 * @enum GCKMediaResumeState
 * Enum defining the media control channel resume state.
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKMediaResumeState) {
  /** A resume state indicating that the player state should be left unchanged. */
  GCKMediaResumeStateUnchanged = 0,

  /**
   * A resume state indicating that the player should be playing, regardless of its current
   * state.
   */
  GCKMediaResumeStatePlay = 1,

  /**
   * A resume state indicating that the player should be paused, regardless of its current
   * state.
   */
  GCKMediaResumeStatePause = 2,
};

/**
 * @deprecated Renamed to GCKMediaResumeState.
 */
typedef GCKMediaResumeState GCKMediaControlChannelResumeState
    GCK_DEPRECATED("Use equivalent enum GCKMediaResumeState");

/**
 * Alias for GCKMediaResumeStateUnchanged
 * @deprecated Use GCKMediaResumeStateUnchanged instead.
 */
#define GCKMediaControlChannelResumeStateUnchanged GCKMediaResumeStateUnchanged

/**
 * Alias for GCKMediaResumeStatePlay
 * @deprecated Use GCKMediaResumeStatePlay instead.
 */
#define GCKMediaControlChannelResumeStatePlay GCKMediaResumeStatePlay

/**
 * Alias for GCKMediaResumeStatePause
 * @deprecated Use GCKMediaResumeStatePause instead.
 */
#define GCKMediaControlChannelResumeStatePause GCKMediaResumeStatePause

/**
 * @enum GCKMediaRepeatMode
 * Enum defining the media control channel queue playback repeat modes.
 */
typedef NS_ENUM(NSInteger, GCKMediaRepeatMode) {
  /** A repeat mode indicating that the repeat mode should be left unchanged. */
  GCKMediaRepeatModeUnchanged = 0,

  /** A repeat mode indicating no repeat. */
  GCKMediaRepeatModeOff = 1,

  /** A repeat mode indicating that a single queue item should be played repeatedly. */
  GCKMediaRepeatModeSingle = 2,

  /** A repeat mode indicating that the entire queue should be played repeatedly. */
  GCKMediaRepeatModeAll = 3,

  /**
   * A repeat mode indicating that the entire queue should be played repeatedly. The order of the
   * items will be randomly shuffled once the last item in the queue finishes. The queue will
   * continue to play starting from the first item of the shuffled items.
   */
  GCKMediaRepeatModeAllAndShuffle = 4,
};

/**
 * @var kGCKInvalidTimeInterval
 * A constant indicating an invalid time interval. May be passed to methods which accept optional
 * stream positions or time durations.
 */
GCK_EXTERN const NSTimeInterval kGCKInvalidTimeInterval;

/**
 * Tests if the given time interval value is kGCKInvalidTimeInterval.
 *
 * @since 4.0
 */
GCK_EXTERN BOOL GCKIsValidTimeInterval(NSTimeInterval timeInterval);



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMediaInformation.h
================================================
// Copyright 2013 Google Inc.

#import <Foundation/Foundation.h>
#import <GoogleCast/GCKAdBreakClipInfo.h>
#import <GoogleCast/GCKAdBreakInfo.h>
#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKHLSSegmentFormat.h>
#import <GoogleCast/GCKHLSVideoSegmentFormat.h>

/**
 * @file GCKMediaInformation.h
 * GCKMediaStreamType enum.
 */

@class GCKMediaMetadata;
@class GCKMediaTextTrackStyle;
@class GCKMediaTrack;

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKMediaStreamType
 * Enum defining the media stream type.
 */
typedef NS_ENUM(NSInteger, GCKMediaStreamType) {
  /** A stream type of "none". */
  GCKMediaStreamTypeNone = 0,
  /** A buffered stream type. */
  GCKMediaStreamTypeBuffered = 1,
  /** A live stream type. */
  GCKMediaStreamTypeLive = 2,
  /** An unknown stream type. */
  GCKMediaStreamTypeUnknown = 99,
};

/**
 * A class that aggregates information about a media item.
 */
GCK_EXPORT
@interface GCKMediaInformation : NSObject <NSCopying, NSSecureCoding>

/**
 * The content ID for this stream.
 */
@property(nonatomic, copy, readonly, nullable) NSString *contentID;

/**
 * The URL of the content to be played.
 *
 * @since 4.3.4
 */
@property(nonatomic, copy, readonly, nullable) NSURL *contentURL;

/**
 * The stream type.
 */
@property(nonatomic, readonly) GCKMediaStreamType streamType;

/**
 * The content (MIME) type.
 */
@property(nonatomic, copy, readonly) NSString *contentType;

/**
 * The media item metadata.
 */
@property(nonatomic, readonly, nullable) GCKMediaMetadata *metadata;

/**
 * The list of ad breaks in this content.
 */
@property(nonatomic, copy, readonly, nullable) NSArray<GCKAdBreakInfo *> *adBreaks;

/**
 * The list of ad break clips in this content.
 *
 * @since 3.3
 */
@property(nonatomic, copy, readonly, nullable) NSArray<GCKAdBreakClipInfo *> *adBreakClips;

/**
 * The length of the stream, in seconds, or <code>INFINITY</code> if it is a live stream.
 */
@property(nonatomic, readonly) NSTimeInterval streamDuration;

/**
 * The media tracks for this stream.
 */
@property(nonatomic, copy, readonly, nullable) NSArray<GCKMediaTrack *> *mediaTracks;

/**
 * The text track style for this stream.
 */
@property(nonatomic, copy, readonly, nullable) GCKMediaTextTrackStyle *textTrackStyle;

/**
 * The deep link for the media as used by Google Assistant, if any.
 *
 * @since 4.0
 */
@property(nonatomic, copy, readonly, nullable) NSString *entity;

/**
 * The VMAP request configuration if any. See more here:
 * <a href="https://www.iab.com/guidelines/digital-video-ad-serving-template-vast-4-0/">
 * Digital Video Ad Serving Template 4.0</a>.
 * If this is non-nil, all other ads related fields will be ignored.
 *
 * @since 4.3.4
 */
@property(nonatomic, readonly, nullable) GCKVASTAdsRequest *VMAP;

/**
 * The epoch time, in seconds, of a live stream's start time.
 * For live streams that have a known start time, e.g. a live TV show or sport game, it would be the
 * epoch time that the event started. Otherwise, it will be start time of the live seekable range
 * when the streaming started.
 *
 * @since 4.4.1
 */
@property(nonatomic, readonly) NSTimeInterval startAbsoluteTime;

/**
 * The format of the HLS audio segment.
 *
 * @since 4.6.0
 */
@property(nonatomic, readonly) GCKHLSSegmentFormat hlsSegmentFormat;

/**
 * The format of the HLS video segment.
 *
 * @since 4.6.0
 */
@property(nonatomic, readonly) GCKHLSVideoSegmentFormat hlsVideoSegmentFormat;

/**
 * The custom data, if any.
 */
@property(nonatomic, readonly, nullable) id customData;

/**
 * Deprecated. Use GCKMediaInformationBuilder to initialize GCKMediaInformation objects.
 *
 * @param contentID The content ID.
 * @param streamType The stream type.
 * @param contentType The content (MIME) type.
 * @param metadata The media item metadata.
 * @param adBreaks The list of ad breaks in this content.
 * @param adBreakClips The list of ad break clips in this content.
 * @param streamDuration The stream duration.
 * @param mediaTracks The media tracks, if any, otherwise <code>nil</code>.
 * @param textTrackStyle The text track style, if any, otherwise <code>nil</code>.
 * @param customData The custom application-specific data. Must either be an object that can be
 * serialized to JSON using <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or
 * <code>nil</code>.
 *
 * @since 4.3
 */
- (instancetype)initWithContentID:(NSString *)contentID
                       streamType:(GCKMediaStreamType)streamType
                      contentType:(NSString *)contentType
                         metadata:(nullable GCKMediaMetadata *)metadata
                         adBreaks:(nullable NSArray<GCKAdBreakInfo *> *)adBreaks
                     adBreakClips:(nullable NSArray<GCKAdBreakClipInfo *> *)adBreakClips
                   streamDuration:(NSTimeInterval)streamDuration
                      mediaTracks:(nullable NSArray<GCKMediaTrack *> *)mediaTracks
                   textTrackStyle:(nullable GCKMediaTextTrackStyle *)textTrackStyle
                       customData:(nullable id)customData
    GCK_DEPRECATED("Use GCKMediaInformationBuilder to initialize GCKMediaInformation objects.");

/**
 * Deprecated. Use GCKMediaInformationBuilder to initialize GCKMediaInformation objects.
 *
 * @param contentID The content ID.
 * @param streamType The stream type.
 * @param contentType The content (MIME) type.
 * @param metadata The media item metadata.
 * @param streamDuration The stream duration.
 * @param mediaTracks The media tracks, if any, otherwise <code>nil</code>.
 * @param textTrackStyle The text track style, if any, otherwise <code>nil</code>.
 * @param customData The custom application-specific data. Must either be an object that can be
 * serialized to JSON using <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or
 * <code>nil</code>.
 */
- (instancetype)initWithContentID:(NSString *)contentID
                       streamType:(GCKMediaStreamType)streamType
                      contentType:(NSString *)contentType
                         metadata:(nullable GCKMediaMetadata *)metadata
                   streamDuration:(NSTimeInterval)streamDuration
                      mediaTracks:(nullable NSArray<GCKMediaTrack *> *)mediaTracks
                   textTrackStyle:(nullable GCKMediaTextTrackStyle *)textTrackStyle
                       customData:(nullable id)customData
    GCK_DEPRECATED("Use GCKMediaInformationBuilder to initialize GCKMediaInformation objects.");

/**
 * Searches for a media track with the given track ID.
 *
 * @param trackID The media track ID.
 * @return The matching GCKMediaTrack object, or <code>nil</code> if there is no media track
 * with the given ID.
 */
- (nullable GCKMediaTrack *)mediaTrackWithID:(NSInteger)trackID;

@end

/**
 * A builder object for constructing new or derived GCKMediaInformation instances. The builder may
 * be used to derive a GCKMediaInformation from an existing one:
 *
 * @code
 * GCKMediaInformationBuilder *builder =
 *     [[GCKMediaInformationBuilder alloc] initWithMediaInformation:originalMediaInfo];
 * builder.contentID = ...; // Change the content ID.
 * builder.streamDuration = 100; // Change the stream duration.
 * GCKMediaInformation *derivedMediaInfo = [builder build];
 * @endcode
 *
 * It can also be used to construct a new GCKMediaInformation from scratch:
 *
 * @code
 * GCKMediaInformationBuilder *builder =
 *     [[GCKMediaInformationBuilder alloc] initWithContentURL:...];
 * builder.contentType = ...;
 * builder.streamType = ...;
 * builder.metadata = ...;
 * // Set all other desired propreties...
 * GCKMediaInformation *newMediaInfo = [builder build];
 * @endcode
 *
 * @since 4.0
 */
GCK_EXPORT
@interface GCKMediaInformationBuilder : NSObject

/**
 * The content ID for this stream.
 * @deprecated Use contentURL and entity instead.
 */
@property(nonatomic, copy, nullable) NSString *contentID;

/**
 * The URL of the content to be played.
 *
 * @since 4.3.4
 */
@property(nonatomic, copy, nullable) NSURL *contentURL;

/**
 * The stream type. Defaults to GCKMediaStreamTypeBuffered.
 */
@property(nonatomic, assign) GCKMediaStreamType streamType;

/**
 * The content (MIME) type.
 */
@property(nonatomic, copy, nullable) NSString *contentType;

/**
 * The media item metadata.
 */
@property(nonatomic, nullable) GCKMediaMetadata *metadata;

/**
 * The list of ad breaks in this content.
 */
@property(nonatomic, copy, nullable) NSArray<GCKAdBreakInfo *> *adBreaks;

/**
 * The list of ad break clips in this content.
 */
@property(nonatomic, copy, nullable) NSArray<GCKAdBreakClipInfo *> *adBreakClips;

/**
 * The length of the stream, in seconds, or <code>INFINITY</code> if it is a live stream. Defaults
 * to 0.
 */
@property(nonatomic, assign) NSTimeInterval streamDuration;

/**
 * The media tracks for this stream.
 */
@property(nonatomic, copy, nullable) NSArray<GCKMediaTrack *> *mediaTracks;

/**
 * The text track style for this stream.
 */
@property(nonatomic, copy, nullable) GCKMediaTextTrackStyle *textTrackStyle;

/**
 * The deep link for the media as used by Google Assistant, if any.
 */
@property(nonatomic, copy, nullable) NSString *entity;

/**
 * The VMAP request configuration if any. See more here:
 * <a href="https://www.iab.com/guidelines/digital-video-ad-serving-template-vast-4-0/">
 * Digital Video Ad Serving Template 4.0</a>.
 * If this is non-nil, all other ads related fields will be ignored.
 *
 * @since 4.3.4
 */
@property(nonatomic, nullable) GCKVASTAdsRequest *VMAP;

/**
 * The start time of the stream, in seconds in epoch time, or <code>kGCKInvalidTimeInterval</code>
 * if it is not available. Defaults to <code>kGCKInvalidTimeInterval</code>.
 *
 * @since 4.4.1
 */
@property(nonatomic) NSTimeInterval startAbsoluteTime;

/**
 * The format of the HLS audio segment.
 *
 * @since 4.6.0
 */
@property(nonatomic) GCKHLSSegmentFormat hlsSegmentFormat;

/**
 * The format of the HLS video segment.
 *
 * @since 4.6.0
 */
@property(nonatomic) GCKHLSVideoSegmentFormat hlsVideoSegmentFormat;

/**
 * The custom data, if any.
 */
@property(nonatomic, nullable) id customData;

/**
 * Constructs a new GCKMediaInformationBuilder with the given required attributes, and all other
 * attributes initialized to default values.
 * @param contentURL The URL of the content to be played.
 *
 * @since 4.3.4
 */
- (instancetype)initWithContentURL:(NSURL *)contentURL;

/**
 * Constructs a new GCKMediaInformationBuilder with the given required attributes, and all other
 * attributes initialized to default values.
 */
- (instancetype)initWithEntity:(NSString *)entity;

/**
 * Constructs a new GCKMediaInformationBuilder with attributes copied from the given
 * GCKMediaInformation instance.
 *
 * @param mediaInfo The instance to copy.
 */
- (instancetype)initWithMediaInformation:(GCKMediaInformation *)mediaInfo;

/**
 * Constructs a new GCKMediaInformationBuilder with the given required attributes, and all other
 * attributes initialized to default values.
 * @deprecated Use initWithContentURL: or initWithEntity: instead.
 */
- (instancetype)initWithContentID:(NSString *)contentID
    GCK_DEPRECATED("Use initWithContentURL: or initWithEntity:");

/**
 * Constructs a new GCKMediaInformationBuilder with the given required attributes, and all other
 * attributes initialized to default values.
 * @deprecated Use initWithContentURL: or initWithEntity: instead.
 */
- (instancetype)initWithContentID:(NSString *)contentID
                           entity:(NSString *)entity
    GCK_DEPRECATED("Use initWithContentURL: or initWithEntity:");

/**
 * Builds a GCKMediaInformation using the builder's current attributes.
 *
 * @return The new GCKMediaInformation instance.
 */
- (GCKMediaInformation *)build;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMediaLiveSeekableRange.h
================================================
#import <Foundation/Foundation.h>
#import <GoogleCast/GCKDefines.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class that aggregates information about seekable range of a media stream.
 *
 * @since 4.4.1
 */
GCK_EXPORT
@interface GCKMediaLiveSeekableRange : NSObject <NSCopying, NSSecureCoding>

/**
 * The start time of seekable range, which ranges from 0 to @c endTime if available.
 */
@property(nonatomic, readonly) NSTimeInterval startTime;

/**
 * The end time of seekable range, which ranges from 0 to end of duration if available.
 */
@property(nonatomic, readonly) NSTimeInterval endTime;

/**
 * A flag indicating whether the current seek range is a fixed-length, moving window or a expanding
 * range.
 */
@property(nonatomic, readonly) BOOL isMovingWindow;

/**
 * A flag indicating whether the current live stream is done. It's updated to YES when live stream
 * finishes.
 */
@property(nonatomic, readonly) BOOL isLiveDone;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMediaLoadOptions.h
================================================
// Copyright 2017 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A constant indicating credentials that have been received from the cloud.
 *
 * @since 4.1.1
 */
GCK_EXTERN NSString *const kGCKCredentialsTypeCloud;

/**
 * Options for loading media with GCKRemoteMediaClient.
 *
 * @since 4.0
 */
GCK_EXPORT
@interface GCKMediaLoadOptions : NSObject <NSCopying, NSSecureCoding>

/**
 * Designated initializer. Initializes a GCKMediaLoadOptions with default values for all properties.
 */
- (instancetype)init;

/**
 * Whether playback should start immediately. The default value is <code>YES</code>.
 */
@property(nonatomic, assign) BOOL autoplay;

/**
 * The initial playback position. The default value is @ref kGCKInvalidTimeInterval, which indicates
 * a default playback position.
 */
@property(nonatomic, assign) NSTimeInterval playPosition;

/**
 * The playback rate. The default value is <code>1</code>.
 */
@property(nonatomic, assign) float playbackRate;

/**
 * An array of integers specifying the active tracks. The default value is <code>nil</code>.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *activeTrackIDs;

/**
 * Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 */
@property(nonatomic, strong, nullable) id customData;

/**
 * The user credentials for the media item being loaded.
 *
 * @since 4.1.1
 */
@property(nonatomic, copy, nullable) NSString *credentials;

/**
 * The type of user credentials specified in #GCKMediaLoadOptions::credentials.
 *
 * @since 4.1.1
 */
@property(nonatomic, copy, nullable) NSString *credentialsType;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMediaLoadRequestData.h
================================================
#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

@class GCKMediaInformation;
@class GCKMediaQueueData;

/**
 * Media load request data. This class is used by load media commands in @c GCKRemoteMediaClient for
 * specifying how a receiver application should load media.
 *
 * To load a single item, the item to load should be specified in @c mediaInformation.
 * To load a non-cloud queue, the queue information should be specified in @c queueData. Optionally,
 * the information for the first item to play can be specified in @c mediaInformation.
 * If the queue is a cloud queue, @c items in @queueData can be @c nil or empty, but @c entity needs
 * to be specified, so that the receiver app can fetch the queue from the cloud using @c entity.
 * If neither @c mediaInformation nor @c queueData is specified, load requests will fail without
 * sending to receiver applications.
 *
 * @since 4.4.1
 */
GCK_EXPORT
@interface GCKMediaLoadRequestData : NSObject <NSCopying, NSSecureCoding>

/**
 * The media item to load.
 */
@property(nonatomic, copy, readonly, nullable) GCKMediaInformation *mediaInformation;

/**
 * The metadata of media item or queue.
 */
@property(nonatomic, copy, readonly, nullable) GCKMediaQueueData *queueData;

/**
 * The flag that indicates whether playback starts immediately after loaded. The default value is
 * <code>@(YES)</code>.
 *
 * When loading a queue by specifying the queue items in @c queueData, this value overrides the @c
 * autoplay of the first @ref GCKMediaQueueItem to be loaded in @c queueData. Only when this field
 * is @c nil, the @c autoplay property of individual @ref GCKMediaQueueItem in @c queueData will
 * take effect.
 *
 * When loading a single item by specifying the @c mediaInformation, this field specifies whether
 * the playback should start upon load. If @c nil, playback will not start immediately.
 */
@property(nonatomic, copy, readonly, nullable) NSNumber *autoplay;

/**
 * The initial playback position.
 * The default value is @ref kGCKInvalidTimeInterval, which indicates a default playback position.
 * If playing Video-On-Demand streams, it starts from 0; if playing live streams, it starts from
 * live edge.
 */
@property(nonatomic, assign, readonly) NSTimeInterval startTime;

/**
 * The playback rate. The default value is <code>1</code>.
 */
@property(nonatomic, assign, readonly) float playbackRate;

/**
 * An array of integers specifying the active tracks. The default value is <code>nil</code>.
 */
@property(nonatomic, strong, readonly, nullable) NSArray<NSNumber *> *activeTrackIDs;

/**
 * Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 */
@property(nonatomic, strong, readonly, nullable) id customData;

/**
 * The user credentials for the media item being loaded.
 */
@property(nonatomic, copy, readonly, nullable) NSString *credentials;

/**
 * The type of user credentials specified in #GCKMediaLoadRequestData::credentials.
 */
@property(nonatomic, copy, readonly, nullable) NSString *credentialsType;

/**
 * The alternate Android TV credentials for the media item being loaded.
 *
 * If set, these credentials will override the value set in #GCKMediaLoadRequestData::credentials if
 * the receiver is an Android TV app. On the receiver side, these credentials can be accessed from
 * @link MediaLoadRequestData#getCredentials @endlink.
 *
 * @since 4.7.0
 */
@property(nonatomic, copy, readonly, nullable) NSString *atvCredentials;

/**
 * The type of Android TV credentials specified in #GCKMediaLoadRequestData::atvCredentials.
 *
 * If set, this credentials type will override the value set in
 * #GCKMediaLoadRequestData::credentialsType if the receiver is an Android TV app. On the receiver
 * side, these credentials can be accessed from @link MediaLoadRequestData#getCredentialsType
 * @endlink.
 *
 * @since 4.7.0
 */
@property(nonatomic, copy, readonly, nullable) NSString *atvCredentialsType;

@end

/**
 * A builder object for constructing new or derived @c GCKMediaLoadRequestData instances. The
 * builder may be used to derive @c GCKMediaLoadRequestData from an existing one.
 *
 * @since 4.4.1
 */
GCK_EXPORT
@interface GCKMediaLoadRequestDataBuilder : NSObject

/**
 * The media item to load.
 */
@property(nonatomic, copy, nullable) GCKMediaInformation *mediaInformation;

/**
 * The metadata of media item or queue.
 */
@property(nonatomic, copy, nullable) GCKMediaQueueData *queueData;

/**
 * The flag to indicate whether playback should start immediately. The default value is
 * <code>@(YES)</code>. If this is @c nil, the @autoplay property of @ref GCKMediaQueueItem in @c
 * queueData will take effect. If queueData is @c nil either, playback will not start immediately.
 */
@property(nonatomic, copy, nullable) NSNumber *autoplay;

/**
 * The initial position to start playback.
 * The default value is @ref kGCKInvalidTimeInterval, which indicates a default playback position.
 * If playing Video-On-Demand streams, it starts from 0; if playing live streams, it starts from
 * live edge.
 */
@property(nonatomic, assign) NSTimeInterval startTime;

/**
 * The playback rate. The default value is <code>1</code>.
 */
@property(nonatomic, assign) float playbackRate;

/**
 * An array of integers specifying the active tracks. The default value is <code>nil</code>.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *activeTrackIDs;

/**
 * Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 */
@property(nonatomic, strong, nullable) id customData;

/**
 * The user credentials for the media item being loaded.
 */
@property(nonatomic, copy, nullable) NSString *credentials;

/**
 * The type of user credentials specified in #GCKMediaLoadRequestData::credentials.
 */
@property(nonatomic, copy, nullable) NSString *credentialsType;

/**
 * The alternate Android TV credentials for the media item being loaded.
 *
 * If set, these credentials will override the value set in #GCKMediaLoadRequestData::credentials if
 * the receiver is an Android TV app. On the receiver side, these credentials can be accessed from
 * @link MediaLoadRequestData#getCredentials @endlink.
 *
 * @since 4.7.0
 */
@property(nonatomic, copy, nullable) NSString *atvCredentials;

/**
 * The type of Android TV credentials specified in #GCKMediaLoadRequestData::atvCredentials.
 *
 * If set, this credentials type will override the value set in
 * #GCKMediaLoadRequestData::credentialsType if the receiver is an Android TV app. On the receiver
 * side, these credentials can be accessed from @link MediaLoadRequestData#getCredentialsType
 * @endlink.
 *
 * @since 4.7.0
 */
@property(nonatomic, copy, nullable) NSString *atvCredentialsType;

/**
 * Initializes a @c GCKMediaLoadRequestData with default values for all properties.
 */
- (instancetype)init;

/**
 * Initializes a @c GCKMediaLoadRequestData with a given @c GCKMediaLoadRequestData object.
 */
- (instancetype)initWithMediaLoadRequestData:(GCKMediaLoadRequestData *)requestData;

/**
 * Builds a @c GCKMediaLoadRequestData using the builder's current attributes.
 *
 * @return The new @c GCKMediaLoadRequestData instance.
 */
- (GCKMediaLoadRequestData *)build;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMediaMetadata.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKImage;

/**
 * @file GCKMediaMetadata.h
 * GCKMediaMetadataType enum.
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKMediaMetadataType
 * Enum defining the media metadata types.
 */
typedef NS_ENUM(NSInteger, GCKMediaMetadataType) {
  /**  A media type representing generic media content. */
  GCKMediaMetadataTypeGeneric = 0,
  /** A media type representing a movie. */
  GCKMediaMetadataTypeMovie = 1,
  /** A media type representing an TV show. */
  GCKMediaMetadataTypeTVShow = 2,
  /** A media type representing a music track. */
  GCKMediaMetadataTypeMusicTrack = 3,
  /** A media type representing a photo. */
  GCKMediaMetadataTypePhoto = 4,
  /** A media type representing an audio book. */
  GCKMediaMetadataTypeAudioBookChapter = 5,
  /** The smallest media type value that can be assigned for application-defined media types. */
  GCKMediaMetadataTypeUser = 100,
};

/**
 * String key: Creation date.
 *
 * The value is the date and/or time at which the media was created, in ISO-8601 format.
 * For example, this could be the date and time at which a photograph was taken or a piece of
 * music was recorded.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyCreationDate;

/**
 * String key: Release date.
 *
 * The value is the date and/or time at which the media was released, in ISO-8601 format.
 * For example, this could be the date that a movie or music album was released.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyReleaseDate;
/**
 * String key: Broadcast date.
 *
 * The value is the date and/or time at which the media was first broadcast, in ISO-8601 format.
 * For example, this could be the date that a TV show episode was first aired.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyBroadcastDate;

/**
 * String key: Title.
 *
 * The title of the media. For example, this could be the title of a song, movie, or TV show
 * episode. This value is suitable for display purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyTitle;

/**
 * String key: Subtitle.
 *
 * The subtitle of the media. This value is suitable for display purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeySubtitle;

/**
 * String key: Artist.
 *
 * The name of the artist who created the media. For example, this could be the name of a
 * musician, performer, or photographer. This value is suitable for display purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyArtist;

/**
 * String key: Album artist.
 *
 * The name of the artist who produced an album. For example, in compilation albums such as DJ
 * mixes, the album artist is not necessarily the same as the artist(s) of the individual songs
 * on the album. This value is suitable for display purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyAlbumArtist;

/**
 * String key: Album title.
 *
 * The title of the album that a music track belongs to. This value is suitable for display
 * purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyAlbumTitle;

/**
 * String key: Composer.
 *
 * The name of the composer of a music track. This value is suitable for display purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyComposer;

/**
 * Integer key: Disc number.
 *
 * The disc number (counting from 1) that a music track belongs to in a multi-disc album.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyDiscNumber;

/**
 * Integer key: Track number.
 *
 * The track number of a music track on an album disc. Typically track numbers are counted
 * starting from 1, however this value may be 0 if it is a "hidden track" at the beginning of
 * an album.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyTrackNumber;

/**
 * Integer key: Season number.
 *
 * The season number that a TV show episode belongs to. Typically season numbers are counted
 * starting from 1, however this value may be 0 if it is a "pilot" episode that predates the
 * official start of a TV series.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeySeasonNumber;

/**
 * Integer key: Episode number.
 *
 * The number of an episode in a given season of a TV show. Typically episode numbers are
 * counted starting from 1, however this value may be 0 if it is a "pilot" episode that is not
 * considered to be an official episode of the first season.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyEpisodeNumber;

/**
 * String key: Series title.
 *
 * The name of a series. For example, this could be the name of a TV show or series of related
 * music albums. This value is suitable for display purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeySeriesTitle;

/**
 * String key: Studio.
 *
 * The name of a recording studio that produced a piece of media. For example, this could be
 * the name of a movie studio or music label. This value is suitable for display purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyStudio;

/**
 * Integer key: Width.
 *
 * The width of a piece of media, in pixels. This would typically be used for providing the
 * dimensions of a photograph.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyWidth;

/**
 * Integer key: Height.
 *
 * The height of a piece of media, in pixels. This would typically be used for providing the
 * dimensions of a photograph.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyHeight;

/**
 * String key: Location name.
 *
 * The name of a location where a piece of media was created. For example, this could be the
 * location of a photograph or the principal filming location of a movie. This value is
 * suitable for display purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyLocationName;

/**
 * Double key: Location latitude.
 *
 * The latitude component of the geographical location where a piece of media was created.
 * For example, this could be the location of a photograph or the principal filming location of
 * a movie.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyLocationLatitude;

/**
 * Double key: Location longitude.
 *
 * The longitude component of the geographical location where a piece of media was created.
 * For example, this could be the location of a photograph or the principal filming location of
 * a movie.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyLocationLongitude;

/**
 * String key: Book title.
 *
 * The title of an audio book.
 *
 * @memberof GCKMediaMetadata
 *
 * @since 4.3.5
 */
GCK_EXTERN NSString *const kGCKMetadataKeyBookTitle;

/**
 * Integer key: Chapter number.
 *
 * The number of a chapter in an audio book.
 *
 * @memberof GCKMediaMetadata
 *
 * @since 4.3.5
 */
GCK_EXTERN NSString *const kGCKMetadataKeyChapterNumber;

/**
 * String key: Chapter title
 *
 * The title of a chapter in a audio book.
 *
 * @memberof GCKMediaMetadata
 *
 * @since 4.3.5
 */
GCK_EXTERN NSString *const kGCKMetadataKeyChapterTitle;

/**
 * Double key: Section Duration
 *
 * The section duration in seconds. Used for queue metadata. For example, this could be a duration
 * of one TV show in a queue, or a chapter duration of an audio book, or a program of a long live
 * stream.
 *
 * @memberof GCKMediaMetadata
 *
 * @since 4.4.1
 */
GCK_EXTERN NSString *const kGCKMetadataKeySectionDuration;

/**
 * Double key: Section Start Time in Media.
 *
 * The offset of section start time from the start of the media item in seconds. Used for queue
 * metadata.
 *
 * @memberof GCKMediaMetadata
 *
 * @since 4.4.1
 */
GCK_EXTERN NSString *const kGCKMetadataKeySectionStartTimeInMedia;

/**
 * Double key: Section Absolute Start Time.
 *
 * The absolute time of section start, in epoch time in seconds. Used for queue metadata.
 *
 * @memberof GCKMediaMetadata
 *
 * @since 4.4.1
 */
GCK_EXTERN NSString *const kGCKMetadataKeySectionStartAbsoluteTime;

/**
 * Double key: Section Start Time in Container.
 *
 * The offset of section start time within the full container. Used for queue metadata.
 *
 * @memberof GCKMediaMetadata
 *
 * @since 4.4.1
 */
GCK_EXTERN NSString *const kGCKMetadataKeySectionStartTimeInContainer;

/**
 * Double key: Queue Item ID.
 *
 * The id of the queue item that includes the section start time. Used for queue metadata.
 *
 * @memberof GCKMediaMetadata
 *
 * @since 4.4.1
 */
GCK_EXTERN NSString *const kGCKMetadataKeyQueueItemID;

/**
 * A container for media metadata. Metadata has a media type, an optional list of images, and a
 * collection of metadata fields. Keys for common metadata fields are predefined as constants, but
 * the application is free to define and use additional fields of its own.
 *
 * The values of the predefined fields have predefined types. For example, a track number is
 * an <code>NSInteger</code> and a creation date is an
 * <a href="https://goo.gl/5dXzU6"><b>NSString</b></a> containing an ISO-8601 representation of a
 * date and time. Attempting to store a value of an incorrect type in a field will raise an
 * <a href="https://goo.gl/xvv9VM"><b>NSInvalidArgumentException</b></a>.
 *
 * Note that the Cast protocol limits which metadata fields can be used for a given media type.
 * When a MediaMetadata object is serialized to JSON for delivery to a Cast receiver, any
 * predefined fields which are not supported for a given media type will not be included in the
 * serialized form, but any application-defined fields will always be included.
 * The complete list of predefined fields is as follows:
 *
 * <table>
 *   <tr>
 *     <th>Field</th>
 *     <th>Value Type</th>
 *     <th>Valid Metadata Types</th>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyCreationDate</td>
 *     <td><a href="https://goo.gl/LWeYFJ"><b>NSDate</b></a></td>
 *     <td>@ref GCKMediaMetadataTypePhoto</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyReleaseDate</td>
 *     <td><a href="https://goo.gl/LWeYFJ"><b>NSDate</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeGeneric, @ref GCKMediaMetadataTypeMovie,
 *         @ref GCKMediaMetadataTypeTVShow, @ref GCKMediaMetadataTypeMusicTrack</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyBroadcastDate</td>
 *     <td><a href="https://goo.gl/LWeYFJ"><b>NSDate</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeTVShow</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyTitle</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeGeneric, @ref GCKMediaMetadataTypeMovie,
 *         @ref GCKMediaMetadataTypeTVShow, @ref GCKMediaMetadataTypeMusicTrack,
 *         @ref GCKMediaMetadataTypePhoto</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeySubtitle</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeGeneric, @ref GCKMediaMetadataTypeMovie</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyArtist</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeGeneric, @ref GCKMediaMetadataTypeMusicTrack,
 *         @ref GCKMediaMetadataTypePhoto</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyAlbumArtist</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeMusicTrack</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyAlbumTitle</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeMusicTrack</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyComposer</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeMusicTrack</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyDiscNumber</td>
 *     <td><a href="https://goo.gl/hQFeav"><b>NSInteger</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeMusicTrack</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyTrackNumber</td>
 *     <td><a href="https://goo.gl/hQFeav"><b>NSInteger</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeMusicTrack</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeySeasonNumber</td>
 *     <td><a href="https://goo.gl/hQFeav"><b>NSInteger</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeTVShow</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyEpisodeNumber</td>
 *     <td><a href="https://goo.gl/hQFeav"><b>NSInteger</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeTVShow</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeySeriesTitle</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeTVShow</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyStudio</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeMovie</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyWidth</td>
 *     <td><a href="https://goo.gl/hQFeav"><b>NSInteger</b></a></td>
 *     <td>@ref GCKMediaMetadataTypePhoto</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyHeight</td>
 *     <td><a href="https://goo.gl/hQFeav"><b>NSInteger</b></a></td>
 *     <td>@ref GCKMediaMetadataTypePhoto</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyLocationName</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypePhoto</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyLocationLatitude</td>
 *     <td><b>double</b></td>
 *     <td>@ref GCKMediaMetadataTypePhoto</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyLocationLongitude</td>
 *     <td><b>double</b></td>
 *     <td>@ref GCKMediaMetadataTypePhoto</td>
 *   </tr>
 * </table>
 */
GCK_EXPORT
@interface GCKMediaMetadata : NSObject <NSCopying, NSSecureCoding>

/**
 * The metadata type.
 */
@property(nonatomic, assign, readonly) GCKMediaMetadataType metadataType;

/**
 * Initializes a new, empty, MediaMetadata with the given media type.
 * Designated initializer.
 *
 * @param metadataType The media type; one of the @ref GCKMediaMetadataType constants, or a
 * value greater than or equal to @ref GCKMediaMetadataTypeUser for custom media types.
 */
- (instancetype)initWithMetadataType:(GCKMediaMetadataType)metadataType;

/**
 * Initialize with the generic metadata type.
 */
- (instancetype)init;

/**
 * The metadata type.
 */
- (GCKMediaMetadataType)metadataType;

/**
 * Gets the list of images.
 */
- (NSArray *)images;

/**
 * Removes all the current images.
 */
- (void)removeAllMediaImages;

/**
 * Adds an image to the list of images.
 *
 * @param image The image to add.
 */
- (void)addImage:(GCKImage *)image;

/**
 * Tests if the object contains a field with the given key.
 *
 * @param key The key.
 * @return <code>YES</code> if the field exists, <code>NO</code> otherwise.
 */
- (BOOL)containsKey:(NSString *)key;

/**
 * Returns a set of keys for all fields that are present in the object.
 */
- (NSArray<NSString *> *)allKeys;

/**
 * Reads the value of a field.
 *
 * @param key The key for the field.
 * @return The value of the field, or <code>nil</code> if the field has not been set.
 */
- (nullable id)objectForKey:(NSString *)key;

/**
 * Stores a value in a string field.
 *
 * @param value The new value for the field.
 * @param key The key for the field.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not a string
 * field.
 */
- (void)setString:(NSString *)value forKey:(NSString *)key;

/**
 * Reads the value of a string field.
 *
 * @param key The key for the field.
 * @return The value of the field, or <code>nil</code> if the field has not been set.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not a string
 * field.
 */
- (nullable NSString *)stringForKey:(NSString *)key;

/**
 * Stores a value in an integer field.
 *
 * @param value The new value for the field.
 * @param key The key for the field.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not an integer
 * field.
 */
- (void)setInteger:(NSInteger)value forKey:(NSString *)key;

/**
 * Reads the value of an integer field.
 *
 * @param key The key for the field.
 * @return The value of the field, or 0 if the field has not been set.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not an integer
 * field.
 */
- (NSInteger)integerForKey:(NSString *)key;

/**
 * Reads the value of an integer field.
 *
 * @param key The key for the field.
 * @param defaultValue The value to return if the field has not been set.
 * @return The value of the field, or the given default value if the field has not been set.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not an integer
 * field.
 */
- (NSInteger)integerForKey:(NSString *)key defaultValue:(NSInteger)defaultValue;

/**
 * Stores a value in a <b>double</b> field.
 *
 * @param value The new value for the field.
 * @param key The key for the field.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not a
 * <b>double</b> field.
 */
- (void)setDouble:(double)value forKey:(NSString *)key;

/**
 * Reads the value of a <b>double</b> field.
 *
 * @param key The key for the field.
 * @return The value of the field, or 0 if the field has not been set.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not a
 * <b>double</b> field.
 */
- (double)doubleForKey:(NSString *)key;

/**
 * Reads the value of a <b>double</b> field.
 *
 * @param defaultValue The value to return if the field has not been set.
 * @param key The key for the field.
 * @return The value of the field, or the given default value if the field has not been set.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not a
 * <b>double</b> field.
 */
- (double)doubleForKey:(NSString *)key defaultValue:(double)defaultValue;

/**
 * Stores a value in a date field as a restricted ISO-8601 representation of the date.
 *
 * @param date The new value for the field.
 * @param key The key for the field.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not a date
 * field.
 */
- (void)setDate:(NSDate *)date forKey:(NSString *)key;

/**
 * Reads the value of a date field from the restricted ISO-8601 representation of the date.
 *
 * @param key The field name.
 * @return The date, or <code>nil</code> if this field has not been set.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not a date
 * field.
 */
- (nullable NSDate *)dateForKey:(NSString *)key;

/**
 * Reads the value of a date field, as a string.
 *
 * @param key The field name.
 * @return The date as a string containing the restricted ISO-8601 representation of the date, or
 * <code>nil</code> if this field has not been set.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not a date
 * field.
 */
- (nullable NSString *)dateAsStringForKey:(NSString *)key;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMediaQueue.h
================================================
#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaQueueItem.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

@protocol GCKMediaQueueDelegate;
@class GCKRemoteMediaClient;
/**
 * A data model representation of a media queue of arbitrary length. This class can be used as the
 * basis for an implementation of a UITableViewDataSource for driving a media queue UI.
 *
 * GCKMediaQueue listens for GCKSessionManager events and automatically attaches itself to the
 * GCKRemoteMediaClient when a Cast session is started. It listens for queue change notifications
 * from the GCKRemoteMediaClient and updates its internal data model accordingly. Likewise, it uses
 * the GCKRemoteMediaClient to fetch queue information on demand.
 *
 * The model maintains a list of queue item IDs for the entire queue; it automatically fetches this
 * list whenever it attaches to a Cast session. It also maintains an LRU cache (of configurable
 * size) of GCKMediaQueueItems, keyed by the queue item ID.
 *
 * The method GCKMediaQueue::itemAtIndex: is used to fetch a queue item at a given index. If the
 * GCKMediaQueueItem is not currently in the cache, an asynchronous request is made to fetch that
 * item from the receiver, and the delegate is eventually notified when the requested items are
 * received.
 *
 * If multiple calls to this method are made in a very short amount of time, the requested item IDs
 * are batched internally to reduce the number of network requests made. Because there is an upper
 * limit to how many queue items can be fetched from the receiver at a time, GCKMediaQueue keeps a
 * rolling window of the last N item IDs to be fetched. Therefore if a very large number of items
 * is requested in a short amount of time, only the last N items will actually be fetched. This
 * behavior allows for the efficient management of a very long queue in the app's UI which may be
 * quickly and/or frequently scrolled through by a user.
 *
 * GCKMediaQueue does not provide any methods for directly modifying the queue, because any such
 * change involves an asynchronous network request to the receiver (via methods on
 * GCKRemoteMediaClient), which can potentially fail with an error. GCKMediaQueue must ensure a
 * consistent representation of the queue as it exists on the receiver, so making local changes to
 * the data model which are not yet committed on the receiver could result in incorrect UI
 * behavior.
 *
 * See GCKMediaQueueDelegate for the delegate protocol.
 *
 * @since 4.3.4
 */
GCK_EXPORT
@interface GCKMediaQueue : NSObject

/** The number of items currently in the queue. */
@property(nonatomic, assign, readonly) NSUInteger itemCount;
/** The cache size. */
@property(nonatomic, assign, readonly) NSUInteger cacheSize;
/** The number of queue items that are currently in the cache. */
@property(nonatomic, assign, readonly) NSUInteger cachedItemCount;

- (instancetype)init NS_UNAVAILABLE;

/** Initializes a new GCKMediaQueue with the default cache size and default max fetch count. */
- (instancetype)initWithRemoteMediaClient:(GCKRemoteMediaClient *)remoteMediaClient;

/**
 * Initializes a new GCKMediaQueue with the given cache size and default max fetch count.
 *
 * @param cacheSize The cache size. Must be nonzero.
 */
- (instancetype)initWithRemoteMediaClient:(GCKRemoteMediaClient *)remoteMediaClient
                                cacheSize:(NSUInteger)cacheSize;

/**
 * Initializes a new GCKMediaQueue with the given cache size and given max fetch count.
 *
 * @param cacheSize The cache size. Must be nonzero.
 * @param maxFetchCount The maxiumum fetch count with minimum being 1.
 */

- (instancetype)initWithRemoteMediaClient:(GCKRemoteMediaClient *)remoteMediaClient
                                cacheSize:(NSUInteger)cacheSize
                            maxFetchCount:(NSUInteger)maxFetchCount NS_DESIGNATED_INITIALIZER;

/**
 * Adds a delegate to this object's list of delegates.
 *
 * @param delegate The delegate to add. The delegate will be retained until @ref removeDelegate: is
 *     called.
 */
- (void)addDelegate:(id<GCKMediaQueueDelegate>)delegate;

/**
 * Removes a delegate from this object's list of delegates.
 *
 * @param delegate The delegate to remove.
 */
- (void)removeDelegate:(id<GCKMediaQueueDelegate>)delegate;

/**
 * Returns the media queue item at the given index in the queue, or arranges to have the item
 * fetched from the receiver if it is not currently in the cache.
 *
 * @param index The index of the item to fetch.
 * @return The item at the given index, or <code>nil</code> if the item is not currently in the
 * cache, but will be fetched asynchronously.
 */
- (nullable GCKMediaQueueItem *)itemAtIndex:(NSUInteger)index;

/**
 * Returns the media queue item at the given index in the queue, or optionally arranges to have the
 * item fetched from the receiver if it is not currently in the cache.
 *
 * @param index The index of the item to fetch.
 * @param fetch Whether the item should be fetched from the receiver if it is not currently in the
 * cache.
 * @return The item at the given index, or <code>nil</code> if the item is not currently in the
 * cache.
 */
- (nullable GCKMediaQueueItem *)itemAtIndex:(NSUInteger)index fetchIfNeeded:(BOOL)fetch;

/**
 * Returns the item ID of the item at the given index in the queue.
 *
 * @return The item ID at the given index, or kGCKMediaQueueInvalidItemID if the index is invalid.
 */
- (GCKMediaQueueItemID)itemIDAtIndex:(NSUInteger)index;

/**
 * Looks up the index of a queue item in the queue.
 *
 * @param itemID The queue item ID.
 * @return The index (that is, the cardinal position) of the item within the queue, or NSNotFound
 * if there is no such item in the queue.
 */
- (NSInteger)indexOfItemWithID:(GCKMediaQueueItemID)itemID;

/**
 * Reloads the queue. The cache will be flushed and the item ID list will be re-fetched from the
 * receiver.
 */
- (void)reload;

/**
 * Clears the queue, removing all elements and flushing the cache.
 */
- (void)clear;

@end

/**
 * The delegate protocol for receiving asynchronous notifications from a GCKMediaQueue.
 *
 * @since 4.3.4
 */
GCK_EXPORT
@protocol GCKMediaQueueDelegate <NSObject>

@optional

/**
 * Called when one or more changes are about to be made to the queue.
 *
 * @param queue The queue.
 */
- (void)mediaQueueWillChange:(GCKMediaQueue *)queue;

/**
 * Called when the queue has been entirely reloaded. Any previously accessed queue items should be
 * considered invalid.
 *
 * @param queue The queue.
 */
- (void)mediaQueueDidReloadItems:(GCKMediaQueue *)queue;

/**
 * Called when a contiguous range of queue items ahve been inserted into the queue.
 *
 * @param queue The queue.
 * @param range The range indicating the starting index and count of items inserted.
 */
- (void)mediaQueue:(GCKMediaQueue *)queue didInsertItemsInRange:(NSRange)range;

/**
 * Called when one or more queue items have been updated in the queue. This includes the case where
 * previously accessed but unavailable items have been retrieved and placed in the cache, and the
 * case where previously cached items have been flushed from the cache.
 *
 * @param queue The queue.
 * @param indexes The ordered list of indexes of the items that have been updated.
 */
- (void)mediaQueue:(GCKMediaQueue *)queue didUpdateItemsAtIndexes:(NSArray<NSNumber *> *)indexes;

/**
 * Called when one or more queue items have been removed from the queue.
 *
 * @param queue The queue.
 * @param indexes The ordered list of indexes of the items that have been removed.
 */
- (void)mediaQueue:(GCKMediaQueue *)queue didRemoveItemsAtIndexes:(NSArray<NSNumber *> *)indexes;

/**
 * Called after one or more queue changes have been made to the queue.
 */
- (void)mediaQueueDidChange:(GCKMediaQueue *)queue;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMediaQueueContainerMetadata.h
================================================
#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaCommon.h>

#import <Foundation/Foundation.h>

@class GCKImage;
@class GCKMediaMetadata;

/**
 * @file GCKMediaQueueContainerMetadata.h
 * GCKMediaQueueContainerType enum.
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKMediaQueueContainerType
 * Enum defining the media queue metadata types.
 *
 * @since 4.4.1
 */
typedef NS_ENUM(NSInteger, GCKMediaQueueContainerType) {
  /**  A media type representing generic media content. */
  GCKMediaQueueContainerTypeGeneric = 0,
  /** A media type representing an audio book. */
  GCKMediaQueueContainerTypeAudioBook = 1,
};

/**
 * Additional metadata for the media queue container.
 *
 * @since 4.4.1
 */
GCK_EXPORT
@interface GCKMediaQueueContainerMetadata : NSObject <NSCopying, NSSecureCoding>

/**
 * The type of metadata.
 */
@property(nonatomic, readonly) GCKMediaQueueContainerType containerType;

/**
 * The container title. It can be audiobook title, Live TV Channel name, album name or playlist
 * name, etc.
 */
@property(nonatomic, copy, readonly, nullable) NSString *title;

/**
 * The metadata of each sections that a media stream contains.
 */
@property(nonatomic, copy, readonly) NSArray<GCKMediaMetadata *> *sections;

/**
 * The total playback time for the container.
 */
@property(nonatomic, readonly) NSTimeInterval containerDuration;

/**
 * Images associated with the queue. By default the first image is used when displaying queue
 * information. Used for audio book image, a TV Channel logo, album cover, etc.
 */
@property(nonatomic, copy, readonly) NSArray<GCKImage *> *containerImages;

/**
 * The author names. Used for audio book.
 */
@property(nonatomic, copy, readonly) NSArray<NSString *> *authors;

/**
 * The audiobook narrator names. Used for audio book.
 */
@property(nonatomic, copy, readonly) NSArray<NSString *> *narrators;

/**
 * The book publisher. Used for audio book.
 */
@property(nonatomic, copy, readonly) NSString *publisher;

/**
 * The book release date in ISO-8601 format. Used for audio book.
 *
 * @since 4.4.1
 */
@property(nonatomic, copy, readonly) NSString *releaseDate;

- (instancetype)init NS_UNAVAILABLE;

@end  // GCKMediaQueueContainerMetadata

/**
 * A builder object for constructing new or derived @c GCKMediaQueueContainerMetadata instances. The
 * builder may be used to derive @c GCKMediaQueueContainerMetadata from an existing one.
 *
 * @since 4.4.1
 */
GCK_EXPORT
@interface GCKMediaQueueContainerMetadataBuilder : NSObject

/**
 * The type of metadata.
 */
@property(nonatomic) GCKMediaQueueContainerType containerType;

/**
 * The container title. It can be audiobook title, Live TV Channel name, album name or playlist
 * name, etc.
 */
@property(nonatomic, copy, nullable) NSString *title;

/**
 * The metadata of each sections that a media stream contains.
 */
@property(nonatomic, copy) NSArray<GCKMediaMetadata *> *sections;

/**
 * The total playback time for the container.
 */
@property(nonatomic) NSTimeInterval containerDuration;

/**
 * Images associated with the queue. By default the first image is used when displaying queue
 * information. Used for audio book image, a TV Channel logo, album cover, etc.
 */
@property(nonatomic, copy) NSArray<GCKImage *> *containerImages;

/**
 * The author names. Used for audio book.
 */
@property(nonatomic, copy) NSArray<NSString *> *authors;

/**
 * The audiobook narrator names. Used for audio book.
 */
@property(nonatomic, copy) NSArray<NSString *> *narrators;

/**
 * The book publisher. Used for audio book.
 */
@property(nonatomic, copy) NSString *publisher;

/**
 * The book release date in ISO-8601 format. Used for audio book.
 */
@property(nonatomic, copy) NSString *releaseDate;

/**
 * Constructs a new @c GCKMediaQueueContainerMetadata with the given required attributes, and all
 * other attributes initialized to default values.
 */
- (instancetype)initWithContainerType:(GCKMediaQueueContainerType)containerType;

/**
 * Constructs a new @c GCKMediaQueueContainerMetadata with the given @c
 * GCKMediaQueueContainerMetadata instance.
 */
- (instancetype)initWithContainerMetadata:(GCKMediaQueueContainerMetadata *)containerMetadata;

- (instancetype)init NS_UNAVAILABLE;

/**
 * Builds a @c GCKMediaQueueContainerMetadata using the builder's current attributes.
 *
 * @return The new @c GCKMediaQueueContainerMetadata instance.
 */
- (GCKMediaQueueContainerMetadata *)build;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMediaQueueData.h
================================================
#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaCommon.h>

#import <Foundation/Foundation.h>

@class GCKImage;
@class GCKMediaQueueItem;
@class GCKMediaMetadata;
@class GCKMediaQueueContainerMetadata;

/**
 * @file GCKMediaQueueData.h
 * GCKMediaQueueType enum.
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKMediaQueueType
 * Enum defining the media queue metadata types.
 *
 * @since 4.4.1
 */
typedef NS_ENUM(NSInteger, GCKMediaQueueType) {
  GCKMediaQueueTypeGeneric = 0,
  /** A media type representing an album. */
  GCKMediaQueueTypeAlbum = 1,
  /** A media type representing an audio playlist. */
  GCKMediaQueueTypePlaylist = 2,
  /** A media type representing an audio book. */
  GCKMediaQueueTypeAudioBook = 3,
  /** A media type representing a radio station. */
  GCKMediaQueueTypeRadioStation = 4,
  /** A media type representing a podcast series. */
  GCKMediaQueueTypePodcastSeries = 5,
  /** A media type representing a TV series. */
  GCKMediaQueueTypeTVSeries = 6,
  /** A media type representing a video playlist. */
  GCKMediaQueueTypeVideoPlayList = 7,
  /** A media type representing a live TV. */
  GCKMediaQueueTypeLiveTV = 8,
  /** A media type representing a movie. */
  GCKMediaQueueTypeMovie = 9,
};

/**
 * A class that holds the information of the playing queue or media container.
 *
 * @since 4.4.1
 */
GCK_EXPORT
@interface GCKMediaQueueData : NSObject <NSCopying, NSSecureCoding>

/**
 * The queue type.
 */
@property(nonatomic, readonly) GCKMediaQueueType queueType;

/**
 * The queue id.
 */
@property(nonatomic, copy, readonly, nullable) NSString *queueID;

/**
 * The display name for queue.
 */
@property(nonatomic, copy, readonly, nullable) NSString *name;

/**
 * The deep link for the media as used by Google Assistant, if any.
 */
@property(nonatomic, copy, readonly, nullable) NSString *entity;

/**
 * The repeat mode of queue.
 */
@property(nonatomic, readonly) GCKMediaRepeatMode repeatMode;

/**
 * The container metadata.
 */
@property(nonatomic, copy, readonly, nullable) GCKMediaQueueContainerMetadata *containerMetadata;

/**
 * The index of the item to start playing with. Only for load request.
 */
@property(nonatomic, readonly) NSUInteger startIndex;

/**
 * The playback start time, in seconds. Only for load request.
 */
@property(nonatomic, readonly) NSTimeInterval startTime;

/**
 * The queueItems. Only for load requests.
 */
@property(nonatomic, copy, readonly, nullable) NSArray<GCKMediaQueueItem *> *items;

- (instancetype)init NS_UNAVAILABLE;

@end  // GCKMediaQueueData

/**
 * A builder object for constructing new or derived @c GCKMediaQueueData instances. The builder may
 * be used to derive @c GCKMediaQueueData from an existing one.
 *
 * @since 4.4.1
 */
GCK_EXPORT
@interface GCKMediaQueueDataBuilder : NSObject

/**
 * The queue type.
 */
@property(nonatomic) GCKMediaQueueType queueType;

/**
 * The queue id.
 */
@property(nonatomic, copy, nullable) NSString *queueID;

/**
 * The display name for queue.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 * The deep link for the media as used by Google Assistant, if any.
 */
@property(nonatomic, copy, nullable) NSString *entity;

/**
 * The repeat mode of queue.
 */
@property(nonatomic) GCKMediaRepeatMode repeatMode;

/**
 * The container metadata.
 */
@property(nonatomic, copy, nullable) GCKMediaQueueContainerMetadata *containerMetadata;

/**
 * The index of the item to start playing with. Only for load request.
 */
@property(nonatomic) NSUInteger startIndex;

/**
 * The playback start time, in seconds. Only for load request.
 * If not set, the receiver will set the start time depending on the stream type.
 * For non-live streams: loaded from 0.
 * For live streams: loaded from the most recent position.
 */
@property(nonatomic) NSTimeInterval startTime;

/**
 * The queueItems. Only for load requests.
 */
@property(nonatomic, copy, nullable) NSArray<GCKMediaQueueItem *> *items;

/**
 * Constructs a new @c GCKMediaQueueData with the given required attributes, and all other
 * attributes initialized to default values.
 */
- (instancetype)initWithQueueType:(GCKMediaQueueType)queueType;

/**
 * Constructs a new @c GCKMediaQueueData with the given @c GCKMediaQueueData instance.
 */
- (instancetype)initWithQueueData:(GCKMediaQueueData *)queueData;

- (instancetype)init NS_UNAVAILABLE;

/**
 * Builds a @c GCKMediaQueueData using the builder's current attributes.
 *
 * @return The new @c GCKMediaQueueData instance.
 */
- (GCKMediaQueueData *)build;

@end  // GCKMediaQueueDataBuilder

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMediaQueueItem.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaCommon.h>

#import <Foundation/Foundation.h>

/**
 * @file GCKMediaQueueItem.h
 */

@class GCKMediaInformation;
@class GCKMediaQueueItemBuilder;

/**
 * A media queue item ID.
 *
 * @since 4.1
 */
typedef NSUInteger GCKMediaQueueItemID;

NS_ASSUME_NONNULL_BEGIN

/**
 * @var kGCKMediaQueueInvalidItemID
 * An invalid queue item ID.
 */
GCK_EXTERN const GCKMediaQueueItemID kGCKMediaQueueInvalidItemID;

/**
 * A class representing a media queue item. Instances of this object are immutable.
 *
 * This class is used in two-way communication between a sender application and a receiver
 * application. The sender constructs them to load or insert a list of media items on the receiver
 * application. The @ref GCKMediaStatus from the receiver also contains the list of items
 * represented as instances of this class.
 *
 * Once loaded, the receiver will assign a unique item ID to each GCKMediaQueueItem, even if the
 * same media gets loaded multiple times.
 */
GCK_EXPORT
@interface GCKMediaQueueItem : NSObject <NSCopying>

/** The media information associated with this item. */
@property(nonatomic, strong, readonly) GCKMediaInformation *mediaInformation;

/** The item ID, or @ref kGCKMediaQueueInvalidItemID if one has not yet been assigned. */
@property(nonatomic, assign, readonly) GCKMediaQueueItemID itemID;

/**
 * Whether the item should automatically start playback when it becomes the current item in the
 * queue. If <code>NO</code>, the queue will pause when it reaches this item. The default value is
 * <code>YES</code>.
 * When using this item to load a media queue in @ref GCKMediaLoadRequestData, this property in the
 * first item only takes effect if @c autoplay in @ref GCKMediaLoadRequestData is nil.
 */
@property(nonatomic, assign, readonly) BOOL autoplay;

/**
 * The start time of the item, in seconds. The default value is @ref kGCKInvalidTimeInterval,
 * indicating that no start time has been set.
 */
@property(nonatomic, assign, readonly) NSTimeInterval startTime;

/**
 * The playback duration for the item, in seconds, or <code>INFINITY</code> if the stream's actual
 * duration should be used.
 */
@property(nonatomic, assign, readonly) NSTimeInterval playbackDuration;

/**
 * How long before the previous item ends, in seconds, before the receiver should start
 * preloading this item. The default value is @ref kGCKInvalidTimeInterval, indicating that no
 * preload time has been set.
 */
@property(nonatomic, assign, readonly) NSTimeInterval preloadTime;

/** The active track IDs for this item. */
@property(nonatomic, strong, readonly) NSArray<NSNumber *> *activeTrackIDs;

/** The custom data associated with this item, if any. */
@property(nonatomic, strong, readonly) id customData;

/**
 * Constructs a new GCKMediaQueueItem with the given attributes. See the documentation of the
 * corresponding properties for more information.
 *
 * @param mediaInformation The media information for the item.
 * @param autoplay The autoplay state for this item.
 * @param startTime The start time of the item, in seconds. May be
 * @ref kGCKInvalidTimeInterval if this item refers to a live stream or if the default start time
 * should be used.
 * @param preloadTime The preload time for the item, in seconds. May be @ref kGCKInvalidTimeInterval
 * to indicate no preload time.
 * @param activeTrackIDs The active track IDs for the item. May be <code>nil</code>.
 * @param customData Any custom data to associate with the item. May be <code>nil</code>.
 */
- (instancetype)initWithMediaInformation:(GCKMediaInformation *)mediaInformation
                                autoplay:(BOOL)autoplay
                               startTime:(NSTimeInterval)startTime
                             preloadTime:(NSTimeInterval)preloadTime
                          activeTrackIDs:(nullable NSArray<NSNumber *> *)activeTrackIDs
                              customData:(nullable id)customData;

/**
 * Designated initializer. Constructs a new GCKMediaQueueItem with the given attributes. See the
 * documentation of the corresponding properties for more information.
 *
 * @param mediaInformation The media information for the item.
 * @param autoplay The autoplay state for this item.
 * @param startTime The start time of the item, in seconds. May be @ref kGCKInvalidTimeInterval if
 * this item refers to a live stream or if the default start time should be used.
 * @param playbackDuration The playback duration of the item, in seconds. May be
 * @ref kGCKInvalidTimeInterval to indicate no preload time.
 * @param preloadTime The preload time for the item, in seconds.
 * @param activeTrackIDs The active track IDs for the item. May be <code>nil</code>.
 * @param customData Any custom data to associate with the item. May be <code>nil</code>.
 */
- (instancetype)initWithMediaInformation:(GCKMediaInformation *)mediaInformation
                                autoplay:(BOOL)autoplay
                               startTime:(NSTimeInterval)startTime
                        playbackDuration:(NSTimeInterval)playbackDuration
                             preloadTime:(NSTimeInterval)preloadTime
                          activeTrackIDs:(nullable NSArray<NSNumber *> *)activeTrackIDs
                              customData:(nullable id)customData
    /*NS_DESIGNATED_INITIALIZER*/;

/**
 * Clears (unassigns) the item ID. Should be called in order to reuse an existing instance, for
 * example, to add it back to a queue.
 */
- (void)clearItemID;

/**
 * Returns a copy of this GCKMediaQueueItem that has been modified by the given block.
 *
 * @param block A block that receives a GCKMediaQueueItemBuilder which can be used to modify
 * attributes of the copy. It is not necessary to call the builder's GCKMediaQueueItemBuilder::build
 * method within the block, as this method will do that automatically when the block completes.
 * @return A modified copy of this item.
 */
- (instancetype)mediaQueueItemModifiedWithBlock:(void (^)(GCKMediaQueueItemBuilder *builder))block;

@end

/**
 * A builder object for constructing new or derived GCKMediaQueueItem instances. The builder may be
 * used to derive a GCKMediaQueueItem from an existing one:
 *
 * @code
 * GCKMediaQueueItemBuilder *builder =
 *     [[GCKMediaQueueItemBuilder alloc] initWithMediaQueueItem:originalItem];
 * builder.startTime = 10; // Change the start time.
 * builder.autoplay = NO; // Change the autoplay flag.
 * GCKMediaQueueItem *derivedItem = [builder build];
 * @endcode
 *
 * It can also be used to construct a new GCKMediaQueueItem from scratch:
 *
 * @code
 * GCKMediaQueueItemBuilder *builder = [[GCKMediaQueueItemBuilder alloc] init];
 * builder.mediaInformation = ...;
 * builder.autoplay = ...;
 * // Set all other desired propreties...
 * GCKMediaQueueItem *newItem = [builder build];
 * @endcode
 */
GCK_EXPORT
@interface GCKMediaQueueItemBuilder : NSObject

/** The media information associated with this item. */
@property(nonatomic, copy, nullable) GCKMediaInformation *mediaInformation;

/**
 * Whether the item should automatically start playback when it becomes the current item in the
 * queue. If <code>NO</code>, the queue will pause when it reaches this item. The default value is
 * <code>YES</code>.
 */
@property(nonatomic, assign) BOOL autoplay;

/**
 * The start time of the item, in seconds. The default value is @ref kGCKInvalidTimeInterval,
 * indicating that a start time does not apply (for example, for a live stream) or that the default
 * start time should be used.
 */
@property(nonatomic, assign) NSTimeInterval startTime;

/**
 * The playback duration for the item, in seconds, or <code>INFINITY</code> if the stream's actual
 * duration should be used.
 */
@property(nonatomic, assign) NSTimeInterval playbackDuration;

/**
 * How long before the previous item ends, in seconds, before the receiver should start preloading
 * this item. The default value is @ref kGCKInvalidTimeInterval, indicating no preload time.
 */
@property(nonatomic, assign) NSTimeInterval preloadTime;

/** The active track IDs for this item. */
@property(nonatomic, copy, nullable) NSArray<NSNumber *> *activeTrackIDs;

/** The custom data associated with this item, if any. */
@property(nonatomic, copy, nullable) id customData;

/**
 * Constructs a new GCKMediaQueueItemBuilder with attributes initialized to default values.
 */
- (instancetype)init;

/**
 * Constructs a new GCKMediaQueueItemBuilder with attributes copied from the given
 * GCKMediaQueueItem, including the item ID.
 *
 * @param item The item to copy.
 */
- (instancetype)initWithMediaQueueItem:(nullable GCKMediaQueueItem *)item;

/**
 * Builds a GCKMediaQueueItem using the builder's current attributes.
 */
- (GCKMediaQueueItem *)build;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMediaQueueLoadOptions.h
================================================
// Copyright 2017 Google Inc.

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaCommon.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * Options for loading media queue items with GCKRemoteMediaClient.
 *
 * @since 4.3
 */
GCK_EXPORT
@interface GCKMediaQueueLoadOptions : NSObject <NSCopying, NSSecureCoding>

/**
 * Designated initializer. Initializes a GCKMediaLoadOptions with default values for all properties.
 */
- (instancetype)init;

/**
 * The index of the item in the queue items array that should be played first.
 */
@property(nonatomic, assign) NSUInteger startIndex;

/**
 * The initial playback position for the first item in the queue items array when it is first
 * played, relative to the beginning of the stream. This value is ignored when the same item is
 * played again, for example when the queue repeats, or the item is later jumped to. In those
 * cases the item's startTime is used.
 */
@property(nonatomic, assign) NSTimeInterval playPosition;

/**
 * The repeat mode for playing the queue.
 */
@property(nonatomic, assign) GCKMediaRepeatMode repeatMode;

/**
 * Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 */
@property(nonatomic, strong, nullable) id customData;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMediaRequestItem.h
================================================

// Copyright 2017 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

#import <GoogleCast/GCKHLSSegmentFormat.h>

/**
 * @file GCKMediaRequestItem.h
 * GCKStreamingProtocolType enum.
 */

NS_ASSUME_NONNULL_BEGIN

/** Media streaming protocol types. */
typedef NS_ENUM(NSInteger, GCKStreamingProtocolType) {
  /** Unknown streaming protocol. CAF receivers won't precache if protocol is unknown. */
  GCKStreamingProtocolTypeUnknown = 0,
  /** MPEG DASH protocol. CAF receivers will precache DASH contents only if MPL is used. */
  GCKStreamingProtocolTypeMPEGDASH = 1,
  /** HLS protocol. */
  GCKStreamingProtocolTypeHLS = 2,
  /** Smooth Streaming protocol. */
  GCKStreamingProtocolTypeSmoothStreaming = 3,
};

/**
 * A class representing a request item sent to Cast receivers. It can be used for precaching media
 * contents.
 *
 * @since 4.0
 */
GCK_EXPORT
@interface GCKMediaRequestItem : NSObject <NSCopying, NSSecureCoding>

/**
 * Helper to convert from <code>GCKHLSSegmentFormat</code> to <code>NSString</code>
 *
 * @since 4.1
 */
+ (NSString *)mapHLSSegmentFormatToString:(GCKHLSSegmentFormat)hlsSegmentFormat
    GCK_DEPRECATED("Use GCKHLSSegment::mapHLSSegmentFormatToString.");

/**
 * Helper to convert from <code>NSString</code> to <code>GCKHLSSegmentFormat</code>
 *
 * @since 4.1
 */
+ (GCKHLSSegmentFormat)mapHLSSegmentFormatStringToEnum:(NSString *)hlsSegmentFormatString
    GCK_DEPRECATED("Use GCKHLSSegment::mapHLSSegmentFormatStringToEnum.");

/**
 * Designated initializer. Initializes a GCKMediaRequestItem with URL, protocol type, initial time,
 * and HLS segment type.
 */
- (instancetype)initWithURL:(NSURL *)url
               protocolType:(GCKStreamingProtocolType)protocolType
                initialTime:(NSTimeInterval)initialTime
           hlsSegmentFormat:(GCKHLSSegmentFormat)hlsSegmentFormat;

/**
 * Convenience initializer. Initializes a GCKMediaRequestItem with URL and protocol type and use
 * default values for other properties.
 */
- (instancetype)initWithURL:(NSURL *)url protocolType:(GCKStreamingProtocolType)protocolType;

/**
 * The URL of media content.
 */
@property(nonatomic, strong) NSURL *mediaURL;

/**
 * The media streaming protocol.
 */
@property(nonatomic, assign) GCKStreamingProtocolType protocolType;

/**
 * The initial time of media to precache. The default is 0.0.
 */
@property(nonatomic, assign) NSTimeInterval initialTime;

/**
 * The HLS segment format. It's required if protocolType == GCKStreamingProtocolTypeHLS. The default
 * is GCKHLSSegmentFormatUndefined.
 */
@property(nonatomic, assign) GCKHLSSegmentFormat hlsSegmentFormat;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMediaSeekOptions.h
================================================
// Copyright 2017 Google Inc.

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaCommon.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * Options for seeking within media with GCKRemoteMediaClient.
 *
 * @since 4.0
 */
GCK_EXPORT
@interface GCKMediaSeekOptions : NSObject <NSCopying, NSSecureCoding>

/**
 * Designated initializer. Initializes a GCKMediaSeekOptions with default values for all properties.
 */
- (instancetype)init;

/**
 * The time interval by which to seek. The default value is <code>0</code>.
 */
@property(nonatomic, assign) NSTimeInterval interval;

/**
 * Whether the time interval is relative to the current stream position (<code>YES</code>) or to the
 * beginning of the stream (<code>NO</code>). The default value is <code>NO</code>, indicating an
 * absolute seek position.
 */
@property(nonatomic, assign) BOOL relative;

/**
 * The action to take after the seek operation has finished. The default value is
 * GCKMediaResumeStateUnchanged.
 */
@property(nonatomic, assign) GCKMediaResumeState resumeState;

/**
 * Whether seek to end of stream or live.
 *
 * @since 4.4.1
 */
@property(nonatomic, assign) BOOL seekToInfinite;

/**
 * Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 */
@property(nonatomic, strong, nullable) id customData;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMediaStatus.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKAdBreakStatus.h>
#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaCommon.h>

#import <Foundation/Foundation.h>

@class GCKMediaInformation;
@class GCKMediaQueueData;
@class GCKMediaQueueItem;
@class GCKMediaLiveSeekableRange;
@class GCKVideoInfo;

/**
 * @file GCKMediaStatus.h
 * GCKMediaPlayerState and GCKMediaPlayerIdleReason enums.
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * A flag (bitmask) indicating that a media item can be paused.
 *
 * @memberof GCKMediaStatus
 */
GCK_EXTERN const NSInteger kGCKMediaCommandPause;

/**
 * A flag (bitmask) indicating that a media item supports seeking.
 *
 * @memberof GCKMediaStatus
 */
GCK_EXTERN const NSInteger kGCKMediaCommandSeek;

/**
 * A flag (bitmask) indicating that a media item's audio volume can be changed.
 *
 * @memberof GCKMediaStatus
 */
GCK_EXTERN const NSInteger kGCKMediaCommandSetVolume;

/**
 * A flag (bitmask) indicating that a media item's audio can be muted.
 *
 * @memberof GCKMediaStatus
 */
GCK_EXTERN const NSInteger kGCKMediaCommandToggleMute;

/**
 * A flag (bitmask) indicating that a media item supports skipping forward.
 *
 * @memberof GCKMediaStatus
 */
GCK_EXTERN const NSInteger kGCKMediaCommandSkipForward;

/**
 * A flag (bitmask) indicating that a media item supports skipping backward.
 *
 * @memberof GCKMediaStatus
 */
GCK_EXTERN const NSInteger kGCKMediaCommandSkipBackward;

/**
 * A flag (bitmask) indicating that a media item supports moving to the next item in the queue.
 *
 * @memberof GCKMediaStatus
 */
GCK_EXTERN const NSInteger kGCKMediaCommandQueueNext;

/**
 * A flag (bitmask) indicating that a media item supports moving to the previous item in the
 * queue.
 *
 * @memberof GCKMediaStatus
 */
GCK_EXTERN const NSInteger kGCKMediaCommandQueuePrevious;

/**
 * A flag (bitmask) indicating that a media item supports shuffling.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandQueueShuffle;

/**
 * A flag (bitmask) indicating that a media item supports ad skipping.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandSkipAd;

/**
 * A flag (bitmask) indicating that a media item's queue supports indefinite repetition.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandQueueRepeatAll;

/**
 * A flag (bitmask) indicating that a media item supports indefinite repetition.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandQueueRepeatOne;

/**
 * A flag (bitmask) indicating that a media item and its queue support indefinite repetition.
 * queued items.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandQueueRepeat;

/**
 * A flag (bitmask) indicating that a media item's tracks are editable.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandEditTracks;

/**
 * A flag (bitmask) indicating that a media item's playback rate is configurable.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandSetPlaybackRate;

/**
 * A flag (bitmask) indicating that a media item can be liked by a user.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandLike;

/**
 * A flag (bitmask) indicating that a media item can be disliked by a user.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandDislike;

/**
 * A flag (bitmask) indicating that a media item's creator can be followed by a user.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandFollow;

/**
 * A flag (bitmask) indicating that a media item's creator can be unfollowed by a user.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandUnfollow;

/**
 * A flag (bitmask) indicating that a media item supports stream transfer.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandStreamTransfer;

/**
 * @enum GCKMediaPlayerState
 * Media player states.
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKMediaPlayerState) {
  /** Constant indicating unknown player state. */
  GCKMediaPlayerStateUnknown = 0,
  /** Constant indicating that the media player is idle. */
  GCKMediaPlayerStateIdle = 1,
  /** Constant indicating that the media player is playing. */
  GCKMediaPlayerStatePlaying = 2,
  /** Constant indicating that the media player is paused. */
  GCKMediaPlayerStatePaused = 3,
  /** Constant indicating that the media player is buffering. */
  GCKMediaPlayerStateBuffering = 4,
  /** Constant indicating that the media player is loading media. */
  GCKMediaPlayerStateLoading = 5,
};

/**
 * @enum GCKMediaPlayerIdleReason
 * Media player idle reasons.
 */
typedef NS_ENUM(NSInteger, GCKMediaPlayerIdleReason) {
  /** Constant indicating that the player currently has no idle reason. */
  GCKMediaPlayerIdleReasonNone = 0,

  /** Constant indicating that the player is idle because playback has finished. */
  GCKMediaPlayerIdleReasonFinished = 1,

  /**
   * Constant indicating that the player is idle because playback has been cancelled in
   * response to a STOP command.
   */
  GCKMediaPlayerIdleReasonCancelled = 2,

  /**
   * Constant indicating that the player is idle because playback has been interrupted by
   * a LOAD command.
   */
  GCKMediaPlayerIdleReasonInterrupted = 3,

  /** Constant indicating that the player is idle because a playback error has occurred. */
  GCKMediaPlayerIdleReasonError = 4,
};

/**
 * A class that holds status information about some media.
 */
GCK_EXPORT
@interface GCKMediaStatus : NSObject <NSCopying>

/**
 * The current media session ID, if any; otherwise 0.
 */
@property(nonatomic, assign, readonly) NSInteger mediaSessionID;

/**
 * The current player state.
 */
@property(nonatomic, assign, readonly) GCKMediaPlayerState playerState;

/**
 * Indicates whether the receiver is currently playing an ad.
 *
 * @deprecated Use @ref adBreakStatus instead.
 */
@property(nonatomic, assign, readonly) BOOL playingAd;

/**
 * The current idle reason. This value is only meaningful if the player state is
 * GCKMediaPlayerStateIdle.
 */
@property(nonatomic, assign, readonly) GCKMediaPlayerIdleReason idleReason;

/**
 * Gets the current stream playback rate. This will be negative if the stream is seeking
 * backwards, 0 if the stream is paused, 1 if the stream is playing normally, and some other
 * positive value if the stream is seeking forwards.
 */
@property(nonatomic, assign, readonly) float playbackRate;

/**
 * The GCKMediaInformation for this item.
 */
@property(nonatomic, strong, readonly, nullable) GCKMediaInformation *mediaInformation;

/**
 * The current stream position, as an NSTimeInterval from the start of the stream.
 */
@property(nonatomic, assign, readonly) NSTimeInterval streamPosition;

/**
 * The stream's volume.
 */
@property(nonatomic, assign, readonly) float volume;

/**
 * The stream's mute state.
 */
@property(nonatomic, assign, readonly) BOOL isMuted;

/**
 * The current queue repeat mode.
 */
@property(nonatomic, assign, readonly) GCKMediaRepeatMode queueRepeatMode;

/**
 * The ID of the current queue item, if any.
 */
@property(nonatomic, assign, readonly) NSUInteger currentItemID;

/**
 * Whether there is a current item in the queue.
 */
@property(nonatomic, assign, readonly) BOOL queueHasCurrentItem;

/**
 * The current queue item, if any.
 */
@property(nonatomic, weak, readonly, nullable) GCKMediaQueueItem *currentQueueItem;

/**
 * Checks if there is an item after the currently playing item in the queue.
 */
@property(nonatomic, assign, readonly) BOOL queueHasNextItem;

/**
 * The next queue item, if any.
 */
@property(nonatomic, weak, readonly, nullable) GCKMediaQueueItem *nextQueueItem;

/**
 * Whether there is an item before the currently playing item in the queue.
 */
@property(nonatomic, assign, readonly) BOOL queueHasPreviousItem;

/**
 * Whether there is an item being preloaded in the queue.
 */
@property(nonatomic, assign, readonly) BOOL queueHasLoadingItem;

/**
 * The ID of the item that is currently preloaded, if any.
 */
@property(nonatomic, assign, readonly) NSUInteger preloadedItemID;

/**
 * The ID of the item that is currently loading, if any.
 */
@property(nonatomic, assign, readonly) NSUInteger loadingItemID;

/**
 * The list of active track IDs.
 */
@property(nonatomic, strong, readonly, nullable) NSArray<NSNumber *> *activeTrackIDs;

/**
 * The video information, if any.
 *
 * @since 3.3
 */
@property(nonatomic, strong, readonly, nullable) GCKVideoInfo *videoInfo;

/**
 * Any custom data that is associated with the media status.
 */
@property(nonatomic, strong, readonly, nullable) id customData;

/**
 * The current ad playback status.
 *
 * @since 3.3
 */
@property(nonatomic, strong, readonly, nullable) GCKAdBreakStatus *adBreakStatus;

/**
 * The seekable range of a stream.
 *
 * @since 4.4.1
 */
@property(nonatomic, readonly, nullable) GCKMediaLiveSeekableRange *liveSeekableRange;

/**
 * The media queue's metadata.
 *
 * @since 4.4.1
 */
@property(nonatomic, readonly, nullable) GCKMediaQueueData *queueData;

/**
 * Designated initializer.
 *
 * @param mediaSessionID The media session ID.
 * @param mediaInformation The media information.
 */
- (instancetype)initWithSessionID:(NSInteger)mediaSessionID
                 mediaInformation:(nullable GCKMediaInformation *)mediaInformation;

/**
 * Checks if the stream supports a given control command.
 */
- (BOOL)isMediaCommandSupported:(NSInteger)command;

/**
 * Returns the number of items in the playback queue.
 */
@property(nonatomic, assign, readonly) NSUInteger queueItemCount;

/**
 * Returns the item at the specified index in the playback queue.
 */
- (nullable GCKMediaQueueItem *)queueItemAtIndex:(NSUInteger)index;

/**
 * Returns the item with the given item ID in the playback queue.
 */
- (nullable GCKMediaQueueItem *)queueItemWithItemID:(NSUInteger)itemID;

/**
 * Returns the index of the item with the given item ID in the playback queue, or -1 if there is
 * no such item in the queue.
 */
- (NSInteger)queueIndexForItemID:(NSUInteger)itemID;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMediaTextTrackStyle.h
================================================
// Copyright 2014 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <CoreGraphics/CoreGraphics.h>
#import <Foundation/Foundation.h>

@class GCKColor;

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKMediaTextTrackStyleEdgeType
 * Closed caption text edge types (font effects).
 */
typedef NS_ENUM(NSInteger, GCKMediaTextTrackStyleEdgeType) {
  /** Unknown edge type. */
  GCKMediaTextTrackStyleEdgeTypeUnknown = -1,
  /** None. */
  GCKMediaTextTrackStyleEdgeTypeNone = 0,
  /** Outline. */
  GCKMediaTextTrackStyleEdgeTypeOutline = 1,
  /** Drop shadow. */
  GCKMediaTextTrackStyleEdgeTypeDropShadow = 2,
  /** Raised. */
  GCKMediaTextTrackStyleEdgeTypeRaised = 3,
  /** Depressed. */
  GCKMediaTextTrackStyleEdgeTypeDepressed = 4,
};

/**
 * @enum GCKMediaTextTrackStyleWindowType
 * Closed caption window types.
 */
typedef NS_ENUM(NSInteger, GCKMediaTextTrackStyleWindowType) {
  /** Unknown window type. */
  GCKMediaTextTrackStyleWindowTypeUnknown = -1,
  /** None. */
  GCKMediaTextTrackStyleWindowTypeNone = 0,
  /** Normal. */
  GCKMediaTextTrackStyleWindowTypeNormal = 1,
  /** Rounded corners. */
  GCKMediaTextTrackStyleWindowTypeRoundedCorners = 2,
};

/**
 * @enum GCKMediaTextTrackStyleFontGenericFamily
 * Closed caption text generic font families.
 */
typedef NS_ENUM(NSInteger, GCKMediaTextTrackStyleFontGenericFamily) {
  /** Unknown font family. */
  GCKMediaTextTrackStyleFontGenericFamilyUnknown = -1,
  /** None. */
  GCKMediaTextTrackStyleFontGenericFamilyNone = 0,
  /** Sans serif. */
  GCKMediaTextTrackStyleFontGenericFamilySansSerif = 1,
  /** Monospaced sans serif. */
  GCKMediaTextTrackStyleFontGenericFamilyMonospacedSansSerif = 2,
  /** Serif. */
  GCKMediaTextTrackStyleFontGenericFamilySerif = 3,
  /** Monospaced serif. */
  GCKMediaTextTrackStyleFontGenericFamilyMonospacedSerif = 4,
  /** Casual. */
  GCKMediaTextTrackStyleFontGenericFamilyCasual = 5,
  /** Cursive. */
  GCKMediaTextTrackStyleFontGenericFamilyCursive = 6,
  /** Small Capitals. */
  GCKMediaTextTrackStyleFontGenericFamilySmallCapitals = 7,
};

/**
 * @enum GCKMediaTextTrackStyleFontStyle
 * Closed caption text font styles.
 */
typedef NS_ENUM(NSInteger, GCKMediaTextTrackStyleFontStyle) {
  /** Unknown font style. */
  GCKMediaTextTrackStyleFontStyleUnknown = -1,
  /** Normal. */
  GCKMediaTextTrackStyleFontStyleNormal = 0,
  /** Bold. */
  GCKMediaTextTrackStyleFontStyleBold = 1,
  /** Italic. */
  GCKMediaTextTrackStyleFontStyleItalic = 2,
  /** Bold italic. */
  GCKMediaTextTrackStyleFontStyleBoldItalic = 3,
};

/**
 * A class representing a style for a text media track.
 */
GCK_EXPORT
@interface GCKMediaTextTrackStyle : NSObject <NSCopying, NSSecureCoding>

/**
 * Designated initializer. All properties are mutable and so can be supplied after construction.
 */
- (instancetype)init;

/**
 * Creates an instance with default values based on the system's closed captioning settings. This
 * method will return nil on systems older than iOS 7.
 */
+ (instancetype)createDefault;

/** The font scaling factor for the text. */
@property(nonatomic, assign) CGFloat fontScale;

/** The foreground color. */
@property(nonatomic, copy, nullable) GCKColor *foregroundColor;

/** The background color. */
@property(nonatomic, copy, nullable) GCKColor *backgroundColor;

/** The edge type. */
@property(nonatomic, assign) GCKMediaTextTrackStyleEdgeType edgeType;

/** The edge color. */
@property(nonatomic, copy, nullable) GCKColor *edgeColor;

/** The window type. <i>Some receiver devices may not support this attribute.</i> */
@property(nonatomic, assign) GCKMediaTextTrackStyleWindowType windowType;

/** The window color. <i>Some receiver devices may not support this attribute.</i> */
@property(nonatomic, copy, nullable) GCKColor *windowColor;

/**
 * Rounded corner radius absolute value in pixels.
 * <i>Some receiver devices may not support this attribute.</i>
 */
@property(nonatomic, assign) CGFloat windowRoundedCornerRadius;

/** The font family; if the font is not available, the generic font family will be used. **/
@property(nonatomic, copy, nullable) NSString *fontFamily;

/** The generic font family. */
@property(nonatomic, assign) GCKMediaTextTrackStyleFontGenericFamily fontGenericFamily;

/** The font style. */
@property(nonatomic, assign) GCKMediaTextTrackStyleFontStyle fontStyle;

/** The custom data, if any. */
@property(nonatomic, strong, nullable) id customData;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMediaTrack.h
================================================
// Copyright 2014 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/**
 * @file GCKMediaTrack.h
 * GCKMediaTrackType and GCKMediaTextTrackSubtype enums.
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKMediaTrackType
 * Media track types.
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKMediaTrackType) {
  /** Unknown track type. */
  GCKMediaTrackTypeUnknown = 0,
  /** Text. */
  GCKMediaTrackTypeText = 1,
  /** Audio. */
  GCKMediaTrackTypeAudio = 2,
  /** Video. */
  GCKMediaTrackTypeVideo = 3,
};

/**
 * @enum GCKMediaTextTrackSubtype
 * Media text track subtypes.
 */
typedef NS_ENUM(NSInteger, GCKMediaTextTrackSubtype) {
  /** Unknown text track subtype. */
  GCKMediaTextTrackSubtypeUnknown = 0,
  /** Subtitles. */
  GCKMediaTextTrackSubtypeSubtitles = 1,
  /** Captions. */
  GCKMediaTextTrackSubtypeCaptions = 3,
  /** Descriptions. */
  GCKMediaTextTrackSubtypeDescriptions = 4,
  /** Chapters. */
  GCKMediaTextTrackSubtypeChapters = 5,
  /** Metadata. */
  GCKMediaTextTrackSubtypeMetadata = 6,
};

/**
 * A class representing a media track. Instances of this object are immutable.
 */
GCK_EXPORT
@interface GCKMediaTrack : NSObject <NSCopying, NSSecureCoding>

/**
 * Designated initializer. Constructs a new GCKMediaTrack with the given property values.
 * Can return a <code>nil</code> value.
 */
- (nullable instancetype)initWithIdentifier:(NSInteger)identifier
                          contentIdentifier:(nullable NSString *)contentIdentifier
                                contentType:(NSString *)contentType
                                       type:(GCKMediaTrackType)type
                                textSubtype:(GCKMediaTextTrackSubtype)textSubtype
                                       name:(nullable NSString *)name
                               languageCode:(nullable NSString *)languageCode
                                 customData:(nullable id)customData;

/** The track's unique numeric identifier. */
@property(nonatomic, assign, readonly) NSInteger identifier;

/** The track's content identifier, which may be <code>nil</code>. */
@property(nonatomic, copy, readonly, nullable) NSString *contentIdentifier;

/** The track's content (MIME) type. */
@property(nonatomic, copy, readonly) NSString *contentType;

/** The track's type. */
@property(nonatomic, assign, readonly) GCKMediaTrackType type;

/** The text track's subtype; applies only to text tracks. */
@property(nonatomic, assign, readonly) GCKMediaTextTrackSubtype textSubtype;

/** The track's name, which may be <code>nil</code>. */
@property(nonatomic, copy, readonly, nullable) NSString *name;

/** The track's RFC 1766 language code, which may be <code>nil</code>. */
@property(nonatomic, copy, readonly, nullable) NSString *languageCode;

/**
 * The custom data, if any. Must either be an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 */
@property(nonatomic, strong, readonly, nullable) id customData;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMultizoneDevice.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDynamicDevice.h>

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A member device of a multizone group.
 *
 * @since 3.1
 */
GCK_EXPORT
@interface GCKMultizoneDevice : GCKDynamicDevice <NSCopying, NSSecureCoding>

/** The device volume level. */
@property(nonatomic, assign, readonly) float volumeLevel;

/** Whether the device is muted. */
@property(nonatomic, assign, readonly) BOOL muted;

- (instancetype)init NS_UNAVAILABLE;

@end  // GCKMultizoneDevice

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKMultizoneStatus.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKMultizoneDevice;

NS_ASSUME_NONNULL_BEGIN

/**
 * The status of a multizone group.
 *
 * @since 3.1
 */
GCK_EXPORT
@interface GCKMultizoneStatus : NSObject <NSCopying, NSSecureCoding>

/** The member devices of the multizone group. */
@property(nonatomic, copy, readonly) NSArray<GCKMultizoneDevice *> *devices;

/** Initializes the object with the given JSON data. */
- (instancetype)initWithJSONObject:(id)JSONObject
    GCK_DEPRECATED("GCKMultizoneStatus should only be initialized internally.");

/** Initializes the object with the given list of member devices. */
- (instancetype)initWithDevices:(NSArray<GCKMultizoneDevice *> *)devices
    GCK_DEPRECATED("GCKMultizoneStatus should only be initialized internally.");

- (instancetype)init NS_UNAVAILABLE;

@end  // GCKMultizoneStatus

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKNetworkAddress.h
================================================
// Copyright (c) 2018 Google Inc. All rights reserved.

#import <Foundation/Foundation.h>
#import <GoogleCast/GCKDefines.h>

/**
 * @enum GCKNetworkAddressType
 *
 * Network address types.
 *
 * @ingroup Networking
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKNetworkAddressType) {
  /** Unknown address type. */
  GCKNetworkAddressTypeUnknown = 0,
  /** IPv4 address. */
  GCKNetworkAddressTypeIPv4 = 1,
  /** IPv6 address. */
  GCKNetworkAddressTypeIPv6 = 2,
  /** IPC (UNIX domain) address. */
  GCKNetworkAddressTypeIPC = 3,
};

NS_ASSUME_NONNULL_BEGIN

/**
 * An object that represents a network IP address. This object is immutable.
 *
 * @ingroup Networking
 *
 * @since 4.2
 */
GCK_EXPORT
@interface GCKNetworkAddress : NSObject <NSCopying, NSSecureCoding>

/** The address type. */
@property(nonatomic, assign, readonly) GCKNetworkAddressType type;
/** The IP address. */
@property(nonatomic, copy, readonly, nullable) NSString *ipAddress;
/**
 * The network address as an NSData containing the appropriate address structure
 * (e.g., struct in_addr or struct in6_addr). For the address type IPC, this field is a UTF8
 * encoding.
 */
@property(nonatomic, copy, readonly, nullable) NSData *addressData;

/** Using the default initializer is not allowed. */
- (instancetype)init NS_UNAVAILABLE;

/**
 * Constructs a GCKNetworkAddress with the given address type and IP address.
 *
 * @param type The address type.
 * @param ipAddress The IP address, in textual form. May be <code>nil</code> to indicate the
 *     wildcard ("any") address.
 */
- (instancetype)initWithType:(GCKNetworkAddressType)type ipAddress:(nullable NSString *)ipAddress;

/**
 * Constructs a GCKNetworkAddress with the given address type and raw address.
 *
 * @param type The address type.
 * @param addressData An NSData object containing the appropriate address structure (e.g.,
 *     struct in_addr or struct in6_addr). For the GCKNNetworkAddressTypeIPC, the data is expected
 * to be a UTF8 encoding.
 */
- (instancetype)initWithType:(GCKNetworkAddressType)type addressData:(nullable NSData *)addressData;

/**
 * Constructs a wildcard address of the given type.
 */
+ (GCKNetworkAddress *)wildcardAddressOfType:(GCKNetworkAddressType)type;

/**
 * Constructs a loopback address of the given type.
 */
+ (GCKNetworkAddress *)loopbackAddressOfType:(GCKNetworkAddressType)type;

/**
 * Constructs an IPv4 broadcast address.
 */
+ (GCKNetworkAddress *)IPv4BroadcastAddress;

/**
 * Constructs an IPv4 address.
 */
+ (GCKNetworkAddress *)addressWithIPv4Address:(NSString *)ipAddress;

/**
 * Constructs an IPv6 address.
 */
+ (GCKNetworkAddress *)addressWithIPv6Address:(NSString *)ipAddress;

/**
 * Constructs an IPC address.
 */
+ (GCKNetworkAddress *)addressWithIPCPath:(NSString *)path;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKOpenURLOptions.h
================================================
// Copyright 2017 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * An object representing options that can be passed to a Cast-enabled application via a deep-link
 * URL. The source app encodes the Cast-specific options (including the unique ID of the
 * device to cast to, and optionally the session ID of a specific Cast session to join) in a query
 * parameter of the application URL using #asURLQueryItem, and then opens the URL using
 * UIApplication's <code>-[openURL:options:completionHandler:]</code> method. The target app
 * extracts the  Cast-specific options from the URL it receives in its UIApplicationDelegate's
 * <code>-[application:openURL:options:]</code> method by calling
 * GCKOpenURLOptions::openURLOptionsFromURL:.
 * It then starts or joins a Cast session by passing these options to
 * GCKSessionManager::startSessionWithOpenURLOptions:sessionOptions:.
 *
 * @since 4.0
 */
GCK_EXPORT
@interface GCKOpenURLOptions : NSObject<NSCopying, NSSecureCoding>

/**
 * The unique ID of the device to connect to. Required.
 */
@property(nonatomic, copy, nullable) NSString *deviceUniqueID;

/**
 * The friendly name of the device to connect to. Optional. This value is not used by the GoogleCast
 * framework, but may be of interest to the receiving application.
 */
@property(nonatomic, copy, nullable) NSString *deviceFriendlyName;

/**
 * The session ID of the Cast session to join. Optional. A value of <code>nil</code> indicates that
 * any currently active session should be joined, or if there is none, that a new one should be
 * created.
 */
@property(nonatomic, copy, nullable) NSString *sessionID;

/**
 * Extracts the Cast-specific options from the specified URL.
 *
 * @return The extracted options, or <code>nil</code> if the URL did not contain any Cast-specific
 * options.
 */
+ (nullable GCKOpenURLOptions *)openURLOptionsFromURL:(NSURL *)url;

/**
 * Converts the options into a URL query item.
 *
 * @return The options as an NSURLQueryItem.
 */
- (NSURLQueryItem *)asURLQueryItem;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKRemoteMediaClient+Protected.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKRemoteMediaClient.h>

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * Methods to be called by GCKRemoteMediaClient subclasses only.
 *
 * @since 3.3
 */
@interface GCKRemoteMediaClient (Protected)

/**
 * To be called by subclasses whenever a media session begins, namely, right after new media has
 * been successfully loaded on the remote player.
 */
- (void)notifyDidStartMediaSession;

/**
 * To be called by subclasses whenever the mediaStatus object of the client changes.
 */
- (void)notifyDidUpdateMediaStatus;

/**
 * To be called by subclasses whenever the media queue managed by the client changes.
 */
- (void)notifyDidUpdateQueue;

/**
 * To be called by subclasses whenever the @ref GCKMediaStatus::preloadedItemID of the client's
 * GCKMediaStatus changes.
 */
- (void)notifyDidUpdatePreloadStatus;

/**
 * To be called by subclasses whenever the metadata changes.
 */
- (void)notifyDidUpdateMetadata;

/**
 * To be called by subclasses whenever the list of media queue item IDs is received.
 *
 * @param itemIDs The list of queue item IDs.
 *
 * @since 4.1
 */
- (void)notifyDidReceiveQueueItemIDs:(NSArray<NSNumber *> *)itemIDs;

/**
 * To be called by subclasses whenever a contiguous sequence of queue items has been inserted
 * into the queue.
 *
 * @param itemIDs The list of queue item IDs identifying the items that were inserted.
 * @param beforeItemID The ID of the queue item in front of which the new items were inserted, or
 * kGCKInvalidQueueItemID if the items were appended to the end of the queue.
 *
 * @since 4.1
 */
- (void)notifyDidInsertQueueItemsWithIDs:(NSArray<NSNumber *> *)itemIDs
                        beforeItemWithID:(GCKMediaQueueItemID)beforeItemID;

/**
 * To be called by subclasses whenever existing queue items have been updated in the queue.
 *
 * @param itemIDs The list of queue item IDs identifying the items that were updated.
 *
 * @since 4.1
 */
- (void)notifyDidUpdateQueueItemsWithIDs:(NSArray<NSNumber *> *)itemIDs;

/**
 * To be called by subclasses whenever a contiguous sequence of queue items has been removed
 * from the queue.
 *
 * @param itemIDs The list of queue item IDs identifying the items that were removed.
 *
 * @since 4.1
 */
- (void)notifyDidRemoveQueueItemsWithIDs:(NSArray<NSNumber *> *)itemIDs;

/**
 * To be called by a subclass whenever queue items have been received.
 *
 * @param items The list of queue items.
 *
 * @since 4.1
 */
- (void)notifyDidReceiveQueueItems:(NSArray<GCKMediaQueueItem *> *)items;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKRemoteMediaClient.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaCommon.h>
#import <GoogleCast/GCKMediaInformation.h>
#import <GoogleCast/GCKMediaMetadata.h>
#import <GoogleCast/GCKMediaQueue.h>
#import <GoogleCast/GCKMediaQueueItem.h>
#import <GoogleCast/GCKMediaStatus.h>
#import <GoogleCast/GCKRequest.h>

#import <Foundation/Foundation.h>

@class GCKMediaLoadOptions;
@class GCKMediaLoadRequestData;
@class GCKMediaQueueLoadOptions;
@class GCKMediaSeekOptions;
@protocol GCKRemoteMediaClientListener;
@protocol GCKRemoteMediaClientAdInfoParserDelegate;

NS_ASSUME_NONNULL_BEGIN


/**
 * A class for controlling media playback on a Cast receiver. An instance of this object is
 * available as the property GCKSession::remoteMediaClient.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKRemoteMediaClient : NSObject

/** A flag that indicates whether this object is connected to a session. */
@property(nonatomic, assign, readonly) BOOL connected;

/** The current media status, as reported by the media control channel. */
@property(nonatomic, strong, readonly, nullable) GCKMediaStatus *mediaStatus;

/**
 * The media queue.
 *
 * @since 4.3.4
 */
@property(nonatomic, strong, readonly) GCKMediaQueue *mediaQueue;

/**
 * The amount of time that has passed since the last media status update was received. If a
 * media status has not been received yet this value will be NAN.
 */
@property(nonatomic, assign, readonly) NSTimeInterval timeSinceLastMediaStatusUpdate;

/**
 * A flag that indicates whether this client is playing a live stream.
 *
 * @since 4.4.1
 */
@property(nonatomic, readonly, getter=isPlayingLiveStream) BOOL playingLiveStream;

/**
 * Adds a listener to this object's list of listeners.
 *
 * The added listener is weakly held, and should be retained to avoid unexpected deallocation.
 *
 * @param listener The listener to add.
 */
- (void)addListener:(id<GCKRemoteMediaClientListener>)listener;

/**
 * Removes a listener from this object's list of listeners.
 *
 * @param listener The listener to remove.
 */
- (void)removeListener:(id<GCKRemoteMediaClientListener>)listener;

/**
 * A delegate capable of extracting ad break information from the custom data in a GCKMediaStatus
 * object.
 *
 * @deprecated Use GCKAdBreakStatus instead.
 */
@property(nonatomic, weak) id<GCKRemoteMediaClientAdInfoParserDelegate> adInfoParserDelegate;

/**
 * Loads and starts playback of a media item or a queue of media items with a request data.
 *
 * @param requestData Describes the media load request.
 * @return The GCKRequest object for tracking this request.
 *
 * @since 4.4.1
 */
- (GCKRequest *)loadMediaWithLoadRequestData:(GCKMediaLoadRequestData *)requestData;

/**
 * Loads and starts playback of a new media item with default options.
 *
 * It is recommended to use @ref loadMediaWithLoadRequestData: instead, which is an advanced
 * load command supporting loading a single item or a queue with additional options.
 *
 * @param mediaInfo Describes the media item to load.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)loadMedia:(GCKMediaInformation *)mediaInfo;

/**
 * Loads and starts playback of a new media item with the specified options.
 *
 * It is recommended to use @ref loadMediaWithLoadRequestData:  instead, which is an advanced
 * load command supporting loading a single item or a queue with additional options.
 *
 * @param mediaInfo Describes the media item to load.
 * @param options The load options for this request.
 * @return The GCKRequest object for tracking this request.
 *
 * @since 4.0
 */
- (GCKRequest *)loadMedia:(GCKMediaInformation *)mediaInfo
              withOptions:(GCKMediaLoadOptions *)options;

/**
 * Loads and optionally starts playback of a new media item.
 *
 * @param mediaInfo Describes the media item to load.
 * @param autoplay Whether playback should start immediately.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use loadMediaWithLoadRequestData:.
 */
- (GCKRequest *)loadMedia:(GCKMediaInformation *)mediaInfo
                 autoplay:(BOOL)autoplay GCK_DEPRECATED("Use loadMediaWithLoadRequestData:");

/**
 * Loads and optionally starts playback of a new media item.
 *
 * @param mediaInfo Describes the media item to load.
 * @param autoplay Whether playback should start immediately.
 * @param playPosition The initial playback position.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use loadMediaWithLoadRequestData:.
 */
- (GCKRequest *)loadMedia:(GCKMediaInformation *)mediaInfo
                 autoplay:(BOOL)autoplay
             playPosition:(NSTimeInterval)playPosition
    GCK_DEPRECATED("Use loadMediaWithLoadRequestData:");

/**
 * Loads and optionally starts playback of a new media item.
 *
 * @param mediaInfo Describes the media item to load.
 * @param autoplay Whether playback should start immediately.
 * @param playPosition The initial playback position.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use loadMediaWithLoadRequestData:.
 */
- (GCKRequest *)loadMedia:(GCKMediaInformation *)mediaInfo
                 autoplay:(BOOL)autoplay
             playPosition:(NSTimeInterval)playPosition
               customData:(nullable id)customData
    GCK_DEPRECATED("Use loadMediaWithLoadRequestData:");

/**
 * Loads and optionally starts playback of a new media item.
 *
 * @param mediaInfo Describes the media item to load.
 * @param autoplay Whether playback should start immediately.
 * @param playPosition The initial playback position.
 * @param activeTrackIDs An array of integers specifying the active tracks.
 * May be <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use loadMediaWithLoadRequestData:.
 */
- (GCKRequest *)loadMedia:(GCKMediaInformation *)mediaInfo
                 autoplay:(BOOL)autoplay
             playPosition:(NSTimeInterval)playPosition
           activeTrackIDs:(nullable NSArray<NSNumber *> *)activeTrackIDs
    GCK_DEPRECATED("Use loadMediaWithLoadRequestData:");

/**
 * Loads and optionally starts playback of a new media item.
 *
 * @param mediaInfo Describes the media item to load.
 * @param autoplay Whether playback should start immediately.
 * @param playPosition The initial playback position.
 * @param activeTrackIDs An array of integers specifying the active tracks.
 * May be <code>nil</code>.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use loadMediaWithLoadRequestData:.
 */
- (GCKRequest *)loadMedia:(GCKMediaInformation *)mediaInfo
                 autoplay:(BOOL)autoplay
             playPosition:(NSTimeInterval)playPosition
           activeTrackIDs:(nullable NSArray<NSNumber *> *)activeTrackIDs
               customData:(nullable id)customData
    GCK_DEPRECATED("Use loadMediaWithLoadRequestData:");

/**
 * Sets the playback rate for the current media session.
 *
 * @param playbackRate The new playback rate.
 * @return The GCKRequest object for tracking this request.
 * @since 4.0
 */
- (GCKRequest *)setPlaybackRate:(float)playbackRate;

/**
 * Sets the playback rate for the current media session.
 *
 * @param playbackRate The new playback rate, which must be between
 * GCKMediaLoadOptions::kGCKMediaMinPlaybackRate and GCKMediaLoadOptions::kGCKMediaMaxPlaybackRate.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 * @since 4.0
 */
- (GCKRequest *)setPlaybackRate:(float)playbackRate customData:(nullable id)customData;

/**
 * Sets the active tracks. The request will fail if there is no current media status.
 *
 * @param activeTrackIDs An array of integers specifying the active tracks. May be empty or
 * <code>nil</code> to disable any currently active tracks.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)setActiveTrackIDs:(nullable NSArray<NSNumber *> *)activeTrackIDs;

/**
 * Sets the text track style. The request will fail if there is no current media status.
 *
 * @param textTrackStyle The text track style. The style will not be changed if this is
 * <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)setTextTrackStyle:(nullable GCKMediaTextTrackStyle *)textTrackStyle;

/**
 * Pauses playback of the current media item. The request will fail if there is no current media
 * status.
 *
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)pause;

/**
 * Pauses playback of the current media item. The request will fail if there is no current media
 * status.
 *
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)pauseWithCustomData:(nullable id)customData;

/**
 * Stops playback of the current media item. If a queue is currently loaded, it will be removed. The
 * request will fail if there is no current media status.
 *
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)stop;

/**
 * Stops playback of the current media item. If a queue is currently loaded, it will be removed. The
 * request will fail if there is no current media status.
 *
 *
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)stopWithCustomData:(nullable id)customData;

/**
 * Begins (or resumes) playback of the current media item. Playback always begins at the
 * beginning of the stream. The request will fail if there is no current media status.
 *
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)play;

/**
 * Begins (or resumes) playback of the current media item. Playback always begins at the
 * beginning of the stream. The request will fail if there is no current media status.
 *
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)playWithCustomData:(nullable id)customData;

/**
 * Sends a request to skip the playing ad.
 * @return The GCKRequest object for tracking this request.
 *
 * @since 4.3
 */
- (GCKRequest *)skipAd;

/**
 * Seeks to a new position within the current media item. The request will fail if there is no
 * current media status.
 *
 * @param options The seek options for the request.
 * @return The GCKRequest object for tracking this request.
 * @since 4.0
 */
- (GCKRequest *)seekWithOptions:(GCKMediaSeekOptions *)options;

/**
 * Seeks to a new position within the current media item. The request will fail if there is no
 * current media status.
 *
 * @param position The new position from the beginning of the stream.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use seekWithOptions:.
 */
- (GCKRequest *)seekToTimeInterval:(NSTimeInterval)position
    GCK_DEPRECATED("Use seekWithOptions:");

/**
 * Seeks to a new position within the current media item. The request will fail if there is no
 * current media status.
 *
 * @param position The new position interval from the beginning of the stream.
 * @param resumeState The action to take after the seek operation has finished.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use seekWithOptions:.
 */
- (GCKRequest *)seekToTimeInterval:(NSTimeInterval)position
                       resumeState:(GCKMediaResumeState)resumeState
    GCK_DEPRECATED("Use seekWithOptions:");

/**
 * Seeks to a new position within the current media item. The request will fail if there is no
 * current media status.
 *
 * @param position The new position from the beginning of the stream.
 * @param resumeState The action to take after the seek operation has finished.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use seekWithOptions:.
 */
- (GCKRequest *)seekToTimeInterval:(NSTimeInterval)position
                       resumeState:(GCKMediaResumeState)resumeState
                        customData:(nullable id)customData GCK_DEPRECATED("Use seekWithOptions:");

/**
 * Requests the list of item IDs for the queue. The results are passed to the delegate callback
 * GCKRemoteMediaClientDelegate::remoteMediaClient:didReceiveQueueItemIDs:.
 *
 * @return The GCKRequest object for tracking this request.
 *
 * @since 4.1
 */
- (GCKRequest *)queueFetchItemIDs;

/**
 * Requests complete information for the queue items with the given item IDs. The results are
 * passed to the delegate callback
 * GCKRemoteMediaClientDelegate::remoteMediaClient:didReceiveQueueItems:.
 *
 * @return The GCKRequest object for tracking this request.
 *
 * @since 4.1
 */
- (GCKRequest *)queueFetchItemsForIDs:(NSArray<NSNumber *> *)queueItemIDs;

/**
 * Loads and optionally starts playback of a new queue of media items.
 *
 * @param queueItems An array of GCKMediaQueueItem instances to load. Must not be <code>nil</code>
 * or empty.
 * @param startIndex The index of the item in the items array that should be played first.
 * @param repeatMode The repeat mode for playing the queue.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use loadMediaWithLoadRequestData:.
 */
- (GCKRequest *)queueLoadItems:(NSArray<GCKMediaQueueItem *> *)queueItems
                    startIndex:(NSUInteger)startIndex
                    repeatMode:(GCKMediaRepeatMode)repeatMode
    GCK_DEPRECATED("Use loadMediaWithLoadRequestData:");

/**
 * Loads and optionally starts playback of a new queue of media items.
 *
 * @param queueItems An array of GCKMediaQueueItem instances to load. Must not be <code>nil</code>
 * or empty.
 * @param startIndex The index of the item in the items array that should be played first.
 * @param repeatMode The repeat mode for playing the queue.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use loadMediaWithLoadRequestData:.
 */
- (GCKRequest *)queueLoadItems:(NSArray<GCKMediaQueueItem *> *)queueItems
                    startIndex:(NSUInteger)startIndex
                    repeatMode:(GCKMediaRepeatMode)repeatMode
                    customData:(nullable id)customData
    GCK_DEPRECATED("Use loadMediaWithLoadRequestData:");

/**
 * Loads and optionally starts playback of a new queue of media items.
 *
 * @param queueItems An array of GCKMediaQueueItem instances to load. Must not be <code>nil</code>
 * or empty.
 * @param startIndex The index of the item in the items array that should be played first.
 * @param playPosition The initial playback position for the item when it is first played,
 * relative to the beginning of the stream. This value is ignored when the same item is played
 * again, for example when the queue repeats, or the item is later jumped to. In those cases the
 * item's startTime is used.
 * @param repeatMode The repeat mode for playing the queue.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use loadMediaWithLoadRequestData:.
 */
- (GCKRequest *)queueLoadItems:(NSArray<GCKMediaQueueItem *> *)queueItems
                    startIndex:(NSUInteger)startIndex
                  playPosition:(NSTimeInterval)playPosition
                    repeatMode:(GCKMediaRepeatMode)repeatMode
                    customData:(nullable id)customData
    GCK_DEPRECATED("Use loadMediaWithLoadRequestData:");

/**
 * Loads and optionally starts playback of a new queue of media items.
 *
 * It is recommended to use @ref loadMediaWithLoadRequestData:  instead, which is an advanced
 * load command supporting loading a single item or a queue with additional options.
 *
 * @param queueItems An array of GCKMediaQueueItem instances to load. Must not be <code>nil</code>
 * or empty.
 * @param options The load options used to load the queue items, as defined by
 *   GCKMediaQueueLoadOptions
 *
 * @since 4.3.1
 */
- (GCKRequest *)queueLoadItems:(NSArray<GCKMediaQueueItem *> *)queueItems
                   withOptions:(GCKMediaQueueLoadOptions *)options;

/**
 * Inserts a list of new media items into the queue.
 *
 * @param queueItems An array of GCKMediaQueueItem instances to insert. Must not be <code>nil</code>
 * or empty.
 * @param beforeItemID The ID of the item that will be located immediately after the inserted list.
 * If the value is @ref kGCKMediaQueueInvalidItemID, the inserted list will be appended to the end
 * of the queue.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueInsertItems:(NSArray<GCKMediaQueueItem *> *)queueItems
                beforeItemWithID:(NSUInteger)beforeItemID;

/**
 * Inserts a list of new media items into the queue.
 *
 * @param queueItems An array of GCKMediaQueueItem instances to insert. Must not be <code>nil</code>
 * or empty.
 * @param beforeItemID ID of the item that will be located immediately after the inserted list. If
 * the value is @ref kGCKMediaQueueInvalidItemID, the inserted list will be appended to the end of
 * the queue.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueInsertItems:(NSArray<GCKMediaQueueItem *> *)queueItems
                beforeItemWithID:(NSUInteger)beforeItemID
                      customData:(nullable id)customData;

/**
 * A convenience method that inserts a single item into the queue.
 *
 * @param item The item to insert.
 * @param beforeItemID The ID of the item that will be located immediately after the inserted item.
 * If the value is @ref kGCKMediaQueueInvalidItemID, or does not refer to any item currently in the
 * queue, the inserted item will be appended to the end of the queue.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueInsertItem:(GCKMediaQueueItem *)item beforeItemWithID:(NSUInteger)beforeItemID;

/**
 * A convenience method that inserts a single item into the queue and makes it the current item.
 *
 * @param item The item to insert.
 * @param beforeItemID The ID of the item that will be located immediately after the inserted item.
 * If the value is @ref kGCKMediaQueueInvalidItemID, or does not refer to any item currently in the
 * queue, the inserted item will be appended to the end of the queue.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueInsertAndPlayItem:(GCKMediaQueueItem *)item
                      beforeItemWithID:(NSUInteger)beforeItemID;

/**
 * A convenience method that inserts a single item into the queue and makes it the current item.
 *
 * @param item The item to insert.
 * @param beforeItemID The ID of the item that will be located immediately after the inserted item.
 * If the value is @ref kGCKMediaQueueInvalidItemID, or does not refer to any item currently in the
 * queue, the inserted item will be appended to the end of the queue.
 * @param playPosition The initial playback position for the item when it is first played,
 * relative to the beginning of the stream. This value is ignored when the same item is played
 * again, for example when the queue repeats, or the item is later jumped to. In those cases the
 * item's startTime is used.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueInsertAndPlayItem:(GCKMediaQueueItem *)item
                      beforeItemWithID:(NSUInteger)beforeItemID
                          playPosition:(NSTimeInterval)playPosition
                            customData:(nullable id)customData;

/**
 * Updates the queue.
 *
 * @param queueItems The list of updated items.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueUpdateItems:(NSArray<GCKMediaQueueItem *> *)queueItems;

/**
 * Updates the queue.
 *
 * @param queueItems The list of updated items.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueUpdateItems:(NSArray<GCKMediaQueueItem *> *)queueItems
                      customData:(nullable id)customData;

/**
 * Removes a list of media items from the queue. If the queue becomes empty as a result, the current
 * media session will be terminated.
 *
 * @param itemIDs An array of media item IDs identifying the items to remove. Must not be
 * <code>nil</code> or empty.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueRemoveItemsWithIDs:(NSArray<NSNumber *> *)itemIDs;

/**
 * Removes a list of media items from the queue. If the queue becomes empty as a result, the current
 * media session will be terminated.
 *
 * @param itemIDs An array of media item IDs identifying the items to remove. Must not be
 * <code>nil</code> or empty.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueRemoveItemsWithIDs:(NSArray<NSNumber *> *)itemIDs
                             customData:(nullable id)customData;

/**
 * A convenience method that removes a single item from the queue.
 *
 * @param itemID The ID of the item to remove.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueRemoveItemWithID:(NSUInteger)itemID;

/**
 * Reorders a list of media items in the queue.
 *
 * @param queueItemIDs An array of media item IDs identifying the items to reorder. Must not be
 * <code>nil</code> or empty.
 * @param beforeItemID ID of the item that will be located immediately after the reordered list. If
 * the value is @ref kGCKMediaQueueInvalidItemID, or does not refer to any item currently in the
 * queue, the reordered list will be appended at the end of the queue.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueReorderItemsWithIDs:(NSArray<NSNumber *> *)queueItemIDs
                  insertBeforeItemWithID:(NSUInteger)beforeItemID;

/**
 * Reorder a list of media items in the queue.
 *
 * @param queueItemIDs An array of media item IDs identifying the items to reorder. Must not be
 * <code>nil</code> or empty.
 * @param beforeItemID The ID of the item that will be located immediately after the reordered list.
 * If the value is @ref kGCKMediaQueueInvalidItemID, or does not refer to any item currently in the
 * queue, the reordered list will be moved to the end of the queue.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueReorderItemsWithIDs:(NSArray<NSNumber *> *)queueItemIDs
                  insertBeforeItemWithID:(NSUInteger)beforeItemID
                              customData:(nullable id)customData;

/**
 * A convenience method that moves a single item in the queue.
 *
 * @param itemID The ID of the item to move.
 * @param beforeItemID The ID of the item that will be located immediately after the reordered list.
 * If the value is @ref kGCKMediaQueueInvalidItemID, or does not refer to any item currently in the
 * queue, the item will be moved to the end of the queue.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueMoveItemWithID:(NSUInteger)itemID beforeItemWithID:(NSUInteger)beforeItemID;

/**
 * Jumps to the item with the specified ID in the queue.
 *
 * @param itemID The ID of the item to jump to.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueJumpToItemWithID:(NSUInteger)itemID;

/**
 * Jumps to the item with the specified ID in the queue.
 *
 * @param itemID The ID of the item to jump to.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueJumpToItemWithID:(NSUInteger)itemID customData:(nullable id)customData;

/**
 * Jumps to the item with the specified ID in the queue.
 *
 * @param itemID The ID of the item to jump to.
 * @param playPosition The initial playback position for the item when it is first played,
 * relative to the beginning of the stream. This value is ignored when the same item is played
 * again, for example when the queue repeats, or the item is later jumped to. In those cases the
 * item's startTime is used.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueJumpToItemWithID:(NSUInteger)itemID
                         playPosition:(NSTimeInterval)playPosition
                           customData:(nullable id)customData;

/**
 * Moves to the next item in the queue.
 *
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueNextItem;

/**
 * Moves to the previous item in the queue.
 *
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queuePreviousItem;

/**
 * Sets the queue repeat mode.
 *
 * @param repeatMode The new repeat mode.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueSetRepeatMode:(GCKMediaRepeatMode)repeatMode;

/**
 * Sets the stream volume. The request will fail if there is no current media session.
 *
 * @param volume The new volume, in the range [0.0 - 1.0].
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)setStreamVolume:(float)volume;

/**
 * Sets the stream volume. The request will fail if there is no current media session.
 *
 * @param volume The new volume, in the range [0.0 - 1.0].
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)setStreamVolume:(float)volume customData:(nullable id)customData;

/**
 * Sets whether the stream is muted. The request will fail if there is no current media session.
 *
 * @param muted Whether the stream should be muted or unmuted.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)setStreamMuted:(BOOL)muted;

/**
 * Sets whether the stream is muted. The request will fail if there is no current media session.
 *
 * @param muted Whether the stream should be muted or unmuted.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)setStreamMuted:(BOOL)muted customData:(nullable id)customData;

/**
 * Requests updated media status information from the receiver.
 *
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)requestStatus;

/**
 * Returns the approximate stream position as calculated from the last received stream information
 * and the elapsed wall-time since that update. Returns 0 if the channel is not connected or if no
 * media is currently loaded.
 */
- (NSTimeInterval)approximateStreamPosition;

/**
 * Returns the approximate start position of seekable range as calculated from the last received
 * stream information and the elapsed wall-time since that update. Returns 0 if the channel is not
 * connected or if no media is currently loaded. Returns @c kGCKInvalidTimeInterval if the stream is
 * not live stream or there is no seekable range.
 *
 * @since 4.4.1
 */
- (NSTimeInterval)approximateLiveSeekableRangeStart;

/**
 * Returns the approximate end position of seekable range as calculated from the last received
 * stream information and the elapsed wall-time since that update. Returns 0 if the channel is not
 * connected or if no media is currently loaded. Returns @c kGCKInvalidTimeInterval if the stream is
 * not live stream or there is no seekable range.
 *
 * @since 4.4.1
 */
- (NSTimeInterval)approximateLiveSeekableRangeEnd;

@end  // GCKRemoteMediaClient

/**
 * The GCKRemoteMediaClient listener protocol.
 *
 * @since 3.0
 */
GCK_EXPORT
@protocol GCKRemoteMediaClientListener <NSObject>

@optional

/**
 * Called when a new media session has started on the receiver.
 *
 * @param client The client.
 * @param sessionID The ID of the new session.
 */
- (void)remoteMediaClient:(GCKRemoteMediaClient *)client
    didStartMediaSessionWithID:(NSInteger)sessionID;

/**
 * Called when updated media status has been received from the receiver.
 *
 * @param client The client.
 * @param mediaStatus The updated media status. The status can also be accessed as a property of
 * the player.
 */
- (void)remoteMediaClient:(GCKRemoteMediaClient *)client
     didUpdateMediaStatus:(nullable GCKMediaStatus *)mediaStatus;

/**
 * Called when updated media metadata has been received from the receiver.
 *
 * @param client The client.
 * @param mediaMetadata The updated media metadata. The metadata can also be accessed through the
 * GCKRemoteMediaClient::mediaStatus property.
 */
- (void)remoteMediaClient:(GCKRemoteMediaClient *)client
    didUpdateMediaMetadata:(nullable GCKMediaMetadata *)mediaMetadata;

/**
 * Called when the media playback queue has been updated on the receiver.
 *
 * @param client The client.
 */
- (void)remoteMediaClientDidUpdateQueue:(GCKRemoteMediaClient *)client;

/**
 * Called when the media preload status has been updated on the receiver.
 *
 * @param client The client.
 */
- (void)remoteMediaClientDidUpdatePreloadStatus:(GCKRemoteMediaClient *)client;

/**
 * Called when the list of media queue item IDs has been received.
 *
 * @param client The client.
 * @param queueItemIDs The list of media queue item IDs.
 *
 * @since 4.1
 */
- (void)remoteMediaClient:(GCKRemoteMediaClient *)client
    didReceiveQueueItemIDs:(NSArray<NSNumber *> *)queueItemIDs;

/**
 * Called when a contiguous sequence of items has been inserted into the media queue.
 *
 * @param client The client.
 * @param queueItemIDs The item IDs of the inserted items.
 * @param beforeItemID The item ID of the item in front of which the new items have been inserted.
 * If the value is kGCKMediaQueueInvalidItemID, it indicates that the items were appended at the
 * end of the queue.
 *
 * @since 4.1
 */
- (void)remoteMediaClient:(GCKRemoteMediaClient *)client
    didInsertQueueItemsWithIDs:(NSArray<NSNumber *> *)queueItemIDs
              beforeItemWithID:(GCKMediaQueueItemID)beforeItemID;

/**
 * Called when existing items has been updated in the media queue.
 *
 * @param client The client.
 * @param queueItemIDs The item IDs of the updated items.
 *
 * @since 4.1
 */
- (void)remoteMediaClient:(GCKRemoteMediaClient *)client
    didUpdateQueueItemsWithIDs:(NSArray<NSNumber *> *)queueItemIDs;

/**
 * Called when a contiguous sequence of items has been removed from the media queue.
 *
 * @param client The client.
 * @param queueItemIDs The item IDs of the removed items.
 *
 * @since 4.1
 */
- (void)remoteMediaClient:(GCKRemoteMediaClient *)client
    didRemoveQueueItemsWithIDs:(NSArray<NSNumber *> *)queueItemIDs;

/**
 * Called when detailed information has been received for one or more items in the queue.
 *
 * @param client The client.
 * @param queueItems The queue items.
 *
 * @since 4.1
 */
- (void)remoteMediaClient:(GCKRemoteMediaClient *)client
     didReceiveQueueItems:(NSArray<GCKMediaQueueItem *> *)queueItems;

@end

/**
 * The delegate protocol for parsing ad break information from a media status.
 *
 * @deprecated
 */
@protocol GCKRemoteMediaClientAdInfoParserDelegate <NSObject>
@optional

/**
 * Allows the delegate to determine whether the receiver is playing an ad or not, based on the
 * current media status.
 * @param client The client.
 * @param mediaStatus The current media status.
 * @return YES if the receiver is currently playing an ad, NO otherwise.
 */
- (BOOL)remoteMediaClient:(GCKRemoteMediaClient *)client
    shouldSetPlayingAdInMediaStatus:(GCKMediaStatus *)mediaStatus;

/**
 * Allows the delegate to determine the list of ad breaks in the current content.
 * @param client The client.
 * @param mediaStatus The current media status.
 * @return An array of GCKAdBreakInfo objects representing the ad breaks for this content, or nil
 * if there are no ad breaks.
 */
- (nullable NSArray<GCKAdBreakInfo *> *)remoteMediaClient:(GCKRemoteMediaClient *)client
                           shouldSetAdBreaksInMediaStatus:(GCKMediaStatus *)mediaStatus;

@end // GCKRemoteMediaClientListener

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKRequest.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKError;
@protocol GCKRequestDelegate;

typedef NSInteger GCKRequestID;

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKRequestAbortReason
 * Enum defining the reasons that could cause a request to be aborted.
 *
 * @since 3.0
 */
typedef NS_ENUM(NSInteger, GCKRequestAbortReason) {
  /** The request was aborted because a similar and overridding request was initiated. */
  GCKRequestAbortReasonReplaced = 1,
  /** The request was aborted after a call to @ref cancel on this request */
  GCKRequestAbortReasonCancelled = 2,
};

/**
 * An object for tracking an asynchronous request.
 *
 * See GCKRequestDelegate for the delegate protocol.
 *
 * @since 3.0
*/
GCK_EXPORT
@interface GCKRequest : NSObject

/**
 * The delegate for receiving notifications about the status of the request.
 */
@property(nonatomic, weak, nullable) id<GCKRequestDelegate> delegate;

/**
 * The unique ID assigned to this request.
 */
@property(nonatomic, assign, readonly) GCKRequestID requestID;

/**
 * The error that caused the request to fail, if any, otherwise <code>nil</code>.
 */
@property(nonatomic, copy, readonly, nullable) GCKError *error;

/**
 * A flag indicating whether the request is currently in progress.
 */
@property(nonatomic, assign, readonly) BOOL inProgress;

/**
 * A flag indicating whether this is an external request--that is, one created by the application
 * rather than by the framework itself.
 *
 * @since 3.4
 */
@property(nonatomic, assign, readonly) BOOL external;

/**
 * Cancels the request. Canceling a request does not guarantee that the request will not complete
 * on the receiver; it simply causes the sender to stop tracking the request.
 */
- (void)cancel;

/**
 * Constructs a GCKRequest object for use by the calling application. Request objects created using
 * this factory method can be managed by the application using the methods GCKRequest::complete,
 * GCKRequest::failWithError:, and GCKRequest::abortWithReason:.
 *
 * @since 3.4
 */
+ (GCKRequest *)applicationRequest;

/**
 * Completes the request and notifies the delegate accordingly. This method may only be called on
 * GCKRequest objects that have been constructed by the application using the
 * GCKRequest::applicationRequest factory method. Calling this method on a GCKRequest object that
 * was created by the framework itself will raise an exception.
 *
 * @since 3.4
 */
- (void)complete;

/**
 * Fails the request with an error and notifies the delegate accordingly. This method may only be
 * called on GCKRequest objects that have been constructed by the application using the
 * GCKRequest::requestWithID: factory method. Calling this method on a GCKRequest object that was
 * created by the framework itself will raise an exception.
 *
 * @param error The error describing the failure.
 *
 * @since 3.4
 */
- (void)failWithError:(GCKError *)error;

/**
 * Aborts the request with a reason and notifies the delegate accordingly. This method may only be
 * called on GCKRequest objects that have been constructed by the application using the
 * GCKRequest::requestWithID: factory method. Calling this method on a GCKRequest object that was
 * created by the framework itself will raise an exception.
 *
 * @param reason The reason for the abort.
 *
 * @since 3.4
 */
- (void)abortWithReason:(GCKRequestAbortReason)reason;

@end

/**
 * The GCKRequest delegate protocol.
 *
 * @since 3.0
 */
GCK_EXPORT
@protocol GCKRequestDelegate <NSObject>

@optional

/**
 * Called when the request has successfully completed.
 *
 * @param request The request.
 */
- (void)requestDidComplete:(GCKRequest *)request;

/**
 * Called when the request has failed.
 *
 * @param request The request.
 * @param error The error describing the failure.
 */
- (void)request:(GCKRequest *)request didFailWithError:(GCKError *)error;

/**
 * Called when the request is no longer being tracked. It does not guarantee that the request has
 * succeed or failed.
 *
 * @param request The request.
 * @param abortReason The reason why the request is no longer being tracked.
 */
- (void)request:(GCKRequest *)request didAbortWithReason:(GCKRequestAbortReason)abortReason;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKSenderApplicationInfo.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/**
 * @file GCKSenderApplicationInfo.h
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKSenderApplicationInfoPlatform
 * Sender application platforms.
 */
typedef NS_ENUM(NSInteger, GCKSenderApplicationInfoPlatform) {
  /** Android. */
  GCKSenderApplicationInfoPlatformAndroid = 1,
  /** iOS. */
  GCKSenderApplicationInfoPlatformiOS = 2,
  /** Chrome. */
  GCKSenderApplicationInfoPlatformChrome = 3,
  /** Mac OS X. Reserved for future use. */
  GCKSenderApplicationInfoPlatformOSX = 4,
};

/**
 * Information about a sender application.
 */
GCK_EXPORT
@interface GCKSenderApplicationInfo : NSObject <NSCopying>

/** The sender application's platform. */
@property(nonatomic, assign, readonly) GCKSenderApplicationInfoPlatform platform;

/** The sender application's unique identifier (app ID). */
@property(nonatomic, copy, readonly, nullable) NSString *appIdentifier;

/** The sender application's launch URL (URL scheme). */
@property(nonatomic, strong, readonly, nullable) NSURL *launchURL;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKSession+Protected.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKSession.h>

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/**
 * @file GCKSession+Protected.h
 * GCKSessionEndAction and GCKSessionState enums.
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKSessionEndAction
 * Enum defining the action to take when ending a Cast session.
 * @since 4.0
 */
typedef NS_ENUM(NSInteger, GCKSessionEndAction) {
  /** Explicitly leaves the session on the receiver. */
  GCKSessionEndActionLeave = 1,
  /** Disconnects from the session without explicitity leaving it. */
  GCKSessionEndActionDisconnect = 2,
  /** Stops the currently Casting application on the receiver and then ends the session. */
  GCKSessionEndActionStopCasting = 3
};

/**
 * Methods to be overridden and called by GCKSession subclasses only.
 *
 * @since 3.0
 */
@interface GCKSession (Protected)

/**
 * Starts the session. This is an asynchronous operation. Must be overridden by subclasses.
 */
- (void)start;

/**
 * Ends the session with the specified action.  This is an asynchronous operation. Must be
 * overridden by subclasses.
 *
 * @param action The action to take when ending the session; see GCKSessionEndAction for more
 * details.
 */
- (void)endWithAction:(GCKSessionEndAction)action;

/**
 * Called by subclasses to notify the framework that the session has been started.
 *
 * @param sessionID The session's unique ID.
 */
- (void)notifyDidStartWithSessionID:(NSString *)sessionID;

/**
 * Called by subclasses to notify the framework that the session has failed to start.
 *
 * @param error The error that occurred.
 */
- (void)notifyDidFailToStartWithError:(GCKError *)error;

/**
 * Called by subclasses to notify the framework that the session has ended.
 *
 * @param error The error that caused the session to end, if any. Should be <code>nil</code> if the
 * session was ended intentionally.
 * @param willTryToResume Whether the session will try to resume itself automatically.
 */
- (void)notifyDidEndWithError:(nullable NSError *)error willTryToResume:(BOOL)willTryToResume;

/**
 * Called by subclasses to notify the framework that updated device volume and mute state has been
 * received from the device.
 *
 * @param volume The device's current volume. Must be in the range [0, 1.0];
 * @param muted The device's current mute state.
 */
- (void)notifyDidReceiveDeviceVolume:(float)volume muted:(BOOL)muted;

/**
 * Called by subclasses to notify the framework that updated status has been received from the
 * device.
 *
 * @param statusText The new status.
 */
- (void)notifyDidReceiveDeviceStatus:(nullable NSString *)statusText;

/**
 * Deprecated, do not use - implemented as a no-op.
 *
 * @deprecated Do not call.
 */
- (void)notifyDidSuspendWithReason:(GCKConnectionSuspendReason)reason GCK_DEPRECATED("Do not call");

/**
 * Deprecated, do not use - implemented as a no-op.
 *
 * @deprecated Do not call.
 */
- (void)notifyDidResume GCK_DEPRECATED("Do not call");

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKSession.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKSessionTraits.h>

#import <GoogleCast/GCKCommon.h>
#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKDevice.h>
#import <GoogleCast/GCKMediaMetadata.h>
#import <GoogleCast/GCKRemoteMediaClient.h>
#import <GoogleCast/GCKSessionOptions.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * An abstract base class representing a session with a receiver device. Subclasses must implement
 * the @ref start and @ref endWithAction: methods, and must call the appropriate notifier methods
 * (for example, @ref notifyDidStartWithSessionID:) to indicate corresponding changes in the session
 * state. Subclasses may also implement @ref setDeviceVolume:, @ref setDeviceMuted: and
 * @ref remoteMediaClient if the device supports such operations.
 *
 * A session is created and controlled using the session methods in GCKSessionManager, which uses
 * the appropriate GCKDeviceProvider to create the session, and then delegates session requests to
 * that GCKSession object.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKSession : NSObject

/** The device that this session is associated with. */
@property(nonatomic, strong, readonly) GCKDevice *device;

/** The current session ID, if any. */
@property(nonatomic, copy, readonly, nullable) NSString *sessionID;

/**
 * The session options, if any.
 *
 * @since 4.0
 */
@property(nonatomic, strong, readonly, nullable) GCKSessionOptions *sessionOptions;

/** The current session connection state. */
@property(nonatomic, assign, readonly) GCKConnectionState connectionState;

/**
 * A flag indicating whether the session is currently suspended.
 *
 * @deprecated GCKSession no longer supports being in suspended state. If needed, move this
 * functionality to a subclass.
 */
@property(nonatomic, assign, readonly) BOOL suspended GCK_DEPRECATED(
    "GCKSession no longer supports being in a suspended state. If needed, move this functionality "
    "to a subclass.");

/** The current device status text. */
@property(nonatomic, copy, readonly, nullable) NSString *deviceStatusText;

/** The session traits. */
@property(nonatomic, copy, readonly, nullable) GCKSessionTraits *traits;

/** The current device volume, in the range [0.0, 1.0]. */
@property(nonatomic, assign, readonly) float currentDeviceVolume;

/** The current device mute state. */
@property(nonatomic, assign, readonly) BOOL currentDeviceMuted;

/**
 * The GCKRemoteMediaClient object that can be used to control media playback in this session. It is
 * <code>nil</code> before the session has started, or if the session does not support the
 * GCKRemoteMediaClient API. Subclasses which provide a GCKRemoteMediaClient interface must override
 * the getter method.
 */
@property(nonatomic, strong, readonly, nullable) GCKRemoteMediaClient *remoteMediaClient;

/**
 * The current media metadata, if any. Will be <code>nil</code> if the session does not support the
 * media namespace or if no media is currently loaded on the receiver.
 */
@property(nonatomic, strong, readonly, nullable) GCKMediaMetadata *mediaMetadata;

/**
 * Initializes a new session object for the given device, with default options.
 *
 * @param device The device.
 * @param traits The session traits.
 * @param sessionID The session ID of an existing session, if this object will be used to resume a
 * session; otherwise <code>nil</code> if it will be used to start a new session.
 */
- (instancetype)initWithDevice:(GCKDevice *)device
                        traits:(nullable GCKSessionTraits *)traits
                     sessionID:(nullable NSString *)sessionID;

/**
 * Initializes a new session object for the given device.
 *
 * @param device The device.
 * @param traits The session traits.
 * @param sessionID The session ID of an existing session, if this object will be used to resume a
 * session; otherwise <code>nil</code> if it will be used to start a new session.
 * @param sessionOptions The session options, if any; otherwise <code>nil</code>.
 *
 * @since 4.0
 */
- (instancetype)initWithDevice:(GCKDevice *)device
                        traits:(nullable GCKSessionTraits *)traits
                     sessionID:(nullable NSString *)sessionID
                sessionOptions:(nullable GCKSessionOptions *)sessionOptions;

/**
 * Sets the device's volume. This is an asynchronous operation. The default implementation is a
 * no-op that fails the request with a GCKErrorCodeUnsupportedFeature error.
 *
 * @param volume The new volume.
 * @return A GCKRequest object for tracking the request.
 * @since 3.4; in previous framework versions, this method returned <code>void</code>.
 */
- (GCKRequest *)setDeviceVolume:(float)volume;

/**
 * Sets the device's mute state. This is an asynchronous operation. The default implementation is a
 * no-op that fails the request with a GCKErrorCodeUnsupportedFeature error.
 *
 * @param muted The new mute state.
 * @return A GCKRequest object for tracking the request.
 * @since 3.4; in previous framework versions, this method returned <code>void</code>.
 */
- (GCKRequest *)setDeviceMuted:(BOOL)muted;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKSessionManager.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKCommon.h>
#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKSessionOptions.h>

#import <Foundation/Foundation.h>

@class GCKCastSession;
@class GCKDevice;
@class GCKOpenURLOptions;
@class GCKSession;
@class GCKMultizoneDevice;
@protocol GCKSessionManagerListener;

NS_ASSUME_NONNULL_BEGIN

GCK_EXTERN NSString *const kGCKKeyConnectionState;

/**
 * A class that manages sessions. The method @ref startSessionWithDevice: is used to
 * create a new session with a given GCKDevice. The session manager uses the GCKDeviceProvider
 * for that device type to construct a new GCKSession object, to which it then delegates all
 * session requests.
 *
 * GCKSessionManager handles the automatic resumption of suspended sessions (that is, resuming
 * sessions that were ended when the application went to the background, or in the event that
 * the application crashed or was forcibly terminated by the user). When the application resumes or
 * restarts, the session manager will wait for a short time for the device provider of the suspended
 * session's device to discover that device again, and if it does, it will attempt to reconnect to
 * that device and re-establish the session automatically.
 *
 * If the application has created a GCKUICastButton without providing a target and selector, then a
 * user tap on the button will display the default Cast dialog and it will automatically start
 * and stop sessions based on user selection or disconnection of a device.
 * If however the application is providing its own device selection/control dialog UI, then it
 * should use the GCKSessionManager directly to create and control sessions.
 *
 * Whether or not the application uses the GCKSessionManager to control sessions, it can attach a
 * GCKSessionManagerListener to be notified of session events, and can also use KVO to monitor the
 * #connectionState property to track the current session lifecycle state.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKSessionManager : NSObject

/** The current session, if any. */
@property(nonatomic, strong, readonly, nullable) GCKSession *currentSession;

/** The current Cast session, if any. */
@property(nonatomic, strong, readonly, nullable) GCKCastSession *currentCastSession;

/** The current session connection state. */
@property(nonatomic, assign, readonly) GCKConnectionState connectionState;

/**
 * Default initializer is not available.
 */
- (instancetype)init NS_UNAVAILABLE;

/**
 * Starts a new session with the given device, using the default session options that were
 * registered for the device category, if any. This is an asynchronous operation.
 *
 * @param device The device to use for this session.
 * @return <code>YES</code> if the operation has been started successfully, <code>NO</code> if
 * there is a session currently established or if the operation could not be started.
 */
- (BOOL)startSessionWithDevice:(GCKDevice *)device;

/**
 * Starts a new session with the given device and options. This is an asynchronous operation.
 *
 * @param device The device to use for this session.
 * @param options The options for this session, if any. May be <code>nil</code>.
 * @return <code>YES</code> if the operation has been started successfully, <code>NO</code> if
 * there is a session currently established or if the operation could not be started.
 *
 * @since 4.0
 */
- (BOOL)startSessionWithDevice:(GCKDevice *)device
                sessionOptions:(nullable GCKSessionOptions *)options;

/**
 * Attempts to join or start a session with options that were supplied to the
 * UIApplicationDelegate::application:openURL:options: method. Typically this is a request to
 * join an existing Cast session on a particular device that was initiated by another app.
 *
 * @param openURLOptions The options that were extracted from the URL.
 * @param sessionOptions The options for this session, if any. May be <code>nil</code>.
 * @return <code>YES</code> if the operation has been started successfully, <code>NO</code> if
 * there is a session currently established, or the openURL options do not contain the required
 * Cast options.
 *
 * @since 4.0
 */
- (BOOL)startSessionWithOpenURLOptions:(GCKOpenURLOptions *)openURLOptions
                        sessionOptions:(nullable GCKSessionOptions *)sessionOptions;

/**
 * Suspends the current session. This is an asynchronous operation.
 *
 * @param reason The reason for the suspension.
 * @return <code>YES</code> if the operation has been started successfully, <code>NO</code> if
 * there is no session currently established or if the operation could not be started.
 */
- (BOOL)suspendSessionWithReason:(GCKConnectionSuspendReason)reason;

/**
 * Ends the current session. This is an asynchronous operation.
 *
 * @return <code>YES</code> if the operation has been started successfully, <code>NO</code> if
 * there is no session currently established or if the operation could not be started.
 */
- (BOOL)endSession;

/**
 * Ends the current session and stops casting if one sender device is connected; otherwise,
 * optionally stops casting if multiple sender devices are connected.
 *
 * Use the <code>stopCasting</code> parameter to indicate whether casting on the receiver should stop
 * when the session ends. This parameter only applies when multiple sender devices are connected. For
 * example, the same app is open on multiple sender devices and each sender device has an active Cast
 * session with the same receiver device.
 * *   If you set <code>stopCasting</code> to <code>YES</code>, the receiver app stops casting when
 *     multiple devices are connected.
 * *   If <code>stopCasting</code> is <code>NO</code> and other devices have an active session,
 *     the receiver keeps playing.
 * *   If only one sender device is connected, the receiver app stops casting the media and ignores
 *     the <code>stopCasting</code> value, even if it's set to <code>NO</code>.
 *
 * @param stopCasting Whether casting on the receiver should stop when the session ends. Only used
 * when multiple sender devices are connected.
 *
 * @return <code>YES</code> if the operation to end the session started successfully, <code>NO</code>
 * if there is no session currently established or if the operation could not be started.
 */
- (BOOL)endSessionAndStopCasting:(BOOL)stopCasting;

/**
 * Tests if a session is currently being managed by this session manager, and it is currently
 * connected. This will be <code>YES</code> if the session state is
 * @ref GCKConnectionStateConnected.
 */
- (BOOL)hasConnectedSession;

/**
 * Tests if a Cast session is currently being managed by this session manager, and it is currently
 * connected. This will be <code>YES</code> if the session state is @ref GCKConnectionStateConnected
 * and the session is a Cast session.
 */
- (BOOL)hasConnectedCastSession;

/**
 * Sets the default session options for the given device category.The session options are passed to
 * the GCKDeviceProvider::createSessionForDevice:sessionID:sessionOptions: method when the user
 * selects a device from the Cast dialog.  For Cast sessions, the session options can specify which
 * receiver application to launch.
 *
 * @param sessionOptions The session options. May be <code>nil</code> to remove any previously set
 * options.
 * @param category The device category.
 *
 * @since 4.0
 */
- (void)setDefaultSessionOptions:(nullable GCKSessionOptions *)sessionOptions
               forDeviceCategory:(NSString *)category;

/**
 * Gets the default session options for a given device category.
 * @param category The device category.
 * @return The default session options, or <code>nil</code> if none.
 *
 * @since 4.0
 */
- (nullable GCKSessionOptions *)defaultSessionOptionsForDeviceCategory:(NSString *)category;

/**
 * Adds a listener for receiving notifications.
 *
 * The added listener is weakly held, and should be retained to avoid unexpected deallocation.
 *
 * @param listener The listener to add.
 */
- (void)addListener:(id<GCKSessionManagerListener>)listener;

/**
 * Removes a listener that was previously added with @ref addListener:.
 *
 * @param listener The listener to remove.
 */
- (void)removeListener:(id<GCKSessionManagerListener>)listener;

@end  // GCKSessionManager

/**
 * The GCKSessionManager listener protocol. The protocol's methods are all optional. All of the
 * notification methods come in two varieties: one that is invoked for any session type, and one
 * that is invoked specifically for Cast sessions.
 *
 * Listeners are invoked in the order that they were registered. GCKSessionManagerListener instances
 * which are registered by components of the framework itself (such as GCKUIMediaController), will
 * always be invoked <i>after</i> those that are registered by the application for the callbacks
 * GCKSessionManagerListener::sessionManager:willStartSession:,
 * GCKSessionManagerListener::sessionManager:willStartCastSession:,
 * GCKSessionManagerListener::sessionManager:willResumeSession:, and
 * GCKSessionManagerListener::sessionManager:willResumeCastSession:; and <i>before</i> those
 * that are registered by the application for all of the remaining callbacks.
 *
 * @since 3.0
 */
GCK_EXPORT
@protocol GCKSessionManagerListener <NSObject>

@optional

/**
 * Called when a session is about to be started.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager willStartSession:(GCKSession *)session;

/**
 * Called when a session has been successfully started.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager didStartSession:(GCKSession *)session;

/**
 * Called when a Cast session is about to be started.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    willStartCastSession:(GCKCastSession *)session;

/**
 * Called when a Cast session has been successfully started.
 *
 * @param sessionManager The session manager.
 * @param session The Cast session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    didStartCastSession:(GCKCastSession *)session;

/**
 * Called when a session is about to be ended, either by request or due to an error.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager willEndSession:(GCKSession *)session;

/**
 * Called when a session has ended, either by request or due to an error.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 * @param error The error, if any; otherwise nil.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
         didEndSession:(GCKSession *)session
             withError:(nullable NSError *)error;

/**
 * Called when a Cast session is about to be ended, either by request or due to an error.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    willEndCastSession:(GCKCastSession *)session;

/**
 * Called when a Cast session has ended, either by request or due to an error.
 *
 * @param sessionManager The session manager.
 * @param session The Cast session.
 * @param error The error, if any; otherwise nil.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
     didEndCastSession:(GCKCastSession *)session
             withError:(nullable NSError *)error;

/**
 * Called when a session has failed to start.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 * @param error The error.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    didFailToStartSession:(GCKSession *)session
                withError:(NSError *)error;

/**
 * Called when a Cast session has failed to start.
 *
 * @param sessionManager The session manager.
 * @param session The Cast session.
 * @param error The error.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    didFailToStartCastSession:(GCKCastSession *)session
                    withError:(NSError *)error;

/**
 * Called when a session has been suspended.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 * @param reason The reason for the suspension.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
     didSuspendSession:(GCKSession *)session
            withReason:(GCKConnectionSuspendReason)reason;

/**
 * Called when a Cast session has been suspended.
 *
 * @param sessionManager The session manager.
 * @param session The Cast session.
 * @param reason The reason for the suspension.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    didSuspendCastSession:(GCKCastSession *)session
               withReason:(GCKConnectionSuspendReason)reason;

/**
 * Called when a session is about to be resumed.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager willResumeSession:(GCKSession *)session;

/**
 * Called when a session has been successfully resumed.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager didResumeSession:(GCKSession *)session;

/**
 * Called when a Cast session is about to be resumed.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    willResumeCastSession:(GCKCastSession *)session;

/**
 * Called when a Cast session has been successfully resumed.
 *
 * @param sessionManager The session manager.
 * @param session The Cast session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    didResumeCastSession:(GCKCastSession *)session;

/**
 * Called when the device associated with this session has changed in some way (for example, the
 * friendly name has changed).
 *
 * @param sessionManager The session manager.
 * @param session The Cast session.
 * @param device The updated device object.
 *
 * @since 3.2
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
               session:(GCKSession *)session
       didUpdateDevice:(GCKDevice *)device;

/**
 * Called when updated device volume and mute state for a session have been received.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 * @param volume The current volume, in the range [0.0, 1.0].
 * @param muted The current mute state.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
                   session:(GCKSession *)session
    didReceiveDeviceVolume:(float)volume
                     muted:(BOOL)muted;
/**
 * Called when updated device volume and mute state for a Cast session have been received.
 *
 * @param sessionManager The session manager.
 * @param session The Cast session.
 * @param volume The current volume, in the range [0.0, 1.0].
 * @param muted The current mute state.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
               castSession:(GCKCastSession *)session
    didReceiveDeviceVolume:(float)volume
                     muted:(BOOL)muted;

/**
 * Called when updated device status for a session has been received.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 * @param statusText The new device status text.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
                   session:(GCKSession *)session
    didReceiveDeviceStatus:(nullable NSString *)statusText;

/**
 * Called when updated device status for a Cast session has been received.
 *
 * @param sessionManager The session manager.
 * @param session The Cast session.
 * @param statusText The new device status text.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
               castSession:(GCKCastSession *)session
    didReceiveDeviceStatus:(nullable NSString *)statusText;

/**
 * Called when the default session options have been changed for a given device category.
 *
 * @param sessionManager The session manager.
 * @param category The device category.
 *
 * @since 4.0
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    didUpdateDefaultSessionOptionsForDeviceCategory:(NSString *)category;

@end  // GCKSessionManagerListener

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKSessionOptions.h
================================================
// Copyright 2016 Google Inc.

#import <GoogleCast/GCKCommon.h>
#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/**
 * A dictionary for specifying session options.
 *
 * @since 4.0
 */
typedef NSDictionary<NSString *, NSObject<NSCoding> *> GCKSessionOptions;



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKSessionTraits.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * An object describing the traits and capabilities of a session.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKSessionTraits : NSObject <NSCopying, NSSecureCoding>

/**
 * The minimum volume value. Must be non-negative and less than or equal to the maximum volume.
 */
@property(nonatomic, assign, readonly) float minimumVolume;

/**
 * The maximum volume value. Must be non-negative and greater than or equal to the minimum volume.
 */
@property(nonatomic, assign, readonly) float maximumVolume;

/**
 * The volume increment for up/down volume adjustments. May be 0 to indicate fixed volume. Must
 * be non-negative and less than or equal to the difference between the maximum volume and minimum
 * volume.
 */
@property(nonatomic, assign, readonly) float volumeIncrement;

/**
 * Whether the audio can be muted.
 */
@property(nonatomic, assign, readonly) BOOL supportsMuting;

/**
 * Designated initializer.
 */
- (instancetype)initWithMinimumVolume:(float)minimumVolume
                        maximumVolume:(float)maximumVolume
                      volumeIncrement:(float)volumeIncrement
                       supportsMuting:(BOOL)supportsMuting NS_DESIGNATED_INITIALIZER;

/**
 * Convenience initializer. Sets the volume range to [0.0, 1.0], the volume increment to 0.05 (5%),
 * and the supportsMuting flag to <code>YES</code>.
 */
- (instancetype)init;

/**
 * Whether this is a fixed volume device.
 */
- (BOOL)isFixedVolume;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIButton.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKUIMultistateButton.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A subclass of <a href="https://goo.gl/VK61wU"><b>UIButton</b></a> that supports custom
 * application states. These states are ORed onto the value of the button's <b>state</b> property to
 * provide additional, application-specific states. Images can be assigned to these custom states,
 * for example:
 * @code
 * [button setImage:[UIImage imageNamed:@"myCustomStateImage"]
 *                             forState:(UIControlStateNormal | kMyControlStateCustom)];
 * @endcode
 * Application state values must only use the bits that are set in the
 * <a href="https://goo.gl/tZWsqZ"><b>UIControlStateApplication</b></a> bitmask.
 *
 * @deprecated Use GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXPORT GCK_DEPRECATED("Use GCKUIMultistateButton")
@interface GCKUIButton : GCKUIMultistateButton

/**
 * The button's application state. This state is ORed onto the button's existing state.
 */
@property(nonatomic, assign) UIControlState applicationState;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUICastButton.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKCommon.h>
#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

@protocol GCKUICastButtonDelegate;

/**
 * A subclass of <a href="https://goo.gl/VK61wU"><b>UIButton</b></a> that implements a "Cast"
 * button.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKUICastButton : UIButton

/**
 * A flag that indicates whether a touch event on this button will trigger the display of the
 * Cast dialog that is provided by the framework. By default this property is set to
 * <code>YES</code>. If an application wishes to handle touch events itself, it should set the
 * property to <code>NO</code> and register an appropriate target and action for the touch event.
 * This property cannot be set to NO if @c delegate is set to non-nil value.
 *
 * @deprecated Use GCKUICastButtonDelegate methods to respond to user actions on the cast button.
 */
@property(nonatomic, assign) BOOL triggersDefaultCastDialog GCK_DEPRECATED(
    "Use the GCKUICastButtonDelegate methods to respond to the actions on the cast button.");

/**
 * Set the delegate to respond to the user actions performed on the @c GCKUICastButton. Delegate
 * should not be set to non-nil value if the deprecated property @c triggersDefaultCastDialog
 * is set to NO.
 *
 * @since 4.6.0
 */
@property(nonatomic, weak) id<GCKUICastButtonDelegate> delegate;

/**
 * Constructs a new GCKUICastButton using the given decoder.
 */
- (instancetype)initWithCoder:(NSCoder *)decoder;

/**
 * Constructs a new GCKUICastButton with the given frame.
 */
- (instancetype)initWithFrame:(CGRect)frame;

/**
 * Sets the icons for the active, inactive, and animated states of the button. The supplied images
 * should all be single-color with a transparent background. The color of the images is not
 * significant, as the button's tint color (<code>tintColor</code> property) determines the color
 * that they are rendered in.
 */
- (void)setInactiveIcon:(UIImage *)inactiveIcon
             activeIcon:(UIImage *)activeIcon
         animationIcons:(NSArray<UIImage *> *)animationIcons;

/**
 * Sets the accessibility label for the cast states of the button.
 * This is the recommended way to set accessibility label for the button.
 * Label set by setAccessibilityLabel: is applied to all cast states.
 */
- (void)setAccessibilityLabel:(NSString *)label
                 forCastState:(GCKCastState)state;

@end

/**
 * Use the methods of this protocol to present custom dialog in response to user action.
 *
 * @since 4.6.0
 */
@protocol GCKUICastButtonDelegate <NSObject>

@optional

/**
 * Tells the delegate that the cast button is tapped by the user for the first time on iOS14 or
 * above and cast devices discovery has not started in the current or previous app sessions.
 * Implement this method to present the custom dialog. If not implmemented, the default dialog is
 * presented.
 *
 * @param castButton Instance of @c GCKUICastButton tapped.
 */
- (void)castButtonDidTapToPresentLocalNetworkAccessPermissionDialog:(GCKUICastButton *)castButton;

/**
 * Tells the delegate that the cast button is tapped by the user after the discovery has been
 * initiated in current or previous app session. Implement this method to present the custom dialog
 * as per the cast state. Observe GCKCastContext::castState to update the dialog dynamically as per
 * changes in the cast state. If not implmemented, the default dialog is presented.
 *
 * @param castButton Instance of @c GCKUICastButton tapped.
 * @param castState Cast state when the cast button is tapped.
 */
- (void)castButtonDidTap:(GCKUICastButton *)castButton
    toPresentDialogForCastState:(GCKCastState)castState;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUICastContainerViewController.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

@class GCKUIMiniMediaControlsViewController;
@class GCKUINextUpViewController;

NS_ASSUME_NONNULL_BEGIN

/**
 * A view controller which wraps another View Controller and adds a media playback notification
 * area below that controller. The notification can display a "now playing" item
 * that displays a thumbnail, title, and subtitle for the current media item, a stream progress bar,
 * and a play/pause toggle button. The controller shows and hides this item as appropriate
 * based on the current media playback state on the receiver.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKUICastContainerViewController : UIViewController

/** The view controller to be embedded as the content area of this view controller. */
@property(nonatomic, strong, readonly, nullable) UIViewController *contentViewController;

/** The "now playing" view controller. */
@property(nonatomic, strong, readonly, nullable)
    GCKUIMiniMediaControlsViewController *miniMediaControlsViewController;

/**
 * A flag indicating whether the "now playing" item should be enabled. If enabled, the item will
 * be displayed automatically whenever there is media content loaded or playing on the receiver.
 * The default value is <code>NO</code>.
 */
@property(nonatomic, assign) BOOL miniMediaControlsItemEnabled;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIDeviceVolumeController.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

/**
 * @file GCKUIDeviceVolumeController.h
 */

@class GCKUIMultistateButton;

NS_ASSUME_NONNULL_BEGIN

/**
 * @var GCKUIControlStateMuteOff
 * Custom <a href="https://goo.gl/tZWsqZ"><b>UIControlState</b></a> for the mute toggle button;
 * corresponds to "mute off".
 *
 * @deprecated Use GCKUIButtonStateMuteOff with GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXTERN GCK_DEPRECATED("Use GCKUIButtonStateMuteOff with GCKUIMultistateButton.")
const UIControlState GCKUIControlStateMuteOff;

/**
 * @var GCKUIButtonStateMuteOff
 * GCKUIMultistateButton state for the mute toggle button; corresponds to "mute off".
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStateMuteOff;

/**
 * @var GCKUIControlStateMuteOn
 * Custom <a href="https://goo.gl/tZWsqZ"><b>UIControlState</b></a> for the mute toggle button;
 * corresponds to "mute on".
 *
 * @deprecated Use GCKUIButtonStateMuteOn with GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXTERN GCK_DEPRECATED("Use GCKUIButtonStateMuteOn with GCKUIMultistateButton.")
const UIControlState GCKUIControlStateMuteOn;

/**
 * @var GCKUIButtonStateMuteOn
 * GCKUIMultistateButton state for the mute toggle button; corresponds to "mute on".
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStateMuteOn;

/**
 * A controller for UI views that are used to control or display the volume and mute state of a Cast
 * receiver. The calling application registers its volume-related UI controls with the controller by
 * setting the appropriate properties. The controller then responds to touch events on the controls
 * by issuing the appropriate volume commands to the receiver, and updates the controls based on
 * status information received from the receiver. The controller automatically enables and disables
 * the UI controls as appropriate for the current session and receiver state.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKUIDeviceVolumeController : NSObject

/**
 * A "volume up" button. When the button is tapped, the receiver's volume is increased by the
 * volume increment. The button will be disabled if there is no session currently active or if the
 * current session does not support volume adjustment.
 */
@property(nonatomic, weak, nullable) UIButton *volumeUpButton;

/**
 * A "volume down" button. When the button is tapped, the receiver's volume is decreased by the
 * volume increment. The button will be disabled if there is no session currently active or if the
 * current session does not support volume adjustment.
 */
@property(nonatomic, weak, nullable) UIButton *volumeDownButton;

/**
 * A slider for displaying and changing the current receiver volume. When the slider's value is
 * changed by the user, the volume is updated on the receiver. When a receiver status is received
 * that indicates a change in the receiver's volume, the slider value is updated accordingly. The
 * slider will be disabled if there is no session currently active or if the current session does
 * not support volume adjustment.
 */
@property(nonatomic, weak, nullable) UISlider *volumeSlider;

/**
 * A switch for toggling the receiver's mute state. When the switch is toggled, the mute state is
 * updated on the receiver. When a receiver status is received that indicates a change in the
 * receiver's mute state, the switch is updated accordingly. The switch will be disabled if there is
 * no session currently active  or if the current session does not support muting.
 */
@property(nonatomic, weak, nullable) UISwitch *muteSwitch;

/**
 * A toggle button for muting/unmuting the receiver. The caller should set appropriate "muted" and
 * "unmuted" icons for the button's @ref GCKUIButtonStateMuteOn and @ref GCKUIButtonStateMuteOff
 * states, respectively. The button's state is automatically updated to reflect the current mute
 * state on the receiver. When the button is tapped, the mute state is updated on the receiver. The
 * button will be disabled if there is no session currently active or if the current session does
 * not support volume muting.
 */
@property(nonatomic, weak, nullable) GCKUIMultistateButton *muteToggleButton;

/**
 * Designated initializer.
 */
- (instancetype)init;

/**
 * A convenience method for changing the receiver's volume.  Delegates to the currently active
 * GCKSession object.
 *
 * @param volume The new volume. Must be a value in the range [0.0, 1.0].
 */
- (void)setVolume:(float)volume;

/**
 * A convenience method for changing the receiver's mute state.  Delegates to the currently active
 * GCKSession object.
 *
 * @param muted The new mute state.
 */
- (void)setMuted:(BOOL)muted;

/**
 * A convenience method for increasing the receiver's volume by the volume increment. Delegates to
 * the currently active GCKSession object.
 */
- (void)volumeUp;

/**
 * A convenience method for decreasing the receiver's volume by the volume increment. Delegates to
 * the currently active GCKSession object.
 */
- (void)volumeDown;

/**
 * A convenience method for toggling the mute state. Delegates to the currently active GCKSession
 * object.
 */
- (void)toggleMuted;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIExpandedMediaControlsViewController.h
================================================
// Copyright 2016 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKUIMediaButtonBarProtocol.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A view controller which implements the expanded controls fullscreen view.
 *
 * @since 3.1
 */
GCK_EXPORT
@interface GCKUIExpandedMediaControlsViewController : UIViewController <GCKUIMediaButtonBarProtocol>

/**
 * Whether stream position controls (including the stream position slider, the stream position
 * label, the stream duration label, and the stream progress view) should be hidden for live
 * content. The default value is <code>NO</code>.
 *
 * @since 4.0
 */
@property(nonatomic, assign) BOOL hideStreamPositionControlsForLiveContent;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIImageCache.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A protocol that defines a means of retrieving and caching images. A default implementation is
 * used internally by the framework to cache media artwork that is displayed in the user interface.
 * The application can provide a custom implementation by setting the GCKCastContext::imageCache
 * property.
 *
 * @since 3.0
 */
GCK_EXPORT
@protocol GCKUIImageCache <NSObject>

/**
 * Fetches the image at the given URL, and returns a scaled version of the image. This is an
 * asynchronous operation.
 *
 * @param imageURL The URL of the image.
 * @param completion A block to invoke once the image has been retrieved. The image should be passed
 * to the block. If there was an error retrieving the image, <code>nil</code> should be passed
 * instead. The block should only be invoked on the main thread.
 */
- (void)fetchImageForURL:(NSURL *)imageURL
              completion:(void (^)(UIImage *_Nullable))completion;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIImageHints.h
================================================
// Copyright 2016 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

/**
 * @file GCKUIImageHints.h
 * GCKMediaMetadataImageType enum
 */

#import <GoogleCast/GCKDefines.h>

#import <CoreGraphics/CoreGraphics.h>
#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKMediaMetadataImageType
 * Enum defining a media metadata image type.
 *
 * @since 3.0
 */
typedef NS_ENUM(NSInteger, GCKMediaMetadataImageType) {
  /** An image used by a custom view provided by the application. */
  GCKMediaMetadataImageTypeCustom = 0,
  /** An image used in the Cast dialog, which appears when tapping the Cast button. */
  GCKMediaMetadataImageTypeCastDialog = 1,
  /** An image used in the mini media controller. */
  GCKMediaMetadataImageTypeMiniController = 2,
  /** An image displayed as a background, poster, or fullscreen image. */
  GCKMediaMetadataImageTypeBackground = 3,
};

/**
 * An object that provides hints to a GCKUIImagePicker about the type and size of an image to be
 * selected for display in the UI.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKUIImageHints : NSObject <NSCopying, NSSecureCoding>

/**
 * The image type.
 */
@property(nonatomic, assign, readonly) GCKMediaMetadataImageType imageType;

/**
 * The size at which the image will be displayed.
 */
@property(nonatomic, assign, readonly) CGSize imageSize;

/**
 * Optional custom data that can be used to identify the image. It must be key-value coding
 * compliant.
 */
@property(nonatomic, copy, readonly, nullable) NSObject<NSSecureCoding> *customData;

/**
 * Convenience initializer. Sets the custom data to <code>nil</code>.
 *
 * @param imageType The image type.
 * @param imageSize The image size.
 */
- (instancetype)initWithImageType:(GCKMediaMetadataImageType)imageType imageSize:(CGSize)imageSize;

/**
 * Designated initializer.
 *
 * @param imageType The image type.
 * @param imageSize The image size.
 * @param customData The arbitrary custom data that can be used by a custom GCKUIImagePicker to
 * select an image.
 */
- (instancetype)initWithImageType:(GCKMediaMetadataImageType)imageType
                        imageSize:(CGSize)imageSize
                       customData:(nullable NSObject<NSSecureCoding> *)customData;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIImagePicker.h
================================================
// Copyright 2016 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKImage;
@class GCKMediaMetadata;
@class GCKUIImageHints;

NS_ASSUME_NONNULL_BEGIN

/**
 * An object used for selecting an image for a given purpose from a GCKMediaMetadata object.
 * A default implementation is used internally by the framework which always selects the first
 * image from the metadata for all uses. The application can provide a custom implementation by
 * setting the GCKCastContext::imagePicker property.
 *
 * @since 3.0
 */
GCK_EXPORT
@protocol GCKUIImagePicker <NSObject>

/**
 * Returns an image of the specified type from the media metadata.
 *
 * @param imageHints The hints about how to pick the image.
 * @param metadata The media metadata to pick from.
 * @return The selected image, or <code>nil</code> if there is no appropriate image for the
 * requested type.
 */
- (nullable GCKImage *)getImageWithHints:(GCKUIImageHints *)imageHints
                            fromMetadata:(const GCKMediaMetadata *)metadata;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIMediaButtonBarProtocol.h
================================================
// Copyright 2016 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

/**
 * @file GCKUIMediaButtonBarProtocol.h
 */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * Media control button types.
 *
 * @since 3.1
 */
typedef NS_ENUM(NSInteger, GCKUIMediaButtonType) {
  /**
   * No button, results in empty space at a button position.
   */
  GCKUIMediaButtonTypeNone,
  /**
   * A default button that toggles between play and pause states.
   */
  GCKUIMediaButtonTypePlayPauseToggle,
  /**
   * A default "next" button. When tapped, playback moves to the next media item in the queue. It
   * becomes disabled if there is no next media item in the queue.
   */
  GCKUIMediaButtonTypeSkipNext,
  /**
   * A default "previous" button. When tapped, playback moves to the previous media item in the
   * queue. It becomes disabled if there is no previous media item in the queue.
   */
  GCKUIMediaButtonTypeSkipPrevious,
  /**
   * A default "rewind 30 seconds" button. When tapped, playback skips 30 seconds back in the
   * currently playing media item.
   */
  GCKUIMediaButtonTypeRewind30Seconds,
  /**
   * A default "forward 30 seconds" button. When tapped, playback skips 30 seconds forward in the
   * currently playing media item.
   */
  GCKUIMediaButtonTypeForward30Seconds,
  /**
   * A default "mute toggle" button. When tapped, the receiver's mute state is toggled.
   */
  GCKUIMediaButtonTypeMuteToggle,
  /**
   * A default "closed captions" button. When the button is tapped, the media tracks selection UI is
   * displayed to the user.
   */
  GCKUIMediaButtonTypeClosedCaptions,
  /**
   * A default "stop" button. Whe the button is tapped, playback of the current media item is
   * terminated on the receiver.
   */
  GCKUIMediaButtonTypeStop,

  /**
   * A button created and managed by the client.
   */
  GCKUIMediaButtonTypeCustom,
};

/**
 * The GCKUIMediaButtonBarProtocol delegate protocol.
 *
 * @since 3.1
 */
@protocol GCKUIMediaButtonBarProtocol <NSObject>

/**
 * The maximum number of buttons that can be customized by the receiver.
 * @return Number of buttons.
 */
- (NSUInteger)buttonCount;

/**
* Sets the button type for the button at position <code>index</code>.
*
* @param buttonType The type of the button. If the type is
* @ref GCKUIMediaButtonTypeCustom, a
*     <a href="https://goo.gl/VK61wU"><b>UIButton</b></a> instance should be
*     passed for the same index using @ref setCustomButton:atIndex:. Otherwise a default
*     button is created and presented in that position.
* @param index The position in which the button should be presented. 0 is the left-most position.
* Indices should be smaller than the value returned by @ref buttonCount.
*/
- (void)setButtonType:(GCKUIMediaButtonType)buttonType atIndex:(NSUInteger)index;

/**
 * Returns the current type of button at a given position.
 *
 * @param index The button's position, where 0 is the left-most position.
 * @return The type of the button at the selected position.
 */
- (GCKUIMediaButtonType)buttonTypeAtIndex:(NSUInteger)index;

/**
 * Sets the instance of <a href="https://goo.gl/VK61wU"><b>UIButton</b></a> that should be presented
 * at a given button position.
 *
 * @param customButton The button instance to be presented in the control bar.
 * @param index The position in which the button should be presented. 0 is the left-most position.
 * Indices should be smaller than the value returned by @ref buttonCount.
 */
- (void)setCustomButton:(nullable UIButton *)customButton atIndex:(NSUInteger)index;

/**
 * Returns a reference to the custom button at a given position.
 *
 * @param index The button's position, where 0 is the right-most position.
 * @return A reference to the button at the selected position, or <code>nil</code> if there is no
 * custom button at that position, or the position is invalid.
 */
- (nullable UIButton *)customButtonAtIndex:(NSUInteger)index;

@end

NS_ASSUME_NONNULL_END

/* @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIMediaController.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaStatus.h>
#import <GoogleCast/GCKRemoteMediaClient.h>
#import <GoogleCast/GCKSession.h>
#import <GoogleCast/GCKUIButton.h>
#import <GoogleCast/GCKUIImageHints.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

/**
 * @file GCKUIMediaController.h
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @var GCKUIControlStateRepeatOff
 * Custom <a href="https://goo.gl/tZWsqZ"><b>UIControlState</b></a> for the repeat mode button.
 * Corresponds to @ref GCKMediaRepeatModeOff.
 *
 * @deprecated Use GCKUIButtonStateRepeatOff with GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXTERN GCK_DEPRECATED("Use GCKUIButtonStateRepeatOff with GCKUIMultistateButton.")
const UIControlState GCKUIControlStateRepeatOff;

/**
 * @var GCKUIButtonStateRepeatOff
 * GCKUIMultistateButton state for the repeat mode button. Corresponds to
 * @ref GCKMediaRepeatModeOff.
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStateRepeatOff;

/**
 * @var GCKUIControlStateRepeatAll
 * Custom <a href="https://goo.gl/tZWsqZ"><b>UIControlState</b></a> for the repeat mode button.
 * Corresponds to @ref GCKMediaRepeatModeAll.
 *
 * @deprecated Use GCKUIButtonStateRepeatAll with GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXTERN GCK_DEPRECATED("Use GCKUIButtonStateRepeatAll with GCKUIMultistateButton.")
const UIControlState GCKUIControlStateRepeatAll;

/**
 * @var GCKUIButtonStateRepeatAll
 * GCKUIMultistateButton state for the repeat mode button. Corresponds to
 * @ref GCKMediaRepeatModeAll.
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStateRepeatAll;

/**
 * @var GCKUIControlStateRepeatSingle
 * Custom <a href="https://goo.gl/tZWsqZ"><b>UIControlState</b></a> for the repeat mode button.
 * Corresponds to @ref GCKMediaRepeatModeSingle.
 *
 * @deprecated Use GCKUIButtonStateRepeatSingle with GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXTERN GCK_DEPRECATED("Use GCKUIButtonStateRepeatSingle with GCKUIMultistateButton.")
const UIControlState GCKUIControlStateRepeatSingle;

/**
 * @var GCKUIButtonStateRepeatSingle
 * GCKUIMultistateButton state for the repeat mode button. Corresponds to
 * @ref GCKMediaRepeatModeSingle.
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStateRepeatSingle;

/**
 * @var GCKUIControlStateShuffle
 * Custom <a href="https://goo.gl/tZWsqZ"><b>UIControlState</b></a> for the repeat mode button.
 * Corresponds to @ref GCKMediaRepeatModeAllAndShuffle.
 *
 * @deprecated Use GCKUIButtonStateShuffle with GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXTERN GCK_DEPRECATED("Use GCKUIButtonStateShuffle with GCKUIMultistateButton.")
const UIControlState GCKUIControlStateShuffle;

/**
 * @var GCKUIButtonStateShuffle
 * GCKUIMultistateButton state for the repeat mode button. Corresponds to
 * @ref GCKMediaRepeatModeAllAndShuffle.
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStateShuffle;

/**
 * @var GCKUIControlStatePlay
 * Custom <a href="https://goo.gl/tZWsqZ"><b>UIControlState</b></a> for the play/pause toggle
 * button. Indicates media is playing.
 *
 * @deprecated Use GCKUIButtonStatePlay with GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXTERN GCK_DEPRECATED("Use GCKUIButtonStatePlay with GCKUIMultistateButton.")
const UIControlState GCKUIControlStatePlay;

/**
 * @var GCKUIButtonStatePlay
 * GCKUIMultistateButton state for the play/pause toggle button. Indicates media is playing.
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStatePlay;

/**
 * @var GCKUIControlStatePause
 * Custom <a href="https://goo.gl/tZWsqZ"><b>UIControlState</b></a> for the play/pause toggle
 * button. Indicates media is paused.
 *
 * @deprecated Use GCKUIButtonStatePause with GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXTERN GCK_DEPRECATED("Use GCKUIButtonStatePause with GCKUIMultistateButton.")
const UIControlState GCKUIControlStatePause;

/**
 * @var GCKUIButtonStatePause
 * GCKUIMultistateButton state for the play/pause toggle button. Indicates media is paused.
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStatePause;

/**
 * @var GCKUIButtonStatePlayLive
 * Custom GCKUIMultistateButton state for the play/pause toggle button. Indicates media is playing
 * and is live.
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStatePlayLive;

/**
 * A block for formatting an arbitrary object as an
 * <a href="https://goo.gl/5dXzU6"><b>NSString</b></a>.
 *
 * @since 3.0
 */
typedef NSString *_Nonnull (^GCKUIValueFormatter)(const id value);

@protocol GCKUIMediaControllerDelegate;
@class GCKUIPlaybackRateController;
@class GCKUIPlayPauseToggleController;
@class GCKUIStreamPositionController;

/**
 * A controller for UI views that are used to control or display the status of media playback on
 * a Cast receiver. The calling application registers its media-related UI controls with the
 * controller by setting the appropriate properties. The controller then responds to touch events
 * on the controls by issuing the appropriate media commands to the receiver, and updates the
 * controls based on status information and media metadata received from the receiver. The
 * controller automatically enables and disables the UI controls as appropriate for the current
 * session and media player state. It additionally disables all of the controls while a request is
 * in progress.
 *
 * See GCKUIMediaControllerDelegate for the delegate protocol.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKUIMediaController : NSObject

/**
 * The delegate for receiving notificatiosn from the GCKUIMediaController.
 */
@property(nonatomic, weak, nullable) id<GCKUIMediaControllerDelegate> delegate;

/**
 * The session that is associated with this controller.
 */
@property(nonatomic, strong, readonly, nullable) GCKSession *session;

/**
 * Whether there is media currently loaded (or loading) on the receiver. If no Cast session is
 * active, this will be <code>NO</code>.
 */
@property(nonatomic, assign, readonly) BOOL mediaLoaded;

/**
 * Whether there is a current item in the queue.
 */
@property(nonatomic, assign, readonly) BOOL hasCurrentQueueItem;

/**
 * Whether there is an item being preloaded in the queue.
 */
@property(nonatomic, assign, readonly) BOOL hasLoadingQueueItem;

/**
 * The latest known media player state. If no Cast session is active, this will be player state
 * just before the last session ended. If there was no prior session, this will be
 * @ref GCKMediaPlayerStateUnknown.
 */
@property(nonatomic, assign, readonly) GCKMediaPlayerState lastKnownPlayerState;

/**
 * The latest known media stream position. If no Cast session is active, this will be the stream
 * position of the media just before the last session ended. If there was no prior session, this
 * will be @ref kGCKInvalidTimeInterval.
 */
@property(nonatomic, assign, readonly) NSTimeInterval lastKnownStreamPosition;

/**
 * A "play" button. When the button is tapped, playback of the currently loaded media is started or
 * resumed on the receiver. The button will be disabled if playback is already in progress, or if
 * there is no media currently loaded, or if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIButton *playButton;

/**
 * A "pause" button. When the button is tapped, playback of the currently loaded media is paused on
 * the receiver. The button will be disabled if the currently loaded media does not support pausing,
 * or if playback is not currently in progress, or if there is no media currently loaded, or if
 * there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIButton *pauseButton;

/**
 * A "play/pause" toggle button. The caller should set appropriate icons for the button's
 * @ref GCKUIButtonStatePlay, @ref GCKUIButtonStatePlayLive, and @ref GCKUIButtonStatePause button
 * states, namely, a "pause" icon for the play state, a "stop" icon for the play-live state, and a
 * "play" icon for the pause state. The button state is automatically updated to reflect the current
 * playback state on the receiver. When the button is tapped, playback of the currently loaded media
 * is paused or resumed on the receiver. The button will be disabled if the currently loaded media
 * does not support pausing, or if playback is not currently in progress or paused, or if there is
 * no media currently loaded, or if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) GCKUIMultistateButton *playPauseToggleButton;

/**
 * A "play/pause" toggle controller. Used as a stand-in for a custom, application-supplied
 * play/pause toggle UI. See GCKUIPlayPauseToggleController for details.
 *
 * @since 3.4
 */
@property(nonatomic, strong, nullable)
    GCKUIPlayPauseToggleController *playPauseToggleController;

/**
 * A "stop" button. When the button is tapped, playback of the currently loaded media is stopped on
 * the receiver. The button will be disabled if there is no media currently loaded, or if there is
 * no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIButton *stopButton;

/**
 * A button for seeking 30 seconds forward in the currently playing media item. The button will be
 * disabled if there is no media
 * currently loaded, or if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIButton *forward30SecondsButton;

/**
 * A button for seeking 30 seconds back in the currently playing media item. The button will be
 * disabled if there is no media currently loaded, or if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIButton *rewind30SecondsButton;

/**
 * A button for pausing queue playback once the current item finishes playing.
 */
@property(nonatomic, weak, nullable) UIButton *pauseQueueButton;

/**
 * A "next" button. When the button is tapped, playback moves to the next media item in the queue.
 * The button will be disabled if the operation is not supported, or if there is no media currently
 * loaded, or if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIButton *nextButton;

/**
 * A "previous" button. When the button is tapped, playback moves to the previous media item in the
 * queue. The button will be disabled if the operation is not supported, or if there is no media
 * currently loaded, or if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIButton *previousButton;

/**
 * A button for cycling through the available queue repeat modes. (See @ref GCKMediaRepeatMode.) The
 * caller should set appropriate icons for the button's @ref GCKUIButtonStateRepeatOff,
 * @ref GCKUIButtonStateRepeatSingle, @ref GCKUIButtonStateRepeatAll, and
 * @ref GCKUIButtonStateShuffle button states. The button state is automatically updated to reflect
 * the current queue repeat mode on the receiver. Tapping on the button cycles to the next repeat
 * mode, in the order:
 *
 * @ref GCKMediaRepeatModeOff &rarr; @ref GCKMediaRepeatModeAll &rarr;
 * @ref GCKMediaRepeatModeSingle &rarr; @ref GCKMediaRepeatModeAllAndShuffle
 *
 * The button will be disabled if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) GCKUIMultistateButton *repeatModeButton;

/**
 * A slider for displaying and changing the current stream position. When the slider's value is
 * changed by the user, the stream position of the currently loaded media is updated on the
 * receiver. While playback of media is in progress on the receiver, the slider's value is updated
 * in realtime to reflect the current stream position. The slider will be disabled if the currently
 * loaded media does not support seeking, or if there is no media currently loaded, or if there is
 * no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UISlider *streamPositionSlider;

/**
 * A view for displaying the current stream progress. While playback of media is in progress on the
 * receiver, the views's value is updated in realtime to reflect the current stream position. The
 * view will be disabled if the currently loaded media is a live stream, or if there is no media
 * currently loaded, or if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIProgressView *streamProgressView;

/**
 * A label for displaying the current stream position, in minutes and seconds. If there is no media
 * currently loaded, or if there is no Cast session currently active, the label displays a localized
 * form of "--:--".
 */
@property(nonatomic, weak, nullable) UILabel *streamPositionLabel;

/**
 * A label for displaying the current stream duration, in minutes and seconds. If the currently
 * loaded media does not have a duration (for example, if it is a live stream), or if there is no
 * media currently loaded, or if there is no Cast session currently active, the label displays a
 * localized form of "--:--".
 */
@property(nonatomic, weak, nullable) UILabel *streamDurationLabel;

/**
 * A label for displaying the remaining stream time (the duration minus the position), in minutes
 * and seconds. If the currently loaded media does not have a duration (for example, if it is a live
 * stream), or if there is no media currently loaded, or if there is no Cast session currently
 * active, the label displays a localized form of "--:--".
 */
@property(nonatomic, weak, nullable) UILabel *streamTimeRemainingLabel;

/**
 * A stream posdition controller. Used as a stand-in for a custom, application-supplied
 * stream position and/or seek UI. See GCKUIStreamPositionController for details.
 *
 * @since 3.4
 */
@property(nonatomic, strong, nullable)
    GCKUIStreamPositionController *streamPositionController;

/**
 * A stream playback rate controller. See GCKUIPlaybackRateController for details.
 *
 * @since 4.0
 */
@property(nonatomic, strong, nullable)
    GCKUIPlaybackRateController *playbackRateController;

/**
 * Whether remaining stream time will be displayed as a negative value, for example, "-1:23:45". By
 * default this property is set to <code>YES</code>.
 */
@property(nonatomic, assign) BOOL displayTimeRemainingAsNegativeValue;

/**
 * Whether stream position controls (including the stream position slider, the stream position
 * label, the stream duration label, and the stream progress view) should be hidden for live
 * content. The default value is <code>NO</code>.
 *
 * @since 4.0
 */
@property(nonatomic, assign) BOOL hideStreamPositionControlsForLiveContent;

/**
 * A button for selecting audio tracks and/or closed captions or subtitles. When the button is
 * tapped, the media tracks selection UI is displayed to the user. The button will be disabled if
 * the currently loaded media does not have any selectable media tracks, or if there is no media
 * currently loaded, or if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIButton *tracksButton;

/**
 * A label for displaying a subtitle for the currently loaded media. If there is no subtitle field
 * explicitly set in the metadata, the label will display the most appropriate metadata field based
 * on the media type, for example the studio name for a movie or the artist name for a music track.
 */
@property(nonatomic, weak, nullable) UILabel *smartSubtitleLabel;

/**
 * An activity indicator view for indicating that the media is in a loading state.
 */
@property(nonatomic, weak, nullable) UIActivityIndicatorView *mediaLoadingIndicator;

/**
 * A label for displaying the amount of time left until the ad can be skipped.
 *
 * @since 4.3
 */
@property(nonatomic, weak, nullable) UILabel *skipAdLabel;

/**
 * A button for skipping the current ad.
 *
 * @since 4.3
 */
@property(nonatomic, weak, nullable) UIButton *skipAdButton;

/**
 * Initializes an instance.
 */
- (instancetype)init;

/**
 * Binds a <a href="https://goo.gl/POkr7n"><b>UILabel</b></a> to a metadata key. The view will
 * display the current value of the corresponding metadata field.
 *
 * See GCKMediaMetadata for a list of predefined metadata keys.
 *
 * @param label The <a href="https://goo.gl/POkr7n"><b>UILabel</b></a> that will display the value.
 * @param key The metadata key.
 */
- (void)bindLabel:(UILabel *)label toMetadataKey:(NSString *)key;

/**
 * Binds a <a href="https://goo.gl/POkr7n"><b>UILabel</b></a> to a metadata key. The view will
 * display the current value of the corresponding metadata field.
 *
 * See GCKMediaMetadata for a list of predefined metadata keys.
 *
 * @param label The <a href="https://goo.gl/POkr7n"><b>UILabel</b></a> that will display the value.
 * @param key The metadata key.
 * @param formatter A block that will produce the desired string representation of the value.
 */
- (void)bindLabel:(UILabel *)label
    toMetadataKey:(NSString *)key
    withFormatter:(GCKUIValueFormatter)formatter;

/**
 * Binds a <a href="https://goo.gl/ncWBFi"><b>UITextView</b></a> to a metadata key. The view will
 * display the current value of the corresponding metadata field.
 *
 * See GCKMediaMetadata for a list of predefined metadata keys.
 *
 * @param textView The <a href="https://goo.gl/ncWBFi"><b>UITextView</b></a> that will display the
 * value.
 * @param key The metadata key.
 */
- (void)bindTextView:(UITextView *)textView toMetadataKey:(NSString *)key;

/**
 * Binds a <a href="https://goo.gl/ncWBFi"><b>UITextView</b></a> to a metadata key. The view will
 * display the current value of the corresponding metadata field.
 *
 * See GCKMediaMetadata for a list of predefined metadata keys.
 *
 * @param textView The <a href="https://goo.gl/ncWBFi"><b>UITextView</b></a> that will display the
 * value.
 * @param key The metadata key.
 * @param formatter A block that will produce the desired string representation of the value.
 */
- (void)bindTextView:(UITextView *)textView
       toMetadataKey:(NSString *)key
       withFormatter:(GCKUIValueFormatter)formatter;

/**
 * Binds a <a href="https://goo.gl/8Eb8FS"><b>UIImageView</b></a> to a GCKUIImageHints instance.
 * The currently installed GCKUIImagePicker will be used to select an image from the metadata for
 * the view.
 *
 * @param imageView The <a href="https://goo.gl/8Eb8FS"><b>UIImageView</b></a> that will display the
 * selected image.
 * @param imageHints The image hints.
 */
- (void)bindImageView:(UIImageView *)imageView toImageHints:(GCKUIImageHints *)imageHints;

/**
 * Binds a @c UIControl to rewind playback of the current item by the passed value as seconds.
 * The view will be updated based on @c GCKCastSession state, the remote playback state and whether
 * it is a livestream. A target is also added to the @c UIControl to capture @c
 * UIControlEventTouchUpInside event. Do not add target of this type on the @c UIControl. To capture
 * the event use the @c GCKUIMediaControllerDelegate methods instead.
 *
 * @param control The UI element that the user interacts with. Typically this would be an instance
 * of @c UIButton.
 * @param rewindSeconds The number of seconds to rewind the media.
 */
- (void)bindControlView:(UIControl *)control toRewindForTime:(NSTimeInterval)rewindSeconds;

/**
 * Binds a @c UIControl to forward playback of the current item by the passed value as seconds.
 * The view will be updated based on @c GCKCastSession state, the remote playback state and whether
 * it is a livestream. A target is also added to the @c UIControl to capture @c
 * UIControlEventTouchUpInside event. Do not add target of this type on the @c UIControl. To capture
 * the event use the @c GCKUIMediaControllerDelegate methods instead.
 *
 * @param control The UI element that the user interacts with. Typically this would be an instance
 * of @c UIButton.
 * @param forwardSeconds The number of seconds to skip the media.
 */
- (void)bindControlView:(UIControl *)control toForwardForTime:(NSTimeInterval)forwardSeconds;

/**
 * Unbinds the specified view.
 *
 * @param view The view to unbind.
 */
- (void)unbindView:(UIView *)view;

/**
 * Unbinds all bound views.
 */
- (void)unbindAllViews;

/**
 * Changes the repeat mode for the queue to the next mode in the cycle:
 *
 * @ref GCKMediaRepeatModeOff &rarr; @ref GCKMediaRepeatModeAll &rarr;
 * @ref GCKMediaRepeatModeSingle &rarr; @ref GCKMediaRepeatModeAllAndShuffle
 *
 * @return The new repeat mode.
 */
- (GCKMediaRepeatMode)cycleRepeatMode;

/**
 * A convenience method for displaying the media track selection UI.
 */
- (void)selectTracks;

/**
 * Sends and monitors the skip ad request.
 *
 * @since 4.3
 */
- (void)skipAd;

@end

/**
 * The GCKUIMediaController delegate protocol.
 *
 * @since 3.0
 */
@protocol GCKUIMediaControllerDelegate <NSObject>

@optional

/**
 * Called when the remote media player state has changed.
 *
 * @param mediaController The GCKUIMediaController instance.
 * @param playerState The new player state.
 * @param streamPosition The last known stream position at the time of the player state change.
 */
- (void)mediaController:(GCKUIMediaController *)mediaController
    didUpdatePlayerState:(GCKMediaPlayerState)playerState
      lastStreamPosition:(NSTimeInterval)streamPosition;

/**
 * Called when preloading has started for an upcoming media queue item.
 *
 * @param mediaController The GCKUIMediaController instance.
 * @param itemID The ID of the item that is being preloaded, or @ref kGCKMediaQueueInvalidItemID
 * if none.
 */
- (void)mediaController:(GCKUIMediaController *)mediaController
    didBeginPreloadForItemID:(NSUInteger)itemID;

/**
 * Called when new media status has been received from the receiver, and after the
 * GCKUIMediaController has finished processing the updated status.
 *
 * @param mediaController The GCKUIMediaController instance.
 * @param mediaStatus The new media status.
 */
- (void)mediaController:(GCKUIMediaController *)mediaController
    didUpdateMediaStatus:(GCKMediaStatus *)mediaStatus;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIMediaTrackSelectionViewController.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

@class GCKMediaInformation;
@protocol GCKUIMediaTrackSelectionViewControllerDelegate;

NS_ASSUME_NONNULL_BEGIN

/**
 * A view controller that displays a list of the available text and audio tracks for a given media
 * item.
 *
 * See GCKUIMediaTrackSelectionViewControllerDelegate for the delegate protocol.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKUIMediaTrackSelectionViewController : UITabBarController

/**
 * The delegate that receives selection notifications from the controller.
 */
@property(nonatomic, weak, nullable)
    id<GCKUIMediaTrackSelectionViewControllerDelegate> selectionDelegate;

/**
 * The media information from which the list of available media tracks will be obtained.
 */
@property(nonatomic, strong, nullable) GCKMediaInformation *mediaInfo;

/**
 * The list of currently selected media track IDs.
 */
@property(nonatomic, copy, nullable) NSArray<NSNumber *> *selectedTrackIDs;

@end

/**
 * The GCKUIDeviceConnectionViewController delegate protocol.
 *
 * @since 3.0
 */
@protocol GCKUIMediaTrackSelectionViewControllerDelegate <NSObject>

/**
 * Called when the user has made a media track selection. The list may contain at most one
 * audio track ID and one text track ID. The absence of an audio track ID indicates that the
 * default audio track is selected, and the absence of a text track ID indicates that no text
 * track is selected.
 */
- (void)didSelectMediaTracks:(NSArray<NSNumber *> *)mediaTrackIDs;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIMiniMediaControlsViewController.h
================================================
// Copyright 2016 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKUIMediaButtonBarProtocol.h>

#import <Foundation/Foundation.h>

/**
 * @file GCKUIMiniMediaControlsViewController.h
 */

@protocol GCKUIMiniMediaControlsViewControllerDelegate;

NS_ASSUME_NONNULL_BEGIN

/**
 * A view controller which implements the "now playing" control bar. In its default configuration,
 * it displays a thumbnail, title, and subtitle for the current media item, a stream progress bar,
 * and a play/pause toggle button.
 *
 * See GCKUIMiniMediaControlsViewControllerDelegate for the delegate protocol.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKUIMiniMediaControlsViewController : UIViewController <GCKUIMediaButtonBarProtocol>

/**
 * The view controller's delgate, typically a full-screen view controller in charge of presenting
 * and hiding this control bar when appropriate.
 */
@property(nonatomic, weak, nullable)
    id<GCKUIMiniMediaControlsViewControllerDelegate> delegate;

/**
 * Whether the thumbnail image should be displayed or not. By default this property is set to
 * <code>YES</code>.
 */
@property(nonatomic, assign) BOOL thumbnailEnabled;

/**
 * Indicates the display state of the control bar. When <code>YES</code>, there is media being
 * casted which can be controlled by the control bar, and it can be made visible. When
 * <code>NO</code>, the control bar should be hidden.
 */
@property(nonatomic, assign, readonly) BOOL active;

/** The minimal (and preferred) height at which this view should be presented. */
@property(nonatomic, assign, readonly) CGFloat minHeight;

@end

/**
 * The GCKUIMiniMediaControlsViewController delegate protocol.
 *
 * @since 3.0
 */
@protocol GCKUIMiniMediaControlsViewControllerDelegate <NSObject>

/**
 * Notifies about a change in the active state of the control bar.
 *
 * @param miniMediaControlsViewController The now playing view controller instance.
 * @param shouldAppear If <code>YES</code>, the control bar can be displayed. If <code>NO</code>,
 *     the control bar should be hidden.
 */

- (void)miniMediaControlsViewController:
            (GCKUIMiniMediaControlsViewController *)miniMediaControlsViewController
                           shouldAppear:(BOOL)shouldAppear;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIMultistateButton.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A subclass of <a href="https://goo.gl/VK61wU"><b>UIButton</b></a> that supports multiple states.
 * Assign an image to each state with the GCKUIMultistateButton::setImage:forButtonState: method.
 *
 * @since 4.0
 */
GCK_EXPORT
@interface GCKUIMultistateButton : UIButton

/**
 * The button's application state.
 */
@property(nonatomic, assign) NSUInteger buttonState;

/**
 * Sets the image to display for a given button state.
 *
 * @param image The image.
 * @param buttonState The button state.
 */
- (void)setImage:(UIImage *)image forButtonState:(NSUInteger)buttonState;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIPlaybackRateController.h
================================================
// Copyright 2017 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class that can be used to implement a custom stream playback rate UI.
 * The application may either subclass this class and override the
 * GCKUIPlaybackRateController::playbackRate and GCKUIPlaybackRateController::inputEnabled
 * setters, or use KVO to listen for changes to these properties, and update its playback rate
 * and/or playback rate UI control(s) accordingly.
 *
 * @since 4.0
 */
GCK_EXPORT
@interface GCKUIPlaybackRateController : NSObject

/** Designated initializer. */
- (instancetype)init;

/**
 * The current stream playback rate from the GCKRemoteMediaClient. The GCKUIMediaController writes
 * this property whenever the playback rate changes. The GCKUIMediaController observes the property
 * (unless it is in the process of writing it) and if it changes, it issues the appropriate media
 * command with the GCKRemoteMediaClient to change the playback rate.
 */
@property(nonatomic, assign) float playbackRate;

/**
 * The GCKUIMediaController writes this property to enable or disable the UI control(s) managed by
 * this controller. Media-related UI controls are temporarily disabled while a media command is
 * in-flight.
 */
@property(nonatomic, assign) BOOL inputEnabled;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIPlayPauseToggleController.h
================================================
// Copyright 2017 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

/**
 * @file GCKUIPlayPauseToggleController.h
 * GCKUIPlayPauseState enum.
 */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

/**
 * @enum GCKUIPlayPauseState
 *
 * The play/pause state for a GCKUIPlayPauseToggleController.
 */
typedef NS_ENUM(NSInteger, GCKUIPlayPauseState) {
  GCKUIPlayPauseStateNone = 0,
  GCKUIPlayPauseStatePlay = 1,
  GCKUIPlayPauseStatePause = 2
};

NS_ASSUME_NONNULL_BEGIN

/**
 * A class that can be used to implement a custom play/pause toggle UI, in situations where a
 * GCKUIMultistateButton will not suffice. The application may either subclass this class and
 * override the  GCKUIPlayPauseToggleController::playPauseState and
 * GCKUIPlayPauseToggleController::inputEnabled setters, or use KVO to listen for changes to these
 * properties, and update its play/pause UI control(s) accordingly.
 *
 * @since 3.4
 */
GCK_EXPORT
@interface GCKUIPlayPauseToggleController : NSObject

/** Designated initializer. */
- (instancetype)init;

/**
 * The current play/pause state of the GCKRemoteMediaClient. The GCKUIMediaController writes this
 * property whenever the receiver's play/pause state changes. It observes the property (unless it is
 * in the process of writing it) and if it changes, it issues the appropriate media command with
 * the GCKRemoteMediaClient to change the receiver's player state accordingly.
 */
@property(nonatomic, assign) GCKUIPlayPauseState playPauseState;

/**
 * The GCKUIMediaController writes this property to enable or disable the UI control(s) managed by
 * this controller. Media-related UI controls are temporarily disabled while a media command is
 * in-flight.
 */
@property(nonatomic, assign) BOOL inputEnabled;

@end

NS_ASSUME_NONNULL_END

/** @endcond */




================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIStreamPositionController.h
================================================
// Copyright 2017 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class that can be used to implement a custom stream position and/or seek UI, in situations
 * where ordinary <a href="https://goo.gl/H71tKD"><b>UISlider</b></a>,
 * <a href="https://goo.gl/LoRoAx"><b>UIProgressView</b></a>, and
 * <a href="https://goo.gl/POkr7n"><b>UILabel</b></a> controls will not suffice.
 * The application may either subclass this class and override the
 * GCKUIStreamPositionController::streamPosition, GCKUIStreamPositionController::streamDuration,
 * and GCKUIStreamPositionController::inputEnabled
 * setters, or use KVO to listen for changes to these properties, and update its stream position
 * and/or seek UI control(s) accordingly.
 *
 * @since 3.4
 */
GCK_EXPORT
@interface GCKUIStreamPositionController : NSObject

/** Designated initializer. */
- (instancetype)init;

/**
 * The current stream position from the GCKRemoteMediaClient. The GCKUIMediaController writes this
 * property whenever the stream position changes; while the stream is advancing, the property will
 * be updated once per second. The GCKUIMediaController observes the property (unless it is
 * in the process of writing it) and if it changes, it issues the appropriate media command with
 * the GCKRemoteMediaPlayer to seek to the new stream position. Note that updating this value on
 * an unseekable stream will have no effect.
 */
@property(nonatomic, assign) NSTimeInterval streamPosition;

/**
 * The current stream duration from the GCKRemoteMediaClient. The GCKUIMediaController writes this
 * property whenever the stream duration changes. If the stream does not have a known duration
 * (because it is a live stream, for example), then the value written will be @ref
 * kGCKInvalidTimeInterval. It is not meaningful for the application to change this value.
 */
@property(nonatomic, assign) NSTimeInterval streamDuration;

/**
 * The GCKUIMediaController writes this property to enable or disable the UI control(s) managed by
 * this controller. Media-related UI controls are temporarily disabled while a media command is
 * in-flight.
 */
@property(nonatomic, assign) BOOL inputEnabled;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIStyle.h
================================================
// Copyright 2016 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKUIStyleAttributes.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 *
 * @since 3.3
 */
GCK_EXPORT
@interface GCKUIStyle : NSObject

/**
 * Returns the GCKUIStyle singleton instance.
 */
+ (GCKUIStyle *)sharedInstance;

/**
 * Forces a refresh of all currently visible views, so that any changes to the styling will
 * take effect immediately.
 */
- (void)applyStyle;

/**
 * The root of the styling attributes tree.
 */
@property(nonatomic, strong, readonly) GCKUIStyleAttributesCastViews *castViews;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIStyleAttributes.h
================================================
// Copyright 2016 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class for controlling the style (colors, fonts, icons) of the default views of the framework.
 *
 * @since 3.3
 */
GCK_EXPORT
@interface GCKUIStyleAttributes : NSObject

/**
 * An image that will be used in "closed captions" buttons in the framework's default views.
 */
@property(nonatomic) UIImage *closedCaptionsImage;
/**
 * An image that will be used in "forward 30 seconds" buttons in the frameworks default views.
 */
@property(nonatomic) UIImage *forward30SecondsImage;
/**
 * An image that will be used in "rewind 30 seconds" buttons in the framework's default views.
 */
@property(nonatomic) UIImage *rewind30SecondsImage;
/**
 * An image that will be used to indicate that a slider is a volume slider in the framework's
 * default views.
 */
@property(nonatomic) UIImage *volumeImage;
/**
 * An image that will be used in the "mute toggle" button in the framework's default views.
 * This is the image that will be displayed while the receiver is muted.
 */
@property(nonatomic) UIImage *muteOffImage;
/**
 * An image that will be used in the "mute toggle" button in the framework's default views. This is
 * the image that will be displayed while the receiver is not muted.
 */
@property(nonatomic) UIImage *muteOnImage;
/**
 * An image that will be used in the "play/pause toggle" button in the framework's default views.
 * This is the image that will be displayed while the receiver is playing.
 */
@property(nonatomic) UIImage *pauseImage;
/**
 * An image that will be used in the "play/pause toggle" button in the framework's default views.
 * This is the image that will be displayed while the receiver is paused.
 */
@property(nonatomic) UIImage *playImage;
/**
 * An image that will be used in "forward 30 seconds" buttons in the framework's default views.
 */
@property(nonatomic) UIImage *skipNextImage;
/**
 * An image that will be used in "forward 30 seconds" buttons in the framework's default views.
 */
@property(nonatomic) UIImage *skipPreviousImage;
/**
 * An image that will be used in the track selector, to select the audio track chooser view.
 */
@property(nonatomic) UIImage *audioTrackImage;
/**
 * An image that will be used in the track selector, to select the subtitle track chooser view.
 */
@property(nonatomic) UIImage *subtitlesTrackImage;
/**
 * An image that will be used in "stop" buttons in the framework's default views.
 */
@property(nonatomic) UIImage *stopImage;
/**
 * The UIFont to be used in labels of buttons in the framework's default views.
 */
@property(nonatomic) UIFont *buttonTextFont;
/**
 * The color to be used in labels of buttons in the framework's default views.
 *
 * @since 3.4
 */
@property(nonatomic) UIColor *buttonTextColor;
/**
 * The shadow color to be used in labels of buttons in the framework's default views.
 */
@property(nonatomic) UIColor *buttonTextShadowColor;
/**
 * The offset for the shadow for labels of buttons in the framework's default views.
 */
@property(nonatomic, assign) CGSize buttonTextShadowOffset;
/**
 * The UIFont to be used in labels of type "body" in the framework's default views.
 */
@property(nonatomic) UIFont *bodyTextFont;
/**
 * The UIFont to be used in labels of type "heading" in the framework's default views.
 */
@property(nonatomic) UIFont *headingTextFont;
/**
 * The font to be used in labels of type "caption" in the framework's default views.
 */
@property(nonatomic) UIFont *captionTextFont;
/**
 * The color to be used in labels of type "body" in the framework's default views.
 */
@property(nonatomic) UIColor *bodyTextColor;
/**
 * The shadow color to be used in labels of type "body" in the framework's default views.
 */
@property(nonatomic) UIColor *bodyTextShadowColor;
/**
 * The color to be used in labels of type "heading" in the framework's default views.
 */
@property(nonatomic) UIColor *headingTextColor;
/**
 * The shadow color to be used in labels of type "heading" in the framework's default views.
 */
@property(nonatomic) UIColor *headingTextShadowColor;
/**
 * The color to be used in labels of type "caption" in the framework's default views.
 */
@property(nonatomic) UIColor *captionTextColor;
/**
 * The shadow color to be used in labels of type "caption" in the framework's default views.
 */
@property(nonatomic) UIColor *captionTextShadowColor;
/**
 * The background color to be used on the framework's default views.
 */
@property(nonatomic) UIColor *backgroundColor;
/**
 * The color to use as tint color on all buttons and icons on the framework's default views.
 */
@property(nonatomic) UIColor *iconTintColor;
/**
 * The offset for the shadow for labels of type "body" in the framework's default views.
 */
@property(nonatomic, assign) CGSize bodyTextShadowOffset;
/**
 * The offset for the shadow for labels of type "caption" in the framework's default views.
 */
@property(nonatomic, assign) CGSize captionTextShadowOffset;
/**
 * The offset for the shadow for labels of type "heading" in the framework's default views.
 */
@property(nonatomic, assign) CGSize headingTextShadowOffset;

/**
 * The color used for the unseekable progress tracks on the slider views.
 *
 * @since 4.4.1
 */
@property(nonatomic) UIColor *sliderUnseekableProgressColor;

/**
 * The color used for the seekable progress track, and thumb on the slider views.
 *
 * @since 4.4.1
 */
@property(nonatomic) UIColor *sliderProgressColor;

/**
 * The color used for the seekable and unplayed progress track on the slider views.
 *
 * @since 4.4.1
 */
@property(nonatomic) UIColor *sliderSecondaryProgressColor;

/**
 * The background color of the tooltip label of the slider thumb.
 *
 * @since 4.4.1
 */
@property(nonatomic) UIColor *sliderTooltipBackgroundColor;

/**
 * The color used for the marker of live indicator.
 *
 * @since 4.4.1
 */
@property(nonatomic) UIColor *liveIndicatorColor;

/**
 * The UIViewContentMode of the ad image on the expanded view controller wrapped in a NSNumber.
 *
 * @since 4.4.1
 */
@property(nonatomic) NSNumber *adImageContentMode;

/**
 * The UIViewContentMode of the background image on the expanded view controller wrapped in a
 * NSNumber.
 *
 * @since 4.4.1
 */
@property(nonatomic) NSNumber *backgroundImageContentMode;

/**
 * The color used to draw the circular ad marker on the seek bar in the played segment of the
 * slider. Default is Yellow.
 *
 * @since 4.6.0
 */
@property(nonatomic) UIColor *playedAdMarkerFillColor;

/**
 * The color used to draw the circular ad marker on the seek bar in the un-played segment of the
 * slider. Default is Yellow.
 *
 * @since 4.6.0
 */
@property(nonatomic) UIColor *unplayedAdMarkerFillColor;

/**
 * The color to be used as thumb tint color of volume slider.
 *
 * @since 4.8.0
 */
@property(nonatomic) UIColor *volumeSliderThumbTintColor;

/**
 * The color to be used as minimum track tint color of volume slider.
 *
 * @since 4.8.0
 */
@property(nonatomic) UIColor *volumeSliderMinimumTrackTintColor;

/**
 * The color to be used as maximum track tint color of volume slider.
 *
 * @since 4.8.0
 */
@property(nonatomic) UIColor *volumeSliderMaximumTrackTintColor;

@end

/**
 * The style attributes for the view group representing the navigation bar of device controller.
 * Can be accessed as castViews.deviceController.connectionController.navigation.
 *
 * @since 4.3.5
 */
GCK_EXPORT
@interface GCKUIStyleAttributesConnectionNavigation : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing the toolbar of device controller.
 * Can be accessed as castViews.deviceController.connectionController.toolbar.
 *
 * @since 4.3.5
 */
GCK_EXPORT
@interface GCKUIStyleAttributesConnectionToolbar : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing the initial instructions overlay.
 * Can be accessed as castViews.instructions.
 */
GCK_EXPORT
@interface GCKUIStyleAttributesInstructions : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing the guest-mode pairing dialog.
 * Can be accessed as castViews.deviceControl.guestModePairingDialog
 *
 * @deprecated Guest mode feature has been removed. Using this API will have no affect on the
 * functionality.
 */
GCK_EXPORT
__deprecated_msg("No-op API. This will be removed in a later release.")
    @interface GCKUIStyleAttributesGuestModePairingDialog : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing the media track selector.
 * Can be accessed as castViews.mediaControl.trackSelector
 */
GCK_EXPORT
@interface GCKUIStyleAttributesTrackSelector : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing the mini controller.
 * Can be accessed as castViews.mediaControl.miniController
 */
GCK_EXPORT
@interface GCKUIStyleAttributesMiniController : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing the expanded controller.
 * Can be accessed as castViews.mediaControl.expandedController
 */
GCK_EXPORT
@interface GCKUIStyleAttributesExpandedController : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing the device chooser.
 * Can be accessed as castViews.deviceControl.deviceChooser
 */
GCK_EXPORT
@interface GCKUIStyleAttributesDeviceChooser : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing the connection controller.
 * Can be accessed as castViews.deviceControl.connectionController
 */
GCK_EXPORT
@interface GCKUIStyleAttributesConnectionController : GCKUIStyleAttributes

/**
 * The style attributes for the navigation bar of the device connection controller.
 *
 * @since 4.3.5
 */
@property(readonly, nonatomic) GCKUIStyleAttributesConnectionNavigation *navigation;

/**
 * The style attributes for the toolbar of the device connection controller.
 *
 * @since 4.3.5
 */
@property(readonly, nonatomic) GCKUIStyleAttributesConnectionToolbar *toolbar;

@end

/**
 * The style attributes for the view group representing no devices available controller.
 * Can be accessed as castViews.deviceControl.noDevicesAvailableController
 *
 * @since 4.6.0
 */
GCK_EXPORT
@interface GCKUIStyleAttributesNoDevicesAvailableController : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing all the media control views.
 * Can be accessed as castViews.mediaControl
 */
GCK_EXPORT
@interface GCKUIStyleAttributesMediaControl : GCKUIStyleAttributes

/** The style attributes for the expanded controller. */
@property(readonly, nonatomic) GCKUIStyleAttributesExpandedController *expandedController;

/** The style attributes for the mini controller. */
@property(readonly, nonatomic) GCKUIStyleAttributesMiniController *miniController;

/** The style attributes for the media track selector. */
@property(readonly, nonatomic) GCKUIStyleAttributesTrackSelector *trackSelector;

@end

/**
 * The style attributes for the view group representing all the device control views.
 * Can be accessed as castViews.deviceControl
 */
GCK_EXPORT
@interface GCKUIStyleAttributesDeviceControl : GCKUIStyleAttributes

/** The style attributes for the device chooser. */
@property(readonly, nonatomic) GCKUIStyleAttributesDeviceChooser *deviceChooser;

/** The style attributes for the device connection controller. */
@property(readonly, nonatomic) GCKUIStyleAttributesConnectionController *connectionController;

/**
 * The style attributes for the no devices available controller.
 *
 * @since 4.6.0
 */
@property(readonly, nonatomic)
    GCKUIStyleAttributesNoDevicesAvailableController *noDevicesAvailableController;

/**
 * The style attributes for the Guest Mode pairing dialog.
 *
 * @deprecated Guest mode feature has been removed. Using this API will have no affect on the
 * functionality.
 */
@property(readonly, nonatomic) GCKUIStyleAttributesGuestModePairingDialog *guestModePairingDialog
    __attribute((deprecated("No-op API. This will be removed in a later release.")));

@end

/**
 * The style attributes for the root view group.
 * Can be accessed as castViews
 */
GCK_EXPORT
@interface GCKUIStyleAttributesCastViews : GCKUIStyleAttributes

/** The style attributes for device control UI elements. */
@property(readonly, nonatomic) GCKUIStyleAttributesDeviceControl *deviceControl;

/** The style attributes for media control UI elements. */
@property(readonly, nonatomic) GCKUIStyleAttributesMediaControl *mediaControl;

/** The style attributes for instructional UI elements. */
@property(readonly, nonatomic) GCKUIStyleAttributesInstructions *instructions;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKUIUtils.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * User interface utility methods.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKUIUtils : NSObject

/**
 * Returns the currently active view controller, by navigating through the view controller
 * hierarchy beginning with the root view controller.
 */
+ (nullable UIViewController *)currentViewController;

/** Formats a time interval in MM:SS or H:MM:SS format. */
+ (NSString *)timeIntervalAsString:(NSTimeInterval)timeInterval;

/**
 * Formats a local time based on the current locale.
 *
 * @since 4.3.4
 */
+ (NSString *)localTimeAsString:(NSTimeInterval)localTime;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKVastAdsRequest.h
================================================
#import <Foundation/Foundation.h>

#import <GoogleCast/GCKDefines.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class representing a VAST request for an ad break clip.
 *
 * @since 4.1
 */
GCK_EXPORT
@interface GCKVASTAdsRequest : NSObject <NSCopying, NSSecureCoding>

/**
 * A URL for the VAST file.
 *
 * @since 4.1
 */
@property(nonatomic, readonly, nullable) NSURL *adTagUrl;

/**
 * A string specifying a VAST document to be used as the ads response
 * instead of making a request via an ad tag url. This can be useful for
 * debugging and other situations where a VAST response is already
 * available. If the adsResponse is non-nil, the adTagURL will be ignored by the receiver.
 *
 * @since 4.1
 */
@property(nonatomic, readonly, nullable) NSString *adsResponse;

/**
 * Initializes a GCKVASTAdsRequest object. Needs an adTagURL or an adsResponse.
 * @param adTagURL The ad tag URL for the request.
 * @param adsResponse The ads response for the request. If this is non-nil, adTagURL will be
 * ignored by the receiver.
 *
 * @since 4.3.4
 */
- (nullable instancetype)initWithAdTagURL:(nullable NSURL *)adTagURL
                              adsResponse:(nullable NSString *)adsResponse
    NS_DESIGNATED_INITIALIZER;

- (instancetype)init NS_UNAVAILABLE;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GCKVideoInfo.h
================================================
// Copyright 2016 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/**
 * @enum GCKVideoInfoHDRType
 * An enum describing video HDR types.
 */
typedef NS_ENUM(NSInteger, GCKVideoInfoHDRType) {
  /** Unknown HDR type. */
  GCKVideoInfoHDRTypeUnknown = -1,
  /** Standard dynamic range. */
  GCKVideoInfoHDRTypeSDR = 0,
  /** Dolby Vision. */
  GCKVideoInfoHDRTypeDV = 1,
  /** High dynamic range. */
  GCKVideoInfoHDRTypeHDR = 2
};

NS_ASSUME_NONNULL_BEGIN

/**
 * A class representing video format details.
 *
 * @since 3.3
 */
GCK_EXPORT
@interface GCKVideoInfo : NSObject <NSCopying, NSSecureCoding>

/** The width of the video, in pixels. */
@property(nonatomic, assign, readonly) NSUInteger width;

/** The height of the video, in pixels. */
@property(nonatomic, assign, readonly) NSUInteger height;

/** The HDR type employed int the video, if any. */
@property(nonatomic, assign, readonly) GCKVideoInfoHDRType hdrType;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/GoogleCast.h
================================================
#import <GoogleCast/GCKAdBreakClipInfo.h>
#import <GoogleCast/GCKAdBreakInfo.h>
#import <GoogleCast/GCKAdBreakStatus.h>
#import <GoogleCast/GCKApplicationMetadata.h>
#import <GoogleCast/GCKCastChannel.h>
#import <GoogleCast/GCKCastContext.h>
#import <GoogleCast/GCKCastOptions.h>
#import <GoogleCast/GCKCastSession.h>
#import <GoogleCast/GCKColor.h>
#import <GoogleCast/GCKCommon.h>
#import <GoogleCast/GCKCredentialsData.h>
#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKDevice.h>
#import <GoogleCast/GCKDeviceProvider+Protected.h>
#import <GoogleCast/GCKDeviceProvider.h>
#import <GoogleCast/GCKDiscoveryCriteria.h>
#import <GoogleCast/GCKDiscoveryManager.h>
#import <GoogleCast/GCKDynamicDevice.h>
#import <GoogleCast/GCKError.h>
#import <GoogleCast/GCKGenericChannel.h>
#import <GoogleCast/GCKHLSSegmentFormat.h>
#import <GoogleCast/GCKHLSVideoSegmentFormat.h>
#import <GoogleCast/GCKImage.h>
#import <GoogleCast/GCKJSONUtils.h>
#import <GoogleCast/GCKLaunchOptions.h>
#import <GoogleCast/GCKLogger.h>
#import <GoogleCast/GCKLoggerCommon.h>
#import <GoogleCast/GCKLoggerFilter.h>
#import <GoogleCast/GCKMediaCommon.h>
#import <GoogleCast/GCKMediaInformation.h>
#import <GoogleCast/GCKMediaLiveSeekableRange.h>
#import <GoogleCast/GCKMediaLoadOptions.h>
#import <GoogleCast/GCKMediaLoadRequestData.h>
#import <GoogleCast/GCKMediaMetadata.h>
#import <GoogleCast/GCKMediaQueue.h>
#import <GoogleCast/GCKMediaQueueContainerMetadata.h>
#import <GoogleCast/GCKMediaQueueData.h>
#import <GoogleCast/GCKMediaQueueItem.h>
#import <GoogleCast/GCKMediaQueueLoadOptions.h>
#import <GoogleCast/GCKMediaRequestItem.h>
#import <GoogleCast/GCKMediaSeekOptions.h>
#import <GoogleCast/GCKMediaStatus.h>
#import <GoogleCast/GCKMediaTextTrackStyle.h>
#import <GoogleCast/GCKMediaTrack.h>
#import <GoogleCast/GCKMultizoneDevice.h>
#import <GoogleCast/GCKMultizoneStatus.h>
#import <GoogleCast/GCKNetworkAddress.h>
#import <GoogleCast/GCKOpenURLOptions.h>
#import <GoogleCast/GCKRemoteMediaClient+Protected.h>
#import <GoogleCast/GCKRemoteMediaClient.h>
#import <GoogleCast/GCKRequest.h>
#import <GoogleCast/GCKSenderApplicationInfo.h>
#import <GoogleCast/GCKSession+Protected.h>
#import <GoogleCast/GCKSession.h>
#import <GoogleCast/GCKSessionManager.h>
#import <GoogleCast/GCKSessionOptions.h>
#import <GoogleCast/GCKSessionTraits.h>
#import <GoogleCast/GCKVastAdsRequest.h>
#import <GoogleCast/GCKVideoInfo.h>
#import <GoogleCast/NSDictionary+GCKAdditions.h>
#import <GoogleCast/NSMutableDictionary+GCKAdditions.h>
#import <GoogleCast/NSTimer+GCKAdditions.h>
#import <GoogleCast/GCKCastContext+UI.h>
#import <GoogleCast/GCKUIButton.h>
#import <GoogleCast/GCKUICastButton.h>
#import <GoogleCast/GCKUICastContainerViewController.h>
#import <GoogleCast/GCKUIDeviceVolumeController.h>
#import <GoogleCast/GCKUIExpandedMediaControlsViewController.h>
#import <GoogleCast/GCKUIImageCache.h>
#import <GoogleCast/GCKUIImageHints.h>
#import <GoogleCast/GCKUIImagePicker.h>
#import <GoogleCast/GCKUIMediaButtonBarProtocol.h>
#import <GoogleCast/GCKUIMediaController.h>
#import <GoogleCast/GCKUIMediaTrackSelectionViewController.h>
#import <GoogleCast/GCKUIMiniMediaControlsViewController.h>
#import <GoogleCast/GCKUIMultistateButton.h>
#import <GoogleCast/GCKUIPlayPauseToggleController.h>
#import <GoogleCast/GCKUIPlaybackRateController.h>
#import <GoogleCast/GCKUIStreamPositionController.h>
#import <GoogleCast/GCKUIStyle.h>
#import <GoogleCast/GCKUIStyleAttributes.h>
#import <GoogleCast/GCKUIUtils.h>



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/NSDictionary+GCKAdditions.h
================================================
// Copyright 2012 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A category that adds some convenience methods to
 * <a href="https://goo.gl/0kFoNp"><b>NSDictionary</b></a> for safely looking up values of various
 * types. These methods are particularly useful for getting and setting fields of JSON data
 * objects.
 */
@interface NSDictionary (GCKAdditions)

/**
 * Looks up an <a href="https://goo.gl/5dXzU6"><b>NSString</b></a> value for a key, with a given
 * fallback value.
 *
 * @param key The key.
 * @param defaultValue The default value to return if the key is not found or if its value is not
 * an <a href="https://goo.gl/5dXzU6"><b>NSString</b></a>.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/5dXzU6"><b>NSString</b></a>; otherwise the default value.
 */
- (nullable NSString *)gck_stringForKey:(NSString *)key
                       withDefaultValue:(nullable NSString *)defaultValue;

/**
 * Looks up an <a href="https://goo.gl/5dXzU6"><b>NSString</b></a> value for a key, with a fallback
 * value of <code>nil</code>.
 *
 * @param key The key.
 * @return The value of the key, if found it was found and was an
 * <a href="https://goo.gl/5dXzU6"><b>NSString</b></a>; otherwise <code>nil</code>.
 */
- (nullable NSString *)gck_stringForKey:(NSString *)key;

/**
 * Looks up an <a href="https://goo.gl/hQFeav"><b>NSInteger</b></a> value for a key, with a given
 * fallback value.
 *
 * @param key The key.
 * @param defaultValue The default value to return if the key is not found or if its value is not
 * an <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>; otherwise the default value.
 */
- (NSInteger)gck_integerForKey:(NSString *)key withDefaultValue:(NSInteger)defaultValue;

/**
 * Looks up an <a href="https://goo.gl/hQFeav"><b>NSUInteger</b></a> value for a key, with a given
 * fallback value.
 *
 * @param key The key.
 * @param defaultValue The default value to return if the key is not found or if its value is not
 * an <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>; otherwise the default value.
 */
- (NSUInteger)gck_uintegerForKey:(NSString *)key withDefaultValue:(NSUInteger)defaultValue;

/**
 * Looks up an <a href="https://goo.gl/hQFeav"><b>NSInteger</b></a> value for a key, with a fallback
 * value of <code>0</code>.
 *
 * @param key The key.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>; otherwise <code>0</code>.
 */
- (NSInteger)gck_integerForKey:(NSString *)key;

/**
 * Looks up an <a href="https://goo.gl/hQFeav"><b>NSUInteger</b></a> value for a key, with a
 * fallback value of <code>0</code>.
 *
 * @param key The key.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>; otherwise <code>0</code>.
 */
- (NSUInteger)gck_uintegerForKey:(NSString *)key;

/**
 * Looks up a <b>double</b> value for a key, with a given fallback value.
 *
 * @param key The key.
 * @param defaultValue The default value to return if the key is not found or if its value is not
 * an <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>; otherwise the default value.
 */
- (double)gck_doubleForKey:(NSString *)key withDefaultValue:(double)defaultValue;

/**
 * Looks up a <b>double</b> value for a key, with a fallback value of <code>0.0</code>.
 *
 * @param key The key.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>; otherwise <code>0.0</code>.
 */
- (double)gck_doubleForKey:(NSString *)key;

/**
 * Looks up a <b>BOOL</b> value for a key, with a given fallback value.
 *
 * @param key The key.
 * @param defaultValue The default value to return if the key is not found or if its value is not
 * an <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>; otherwise the default value.
 */
- (BOOL)gck_boolForKey:(NSString *)key withDefaultValue:(BOOL)defaultValue;

/**
 * Looks up a <b>BOOL</b> value for a key, with a fallback value of <code>NO</code>.
 *
 * @param key The key.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>; otherwise <code>NO</code>.
 */
- (BOOL)gck_boolForKey:(NSString *)key;

/**
 * Looks up an <a href="https://goo.gl/0kFoNp"><b>NSDictionary</b></a> value for a key, with a
 * fallback value of <code>nil</code>.
 *
 * @param key The key.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/0kFoNp"><b>NSDictionary</b></a>; otherwise <code>nil</code>.
 */
- (nullable NSDictionary *)gck_dictionaryForKey:(NSString *)key;

/**
 * Looks up an <a href="https://goo.gl/q3tY5n"><b>NSArray</b></a> value for a key, with a fallback
 * value of <code>nil</code>.
 *
 * @param key The key.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/q3tY5n"><b>NSArray</b></a>; otherwise <code>nil</code>.
 */
- (nullable NSArray *)gck_arrayForKey:(NSString *)key;

/**
 * Looks up an <a href="https://goo.gl/CGrMHD"><b>NSURL</b></a> value for a key, with a fallback
 * value of <code>nil</code>.
 *
 * @param key The key.
 * @return The value of the key as an <a href="https://goo.gl/CGrMHD"><b>NSURL</b></a>, if it was
 * found and was an <a href="https://goo.gl/5dXzU6"><b>NSString</b></a>; otherwise <code>nil</code>.
 */
- (nullable NSURL *)gck_urlForKey:(NSString *)key;

@end

NS_ASSUME_NONNULL_END

// For backwards compatibility:
#ifndef GCKTypedValueLookup
#define GCKTypedValueLookup GCKAdditions
#endif



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/NSMutableDictionary+GCKAdditions.h
================================================
// Copyright 2012 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A category that adds some convenience methods to
 * <a href="https://goo.gl/ZtiYbw"><b>NSDictionary</b></a> for setting values of various types.
 * These methods are particularly useful for getting and setting fields of JSON data objects.
 */
@interface NSMutableDictionary (GCKAdditions)

/**
 * Sets an <a href="https://goo.gl/5dXzU6"><b>NSString</b></a> value for a key.
 *
 * @param value The value.
 * @param key The key.
 */
- (void)gck_setStringValue:(NSString *)value forKey:(NSString *)key;

/**
 * Sets an <a href="https://goo.gl/hQFeav"><b>NSInteger</b></a> value for a key.
 *
 * @param value The value.
 * @param key The key.
 */
- (void)gck_setIntegerValue:(NSInteger)value forKey:(NSString *)key;

/**
 * Sets an <a href="https://goo.gl/hQFeav"><b>NSUInteger</b></a> value for a key.
 *
 * @param value The value.
 * @param key The key.
 */
- (void)gck_setUIntegerValue:(NSUInteger)value forKey:(NSString *)key;

/**
 * Sets a <b>double</b> value for a key.
 *
 * @param value The value.
 * @param key The key.
 */
- (void)gck_setDoubleValue:(double)value forKey:(NSString *)key;

/**
 * Sets a <b>BOOL</b> value for a key.
 *
 * @param value The value.
 * @param key The key.
 */
- (void)gck_setBoolValue:(BOOL)value forKey:(NSString *)key;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Headers/NSTimer+GCKAdditions.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A category on <a href="https://goo.gl/0wgZmj"><b>NSTimer</b></a> that adds some useful
 * enhancements.
 */
@interface NSTimer (GCKAdditions)

/**
 * Constructs an <a href="https://goo.gl/0wgZmj"><b>NSTimer</b></a> with a weak target. Avoids a
 * retain loop between the timer and its target. The timer will be automatically invalidated if the
 * target has been released when the timer fires.
 */
+ (NSTimer *)gck_scheduledTimerWithTimeInterval:(NSTimeInterval)interval
                                     weakTarget:(id)target
                                       selector:(SEL)selector
                                       userInfo:(nullable id)userInfo
                                        repeats:(BOOL)repeats;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/am.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "ማንቂያ";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/ar.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "تنبيه";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/az.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Siqnal";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/be.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Увага";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/bg.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Сигнал";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/bn.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "বিজ্ঞপ্তি";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/bs.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Upozorenje";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/ca.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/cs.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Upozornění";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/cy.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Rhybudd";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/da.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Underretning";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/de.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Benachrichtigung";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/el.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Ειδοποίηση";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/en.lproj/MaterialDialogs.strings
================================================
/* Accessibility announcement when a dialog is displayed. */
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/en_AU.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/en_GB.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/en_IN.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/es.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/es_419.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/es_MX.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/et.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Teatis";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/eu.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/fa.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "هشدار";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/fi.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Ilmoitus";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/fil.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerto";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/fr.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerte";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/fr_CA.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerte";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/ga.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/gl.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/gu.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "અલર્ટ";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/he.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "התראה";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/hi.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "चेतावनी";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/hr.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Upozorenje";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/hu.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Értesítés";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/hy.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Ծանուցում";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/id.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Notifikasi";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/is.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Tilkynning";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/it.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Avviso";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/ja.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "通知";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/jv.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/ka.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "გაფრთხილება";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/kk.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Ескерту";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/km.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "ការជូនដំណឹង";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/kn.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "ಅಲರ್ಟ್";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/ko.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "알림";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/ky.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Эскертүү";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/lo.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "ການເຕືອນ";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/lt.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Įspėjimas";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/lv.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Brīdinājums";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/mk.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Предупредување";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/ml.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "അലേർട്ട്";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/mn.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Сэрэмжлүүлэг";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/mr.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "सूचना";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/ms.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Makluman";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/my.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "သတိပေးချက်";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/nb.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Varsel";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/ne.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "अलर्ट";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/nl.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Melding";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/pa.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "ਅਲਰਟ";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/pl.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/ps.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "خبرتیا";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/pt.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/pt_BR.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/pt_PT.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/ro.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alertă";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/ru.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Оповещение";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/si.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "ඇඟවීම";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/sk.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Upozornenie";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/sl.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Opozorilo";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/so.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/sq.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Sinjalizim";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/sr.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Обавештење";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/sr_Latn.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Obaveštenje";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/sv.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Varning";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/sw.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Arifa";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/ta.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "விழிப்பூட்டல்";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/te.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "అలర్ట్";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/th.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "การแจ้งเตือน";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/tk.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Duýduryş";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/tr.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Uyarı";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/uk.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Сповіщення";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/ur.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "الرٹ";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/uz.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Ogohlantirish";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/vi.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Cảnh báo";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/yue_HK.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/zh_CN.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "提醒";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/zh_HK.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "注意";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/zh_TW.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "快訊";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/MaterialDialogs.bundle/Resources/zu.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Isexwayiso";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64/GoogleCast.framework/Modules/module.modulemap
================================================
framework module GoogleCast {
  umbrella header "GoogleCast.h"
  

  export *
  module * { export * }
}



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCast
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Info.plist
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/PrivacyInfo.xcprivacy
================================================
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>NSPrivacyCollectedDataTypes</key>
	<array>
		<dict>
			<key>NSPrivacyCollectedDataType</key>
			<string>NSPrivacyCollectedDataTypeDeviceID</string>
			<key>NSPrivacyCollectedDataTypeLinked</key>
			<false/>
			<key>NSPrivacyCollectedDataTypeTracking</key>
			<false/>
			<key>NSPrivacyCollectedDataTypePurposes</key>
			<array>
				<string>NSPrivacyCollectedDataTypePurposeAnalytics</string>
			</array>
		</dict>
		<dict>
			<key>NSPrivacyCollectedDataType</key>
			<string>NSPrivacyCollectedDataTypeOtherDiagnosticData</string>
			<key>NSPrivacyCollectedDataTypeLinked</key>
			<false/>
			<key>NSPrivacyCollectedDataTypeTracking</key>
			<false/>
			<key>NSPrivacyCollectedDataTypePurposes</key>
			<array>
				<string>NSPrivacyCollectedDataTypePurposeAnalytics</string>
				<string>NSPrivacyCollectedDataTypePurposeAppFunctionality</string>
			</array>
		</dict>
		<dict>
			<key>NSPrivacyCollectedDataType</key>
			<string>NSPrivacyCollectedDataTypeProductInteraction</string>
			<key>NSPrivacyCollectedDataTypeLinked</key>
			<false/>
			<key>NSPrivacyCollectedDataTypeTracking</key>
			<false/>
			<key>NSPrivacyCollectedDataTypePurposes</key>
			<array>
				<string>NSPrivacyCollectedDataTypePurposeAnalytics</string>
				<string>NSPrivacyCollectedDataTypePurposeAppFunctionality</string>
			</array>
		</dict>
	</array>
	<key>NSPrivacyAccessedAPITypes</key>
	<array>
		<dict>
			<key>NSPrivacyAccessedAPIType</key>
			<string>NSPrivacyAccessedAPICategoryUserDefaults</string>
			<key>NSPrivacyAccessedAPITypeReasons</key>
			<array>
				<string>C56D.1</string>
				<string>CA92.1</string>
			</array>
		</dict>
	</array>
</dict>
</plist>


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/af.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/ar.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/bg.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/bn.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/ca.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB01.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB02.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB03.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB04.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB05.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB06.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB07.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB08.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB09.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB10.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB11.mom
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/CastFrameworkDB11.omo
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/CastFrameworkDB.momd/VersionInfo.plist
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/cs.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/da.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/de.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/el.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/en.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/en_GB.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/es.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/es_419.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/et.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/fa.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/fi.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/fil.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/fr.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/hi.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/hr.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/hu.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/hy.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/id.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/is.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/it.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/iw.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/ja.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/ka.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/km.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/ko.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/lo.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/lt.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/lv.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/mk.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/mn.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/mr.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/ms.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/my.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/ne.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/nl.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/no.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/pl.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/pt.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/pt_PT.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/ro.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/ru.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/si.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/sk.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/sl.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/sr.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/sv.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/sw.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/ta.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/th.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/tr.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/uk.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/vi.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/zh.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/zh_CN.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastCoreResources.bundle/zh_TW.lproj/CoreLocalizable.strings
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/af.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKVVolumeVKoppelX(Etiket)[Voer PIN in_Saai tans uit na woonvertrek\OnderskrifteW(titel)\(Onderskrif)_3Raak om media na jou TV en luidsprekers uit te saai^Hou op uitsaaiTpin0m K o p p e l   t a n s   &[AdvertensieUOudio](toestelnaam)XMaak toeZKanselleer[Koppel tansW(Titel)_pin_cancel_buttonTpin2ZOnderskrif_Slaan advertensie ooro A d v e r t e n s i e   s p e e l   t a n s   &Tpin1_connecting_skip_button_welcome_cancel_buttono V o e r   d i e   4 - s y f e r - P I N   i n   w a t   o p   d i e   t u i s s k e r m   v a n   ' n   n a b y g e l e ë   t o e s t e l   g e w y s   w o r d .   D i e   t o e s t e l e i e n a a r   k a n   d i e   P I N   o o k   i n   d i e   C h r o m e c a s t - p r o g r a m   v i n d .YSlaan oor_Geen media is gekies nie_(Tik om uitgebreide beheerder te aktiveer_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonYSnitkeuse_Luister vir PIN_Speel-onderbreek-wisselknoppie_(toestelstatus)UTitel_(multizone device name)o K o p p e l   a a n   n a b y g e l e ë   t o e s t e l_welcome_skip_button\(kunstenaar)]skip_ad_labelUKlaar_connecting_cancel_button[Saai uit na_NOm te koppel, sal jou mikrofoon tydelik gebruik word om vir 'n PIN te luister.   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£ª³¿Þëó 6EJeqw¥­ÁÆÑé!:R	}		¢	Í	â	ç	ö



(
:
[
m
s

È
Þ
ë
ù
ÿ&             v              w


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/af.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUOudio_Spoel 30 sekondes terug_Kom meer te weteo% J y   k a n   a d v e r t e n s i e   o o r   % l d   o o r s l a a n   &WSnit %d_Koppel tans aanUSpeel_JMaak seker dat jou %@ en die uitsaaitoestel in dieselfde wi-fi-netwerk is._Kies 'n onderskrifsnit_Stop terugspeel van mediaTGeenROK_Cast is nie gekoppel nie_JHierdie program het toegang tot die plaaslike netwerk nodig om uit te saaiU--:--XVolgende_Gaan na Instellings[Saai uit na_Wissel die dempstand_Geslote onderskrifteVtablet[InstellingsVVorige_Gaan jou wi-fi-netwerk na_Cast is gekoppel_Speel-onderbreek-wisselknoppieXLaat wag\Onderskrifteoÿ H i e r d i e   p r o g r a m   h e t   t o e g a n g   t o t   j o u   W i - F i - n e t w e r k   n o d i g   o m   a a n   j o u   t o e s t e l l e   t e   k o p p e l . 
 
 O m   u i t   t e   s a a i ,   m o e t   j y    O K    k i e s   w a n n e e r   d i e   p r o g r a m   v r a   o m   a a n   j o u   p l a a s l i k e   n e t w e r k   t e   k o p p e l .   J y   k a n   d i t   o o k   l a t e r   i n   i O S - i n s t e l l i n g s   v i r   h i e r d i e   p r o g r a m   t o e l a a t .Z%d persent_Geen toestelle beskikbaar nie_Saai tans uit na %@_ÎHierdie program het toegang tot jou Wi-Fi-netwerk nodig om aan jou toestelle te koppel.

Om uit te saai, moet jy na jou Instellings toe gaan en "Toegang tot plaaslike netwerk" vir hierdie program aanskakel._nGaan na Instellings op hierdie foon en kyk of Toegang tot Plaaslike Netwerk aangeskakel is vir hierdie program_Cast koppel tansTfoon_Uitsaaisessie is begin_/Maak seker Toegang tot Plaaslike Netwerk is aanZREGSTREEKSo U i t s a a i s e s s i e   i s   b e ë i n d i g_Spoel 30 sekondes vorentoe  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-djäìþQj©öü'>U\ho¿ÈÕ
Ö
áèYlq¼Çü             U              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ar.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlee-3FK'kE3*HI  'D5H*e'*5'DW(Label)o%/.'D  1BE  'D*91JA  'D4.5Jo'D%13'D  %DI  :1A)  'DE9J4)g'D*1,E)W(title)Z(Subtitle)o6'DE3  D%13'D  'DH3'&7  %DI  ,G'2  'D*DA2JHF  HEC(Q1'*  'D5H* .j%JB'A  'D(+Tpin0o,'1M  'D'*5'D . . .e%9D'Fe'D5H*](device name)e%:D'Be%D:'!l,'1M  'D'*5'DW(Title)_pin_cancel_buttonTpin2m*.7QJ  'D%9D'Fo*4:JD  'D%9D'F  BJ/  'D*B/E . . .Tpin1_connecting_skip_button_welcome_cancel_buttono #/.PD  1BE  'D*91JA  'D4.5J  'DECHF  EF   4  .'F'*  H'D8'G1  9DI  'D4'4)  'D1&J3J)  DD,G'2  'DE,'H1 .  HJECF  DE'DC  'D,G'2  'D9+H1  9DI  'D1BE  AJ  *7(JB   C h r o m e c a s t  #J6K' .g'D*.7QJoDE  J*E  '.*J'1  #J  H3'&7 .o"'FB1  D*A9JD  H-/)  'D*-CE  'DEH3QN9) ._pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono'.*J'1  'DEB79  'D5H*Jo'D'3*E'9  %DI  1BE  'D*91JA  'D4.5Jo#'D*(/JD  (JF  'D*4:JD  H'D%JB'A  'DE$B*_(device status)UTitle_(multizone device name)o'D'*5'D  (,G'2  E,'H1_welcome_skip_buttonX(artist)]skip_ad_labelb*E_connecting_cancel_buttonh'D(+  %DIoXDD'*5'D  ('D,G'2  'DE,'H1  3J*E  '3*./'E  'DEJC1HAHF  E$B*K'  DD'3*E'9  %DI  1BE  'D*91JA  'D4.5J .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¤»ÆÎ4CKVÅÚß $/:S[otÈÍæþ
-
<
m
´
É
Î
Ý
ñ0qºÌÒì+4BGbs             u              
&


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ar.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe'D5H*n*1,J9   3 0  +'FJ)oE2J/  EF  'DE9DHE'*oJECFC  *.7QJ  'D%9D'F  (9/   % l d   &o'DEB79  'D5H*J   % do,'1M  'D'*5'D  (@e*4:JDo> JO1,I  'D*#CQO/  EF  #FQ   % @  H,G'2  'D(+  E*5D'F  (4(C)   W i - F i  FA3G' .o'.*J'1  EB79  *1,E)  H41-o%JB'A  *4:JD  'DH3'&7j(/HF  *1,E)e-3FK'o-'D)  'D(+ :  DE  J*E  'D'*5'Do>J-*',  G0'  'D*7(JB  %DI  'D/.HD  %DI  'D4(C)  'DE-DJ)  D%13'D  'DE-*HIU--:--f'D*'DJo'D'F*B'D  %DI   "'D%9/'/'* "h'D(+  %DIo*(/JD  -'D)  C*E  'D5H*n'D*1,E)  H'D41-m'D,G'2  'DDH-Ji'D%9/'/'*f'D3'(Bo& JO1,I  'D*-BQOB  EF  '*5'DC  (4(C)   W i - F i .o-'D)  'D(+ :  *E  'D'*5'Do#'D*(/JD  (JF  'D*4:JD  H'D%JB'A  'DE$B*j%JB'A  E$B*g'D*1,E)oÞ DD'*5'D  (#,G2*C  J-*',  G0'  'D*7(JB  %DI  'D/.HD  %DI  4(C)   W i - F i . 
 
D%13'D  'DE-*HI  '.*N1   "-3FK' "  9F/E'  J7D(  'D*7(JB  'D'*5'D  ('D4(C)  'DE-DJ) .  HJECFC  #J6K'  '*.'0  G0'  'D%,1'!  D'-BK'  EF  .D'D  %9/'/'*  F8'E  'D*4:JD   i O S  DG0'  'D*7(JB .j % d  ('DE'&)oE'  EPF  #,G2)  E*HAQ1)o,'1M  'D%13'D  %DI   % @o DD'*5'D  (#,G2*C  J-*',  G0'  'D*7(JB  %DI  'D/.HD  %DI  4(C)   W i - F i . 
 
D%13'D  'DE-*HI  'F*BPD  %DI   "'D%9/'/'* "  HA9QPD   "'D/.HD  %DI  'D4(C)  'DE-DJ) "  DG0'  'D*7(JB .op9DJC  'D'F*B'D  %DI   "'D%9/'/'* "  9DI  G0'  'DG'*A  +E  'D*-BQOB  EF  *A9JD  EJ2)   "'DH5HD  %DI  'D4(C)  'DE-DJ) "  DG0'  'D*7(JB .o-'D)  'D(+ :  ,'1M  'D'*5'Df'DG'*Ao*E  (/!  ,D3)  'D%13'D .o6'D*#CQ/  EF  #FQ  EJ2)   "'DH5HD  %DI  'D4(C)  'DE-DJ) "  EA9QD)eE('41o*E  %FG'!  ,D3)  'D%13'D .n*B/JE   3 0  +'FJ)  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do±î2=¼ë)4ièîû	.	?	j		¢	µ	Â

>


«jªÓç%P¿Êù             U              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/4HD-aa-FNo-view-1HP-BM-J3I.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/6is-ze-qoP-view-Vah-jq-ZgN.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/9V7-ce-5KJ-view-WQF-my-40r.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/a4H-bv-VbH-view-Xbz-9K-eDJ.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/C87-rF-Kff-view-Z93-bw-eCT.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/CastContainer.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/CastInstructions.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/DeviceConnectionNavigation.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/egs-hj-bEX-view-MTY-Nw-q8O.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/ExpandedMediaControlsViewController.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/Info.plist
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/MediaTrackSelectionController.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/MediaTrackSelectionNavigation.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/MiniMediaControlsViewController.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/Base.lproj/CastComponents.storyboardc/mzQ-08-M2L-view-QcC-yO-nhF.nib
================================================
[Non-text file]


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/bg.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlebm!8;0  =0  72C:0i!2J@720=5W(Label)oJ2545B5    :>40o@54020  A5  :J<  2A5:84=52=0B0h!C1B8B@8W(title)Z(Subtitle)oT>:>A=5B5 ,  70  40  ?@54020B5  <5489=>  AJ4J@60=85  :J<  B5;5287>@0  8  28A>:>3>2>@8B5;8B5  A8o!?8@0=5  =0  ?@54020=5B>i  :>4   0o#AB0=>2O20  A5  2@J7:0 . . .g 5:;0<0kC48>70?8A8](device name)i0B20@O=5eB:07o#AB0=>2O20  A5  2@J7:0W(Title)_pin_cancel_buttoni  :>4   2o@>?CA:0=5  =0  @5:;0<0B0o>:0720  A5  @5:;0<0 . . .i  :>4   1_connecting_skip_button_welcome_cancel_buttono¢J2545B5   4 -F8D@5=8O   ,  :>9B>  A5  ?>:0720  =0  =0G0;=8O  5:@0=  =0  CAB@>9AB2>  2  1;87>AB .  !>1AB25=8:JB  =0  CAB@>9AB2>B>  <>65  40  =0<5@8  :>40  8  2  ?@8;>65=85B>   C h r o m e c a s t .j@>?CA:0=5oO<0  871@0=>  <5489=>  AJ4J@60=85o0>:>A=5B5 ,  70  40  0:B828@0B5  @07H8@5=8O  :>=B@>;5@_pin_connect_buttoni  :>4   3^skip_ad_button_pin_listen_button_welcome_ok_buttono718@0=5  =0  70?8A8oC48>2J25640=5  =0    :>40o*@52:;NG20=5  <564C  2J7?@>8725640=5  8  ?0C70_(device status)UTitle_(multizone device name)o !2J@720=5  A  CAB@>9AB2>  2  1;87>AB_welcome_skip_buttonX(artist)]skip_ad_labelf>B>2>_connecting_cancel_buttonm@54020=5  :J<oT0  40  A5  A2J@65B5 ,  <8:@>D>=JB  28  I5  A5  87?>;720  2@5<5==> ,  70  40  A5  2J2545    :>4JB .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¹ÌÔù4EMX2Evª½Èóû		"	S			¬	Ä aÄÙìû#JØêð

M
c
l
z

¢
½             u              h


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/bg.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELkC48>70?8A8o@52J@B0=5  =0704  A   3 0  A5:C=48n0CG5B5  ?>25G5o*>65B5  40  ?@>?CA=5B5  @5:;0<0B0  A;54   % l d . . .h0?8A   % do#AB0=>2O20  A5  2@J7:0  AJA :gCA:0=5oB#25@5B5  A5 ,  G5   % @  8  CAB@>9AB2>B>   C a s t  A0  2  54=0  8  AJI0   W i - F i  <@560o718@0=5  =0  70?8A  A  =04?8A8o!?8@0=5  =0  2J7?@>8725640=5B>dO<0ROKo*CB>=  70  ?@54020=5 .  5  5  CAB0=>25=0  2@J7:0oE">20  ?@8;>65=85  A5  =C6405  >B  4>ABJ?  4>  ;>:0;=0B0  <@560 ,  70  40  ?@54020U--:--f0?@54oJ<  =0AB@>9:8B5m@54020=5  :J<o:;NG20=5  8  87:;NG20=5  =0  72C:0g04?8A8kB01;5BJB  28i0AB@>9:8e0704o"@>25@5B5  87?>;720=0B0   W i - F i  <@560oCB>=  70  ?@54020=5 .  <0  2@J7:0o*@52:;NG20=5  <564C  2J7?@>8725640=5  8  ?0C70o>AB02O=5  =0  ?0C70h!C1B8B@8o@8;>65=85B>  A5  =C6405  >B  4>ABJ?  4>   W i - F i  <@560B0  28 ,  70  40  CAB0=>28  2@J7:0  A  CAB@>9AB20B0  28 . 
 
0  40  ?@54020B5 ,  8715@5B5   O K ,  :>30B>  ?@8;>65=85B>  ?>8A:0  40  A5  A2J@65  A  ;>:0;=0B0  28  <@560 .  >65B5  40  ?@54>AB028B5  B>20  @07@5H5=85  8  ?> -:JA=>  >B  =0AB@>9:8B5  =0   i O S .S%d%oO<0  =0;8G=8  CAB@>9AB20o@54020  A5  :J<    % @ oÉ@8;>65=85B>  A5  =C6405  >B  4>ABJ?  4>   W i - F i  <@560B0  28 ,  70  40  CAB0=>28  2@J7:0  A  CAB@>9AB20B0  28 . 
 
0  40  ?@54020B5 ,  >B2>@5B5  =0AB@>9:8B5  8  2:;NG5B5  >?F8OB0  70  4>ABJ?  4>  ;>:0;=0B0  <@560  70  B>20  ?@8;>65=85 .okB2>@5B5  =0AB@>9:8B5  =0  B>78  B5;5D>=  8  ?@>25@5B5  40;8  4>ABJ?JB  4>  ;>:0;=0B0  <@560  5  2:;NG5=  70  ?@8;>65=85B>o(CB>=  70  ?@54020=5 .  #AB0=>2O20  A5  2@J7:0lB5;5D>=JB  28o!5A8OB0  70  ?@54020=5  70?>G=0o4#25@5B5  A5 ,  G5  4>ABJ?JB  4>  ;>:0;=0B0  <@560  5  2:;NG5=g  o!5A8OB0  70  ?@54020=5  702J@H8o0?@54  A   3 0  A5:C=48  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-d{¸Õ,=rA|ß	l	r		 	»	ü

"
5
@

ÆDU
a
e

¿T-Ô?N             U              ²


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/bn.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleg	 	¿	  			Çe	­	²	¿		®l		¾	¨	Ç		Í	  		°	Á	¨W(Label)i	ª	¿	¨  	²	¿		Á	¨o	²	¿	­	¿	  	°	Á	®	Ç  		¾	¸	Í	  		°	¾  	¹		Í		Çi	¸	¾	¬		¾			Ç	²W(title)Z(Subtitle)o4		ª	¨	¾	°   T V  		¬	  	¸	Í	ª	¿		¾	°	Ç  	®	¿	¡	¿	¯	¼	¾  		¾	¸	Í	  		°	¤	Ç  	¸	Í	ª	°	Í	¶  		°	Á	¨o		¾	¸	Í	  		°	¾  	¬	¨	Í	§  		°	Á	¨Tpin0o		¾	¨	Ç		Í	  	¹		Í		Ç . . .h	¬	¿		Í		¾	ª	¨d		¡	¿	](device name)i	¬	¨	Í	§  		°	Á	¨j	¬	¾	¤	¿	²  		°	Á	¨m		¾	¨	Ç		Í	  	¹		Í		ÇW(Title)_pin_cancel_buttonTpin2o	¬	¿		Í		¾	ª	¨  		Ü	¿	ß	Ç  	¯	¾	¨o	¬	¿		Í		¾	ª	¨  	¦	Ç		¾	¨	Ë  	¹		Í		Ç . . .Tpin1_connecting_skip_button_welcome_cancel_buttono		Ë	¨	  		¶	Ç	ª	¾	¶	Ç	°  	¡	¿	­	¾		¸	Ç	°  	¹	Ë	®  	¸	Í		Í	°	¿	¨	Ç  	¦	Ç		¾	¨	Ë  	ê  	¸			Í	¯	¾	°  	ª	¿	¨  	¨	®	Í	¬	°		¿  	²	¿		Á	¨	d  	¡	¿	­	¾		¸	Ç	°  	®	¾	²	¿	  	ª	¿	¨  	¨	®	Í	¬	°		¿   C h r o m e c a s t  		Í	¯	¾	ª	Ç	°  	®	§	Í	¯	Ç	  	¦	Ç		¤	Ç  	ª	¾	¬	Ç	¨	di		Ü	¿	ß	Ç  	¯	¾	¨o		Ë	¨	  	®	¿	¡	¿	¯	¼	¾  	¨	¿	°	Í	¬	¾		¨  		°	¾  	¹	ß	¨	¿o-	ª	Í	°	¸	¾	°	¿	¤  		¨	Í		Í	°	Ë	²	¾	°		Ç  	¸		Í	°	¿	¯	¼  		°	¤	Ç  		Í	¯	¾	ª  		°	Á	¨_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono		Í	°	Í	¯	¾	  	¨	¿	°	Í	¬	¾		¨o	ª	¿	¨  	¨	®	Í	¬	°  		¾	¨	¤	Ç  	¶	Á	¨	Á	¨k	ª	Í	²	Ç  	ª	  			²_(device status)UTitle_(multizone device name)o		¶	Ç	ª	¾	¶	Ç	°  	¡	¿	­	¾		¸	Ç  		¾	¨	Ç		Í	  		°	Á	¨_welcome_skip_buttonX(artist)]skip_ad_labelh	¹	ß	Ç  		Ç		Ç_connecting_cancel_buttonn		¤	Ç  		¾	¸	Í	  		°	Á	¨oW		¾	¨	Ç		Í	  		°	¤	Ç ,  		ª	¨	¾	°  	®	¾			Í	°	Ë	«	Ë	¨		¿  				¿  	ª	¿	¨  	¨	®	Í	¬	°  	¶	Ë	¨	¾	°  		¨	Í	¯  	¸	¾	®	¯	¼	¿		­	¾	¬	Ç  	¬	Í	¯	¬	¹	¾	°  		°	¾  	¹	¬	Ç	d   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¨³ÌÔç19D¯ØÝ (;Pks³æë		
1
D

à
õ
ú	1Tª°Ê&4E`}             u              
.


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/bn.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELd		¡	¿	o	é	æ  	¸	Ç		Ç	¨	Í	¡  	ª	¿		¨	Ç  	¯	¾	¨i		°	  		¾	¨	Á	¨o/ % l d  		°  	®	§	Í	¯	Ç  		ª	¨	¿  	¬	¿		Í		¾	ª	¨  		Ü	¿	ß	Ç  	¯	Ç	¤	Ç  	ª	¾	°	Ç	¨   . . .j		Í	°	Í	¯	¾	   % do		¤	Ç  		¾	¨	Ç		Í	  		°	¾  	¹		Í		Çe		¾	²	¾	¨oO		ª	¨	¾	°   % @  		¬	  		¾	¸	Í	  	¡	¿	­	¾		¸  			  		¯	¼	¾	 -	«	¾	  	¨	Ç			¯	¼	¾	°	Í		Ç  	°	¯	¼	Ç		Ç  		¿	¨	¾  	¤	¾  	¨	¿	¶	Í		¿	¤  		°	Á	¨o)		Í	²	Ë		¡  		Í	¯	¾	ª	¶	¨		Á	²	¿	°  				¿  		Í	°	Í	¯	¾	  	¬	Ç		Ç  	¨	¿	¨o	®	¿	¡	¿	¯	¼	¾  	ª	Í	²	Ç	¬	Í	¯	¾	  	¥	¾	®	¾	¨h				¿	  	¨	ßg	 	¿	  			Ço '		¾	¸	Í	 '  	¬	Ë	¤	¾	®  		¾	¨	Ç		Í	  		°	¾  	¨	Ç	o;		¾	¸	Í	  		°	¤	Ç  		  		Í	¯	¾	ª		Ç  	¸	Í	¥	¾	¨	À	ß  	¨	Ç			ß	¾	°	Í		Ç  		Í	¯	¾		Í	¸	Ç	¸  	¦	¿	¤	Ç  	¹	¬	ÇU--:--g	ª	°	¬	°	Í	¤	Àm '	¸	Ç		¿		¸	Ç  	¯	¾	¨ 'n		¤	Ç  		¾	¸	Í	  		°	Á	¨o	®	¿		  		¬	¸	Í	¥	¾  			²  		°	Á	¨n		Í	²	Ë		¡  		Í	¯	¾	ª	¶	¨h		Í	¯	¾	¬	²	Ç	f	¸	Ç		¿		¸j	ª	Â	°	Í	¬	¬	°	Í	¤	Ào&		ª	¨	¾	°  		ß	¾	 -	«	¾	  	¨	Ç			ß	¾	°	Í	  		Ç	  		°	Ç  	¦	Ç		Á	¨o '		¾	¸	Í	 '  	¬	Ë	¤	¾	®  		¾	¨	Ç		Í	  		°	¾  			Çk	ª	Í	²	Ç  	ª	  			²e	¥	¾	®	¾	¨i	¸	¾	¬		¾			Ç	²o		ª	¨	¾	°  	¡	¿	­	¾		¸	Ç	°  	¸	¾	¥	Ç  		¾	¨	Ç		Í	  		°	¤	Ç  		  		Í	¯	¾	ª		¿		Ç  		ß	¾	 -	«	¾	  	¨	Ç			ß	¾	°	Í	  		Í	¯	¾		Í	¸	Ç	¸  		°	¾	°  		¨	Á	®	¤	¿  	¦	¿	¤	Ç  	¹	¬	Ç	d 
 
  	²	Ë		¾	²  	¨	Ç			ß	¾	°	Í		Ç	°  	¸	¾	¥	Ç  		Í	¯	¾	ª  		¾	¨	Ç		Í	  		°	¾	°  		¨	Á	®	¤	¿  		¾		²	Ç ,  		¾	¸	Í	  		°	¤	Ç   	 	¿	  			Ç   	¬	¿		²	Í	ª		¿  	¬	Ç		Ç  	¨	¿	¨	d  			¾	Ü	¾	  	ª	°	Ç  		  		Í	¯	¾	ª	Ç	°  		¨	Í	¯  		ª	¨	¿   ' i O S  	¸	Ç		¿		¸ ' -	  		¨	Á	®	¤	¿  	¦	¿	¤	Ç  	ª	¾	°	Ç	¨	dh % d  	¶	¤	¾		¶o		Ë	¨	  	¡	¿	­	¾		¸  		ª	²	­	Í	¯  	¨	Ç	o % @  	  		¾	¸	Í	  		°	¾  	¹		Í		Ço¸		ª	¨	¾	°  	¡	¿	­	¾		¸	Ç	°  	¸	¾	¥	Ç  		¾	¨	Ç		Í	  		°	¤	Ç  		  		Í	¯	¾	ª		¿		Ç  		ß	¾	 -	«	¾	  	¨	Ç			ß	¾	°	Í	  		Í	¯	¾		Í	¸	Ç	¸  		°	¾	°  		¨	Á	®	¤	¿  	¦	¿	¤	Ç  	¹	¬	Ç	d 
 
		¾	¸	Í	  		°	¤	Ç ,  	¸	Ç		¿		¸	Ç  		¿	ß	Ç  		  		Í	¯	¾	ª	Ç	°  		¨	Í	¯   	²	Ë		¾	²  	¨	Ç			ß	¾	°	Í	  		Í	¯	¾		Í	¸	Ç	¸   	¬	¿		²	Í	ª  		¾	²	Á  		°	Á	¨	dol	«	Ë	¨	Ç	°   '	¸	Ç		¿		¸ '  	®	Ç	¨	Á	¤	Ç  		¿	ß	Ç  		  		Í	¯	¾	ª	Ç	°  		¨	Í	¯  	¸	Í	¥	¾	¨	À	ß  	¨	Ç			ß	¾	°	Í	  		Í	¯	¾		Í	¸	Ç	¸  		°	¾	°  	¸	Á	¬	¿	§	¾  		¾	²	Á  			Ç  		¿	¨	¾  	¤	¾  		Ç	  		°	Á	¨o '		¾	¸	Í	 '  	¬	Ë	¤	¾	®  		¾	¨	Ç		Í	  		°	¾  	¹		Í		Çc	«	Ë	¨o		¾	¸	Í	  	¸	Ç	¶	¨  	¶	Á	°	Á  	¹	ß	Ç		ÇoE	¸	Í	¥	¾	¨	À	ß  	¨	Ç			ß	¾	°	Í	  		Í	¯	¾		Í	¸	Ç	¸  		°	¾	°  	¸	Á	¬	¿	§	¾  		¾	²	Á  			Ç  		¿	¨	¾  	¤	¾  	¨	¿	¶	Í		¿	¤  		°	Á	¨d	²	¾		­o		¾	¸	Í	  	¸	Ç	¶	¨  	¶	Ç	·  	¹	ß	Ç		Ço	é	æ  	¸	Ç		Ç	¨	Í	¡  	«	°	Ë	¯	¼	¾	°	Í	¡  		°	Á	¨  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dm«!NYúO Ý	V	\	k		£	Î	ë	ü
	

m
ª
Á
Ì
ßëü
+
VÉ¤åì¦¯Ú             U              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ca.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleWD'acordUVolumXConnectaW(Label)_Introdueix el PINo* S ' e s t à   e m e t e n t   c o n t i n g u t   a   l a   s a l a   d ' e s t a ri S u b t í t o l sW(title)Z(Subtitle)o@ T o c a   p e r   e m e t r e   c o n t i n g u t   m u l t i m è d i a   a l   t e l e v i s o r   i   a l s   a l t a v e u so A t u r a   l ' e m i s s i óTpin0o S ' e s t à   c o n n e c t a n t . . .VAnuncie À u d i o](device name)UTancai C a n c e l · l ao S ' e s t à   c o n n e c t a n tW(Title)o b o t ó _ c a n c e l · l a _ p i nTpin2h S u b t í t o l]Omet l'anunci_Anunci en curs...Tpin1o b o t ó _ o m e t _ s ' e s t à _ c o n n e c t a n to b o t ó _ c a n c e l · l a _ b e n v i n g u d ao¨ I n t r o d u e i x   e l   P I N   d e   4   d í g i t s   q u e   e s   m o s t r a   a   l a   p a n t a l l a   d ' i n i c i   d ' u n   d i s p o s i t i u   p r o p e r .   E l   p r o p i e t a r i   d e l   d i s p o s i t i u   t a m b é   p o t   t r o b a r   e l   P I N   a   l ' a p l i c a c i ó   C h r o m e c a s t .TOmet_No hi ha contingut seleccionat_'Toca per activar el controlador ampliato b o t ó _ c o n n e c t a _ p i nTpin3o b o t ó _ o m e t _ l ' a n u n c io b o t ó _ d e t e c t a _ p i no b o t ó _ d ' a c o r d _ b e n v i n g u d ao S e l e c c i ó   d e   p i s t a^Escolta el PIN_Reprodueix o posa en pausa_(device status)e T í t o l_(multizone device name)_!Connecta't a un dispositiu propero b o t ó _ o m e t _ b e n v i n g u d aX(artist)_etiqueta_omet_l'anunciSFeto  b o t ó _ c a n c e l · l a _ s ' e s t à _ c o n n e c t a n tVEmet ao[ E l   m i c r ò f o n   s ' u t i l i t z a r à   t e m p o r a l m e n t   p e r   d e t e c t a r   u n   P I N   q u e   p e r m e t i   e s t a b l i r   l a   c o n n e x i ó .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¡§°¸Ì#6>IÌíò$/=CV{ª¯ÀÎâç	 	U
¨
­
Î
ø"IlÂÑî %It}Ýä             v              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ca.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe À u d i oo R e b o b i n a   3 0   s e g o n sn M é s   i n f o r m a c i óo$ P o t s   o m e t r e   l ' a n u n c i   d ' a q u í   a   % l d . . .XPista %do S ' e s t à   c o n n e c t a n t   aTJugaoV C o m p r o v a   q u e   % @   i   e l   d i s p o s i t i u   d ' e m i s s i ó   e s t i g u i n   c o n n e c t a t s   a   l a   m a t e i x a   x a r x a   W i - F io! S e l e c c i o n a   u n a   p i s t a   d e   s u b t í t o l so, A t u r a   l a   r e p r o d u c c i ó   d e   c o n t i n g u t   m u l t i m è d i aSCapWD'acordo L ' e m i s s i ó   n o   e s t à   c o n n e c t a d aoI A q u e s t a   a p l i c a c i ó   n e c e s s i t a   a c c e d i r   a   l a   x a r x a   l o c a l   p e r   e m e t r e   c o n t i n g u tU--:--g S e g ü e n to V e s   a   C o n f i g u r a c i óVEmet a_Silencia o deixa de silenciari S u b t í t o l sZla tauletal C o n f i g u r a c i óXAnterior_Comprova la xarxa Wi-Fio L ' e m i s s i ó   e s t à   c o n n e c t a d a_Reprodueix o posa en pausa]Posa en pausao! A q u e s t a   a p l i c a c i ó   n e c e s s i t a   a c c e d i r   a   l a   x a r x a   W i  F i   p e r   c o n n e c t a r - s e   a l s   t e u s   d i s p o s i t i u s . 
 
 P e r   e m e t r e   c o n t i n g u t ,   s e l e c c i o n a    D ' a c o r d    q u a n   l ' a p l i c a c i ó   s o l · l i c i t i   c o n n e c t a r - s e   a   l a   x a r x a   l o c a l .   T a m b é   p o t s   a c t i v a r   a q u e s t a   o p c i ó   m é s   e n d a v a n t   a   l a   c o n f i g u r a c i ó   d ' i O S   p e r   a   a q u e s t a   a p l i c a c i ó .k % d   p e r   c e n t_"No hi ha cap dispositiu disponibleo S ' e s t à   e m e t e n t   a   % @oÆ A q u e s t a   a p l i c a c i ó   n e c e s s i t a   a c c e d i r   a   l a   x a r x a   W i  F i   p e r   c o n n e c t a r - s e   a l s   t e u s   d i s p o s i t i u s . 
 
 P e r   e m e t r e   c o n t i n g u t ,   v e s   a   C o n f i g u r a c i ó   i   a c t i v a   l ' o p c i ó   A c c é s   a   l a   x a r x a   l o c a l   p e r   a   a q u e s t a   a p l i c a c i ó .o| E n   a q u e s t   t e l è f o n ,   v e s   a   C o n f i g u r a c i ó   i   c o m p r o v a   q u e   l ' o p c i ó   A c c é s   a   l a   x a r x a   l o c a l   e s t i g u i   a c t i v a d a   p e r   a   a q u e s t a   a p l i c a c i óo S ' e s t à   c o n n e c t a n t   l ' e m i s s i ój e l   t e l è f o no L a   s e s s i ó   d ' e m i s s i ó   h a   c o m e n ç a to> A s s e g u r a ' t   q u e   l ' o p c i ó   A c c é s   a   l a   x a r x a   l o c a l   e s t i g u i   a c t i v a d aZEN DIRECTEo L a   s e s s i ó   d ' e m i s s i ó   h a   a c a b a to A v a n ç a   3 0   s e g o n s  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do³þ05ä)Ë	`	f	u		£	Ã	Ö	á	ú


R
o
}ÃÚÿ
(·²ë AÀË             T              +


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/cs.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKYHlasitosth PY i p o j i tW(Label)o Z a d e j t e   k ó d   P I No O d e s í l á n í   d o   z aY í z e n í   O b ý v á kWTitulkyW(title)Z(Subtitle)oC K l e p n u t í m   mo~ e t e   o d e s í l a t   m e d i á l n í   o b s a h   d o   t e l e v i z e   a   r e p r o d u k t o roo Z a s t a v i t   o d e s í l á n íTpin0n PY i p o j o v á n í . . .WReklamaTZvuk](device name)f Z a vY í tf Z r ua i tk PY i p o j o v á n íW(Title)_pin_cancel_buttonTpin2WTituleko PY e s k o
 i t   r e k l a m uo PY e h r á v á n í   r e k l a m y . . .Tpin1_connecting_skip_button_welcome_cancel_buttono Z a d e j t e  
 t yY m í s t n ý   k ó d   P I N   z o b r a z e n ý   n a   p l oa e   z aY í z e n í   v   o k o l í .   V l a s t n í k   z aY í z e n í   t e n t o   k ó d   P I N   n a l e z n e   t a k é   v   a p l i k a c i   C h r o m e c a s t .i PY e s k o
 i to  N e n í   v y b r á n  ~ á d n ý   m e d i á l n í   o b s a ho' K l e p n u t í m   a k t i v u j e t e   r o za íY e n é   o v l á d á n í_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonk V ý b r   s t o p yo Z a z n a m e n a t   k ó d   P I No PY e p í n a
   pY e h r á v á n í   a   p a u z y_(device status)UTitle_(multizone device name)o PY i p o j t e   s e   k   z aY í z e n í   v   o k o l í_welcome_skip_buttonX(artist)]skip_ad_labelVHotovo_connecting_cancel_buttonk O d e s í l a t   d ooR A b y s t e   s e   m o h l i   pY i p o j i t ,   v áa   m i k r o f o n   b u d e   d o
 a s n   p o u~ i t   k   z a z n a m e n á n í   k ó d u   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¦·¿à#+6¿æë#0=T\pu}¢ÏÔí	

!
d
µ
Ê
Ï
Þ
òD}¯î
"=T             v              û


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/cs.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELTZvuko O   3 0   s e k u n d   z p to D a la í   i n f o r m a c eo  R e k l a m u   mo~ e t e   pY e s k o
 i t   z a   % l d &XStopa %dm PY i p o j o v á n í   kg PY e h r á toO Z k o n t r o l u j t e ,   z d a   j s o u   % @   a   s t r e a m o v a c í   z aY í z e n í   pY i p o j e n y   k e   s t e j n é   s í t i   W i - F io V y b r a t   s t o p u   s k r y t ý c h   t i t u l koo% Z a s t a v i t   pY e h r á v á n í   m e d i á l n í h o   o b s a h ue} á d n éROKo O d e s í l á n í ,   n e pY i p o j e n ooO A b y   b y l o   m o~ n é   z   t é t o   a p l i k a c e   o d e s í l a t ,   m u s í t e   j í   u d l i t   pY í s t u p   k   m í s t n í   s í t iU--:--e D a la ío PY e j í t   d o   n a s t a v e n ík O d e s í l a t   d oo PY e p n o u t   z t l u m e n í   z v u k un S k r y t é   t i t u l k yVtableti N a s t a v e n íi PY e d c h o z ío Z k o n t r o l u j t e   s íe   W i - F io O d e s í l á n í ,   pY i p o j e n oo PY e p í n a
   pY e h r á v á n í   a   p a u z yZPozastavitWTitulkyoñ A b y   b y l o   m o~ n é   pY i p o j i t   t u t o   a p l i k a c i   k   z aY í z e n í m ,   m u s í t e   j í   u d l i t   pY í s t u p   k   s í t i   W i - F i . 
 
 A~   a p l i k a c e   p o~ á d á   o   pY i p o j e n í   k   m í s t n í   s í t i ,   v y b e r t e   O K   a   b u d e t e   m o c i   o d e s í l a t .   PY í s t u p   mo~ e t e   u d l i t   t a k é   p o z d j i   v   n a s t a v e n í   i O S   p r o   t u t o   a p l i k a c i .d % d   %o! N e j s o u   k   d i s p o z i c i  ~ á d n á   z aY í z e n ío O d e s í l á n í   d o   z aY í z e n í   % @o½ A b y   b y l o   m o~ n é   pY i p o j i t   t u t o   a p l i k a c i   k   z aY í z e n í m ,   m u s í t e   j í   u d l i t   pY í s t u p   k   s í t i   W i - F i . 
 
 PY e j d t e   d o   N a s t a v e n í   a   z a p n t e   p r o   t u t o   a p l i k a c i   pY í s t u p   k   m í s t n í   s í t i .   P a k   b u d e t e   m o c i   o d e s í l a t .on N a   t o m t o   t e l e f o n u   pY e j d t e   d o   N a s t a v e n í   a   z k o n t r o l u j t e ,   z d a   j e   p r o   t u t o   a p l i k a c i   p o v o l e n   pY í s t u p   k   m í s t n í   s í t io O d e s í l á n í ,   pY i p o j u j e   s eWtelefono R e l a c e   o d e s í l á n í   b y l a   z a h á j e n ao& M u s í   b ý t   p o v o l e n   pY í s t u p   k   m í s t n í   s í t id} I Vo R e l a c e   o d e s í l á n í   b y l a   u k o n
 e n ao O   3 0   s e k u n d   v pY e d  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-di­ðù#ÄNY\	,	2	=	f	}	®	Ë	Ò	å	ø
'
R


Ñ
`Ø'0o             U              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/da.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKYLydstyrke_Opret forbindelseW(Label)]Angiv pinkode_Caster til Stue\UnderteksterW(title)Z(Subtitle)o< T r y k   f o r   a t   c a s t e   m e d i e r   t i l   d i t   f j e r n s y n   o g   d i n e   h ø j t t a l e r eYStop castXpinkode0o F o r b i n d e l s e n   o p r e t t e s &WAnnonceSLyd](device name)SLukXAnnuller_Opretter forbindelseW(Title)_pin_cancel_buttonXpinkode2_Spring annonce overo I g a n g v æ r e n d e   a n n o n c e . . .Xpinkode1_connecting_skip_button_welcome_cancel_buttono A n g i v   d e n   f i r e c i f r e d e   p i n k o d e ,   d e r   v i s e s   p å   s t a r t s k æ r m e n   p å   e n   e n h e d   i   n æ r h e d e n .   E j e r e n   a f   e n h e d e n   k a n   o g s å   f i n d e   p i n k o d e n   i   C h r o m e c a s t - a p p e n .[Spring over_Der er ikke valgt nogen medier_+Tryk for at aktivere udvidet medieafspiller_pin_connect_buttonXpinkode3^skip_ad_button_pin_listen_button_welcome_ok_button\Valg af spor_Lyt efter pinkodeo# S k i f t   m e l l e m   A f s p i l   o g   S æ t   p å   p a u s e_(device status)UTitle_(multizone device name)o) O p r e t   f o r b i n d e l s e   t i l   e n   e n h e d   i   n æ r h e d e n_welcome_skip_buttonX(artist)]skip_ad_labele U d f ø r_connecting_cancel_buttonXCast tilob D i n   m i k r o f o n   a n v e n d e s   m i d l e r t i d i g t   t i l   a t   l y t t e   e f t e r   e n   p i n k o d e ,   s å   d e r   k a n   o p r e t t e s   f o r b i n d e l s e .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¦ºÂÐâï÷}¿ÇËÙÝæý"8ir£	Â	Î	ï

2
;
J
^
r


Ü
î
ôcy¶¿             u              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/da.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELSLyd_Spol 30 sekunder tilbageo F å   f l e r e   o p l y s n i n g e r_&Du kan springe annoncen over om %ld...WSpor %d_Opretter forbindelse tilVAfspiloO S ø r g   f o r ,   a t   d i n   % @   o g   C a s t - e n h e d e n   h a r   f o r b i n d e l s e   t i l   d e t   s a m m e   W i - F i - n e t v æ r ko V æ l g   u n d e r t e k s t e r_Stop medieafspilningenUIngenROKo C a s t      i k k e   f o r b u n d e to5 D e n n e   a p p   s k a l   h a v e   l o k a l   n e t v æ r k s a d g a n g   f o r   a t   c a s t eU--:--e N æ s t eo G å   t i l   I n d s t i l l i n g e rXCast tilo S l å   l y d e n   t i l   e l l e r   f r a\UnderteksterVtablet]IndstillingerWForrigeo T j e k   d i t   W i - F i - n e t v æ r ko C a s t      f o r b u n d e to# S k i f t   m e l l e m   A f s p i l   o g   S æ t   p å   p a u s eUPauseoù D e n n e   a p p   s k a l   h a v e   a d g a n g   t i l   d i t   W i - F i - n e t v æ r k   f o r   a t   o p r e t t e   f o r b i n d e l s e   t i l   d i n e   e n h e d e r . 
 
 V æ l g   " O K "   f o r   a t   c a s t e ,   n å r   a p p e n   a n m o d e r   o m   f o r b i n d e l s e   t i l   d i t   l o k a l e   n e t v æ r k .   D u   k a n   o g s å   g i v e   d e n n e   t i l l a d e l s e   s e n e r e   i   i O S - i n d s t i l l i n g e r n e   f o r   a p p e n .Z%d procento! D e r   e r   i n g e n   t i l g æ n g e l i g e   e n h e d e r]Caster til %@o¼ D e n n e   a p p   s k a l   h a v e   a d g a n g   t i l   d i t   W i - F i - n e t v æ r k   f o r   a t   o p r e t t e   f o r b i n d e l s e   t i l   d i n e   e n h e d e r . 
 
 H v i s   d u   v i l   c a s t e ,   s k a l   d u   g å   t i l   I n d s t i l l i n g e r   o g   a k t i v e r e   " L o k a l   n e t v æ r k s a d g a n g "   f o r   a p p e n .ob G å   t i l   I n d s t i l l i n g e r   p å   d e n n e   t e l e f o n ,   o g   t j e k ,   a t   l o k a l   n e t v æ r k s a d g a n g   e r   a k t i v e r e t   f o r   d e n n e   a p po C a s t      o p r e t t e r   f o r b i n d e l s eWtelefon_Cast-sessionen er starteto. S ø r g   f o r ,   a t   l o k a l   n e t v æ r k s a d g a n g   e r   a k t i v e r e tTLIVE_Cast-sessionen er slut_Spol 30 sekunder frem  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dh®×ßú¢Çàæé¿Èù		
		#	R	u	¾	Ä¹Ä	
Y¶3             T              K


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/de.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKj L a u t s t ä r k eYVerbindenW(Label)\PIN eingeben_Streaming ins WohnzimmerZUntertitelW(title)Z(Subtitle)_<Tippen, um Medien auf Fernseher und Lautsprecher zu streamen_Streaming beendenTpin0o V e r b i n d u n g   w i r d   h e r g e s t e l l t &WWerbungUAudio](device name)i S c h l i e ß e nYAbbrechen_VerbindungsaufbauW(Title)_pin_cancel_buttonTpin2o W e r b u n g   ü b e r s p r i n g e nn W e r b u n g   l ä u f t &Tpin1_connecting_skip_button_welcome_cancel_buttono¢ G i b   d i e   v i e r s t e l l i g e   P I N   e i n ,   d i e   a u f   d e m   S t a r t b i l d s c h i r m   e i n e s   G e r ä t s   i n   d e r   N ä h e   a n g e z e i g t   w i r d .   D e r   G e r ä t e e i g e n t ü m e r   f i n d e t   d i e   P I N   a u c h   i n   d e r   C h r o m e c a s t   A p p .l Ü b e r s p r i n g e no K e i n e   M e d i e n   a u s g e w ä h l t_2Tippe, um den maximierten Controller zu aktivieren_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button\Titelauswahl_PIN akustisch erfassen_(Umschalten zwischen Wiedergabe und Pause_(device status)UTitle_(multizone device name)o+ V e r b i n d u n g   m i t   G e r ä t   i n   d e r   N ä h e   h e r s t e l l e n_welcome_skip_buttonX(artist)]skip_ad_labelVFertig_connecting_cancel_button\Streamen aufo} D a m i t   e i n e   V e r b i n d u n g   h e r g e s t e l l t   w e r d e n   k a n n ,   w i r d   v o r ü b e r g e h e n d   d e i n   M i k r o f o n   v e r w e n d e t ,   u m   e i n e   P I N   a k u s t i s c h   z u   e r f a s s e n .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n±»ÃÐëöþ	H\a¤ª¸ËÕéñ
5RWp	Ï	è

N
c
h
w


¬
Å
ð"{¨¯Ê×             u              Ô


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/de.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudioo 3 0   S e k u n d e n   z u r ü c k_Weitere Informationeno W e r b u n g   ü b e r s p r i n g e n   i n   % l d &h T i t e l   % d_Verbindung wird hergestellt zuZWiedergabeoL P r ü f e n   S i e ,   o b   s i c h   I h r   % @   u n d   d a s   Ü b e r t r a g u n g s g e r ä t   i m   s e l b e n   W L A N   b e f i n d e no T i t e l   m i t   U n t e r t i t e l n   a u s w ä h l e n_Wiedergabe beendenUKeineROKo S t r e a m e n      n i c h t   v e r b u n d e no? D i e s e   A p p   b e n ö t i g t   z u m   S t r e a m e n   Z u g r i f f   a u f   d a s   l o k a l e   N e t z w e r kU--:--VWeiter_Zu den Einstellungen\Streamen auf_+Stummschaltung aktivieren oder deaktivierenZUntertitelVTablet]Einstellungenf Z u r ü c kk W L A N   p r ü f e no S t r e a m e n      v e r b u n d e n_(Umschalten zwischen Wiedergabe und PauseYPausiereno D i e s e   A p p   b e n ö t i g t   Z u g r i f f   a u f   d e i n   W L A N ,   u m   e i n e   V e r b i n d u n g   z u   d e i n e n   G e r ä t e n   h e r z u s t e l l e n . 
 
 W ä h l e   " O K "   a u s ,   w e n n   d i e   A p p   z u m   S t r e a m e n   e i n e   V e r b i n d u n g   z u   d e i n e m   l o k a l e n   N e t z w e r k   h e r s t e l l e n   m ö c h t e .   D u   k a n n s t   d a s   a u c h   s p ä t e r   i n   d e n   i O S - E i n s t e l l u n g e n   f ü r   d i e s e   A p p   t u n .d % d   %o K e i n e   G e r ä t e   v e r f ü g b a r_ Inhalte werden an "%@" gestreamtoÉ D i e s e   A p p   b e n ö t i g t   Z u g r i f f   a u f   d e i n   W L A N ,   u m   e i n e   V e r b i n d u n g   z u   d e i n e n   G e r ä t e n   h e r z u s t e l l e n . 
 
 W e n n   d u   s t r e a m e n   m ö c h t e s t ,   r u f   d e i n e   E i n s t e l l u n g e n   a u f   u n d   g e w ä h r e   d e r   A p p   Z u g r i f f   a u f   d a s   l o k a l e   N e t z w e r k .o G e h e n   S i e   z u   d e n   E i n s t e l l u n g e n   a u f   d i e s e m   S m a r t p h o n e   u n d   p r ü f e n   S i e ,   o b   d e r   Z u g r i f f   a u f   d a s   l o k a l e   N e t z w e r k   f ü r   d i e s e   A p p   a k t i v i e r t   i s to S t r e a m e n      w i r d   v e r b u n d e nZSmartphone_Stream gestarteto< P r ü f e n ,   o b   d e r   Z u g r i f f   a u f   d a s   l o k a l e   N e t z w e r k   a k t i v i e r t   i s tTLIVE^Stream beendeto 3 0   S e k u n d e n   v o r  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dj©äõ!¼ýRÓÙà÷		2	=	D	R	_	v	¡	Ì	Öðù(K
àñ&1D¿ÄÓ             T              ô


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/el.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTEFUVWXYTZ[\]^_`QabcdIefghijRakElmnoUD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKk½Ä±Ã·  ®Ç¿Åg£Í½´µÃ·W(Label)l¹Ã±³É³®   P I NoµÄ¬´¿Ã·  ÃÄ¿  º±¸¹ÃÄ¹ºÌi¥ÀÌÄ¹Ä»¿¹W(title)Z(Subtitle)o:³³¯¾Äµ  ³¹±  ¼µÄ¬´¿Ã·  ¼­ÃÉ½  ÃÄ·½  Ä·»µÌÁ±Ã·  º±¹  Ä±  ·Çµ¯±  Ã±Âo¹±º¿À®  ¼µÄ¬´¿Ã·ÂTpin0o Á±³¼±Ä¿À¿¹µ¯Ä±¹  ÃÍ½´µÃ· &i¹±Æ®¼¹Ã·dÇ¿Â](device name)h»µ¯Ã¹¼¿eºÅÁ¿W(Title)_pin_cancel_buttonTpin2i¥ÀÌÄ¹Ä»¿Âo ±Á¬²»µÈ·  ´¹±Æ®¼¹Ã·Âo¹±Æ®¼¹Ã·  Ãµ  µ¾­»¹¾· &Tpin1_connecting_skip_button_welcome_cancel_buttono¡¹Ã±³¬³µÄµ  Ä¿   4 -È®Æ¹¿   P I N  À¿Å  ÀÁ¿²¬»»µÄ±¹  ÃÄ·½  ±ÁÇ¹º®  ¿¸Ì½·  ¼¹±Â  º¿½Ä¹½®Â  ÃÅÃºµÅ®Â .    º¬Ä¿Ç¿Â  Ä·Â  ÃÅÃºµÅ®Â  ¼À¿Áµ¯  µÀ¯Ã·Â  ½±  ²Áµ¹  Ä¿   P I N  ÃÄ·½  µÆ±Á¼¿³®   C h r o m e c a s t .i ±Á¬²»µÈ·oµ½  µÀ¹»­Ç¸·º±½  ¼­Ã±o7 ±Ä®ÃÄµ  ³¹±  ½±  µ½µÁ³¿À¿¹®ÃµÄµ  Ä¿  µºÄµÄ±¼­½¿  Çµ¹Á¹ÃÄ®Á¹¿_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonoÀ¹»¿³®  º¿¼¼±Ä¹¿ÍoºÁÌ±Ã·  ³¹±   P I No½±»»±³®  ±½±À±Á±³É³®Â /À±ÍÃ·Â_(device status)UTitle_(multizone device name)o£Í½´µÃ·  Ãµ  º¿½Ä¹½®  ÃÅÃºµÅ®_welcome_skip_buttonX(artist)]skip_ad_labele¤­»¿Â_connecting_cancel_buttonkµÄ¬´¿Ã·  ÃµoU¹±  ½±  ÃÅ½´µ¸µ¯Äµ ,  ¸±  ÇÁ·Ã¹¼¿À¿¹·¸µ¯  ÀÁ¿ÃÉÁ¹½¬  Ä¿  ¼¹ºÁÌÆÉ½Ì  Ã±Â  ³¹±  ±ºÁÌ±Ã·  µ½ÌÂ   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n³ÂÊã%-8¯ÔÙ!*8IT\pu³àåþ	
[
n

$3G[¡ÜîôE[dr}¯             u              
\


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/el.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELdÇ¿Âo ¯ÃÉ  º±Ä¬   3 0  ´µÅÄµÁÌ»µÀÄ±o¬¸µÄµ  ÀµÁ¹ÃÃÌÄµÁ±o-À¿Áµ¯Äµ  ½±  À±Á±²»­ÈµÄµ  Ä·  ´¹±Æ®¼¹Ã·  Ãµ   % l d   &j¿¼¼¬Ä¹   % dj£Í½´µÃ·  Ãµk½±À±Á±³É³®oJµ²±¹É¸µ¯Äµ  ÌÄ¹  Ä¿   % @  º±¹  ·  ÃÅÃºµÅ®  ¼µÄ¬´¿Ã·Â  µ¯½±¹  ÃÄ¿  ¯´¹¿  ´¯ºÄÅ¿   W i - F i .oÀ¹»­¾Äµ  ­½±  º¿¼¼¬Ä¹  ÅÀ¿Ä¯Ä»É½o¹±º¿À®  ±½±À±Á±³É³®Â  ¼­ÃÉ½g±½­½±ÂboµÄ±´¿Ã· ,  ´µ½  ÃÅ½´­¸·ºµoBÅÄ®  ·  µÆ±Á¼¿³®  ÇÁµ¹¬¶µÄ±¹  ÀÁÌÃ²±Ã·  ÃÄ¿  Ä¿À¹ºÌ  ´¯ºÄÅ¿  ³¹±  ¼µÄ¬´¿Ã·U--:--gÀÌ¼µ½¿oµÄ¬²±Ã·  ÃÄ¹Â  ¡Å¸¼¯Ãµ¹ÂkµÄ¬´¿Ã·  Ãµo½±»»±³®  Ä·Â  º±Ä¬ÃÄ±Ã·Â  Ã¯³±Ã·Âi¥ÀÌÄ¹Ä»¿¹Vtableti¡Å¸¼¯Ãµ¹Âk Á¿·³¿Í¼µ½¿o»­³¾Äµ  Ä¿  ´¯ºÄÅ¿   W i - F ioµÄ¬´¿Ã· ,  ­³¹½µ  ÃÍ½´µÃ·o½±»»±³®  ±½±À±Á±³É³®Â /À±ÍÃ·Âe ±ÍÃ·o¹±  ½±  ÃÅ½´µ¸µ¯  ÃÄ¹Â  ÃÅÃºµÅ­Â  Ã±Â ,  ±ÅÄ®  ·  µÆ±Á¼¿³®  ÇÁµ¹¬¶µÄ±¹  ÀÁÌÃ²±Ã·  ÃÄ¿  ´¯ºÄÅ¿   W i - F i . 
 
¹±  ¼µÄ¬´¿Ã· ,  ÌÄ±½  ·  µÆ±Á¼¿³®  Ã±Â  ¶·Ä®Ãµ¹  ½±  ÃÅ½´µ¸µ¯  ÃÄ¿  Ä¿À¹ºÌ  Ã±Â  ´¯ºÄÅ¿ ,  µÀ¹»­¾Äµ   O K .  À¿Áµ¯Äµ  ½±  À±Á±ÇÉÁ®ÃµÄµ  ±ÅÄ®  Ä·½  ¬´µ¹±  ±Á³ÌÄµÁ±  ±ÀÌ  Ä¹Â  ÁÅ¸¼¯Ãµ¹Â   i O S  ³¹±  ±ÅÄ®  Ä·½  µÆ±Á¼¿³® .m % d  Ä¿¹Â  µº±ÄÌo µ½  ÅÀ¬ÁÇ¿Å½  ´¹±¸­Ã¹¼µÂ  ÃÅÃºµÅ­ÂoµÄ¬´¿Ã·  ÃÄ·  ÃÅÃºµÅ®   % @oÈ¹±  ½±  ÃÅ½´µ¸µ¯  ÃÄ¹Â  ÃÅÃºµÅ­Â  Ã±Â ,  ±ÅÄ®  ·  µÆ±Á¼¿³®  ÇÁµ¹¬¶µÄ±¹  ÀÁÌÃ²±Ã·  ÃÄ¿  ´¯ºÄÅ¿   W i - F i . 
 
¹±  ¼µÄ¬´¿Ã· ,  ¼µÄ±²µ¯Äµ  ÃÄ¹Â  ¡Å¸¼¯Ãµ¹Â  º±¹  µ½µÁ³¿À¿¹®ÃÄµ  Ä·½   ÁÌÃ²±Ã·  ÃÄ¿  Ä¿À¹ºÌ  ´¯ºÄÅ¿  ³¹±  ±ÅÄ®  Ä·½  µÆ±Á¼¿³® .oµÄ±²µ¯Äµ  ÃÄ¹Â  ¡Å¸¼¯Ãµ¹Â  Ãµ  ±ÅÄÌ  Ä¿  Ä·»­ÆÉ½¿  º±¹  µ»­³¾Äµ  ÌÄ¹  ·  µÀ¹»¿³®   ÁÌÃ²±Ã·  ÃÄ¿  Ä¿À¹ºÌ  ´¯ºÄÅ¿  µ¯½±¹  µ½µÁ³®  ³¹±  ±ÅÄ®  Ä·½  µÆ±Á¼¿³® .oµÄ¬´¿Ã· ,  ³¯½µÄ±¹  ÃÍ½´µÃ·hÄ·»­ÆÉ½¿o)  ÀµÁ¯¿´¿Â  »µ¹Ä¿ÅÁ³¯±Â  ¼µÄ¬´¿Ã·Â  ¾µº¯½·ÃµoAµ²±¹É¸µ¯Äµ  ÌÄ¹  ·  µÀ¹»¿³®   ÁÌÃ²±Ã·  ÃÄ¿  Ä¿À¹ºÌ  ´¯ºÄÅ¿  µ¯½±¹  µ½µÁ³®g©¤o-  ÀµÁ¯¿´¿Â  »µ¹Ä¿ÅÁ³¯±Â  ¼µÄ¬´¿Ã·Â  ¿»¿º»·ÁÎ¸·ºµoÀÁ¿ÃÄ¬  º±Ä¬   3 0  ´µÅÄµÁÌ»µÀÄ±  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dm¢É&;Pgþ=t¹	@	F	U			Þ	ñ	ø

"
S

¿
Êð

N
Teº?N«             T              æ


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/en.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKVVolumeWConnectW(Label)YEnter PIN_Casting To Living RoomYSubtitlesW(title)Z(Subtitle)_+Touch to cast media to your TV and Speakers\Stop castingTpin0]Connecting...RAdUAudio](device name)UCloseVCancelZConnectingW(Title)_pin_cancel_buttonTpin2XSubtitleWSkip Ad_Ad in progress...Tpin1_connecting_skip_button_welcome_cancel_button_Enter the 4-digit PIN displayed on the home screen of a nearby device. The device owner can also find the PIN in the Chromecast app.TSkip_No media selected_#Tap to activate expanded controller_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button_Track Selection^Listen for PIN_Play pause toggle_(device status)UTitle_(multizone device name)_Connect to nearby device_welcome_skip_buttonX(artist)]skip_ad_labelTDone_connecting_cancel_buttonWCast to_ITo connect, your microphone will be used temporarily to listen for a PIN.   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£«³½Öàèó!.3ADJX^epx¢¶»Ôìsx²ÇÌÛï			$	8	J	P	j			¤	²	·	Ò	Ú             v              
&


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/en.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudio_Rewind 30 secondsZLearn more_You can skip ad in %ld ...XTrack %d]Connecting toTPlay_CMake sure your %@ and the cast device are on the same Wi-Fi network_Select a closed captions track_Stop media playbackTNoneROK_Cast not connected_+This app needs Local Network Access to CastU--:--TNext^Go to SettingsWCast to_Toggle the mute state_Closed CaptionsVtabletXSettingsXPrevious_Check your Wi-Fi network^Cast connected_Play pause toggleUPauseYSubtitlesoÎ T o   c o n n e c t   t o   y o u r   d e v i c e s ,   t h i s   a p p   n e e d s   a c c e s s   t o   y o u r   W i - F i   n e t w o r k . 
 
 T o   C a s t ,   s e l e c t    O K    w h e n   t h e   a p p   a s k s   t o   c o n n e c t   t o   y o u r   l o c a l   n e t w o r k .   Y o u   c a n   a l s o   a l l o w   t h i s   l a t e r   i n   i O S   S e t t i n g s   f o r   t h i s   a p p .Z%d percent_No devices available]Casting to %@o T o   c o n n e c t   t o   y o u r   d e v i c e s ,   t h i s   a p p   n e e d s   a c c e s s   t o   y o u r   W i - F i   n e t w o r k . 
 
 T o   C a s t ,   g o   t o   y o u r   S e t t i n g s   a n d   t u r n   o n    L o c a l   N e t w o r k   A c c e s s    f o r   t h i s   a p p ._ZGo to Settings on this phone and check that Local Network Access is turned on for this app_Cast connectingUphone_Cast session started_$Make sure Local Network Access is onTLIVE_Cast session ended_Forward 30 seconds  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dj~¦¯½Â)?DG\¤¬ÄÖÝæï
-3=	Ü	ç	þ
=¬²Éðõ
             U              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/en_GB.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKVVolumeWConnectW(Label)YEnter PIN_Casting to Living RoomYSubtitlesW(title)Z(Subtitle)_+Touch to cast media to your TV and Speakers\Stop castingTpin0k C o n n e c t i n g &RAdUAudio](device name)UCloseVCancelZConnectingW(Title)_pin_cancel_buttonTpin2XSubtitleWSkip ad_Ad in progress...Tpin1_connecting_skip_button_welcome_cancel_button_Enter the 4-digit PIN displayed on the home screen of a nearby device. The device owner can also find the PIN in the Chromecast app.TSkip_No media selected_#Tap to activate expanded controller_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button_Track Selection^Listen for PIN_Play pause toggle_(device status)UTitle_(multizone device name)_Connect to nearby device_welcome_skip_buttonX(artist)]skip_ad_labelTDone_connecting_cancel_buttonWCast to_ITo connect, your microphone will be used temporarily to listen for a PIN.   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£«³½Öàèó!.3JMSagny£«¿ÄÝõ|»ÐÕäø			-	A	S	Y	s		¤	­	»	À	Û	ã             v              
/


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/en_GB.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudio_Rewind 30 secondsZLearn moreo Y o u   c a n   s k i p   a d   i n   % l d &XTrack %d]Connecting toTPlay_HMake sure that your %@ and the cast device are on the same Wi-Fi network_Select a closed captions track_Stop media playbackTNoneROK_Cast not connected_+This app needs local network access to castU--:--TNext^Go to SettingsWCast to_Toggle the mute state_Closed captionsVtabletXSettingsXPrevious_Check your Wi-Fi network^Cast connected_Play pause toggleUPauseYSubtitles_ÎTo connect to your devices, this app needs access to your Wi-Fi network.

To cast, select 'OK' when the app asks to connect to your local network. You can also allow this later in iOS settings for this app.[%d per cent_No devices available]Casting to %@_To connect to your devices, this app needs access to your Wi-Fi network.

To cast, go to your settings and turn on 'Local network access' for this app._ZGo to Settings on this phone and check that local network access is turned on for this app_Cast connectingUphone_Cast session started_)Make sure that local network access is onTLIVE_Cast session ended_Forward 30 seconds  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dj~ºÃÑÖ!BX]`u£©®½ÅÝïöÿ#2FLV	'	3	J	X	ò
O
a
g
~
ª
¯
Ä             U              
Ù


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/es.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleWAceptarWVolumenXConectarW(Label)_Introduce el PINo E n v i a n d o   c o n t e n i d o   a   S a l ó nj S u b t í t u l o sW(title)Z(Subtitle)_?Toca para enviar contenido multimedia a tu TV y a los altavoceso D e t e n e r   e l   e n v í oTpin0]Conectando...WAnuncioUAudio](device name)VCerrarXCancelarZConectandoW(Title)_pin_cancel_buttonTpin2i S u b t í t u l o^Saltar anuncio_Anuncio en curso...Tpin1_connecting_skip_button_welcome_cancel_buttonoº I n t r o d u c e   e l   P I N   d e   c u a t r o   d í g i t o s   q u e   a p a r e c e   e n   l a   p a n t a l l a   d e   i n i c i o   d e   a l g ú n   d i s p o s i t i v o   c e r c a n o .   E l   p r o p i e t a r i o   d e l   d i s p o s i t i v o   t a m b i é n   p u e d e   v e r   e l   P I N   e n   l a   a p l i c a c i ó n   C h r o m e c a s t .VSaltaro& N o   s e   h a   s e l e c c i o n a d o   n i n g ú n   c o n t e n i d o_)Toca para activar el controlador ampliado_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono S e l e c c i ó n   d e   p i s t a\Detectar PINo A l t e r n a r   p a u s a   y   r e p r o d u c c i ó n_(device status)UTitle_(multizone device name)_!Conecta con dispositivos cercanos_welcome_skip_buttonX(artist)]skip_ad_labelUHecho_connecting_cancel_buttonXEnviar aoS U t i l i z a r e m o s   t u   m i c r ó f o n o   t e m p o r a l m e n t e   p a r a   e s c u c h a r   e l   P I N   y   e s t a b l e c e r   c o n e x i ó n .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¡©²ºÍ!,n¤¬²ÀÇÐÛã÷ü49Rj	á	è
7
c
x
}

 
´
Û
è%7=W{¨®ÉÒ             v              {


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/es.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudioo R e b o b i n a r   3 0   s e g u n d o so M á s   i n f o r m a c i ó n_"Puedes saltar el anuncio en %ld...h P i s t a   % d^Conectando conZReproduciroY C o m p r u e b a   q u e   t u   % @   y   q u e   e l   d i s p o s i t i v o   d e   e m i s i ó n   e s t é n   c o n e c t a d o s   a   l a   m i s m a   r e d   W i  F io# S e l e c c i o n a r   u n a   p i s t a   d e   s u b t í t u l o so/ D e t e n e r   l a   r e p r o d u c c i ó n   d e   c o n t e n i d o   m u l t i m e d i aWNingunoWAceptar_Cast no conectadooJ E s t a   a p l i c a c i ó n   n e c e s i t a   a c c e s o   a   l a   r e d   l o c a l   p a r a   u s a r   l a   f u n c i ó n   E n v i a rU--:--YSiguiente\Ve a AjustesXEnviar a_Activar o desactivar silencioj S u b t í t u l o sVtabletWAjustesXAnterioro C o m p r u e b a   t u   r e d   W i  F i^Cast conectadoo A l t e r n a r   p a u s a   y   r e p r o d u c c i ó nVPausaro E s t a   a p l i c a c i ó n   n e c e s i t a   a c c e s o   a   l a   r e d   W i  F i   p a r a   c o n e c t a r s e   a   t u s   d i s p o s i t i v o s . 
 
 S i   q u i e r e s   e n v i a r   c o n t e n i d o ,   s e l e c c i o n a   A c e p t a r   c u a n d o   l a   a p l i c a c i ó n   t e   p i d a   c o n e c t a r s e   a   t u   r e d   l o c a l .   T a m b i é n   p u e d e s   p e r m i t i r   e s t a   a c c i ó n   d e s p u é s   e n   l o s   a j u s t e s   d e   i O S   d e   l a   a p l i c a c i ó n .m % d   p o r   c i e n t oo$ N o   h a y   n i n g ú n   d i s p o s i t i v o   d i s p o n i b l e_Enviando contenido a %@oº E s t a   a p l i c a c i ó n   n e c e s i t a   a c c e s o   a   l a   r e d   W i  F i   p a r a   c o n e c t a r s e   a   t u s   d i s p o s i t i v o s . 
 
 S i   q u i e r e s   e n v i a r   c o n t e n i d o ,   v e   a   A j u s t e s   y   a c t i v a   l a   o p c i ó n   " A c c e s o   a   l a   r e d   l o c a l "   d e   l a   a p l i c a c i ó n .on E n   e l   t e l é f o n o ,   v e   a   A j u s t e s   y   c o m p r u e b a   q u e   e s t a   a p l i c a c i ó n   t e n g a   h a b i l i t a d o   e l   p e r m i s o   A c c e s o   a   l a   r e d   l o c a l_Cast conectandoh t e l é f o n oo S e s i ó n   d e   e n v í o   i n i c i a d aoA A s e g ú r a t e   d e   q u e   e l   p e r m i s o   A c c e s o   a   l a   r e d   l o c a l   e s t é   h a b i l i t a d oZEN DIRECTOo S e s i ó n   d e   e n v í o   f i n a l i z a d ao A v a n z a r   3 0   s e g u n d o s  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dj¸Ýîý½gow	"	(	2	?	H	h	}				Ä	Ó

9T¹0!2eêõ,             T              U


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/es_419.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKWVolumenYConnectarW(Label)^Ingresa el PIN_!Transmitiendo contenido a la salaj S u b t í t u l o sW(title)Z(Subtitle)_?Toca para transmitir contenido multimedia a las bocinas y la TVo D e t e n e r   t r a n s m i s i ó nTpin0k C o n e c t a n d o &WAnuncioUAudio](device name)VCerrarXCancelarZConectandoW(Title)_pin_cancel_buttonTpin2i S u b t í t u l o^Omitir anuncioo A n u n c i o   e n   c u r s o &Tpin1_connecting_skip_button_welcome_cancel_buttono² I n g r e s a   e l   P I N   d e   4   d í g i t o s   q u e   a p a r e c e   e n   l a   p a n t a l l a   p r i n c i p a l   d e   u n   d i s p o s i t i v o   c e r c a n o .   E l   p r o p i e t a r i o   d e l   d i s p o s i t i v o   t a m b i é n   p u e d e   e n c o n t r a r   e l   P I N   e n   l a   a p p   d e   C h r o m e c a s t .VOmitiro, N o   s e   s e l e c c i o n ó   n i n g ú n   c o n t e n i d o   m u l t i m e d i a_*Presiona para activar el control expandido_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono S e l e c c i ó n   d e   p i s t a s\Escuchar PINo# A l t e r n a r   e n t r e   r e p r o d u c c i ó n   y   p a u s a_(device status)UTitle_(multizone device name)o- E s t a b l e c e r   c o n e x i ó n   c o n   d i s p o s i t i v o s   c e r c a n o s_welcome_skip_buttonX(artist)]skip_ad_labelUListo_connecting_cancel_button\Transmitir aoV P a r a   e s t a b l e c e r   l a   c o n e x i ó n ,   s e   u s a r á   t e m p o r a l m e n t e   e l   m i c r ó f o n o   p a r a   e s c u c h a r   u n   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¤®¶ÅéþS| ¦´»ÄÏ×ëð7<Um	Ô	Û
6
c
x
}

 
´
Ý
ê3EKeÂØáïõ             v              Ì


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/es_419.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudioo R e t r o c e d e r   3 0   s e g u n d o so M á s   i n f o r m a c i ó no  P u e d e s   o m i t i r   e l   a n u n c i o   e n   % l d &h P i s t a   % do E s t a b l e c i e n d o   c o n e x i ó n   c o nZReproduciro\ A s e g ú r a t e   d e   q u e   t u   % @   y   e l   d i s p o s i t i v o   d e   t r a n s m i s i ó n   e s t é n   c o n e c t a d o s   a   l a   m i s m a   r e d   W i - F io" S e l e c c i o n a   u n a   p i s t a   d e   s u b t í t u l o so" D e t e n e r   l a   r e p r o d u c c i ó n   m u l t i m e d i aWNingunoWAceptaro' D i s p o s i t i v o   d e   t r a n s m i s i ó n   n o   c o n e c t a d o_AEsta app necesita acceso a la red local para transmitir contenidoU--:--YSiguienteo I r   a   C o n f i g u r a c i ó n\Transmitir ao+ A c t i v a r   o   d e s a c t i v a r   l a   o p c i ó n   d e   s i l e n c i a rj S u b t í t u l o sVtabletm C o n f i g u r a c i ó nXAnterior_Revisa la red Wi-Fio$ D i s p o s i t i v o   d e   t r a n s m i s i ó n   c o n e c t a d oo# A l t e r n a r   e n t r e   r e p r o d u c c i ó n   y   p a u s aVPausaro P a r a   c o n e c t a r s e   a   t u s   d i s p o s i t i v o s ,   e s t a   a p p   n e c e s i t a   a c c e s o   a   l a   r e d   W i - F i . 
 
 P a r a   t r a n s m i t i r   c o n t e n i d o ,   s e l e c c i o n a   " A c e p t a r "   c u a n d o   l a   a p p   s o l i c i t e   c o n e c t a r s e   a   l a   r e d   l o c a l .   T a m b i é n   p u e d e s   h a b i l i t a r   e s t a   o p c i ó n   m á s   a d e l a n t e   d e s d e   l a   c o n f i g u r a c i ó n   d e   i O S   p a r a   e s t a   a p p .S%d%_No hay dispositivos disponibles_Transmitiendo a %@o© P a r a   c o n e c t a r s e   a   t u s   d i s p o s i t i v o s ,   e s t a   a p p   n e c e s i t a   a c c e s o   a   l a   r e d   W i - F i . 
 
 P a r a   t r a n s m i t i r   c o n t e n i d o ,   v e   a   C o n f i g u r a c i ó n   y   a c t i v a   " A c c e s o   a   l a   r e d   l o c a l "   e n   e s t a   a p p .or V e   a   C o n f i g u r a c i ó n   e n   e s t e   t e l é f o n o   y   a s e g ú r a t e   d e   q u e   l a   o p c i ó n   A c c e s o   a   l a   r e d   l o c a l   e s t é   a c t i v a d a   p a r a   e s t a   a p po% C o n e c t a n d o   d i s p o s i t i v o   d e   t r a n s m i s i ó nh t e l é f o n oo  C o m e n z ó   l a   s e s i ó n   d e   t r a n s m i s i ó no> A s e g ú r a t e   d e   q u e   l a   o p c i ó n   A c c e s o   a   l a   r e d   l o c a l   e s t é   a c t i v a d aWEN VIVOo! F i n a l i z ó   l a   s e s i ó n   d e   t r a n s m i s i ó no A v a n z a r   3 0   s e g u n d o s  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-djºýEPR¡©ú	>	D	N	u		Û	ð	÷


1
|
Å
Ììð

'|c°ÁÐ             T              ù


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/et.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROK[Helitugevusf Ü h e n d aW(Label)_Sisestage PIN-koodo Ü l e k a n d m i n e   e l u t u p p aZSubtiitridW(title)Z(Subtitle)o7 P u u d u t a g e   m e e d i a   ü l e k a n d m i s e k s   t e l e r i s s e   j a   k õ l a r i t e s s eo P e a t a   ü l e k a n d m i n eTpin0l Ü h e n d a m i n e   &WReklaamTHeli](device name)TSuleg T ü h i s t aj Ü h e n d a m i n eW(Title)o p i n _ n u p p _ t ü h i s t aTpin2o J ä t a   r e k l a a m   v a h e l eo R e k l a a m   o n   p o o l e l i   &Tpin1o ü h e n d a m i n e _ n u p p _ j ä t a _ v a h e l eo t e r e _ t u l e m a s t _ n u p p _ t ü h i s t ao S i s e s t a g e   n e l j a k o h a l i n e   P I N - k o o d ,   m i s   o n   k u v a t u d   l ä h e d u s e s   o l e v a   s e a d m e   a v a k u v a l .   S e a d m e   o m a n i k   l e i a b   P I N - k o o d i   k a   C h r o m e c a s t i   r a k e n d u s e s t .k J ä t a   v a h e l e_Meediat pole valitud_0Puudutage laiendatud kontrolleri aktiveerimisekso p i n _ n u p p _ ü h e n d aTpin3o n u p p _ j ä t a _ r e k l a a m _ v a h e l e^pin_nupp_kuula_tere_tulemast_nupp_ok]Raja valimine_Kuula PIN-koodio E s i t a m i s e   j a   p e a t a m i s e   l ü l i t i_(device status)UTitle_(multizone device name)o! Ü h e n d a g e   l ä h e d u s e s   o l e v a   s e a d m e g ao t e r e _ t u l e m a s t _ n u p p _ j ä t a _ v a h e l eX(artist)o s i l t _ j ä t a _ r e k l a a m _ v a h e l eVValmiso ü h e n d a m i n e _ n u p p _ t ü h i s t al Ü l e k a n d m i n e :oG Ü h e n d a m i s e l   k a s u t a t a k s e   P I N - k o o d i   k u u l a m i s e k s   a j u t i s e l t   t e i e   m i k r o f o n i .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¨µ½Òý±¶Ï×Üêïþ>ClÕ	
%
<
S

§
¬
ß
î&cu{Ú"U\¦             u              
7


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/et.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELTHeli_Keri 30 sekundit tagasiYLisateaveo/ R e k l a a m i   s a a b   v a h e l e   j ä t t a   % l d   s e k u n d i   p ä r a s t   &X%d. radak Ü h e n d a m i n e :UEsitao: V e e n d u g e ,   e t   % @   j a   ü l e k a n d e s e a d e   o l e k s i d   s a m a s   W i F i - v õ r g u s_Vali subtiitrite rada_Peata meedia taasesitusVPuudubROKo Ü l e k a n d m i n e   p o l e   ü h e n d a t u do? S e e   r a k e n d u s   v a j a b   ü l e k a n d m i s e k s   j u u r d e p ä ä s u   k o h a l i k u l e   v õ r g u l eU--:--h J ä r g m i n eZAva seadedl Ü l e k a n d m i n e :o V a i g i s t a m i s e   o l e k u   l ü l i t iZSubtiitrid\tahvelarvutiVSeadedWEelmineo K o n t r o l l i g e   o m a   W i F i - v õ r k uo Ü l e k a n d m i n e   o n   ü h e n d a t u do E s i t a m i s e   j a   p e a t a m i s e   l ü l i t iUPeataoð T e i e   s e a d m e t e g a   ü h e n d u s e   l o o m i s e k s   v a j a b   s e e   r a k e n d u s   j u u r d e p ä ä s u   t e i e   W i F i - v õ r g u l e . 
 
 Ü l e k a n d m i s e k s   v a l i g e    O K  ,   k u i   r a k e n d u s   p a l u b   l u b a   k o h a l i k u   v õ r g u g a   ü h e n d u s e   l o o m i s e k s .   S a a t e   s e l l e   r a k e n d u s e   p u h u l   s e l l e   h i l j e m   l u b a d a   k a   i O S - i   s e a d e t e s .\%d protsentio S a a d a v a l   p o l e   ü h t k i   s e a d e to Ü l e k a n d m i n e   s e a d m e s s e   % @o¿ T e i e   s e a d m e t e g a   ü h e n d u s e   l o o m i s e k s   v a j a b   s e e   r a k e n d u s   j u u r d e p ä ä s u   t e i e   W i F i - v õ r g u l e . 
 
 Ü l e k a n d m i s e k s   a v a g e   s e a d e d   j a   l ü l i t a g e   v a l i k    J u u r d e p ä ä s   k o h a l i k u l e   v õ r g u l e    s e l l e   r a k e n d u s e   j a o k s   s i s s e .o} A v a g e   s e l l e s   t e l e f o n i s   m e n ü ü   S e a d e d   j a   v e e n d u g e ,   e t   j u u r d e p ä ä s   k o h a l i k u l e   v õ r g u l e   o l e k s   s e l l e   r a k e n d u s e   j a o k s   s i s s e   l ü l i t a t u do Ü l e k a n d m i s t   ü h e n d a t a k s eWtelefono Ü l e k a n d m i s e   s e a n s s   a l g a so@ V e e n d u g e ,   e t   j u u r d e p ä ä s   k o h a l i k u l e   v õ r g u l e   o l e k s   s i s s e   l ü l i t a t u dTOTSEo Ü l e k a n d m i s e   s e a n s s   l õ p p e s_Keri 30 sekundit edasi  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-diî÷£½ÄÇþ¡ºïú				M		½	Ã¦³ê
ÌÔÄ             T              Ý


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/fa.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlec.H(iEÌ2'F  5/'e'*5'DW(Label)o~ÌF  1'  H'1/  ©FÌ/o/1-'D  ~.4  E-*H'  (G   «3'DF  F4ÌEF »g2Ì1FHÌ3W(title)Z(Subtitle)o:(1'Ì  ~.4  E-*H'Ì  13'FG  (G  *DHÌ2ÌHF  H  (DF/¯HG'Ì*'F  DE3  ©FÌ/n*HBA  ~.4  E-*H'Tpin0l/1-'D  '*5'D &d"¯GÌd5H*Ì](device name)d(3*FcD:Hk/1-'D  '*5'DW(Title)_pin_cancel_buttonTpin2l1/  ©1/F  "¯GÌo/1-'D  ~.4  "¯GÌ . . .Tpin1_connecting_skip_button_welcome_cancel_buttono ~ÌF  ô  1BEÌ  FE'Ì4  /'/G 4/G  /1  5A-G  '5DÌ  /3*¯'GÌ  /1  '71'A  1'  H'1/  ©FÌ/ .  E'D©  /3*¯'G  EÌ *H'F/  'ÌF  ~ÌF  1'  /1  (1F'EG   C h r o m e c a s t  GE  ~Ì/'  ©F/ .f1/  4/Fo13'FG 'Ì  'F*.'(  F4/o/(1'Ì  A9'D  ©1/F  ©F*1D ©FF/G  (21¯ 4/G  61(G  (2FÌ/_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonk'F*.'(  "GF¯o¯H4  /'/F  (G  ~ÌFo,'(G ,'ÌÌ  (ÌF  ~.4 /E©+_(device status)UTitle_(multizone device name)o'*5'D  (G  /3*¯'G  '71'A_welcome_skip_buttonX(artist)]skip_ad_labeld*E'E_connecting_cancel_buttonl~.4  E-*H'  (GoT(1'Ì  (1B1'1Ì  '*5'D  '2  EÌ©1HAHF  4E'  (G 7H1  EHB*  (1'Ì  ¯H4  /'/F  (G  ~ÌF  '3*A'/G  EÌ 4H/ .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n ³¾Æé*9ALÃàåþ'.EMaf¤©ÂÚ	í	ú
#



­
Á
Õ
ì
:LRl¯¸ÆÏê             u              ®


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/fa.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELd5H*Ìoóð  +'FÌG  (G  9B(l(Ì4*1  (/'FÌ/o%/1   % l d  EÌ *H'FÌ/  '2  "¯GÌ  1/  4HÌ/   . . .g"GF¯   % dn/1-'D  '*5'D  (Gc~.4o3 E7E&F  4HÌ/   % @  H  /3*¯'G   C a s t  /1  Ì©  4(©G   W i - F i  ('4F/o$*1©  2Ì1FHÌ3  F'4FH'Ì'F  1'  'F*.'(  ©FÌ/n*HBA  ~.4  13'FGhGÌ ©/'Ee*#ÌÌ/o~.4  E-*H'  E*5D  FÌ3*o>'ÌF  (1F'EG  (1'Ì   «~.4  E-*H' »  (G   «/3*13Ì  (G  4(©G  E-DÌ »  FÌ'2  /'1/U--:--d(9/Ìo1A*F  (G  *F8ÌE'*l~.4  E-*H'  (Go1H4F  .'EH4  ©1/F  -'D*  5'E*o2Ì1FHÌ3  F'4FH'Ì'Fk1'Ì'FG  DH-Ìg*F8ÌE'*dB(DÌo 4(©G   W i - F i  1'  (113Ì  ©FÌ/o~.4  E-*H'  E*5D  '3*o,'(G ,'ÌÌ  (ÌF  ~.4 /E©+cE©+g2Ì1FHÌ3o 'ÌF  (1F'EG  (1'Ì  E*5D  4/F  (G  /3*¯'G G'Ì  4E'  ('Ì/  (G  4(©G   W i - F i  /3*13Ì  /'4*G  ('4/ . 
 
(1'Ì   «~.4  E-*H' »  HB*Ì  (1F'EG  (1'Ì  E*5D  4/F  (G  4(©G  E-DÌ  4E'  /1.H'3*  EÌ ©F/   «*#ÌÌ/ »  1'  'F*.'(  ©FÌ/ .  GEFÌF  EÌ *H'FÌ/  'ÌF  /3*13Ì  1'  (9/'K  /1   «*F8ÌE'* »   i O S  (1'Ì  'ÌF  (1F'EG  E,'2  ©FÌ/ .g % d  /15/o/3*¯'GÌ  /1/3*13  FÌ3*o/1-'D  ~.4  E-*H'  (G   % @o­ 'ÌF  (1F'EG  (1'Ì  E*5D  4/F  (G  /3*¯'G G'Ì  4E'  ('Ì/  (G  4(©G   W i - F i  /3*13Ì  /'4*G  ('4/ . 
 
(1'Ì   «~.4  E-*H' »  (G   «*F8ÌE'* »  (1HÌ/  H   «/3*13Ì  (G  4(©G  E-DÌ »  1'  (1'Ì  'ÌF  (1F'EG  1H4F  ©FÌ/ .o\/1  'ÌF  *DAF  (G   «*F8ÌE'* »  (1HÌ/  H  (113Ì  ©FÌ/   «/3*13Ì  (G  4(©G  E-DÌ »  (1'Ì  'ÌF  (1F'EG  1H4F  ('4/o~.4  E-*H'  /1-'D  E*5D  4/Fd*DAFo,D3G  ~.4  E-*H'  ":'2  4/o*E7E&F  4HÌ/   «/3*13Ì  (G  4(©G  E-DÌ »  1H4F  ('4/d2F/Go,D3G  ~.4  E-*H'  ~'Ì'F  Ì'A*oóð  +'FÌG  (G  ,DH  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dm§ô 'Ûø	=¼ÂËì		:	_	v			Ã	ê


-AP{¨Àóü+À             U              á


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/fi.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\W]^_Q`abcIdefghiR`jEkl\mVD^TJnoWpJqT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKo Ä ä n e n v o i m a k k u u sg Y h d i s t äW(Label)^Anna PIN-koodi_Striimataan olohuoneeseenYTekstitysW(title)Z(Subtitle)_DStriimaa mediaa televisioon ja kaiuttimiin koskettamalla painiketta._Lopeta striimaus[PIN-koodi 0l Y h d i s t e t ä ä n &VMainosd Ä ä n i](device name)USuljeTPeruk Y h d i s t e t ä ä nW(Title)\Peru-painike[PIN-koodi 2\Ohita mainoso M a i n o s t a   t o i s t e t a a n &[PIN-koodi 1]Ohita-painikeo A n n a   n e l i n u m e r o i n e n   P I N - k o o d i ,   j o k a   n ä k y y   l ä h e l l ä   o l e v a n   l a i t t e e n   a l o i t u s n ä y t ö l l ä .   L a i t t e e n   o m i s t a j a   v o i   t a r k i s t a a   P I N - k o o d i n   m y ö s   C h r o m e c a s t - s o v e l l u k s e s t a .UOhita_Ei valittua mediaa_Laajenna ohjain napauttamalla.o Y h d i s t ä - p a i n i k e[PIN-koodi 3o O h i t a   m a i n o s    p a i n i k e_Kuuntele-painikeZOK-painikeo Ä ä n i r a i d a t   j a   t e k s t i t y s_Kuuntele PIN-koodio T o i s t a / k e s k e y t ä - p a i n i k e_(device status)UTitle_(multizone device name)o# Y h d i s t ä   l ä h e l l ä   o l e v a a n   l a i t t e e s e e nX(artist)o O h i t a   m a i n o s    t u n n i s t eVValmisYStriimaa:oH M i k r o f o n i a   k ä y t e t ä ä n   P I N - k o o d i n   k u u n t e l e m i s e e n   y h t e y t t ä   m u o d o s t e t t a e s s a .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n½ÌÔãÿ	cv¢«¹¿ÄÛãðü	4@N			¤	Å	æ	ò

2
=
n

´
Æ
Ì
æ/8gnx             r              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/fi.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELd Ä ä n io T a a k s e p ä i n   3 0   s e k u n t i ai L u e   l i s ä äo- V o i t   o h i t t a a   m a i n o k s e n   % l d   s e k u n n i n   k u l u t t u a &ZKappale %dl Y h d i s t e t ä ä n :VToistaoI V a r m i s t a ,   e t t ä   % @   j a   s t r i i m a u s l a i t e   o v a t   y h t e y d e s s ä   s a m a a n   W i - F i - v e r k k o o n_Valitse tekstitysraita_Lopeta mediatoistoa ROK_Castia ei yhdistettyo8 T ä m ä   s o v e l l u s   t a r v i t s e e   s t r i i m a u k s e e n   l ä h i v e r k k o y h t e y d e nU--.--XSeuraava^Avaa AsetuksetYStriimaa:o! M y k i s t y s t i l a n   p ä ä l l e / p o i s - v a l i n t a\TekstityksetXtablettiYAsetuksetYEdellinen_Tarkista Wi-Fi-verkko_Cast yhdistettyo T o i s t a / k e s k e y t ä - p a i n i k eYKeskeytysYTekstitysoì J o t t a   t ä m ä   s o v e l l u s   v o i   y h d i s t ä ä   l a i t t e i s i i s i ,   s e   t a r v i t s e e   p ä ä s y n   W i - F i - v e r k k o o s i . 
 
 K u n   s o v e l l u s   p y y t ä ä   l u p a a   y h d i s t ä ä   l ä h i v e r k k o o s i ,   v a l i t s e   " O K " ,   n i i n   p ä ä s e t   s t r i i m a a m a a n .   V o i t   m y ö s   s a l l i a   t ä m ä n   m y ö h e m m i n   s o v e l l u k s e n   i O S - a s e t u k s i s t a .d % d   %o E i   l a i t t e i t a   k ä y t e t t ä v i s s ä_Striimataan: %@o¸ J o t t a   t ä m ä   s o v e l l u s   v o i   y h d i s t ä ä   l a i t t e i s i i s i ,   s e   t a r v i t s e e   p ä ä s y n   W i - F i - v e r k k o o s i . 
 
 A v a a   A s e t u k s e t   j a   l a i t a   t ä l l e   s o v e l l u k s e l l e   p ä ä l l e   " K ä y t t ö   l ä h i v e r k o s s a " ,   n i i n   p ä ä s e t   s t r i i m a a m a a n .o_ A v a a   t ä m ä n   p u h e l i m e n   a s e t u k s e t   j a   t a r k i s t a ,   e t t ä   l ä h i v e r k k o y h t e y s   o n   p ä ä l l ä   t ä s s ä   s o v e l l u k s e s s ao C a s t i a   y h d i s t e t ä ä nWpuhelin_Striimaus aloitettuo) V a r m i s t a ,   e t t ä   l ä h i v e r k k o y h t e y s   o n   p ä ä l l äTLIVEo S t r i i m a u s   p ä ä t t y n y to E t e e n p ä i n   3 0   s e k u n t i a  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dm¯07Ìåúý ¨²÷		
		!	9	K	|		kt«½
0
ñ 6¹             U              æ


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/fil.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKVVolumeYKumonektaW(Label)^Ilagay ang PIN_Ikina-cast Sa Sala\Mga SubtitleW(title)Z(Subtitle)_:Pindutin para mag-cast ng media sa iyong TV at Mga Speaker_Ihinto ang pag-castTpin0^Kumokonekta...RAdUAudio](device name)UIsaraZKanselahin[KumokonektaW(Title)_pin_cancel_buttonTpin2XSubtitle_Laktawan ang Ad_ Kasalukuyang pine-play ang ad...Tpin1_connecting_skip_button_welcome_cancel_button_Ilagay ang 4 na digit na PIN na ipinapakita sa home screen ng isang kalapit na device. Mahahanap din ng may-ari ng device ang PIN sa Chromecast app.XLaktawan_Walang napiling media_1I-tap para i-activate ang pinalawak na controller_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button_Pagpipilian ng Track_Pakinggan ang PIN_Toggle ng pag-play at pag-pause_(device status)UTitle_(multizone device name)_Kumonekta sa kalapit na device_welcome_skip_buttonX(artist)]skip_ad_labelXTapos na_connecting_cancel_buttonYI-cast sa_ZPara kumonekta, pansamantalang gagamitin ang iyong mikropono para pakinggan ang isang PIN.   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£­µÄÙæîù6LQ`ciw}°µ¾Ðóø)ÀÉá		*	/	>	R	f	}		³	Å	Ë	å


%
3
<
W
a             v              
¾


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/fil.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudio_I-rewind nang 30 segundoYMatuto pa_1Puwede mong laktawan ang ad pagkalipas ng %ld ...XTrack %d^Kumokonekta saVI-play_LTiyaking nakakonekta sa iisang Wi-Fi network ang iyong %@ at ang cast device_%Pumili ng track ng mga closed caption_ Ihinto ang pag-playback ng mediaTWalaROK_Hindi nakakonekta ang Cast_CKailangan ng app na ito ng Access sa Lokal na Network para Mag-castU--:--WSusunod_Pumunta sa Mga SettingYI-cast sa_ I-toggle ang status na naka-mute_Mga Closed CaptionVtablet[Mga SettingXNakaraan_Tingnan ang iyong Wi-Fi network_Nakakonekta ang Cast_Toggle ng pag-play at pag-pauseWI-pause\Mga Subtitleo
 P a r a   k u m o n e k t a   s a   i y o n g   m g a   d e v i c e ,   k a i l a n g a n   n g   a p p   n a   i t o   n g   a c c e s s   s a   W i - F i   n e t w o r k   m o . 
 
 P a r a   M a g - c a s t ,   p i l i i n   a n g    O K    k a p a g   h i n i l i n g   n g   a p p   n a   k u m o n e k t a   s a   i y o n g   l o k a l   n a   n e t w o r k .   P u w e d e   m o   r i n   i t o n g   p a y a g a n   s a   i b a n g   p a g k a k a t a o n   s a   i O S   S e t t i n g s   p a r a   s a   a p p   n a   i t o ._%d (na) porsyento_Walang available na device_Nagka-cast sa %@_ÄPara kumonekta sa iyong mga device, kailangan ng app na ito ng access sa Wi-Fi network mo.

Para Mag-cast, pumunta sa iyong Mga Setting at i-on ang "Access sa Lokal na Network" para sa app na ito._rPumunta sa Mga Setting sa teleponong ito at tingnan kung naka-on ang Access sa Lokal na Network para sa app na ito_Kumokonekta ang CastXtelepono_$Nagsimula na ang session ng pag-cast_/Tiyaking naka-on ang Access sa Lokal na NetworkTLIVE_"Natapos na ang session ng pag-cast_I-forward nang 30 segundo  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-djÃÌÛâ1Y|¡çíõ;PWcl¥ÇÏÜ
ú+>zÁóø
             U              
9


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/fr.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTOFUVWIXTYZ[\]^_Q`abcIdefghiR`jEklmnUD^TJoCpqJrT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKVVolumeYConnecteri ( L i b e l l é )^Saisir le code_Diffusion dans le salon[Sous-titresW(titre)\(Sous-titre)oJ A p p u y e z   p o u r   c a s t e r   d e s   c o n t e n u s   m u l t i m é d i a s   s u r   v o t r e   T V   e t   v o s   e n c e i n t e so A r r ê t e r   l a   d i f f u s i o nTpin0j C o n n e x i o n &WAnnonceUAudio_(nom de l'appareil)VFermerWAnnulerW(Titre)_pin_cancel_buttonTpin2_Passer l'annonceo L e c t u r e   d e   l ' a n n o n c e &Tpin1_connecting_skip_button_welcome_cancel_buttonoº S a i s i s s e z   l e   c o d e   à   q u a t r e   c h i f f r e s   a f f i c h é   s u r   l ' é c r a n   d ' a c c u e i l   d ' u n   a p p a r e i l   à   p r o x i m i t é .   L e   p r o p r i é t a i r e   d e   l ' a p p a r e i l   p e u t   é g a l e m e n t   r e t r o u v e r   l e   c o d e   d a n s   l ' a p p l i c a t i o n   C h r o m e c a s t .VPassero$ A u c u n   c o n t e n u   m u l t i m é d i a   s é l e c t i o n n éo A p p u y e z   p o u r   d é v e l o p p e r   l e   m e n u_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono S é l e c t i o n   d e   p i s t eo É c o u t e r   l e   c o d e]Lecture/Pauseo ( é t a t   d e   l ' a p p a r e i l )UTitre_(nom de l'appareil multizone)o& S e   c o n n e c t e r   à   u n   a p p a r e i l   à   p r o x i m i t é_welcome_skip_buttonY(artiste)]skip_ad_label_connecting_cancel_buttonZCaster suro^ A f i n   d ' é t a b l i r   l a   c o n n e x i o n ,   v o t r e   m i c r o   s e r a   u t i l i s é   t e m p o r a i r e m e n t   p o u r   d é t e c t e r   v o t r e   c o d e .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£­ÀÏéõý
¡ÌÑæîô
!5:Mz°
'
.
y
º
Ï
Ô
ã
÷2Sa²!/JU             s              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/fr.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudioo! R e v e n i r   e n   a r r i è r e   d e   3 0   s e c o n d e s^En savoir pluso' V o u s   p o u r r e z   p a s s e r   l ' a n n o n c e   d a n s   % l d &h P i s t e   % dk C o n n e x i o n   àTLireoP A s s u r e z - v o u s   q u e   v o t r e   % @   e t   l ' a p p a r e i l   C a s t   s o n t   c o n n e c t é s   a u   m ê m e   r é s e a u   W i - F io% S é l e c t i o n n e r   u n e   p i s t e   d e   s o u s - t i t r e so( A r r ê t e r   l a   l e c t u r e   d u   c o n t e n u   m u l t i m é d i a_Pas de sous-titresROKo I c ô n e   C a s t   n o n   c o n n e c t é eoI C e t t e   a p p l i c a t i o n   d o i t   a v o i r   a c c è s   a u   r é s e a u   l o c a l   p o u r   c a s t e r   d u   c o n t e n uU--:--WSuivanto A c c é d e r   a u x   p a r a m è t r e sZCaster suro A c t i v e r / D é s a c t i v e r   l e   s o n[Sous-titresXtablettej P a r a m è t r e si P r é c é d e n to V é r i f i e z   l e   r é s e a u   W i - F io I c ô n e   C a s t   c o n n e c t é e]Lecture/PauseUPauseo: P o u r   s e   c o n n e c t e r   à   v o s   a p p a r e i l s ,   c e t t e   a p p l i c a t i o n   d o i t   p o u v o i r   a c c é d e r   à   v o t r e   r é s e a u   W i - F i . 
 
 P o u r   c a s t e r   d u   c o n t e n u ,   s é l e c t i o n n e z   " O K "   l o r s q u e   l ' a p p l i c a t i o n   d e m a n d e   à   s e   c o n n e c t e r   à   v o t r e   r é s e a u   l o c a l .   V o u s   p o u v e z   é g a l e m e n t   a c c o r d e r   c e t t e   a u t o r i s a t i o n   p a r   l a   s u i t e   d a n s   l e s   r é g l a g e s   i O S   p o u r   c e t t e   a p p l i c a t i o n .l % d   p o u r   c e n t_Aucun appareil disponible_Diffusion sur %@oÆ P o u r   s e   c o n n e c t e r   à   v o s   a p p a r e i l s ,   c e t t e   a p p l i c a t i o n   d o i t   p o u v o i r   a c c é d e r   à   v o t r e   r é s e a u   W i - F i . 
 
 P o u r   c a s t e r   d u   c o n t e n u ,   a c c é d e z   a u x   p a r a m è t r e s   e t   a c t i v e z   " A c c è s   a u   r é s e a u   l o c a l "   p o u r   l ' a p p l i c a t i o n .oj A c c é d e z   a u x   p a r a m è t r e s   d e   c e   t é l é p h o n e   e t   v é r i f i e z   q u e   l ' a c c è s   a u   r é s e a u   l o c a l   e s t   a c t i v é   p o u r   c e t t e   a p p l io  I c ô n e   C a s t   e n   c o u r s   d e   c o n n e x i o ni t é l é p h o n eo" L a   s e s s i o n   d e   d i f f u s i o n   a   c o m m e n c éo3 A s s u r e z - v o u s   q u e   l ' a c c è s   a u   r é s e a u   l o c a l   e s t   a c t i v éYEN DIRECTo$ L a   s e s s i o n   d e   d i f f u s i o n   e s t   t e r m i n é eo A v a n c e r   d e   3 0   s e c o n d e s  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dj¯¾ 7<ß,Ê	_	e	m		§	Ü	è	ñ


L
w




8
KÚ±ôN·Á             T              ;


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/hi.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlef	 	@	  	9	He		5	>		<k		(	G		M	  		0	G	W(Label)i	*	?	(  	!	>	2	G	o#	2	?	5	?		  	0	B	.  	.	G	  		>	8	M	  		?	/	>  		>  	0	9	>  	9	Hg	8	,		>			2W(title)Z(Subtitle)o7	.	@	!	?	/	>  		K  		*	(	G  		@	5	@  		0  	8	M	*	@		0  	*	0  		>	8	M	  		0	(	G  		G  	2	?	  		A		o		>	8	M	  		0	(	>  	,		&  		0	G	d	*	?	( 0o		(	G		M	  	9	K  	0	9	>  	9	H . . .h	5	?		M		>	*	(e		!	?	/	K](device name)h	,		&  		0	G	i	0	&	M	&  		0	G	o		(	G		M	  	9	K  	0	9	>  	9	HW(Title)_pin_cancel_buttond	*	?	( 2o	5	?		M		>	*	(  		K	!	<	G	o	5	?		M		>	*	(  		2  	0	9	>  	9	H . . .d	*	?	( 1_connecting_skip_button_welcome_cancel_buttono		8 -	*	>	8  		G  		?	8	@  	!	?	5	>		8  		@  	9	K	.  	8	M		M	0	@	(  	*	0  	&	?		>	/	>  		/	>  		>	0  				K	  	5	>	2	>  	*	?	(  	!	>	2	G	 .  	!	?	5	>		8  		G  	.	>	2	?	  		K   C h r o m e c a s t  		*	M	2	?		G	6	(  	.	G	  	-	@  	*	?	(  	.	?	2  	8		$	>  	9	H .h		-	@  	(	9	@	o		K	  	.	@	!	?	/	>  	(	9	@	  		A	(	>  		/	>o0	,	!	<	>  		?	/	>  		/	>  	(	?	/		$	M	0	  		>	2	B  		0	(	G  		G  	2	?	  		H	*  		0	G	_pin_connect_buttond	*	?	( 3^skip_ad_button_pin_listen_button_welcome_ok_buttono		M	0	H	  		G  	5	?		2	M	*l	*	?	(  		K  	8	A	(	G	o '		2	>		 '  	/	>   '	0	K		G	 '  		I		2  		0	G	_(device status)UTitle_(multizone device name)o		8 -	*	>	8  		G  	!	?	5	>		8  	8	G  		(	G		M	  		0	G	_welcome_skip_buttonX(artist)]skip_ad_labelf	9	K  		/	>_connecting_cancel_buttono		8  	*	0  		>	8	M	  		0	G	o\		(	G		M	  		0	(	G  		G  	2	?	 ,  		A	  	8	.	/  	$	  		*		>  	.	>			M	0	K	^	K	(  		8	M	$	G	.	>	2  		?	/	>  		>			> ,  	$	>		?  	*	?	(  		K  	8	A	(	>  		>  	8		G .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¦±ÈÐã,;CN¿èñ+6DUh§°Ñþ		 	8
S
d

ú';OpÄÖÜö7MVdq¯             u              
j


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/hi.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe		!	?	/	Ko 3 0  	8	G			!  	*	@		G  	2	G  		>		m		M	<	/	>	&	>  		>	(	G	o+		*   % l d  	8	G			!  	.	G	  	5	?		M		>	*	(  		K	!	<  	8		$	G  	9	H	   . . .h		M	0	H	   % do		8	8	G  		(	G		M	  	9	K  	0	9	>  	9	He		2	>		oi	*		M		>  		0	G	  		?  		*		>   % @  			8	@  	5	>	 -	+	<	>	  	(	G		5	0	M	  	8	G  		(	G		M	  		?	/	>  		/	>  	9	K  		?	8	8	G  		>	8	M	  	!	?	5	>		8  		K  		(	G		M	  		?	/	>  		/	>  	9	Ho		K	  	8	,		>			2  		M	0	H	  		A	(	G	o	.	@	!	?	/	>  	*	M	2	G	,	H	  	0	K		G	h		A	  	(	9	@	f	 	@	  	9	Ho$		>	8	M	  	,		(  		K  		(	G		M	  	(	9	@	  		?	/	>  		/	>  	9	HoX		!	?	/	K  	/	>  	5	@	!	?	/	K  		>	8	M	  		0	(	G  		G  	2	?	 ,  		8  		*	M	2	?		G	6	(  		K  	2	K		2  	(	G		5	0	M	  		G  			M	8	G	8  		@  		<	0	B	0	$  	9	K		@U--:--d			2	>o '	8	G		?		 '  	*	0  		>		o		8  	*	0  		>	8	M	  		0	G	o  '	.	M	/	B	  		0	G	 '  		@  	8	M	%	?	$	?  		I		2  		0	G	g	8	,		>			2f		H	,	2	G	f	8	G		?		e	*	?		2	>o"		*	(	G  	5	>	 -	+	<	>	  	(	G		5	0	M	  		@  		>		  		0	G	o		>	8	M	  	,		(  		K  		(	G		M	  		?	/	>  		/	>  	9	Ho '		2	>		 '  	/	>   '	0	K		G	 '  		I		2  		0	G	e	0	K		G	o9		*		G  	!	?	5	>		8  	8	G  		(	G		M	  		0	(	G  		G  	2	?	 ,  		8  		*	M	2	?		G	6	(  		K  		*		>  	5	>	 -	+	<	>	  	(	G		5	0	M	  			M	8	G	8  		0	(	>  	9	K		> . 
 
		!	?	/	K  	/	>  	5	@	!	?	/	K  		>	8	M	  		0	(	G  		G  	2	?	 ,  		,  		*	M	2	?		G	6	(  		*		G  	2	K		2  	(	G		5	0	M	  	8	G  		(	G		M	  		0	(	G  		@  		(	A	.	$	?  	.	>			G ,  	$	,   "	 	@	  	9	H "  		A	(	G	 .  		*  	,	>	&  	.	G	  	-	@   i O S  		@  	8	G		?		  	.	G	  		>		0 ,  		8  		*	M	2	?		G	6	(  		K  	2	K		2  	(	G		5	0	M	  	8	G  		(	G		M	  		0	(	G  		@  		(	A	.	$	?  	&	G  	8		$	G  	9	H	 .j % d  	*	M	0	$	?	6	$o		K	  	-	@  	!	?	5	>		8  	.	L		B	&  	(	9	@	  	9	Ho % @  	*	0  		>	8	M	  		?	/	>  		>  	0	9	>  	9	Ho×		*		G  	!	?	5	>		8  	8	G  		(	G		M	  		0	(	G  		G  	2	?	 ,  		8  		*	M	2	?		G	6	(  		K  		*		>  	5	>	 -	+	<	>	  	(	G		5	0	M	  			M	8	G	8  		0	(	>  	9	K		> . 
 
		!	?	/	K  	/	>  	5	@	!	?	/	K  		>	8	M	  		0	(	G  		G  	2	?	 ,  		*	(	G  	!	?	5	>		8  		@  	8	G		?		  	*	0  		>		  		0  		8  		*	M	2	?		G	6	(  		G  	2	?	   "	2	K		2  	(	G		5	0	M	  		>  			M	8	G	8 "  		>	2	B  		0	G	 .oc		8  	+	<	K	(  		@   '	8	G		?		 '  	.	G	  		>		0 ,  	&	G		G	  		?  		8  		*	M	2	?		G	6	(  		G  	2	?	   '	2	K		2  	(	G		5	0	M	 '  		>  			M	8	G	8  		>	2	B  	9	H  	/	>  	(	9	@	o"		>	8	M	  	,		(  		K  		(	G		M	  		?	/	>  		>  	0	9	>  	9	Hd	+	<	K	(o		>	8	M	  	8	$	M	0  	6	A	0	B  	9	K  		/	>o.	*		M		>  		0	G	  		?   '	2	K		2  	(	G		5	0	M	 '  		>  			M	8	G	8  		>	2	B  	9	Hd	2	>		5o		>	8	M	  	8	$	M	0  		$	M	.  	9	K  		/	>o 3 0  	8	G			!  			G  	,	"	<	>		  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do·!NY._¨ó	¦	¬	µ	Ø	û
>
M
Z
g
r
¹
ú5@
¶
Ë;ìµü4Ë             T              ô


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/hr.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleVU reduh G l a s n o af P o v e~ iW(Label)[Unesite PIN_Emitiranje u dnevnoj sobiWTitloviW(title)Z(Subtitle)o> D o d i r n i t e   d a   b i s t e   e m i t i r a l i   m e d i j e   n a   t e l e v i z o r u   i   z v u
 n i c i m a_Zaustavi emitiranjeTpin0^Povezivanje...UOglasTZvuk](device name)WZatvoriXOdustani[PovezivanjeW(Title)_pin_cancel_buttonTpin2o P r e s k o
 i t e   o g l a s_Oglas u tijeku...Tpin1_connecting_skip_button_welcome_cancel_buttono U n e s i t e  
 e t v e r o z n a m e n k a s t i   P I N   p r i k a z a n   n a   p o
 e t n o m   z a s l o n u   u r e a j a   u   b l i z i n i .   V l a s n i k   u r e a j a   m o~ e   p r o n a i   P I N   i   u   a p l i k a c i j i   C h r o m e c a s t .h P r e s k o
 i_Nije odabran nijedan medijo1 D o d i r n i t e   d a   b i s t e   a k t i v i r a l i   p r oa i r e n i   u p r a v l j a
_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button]Odabir zapisaj S l ua a j   P I N_!Izmjena reprodukcije i pauziranja_(device status)UTitle_(multizone device name)o  P o v e z i v a n j e   s   u r e a j e m   u   b l i z i n i_welcome_skip_buttonX(artist)]skip_ad_labelVGotovo_connecting_cancel_buttono E m i t i r a n j e   n a   u r e a j uo7 D a   b i s t e   s e   p o v e z a l i ,   m i k r o f o n   e   n a k r a t k o   s l ua a t i   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n ±¾ÆÒîöþ	£²¸½ËÓÜèð	,@E^v			»
 
5
:
I
]
q


¸
Ê
Ð
ê-CLZa|©             u              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/hr.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELTZvuk_30 sekundi unatragm S a z n a j t e   v ia eo! O g l a s   m o~ e t e   p r e s k o
 i t i   z a   % l d . . .XZapis %d^Povezivanje saWPokrenioE P r o v j e r i t e   j e s u   l i   v aa   % @   i   u r e a j   z a   e m i t i r a n j e   n a   i s t o j   W i - F i   m r e~ i_Odabir zapisa titlova_!Zaustavljanje reprodukcije medijae N ia t aVU redu_Gumb za emitiranje nije povezano@ O v o j   a p l i k a c i j i   p o t r e b a n   j e   p r i s t u p   l o k a l n o j   m r e~ i   z a   e m i t i r a n j eU--:--UDalje_Idite na Postavkeo E m i t i r a n j e   n a   u r e a j uo  U k l j u
 i v a n j e / i s k l j u
 i v a n j e   z v u k aWTitloviVtabletXPostavkeYPrethodnoo P r o v j e r i t e   W i - F i   m r e~ u_Gumb za emitiranje je povezan_!Izmjena reprodukcije i pauziranjaXPauzirajo÷ D a   b i s t e   p o v e z a l i   s v o j e   u r e a j e ,   o v o j   a p l i k a c i j i   p o t r e b a n   j e   p r i s t u p   v aa o j   W i - F i   m r e~ i . 
 
 Z a   e m i t i r a n j e   o d a b e r i t e   " U   r e d u "   k a d   a p l i k a c i j a   z a t r a~ i   p o v e z i v a n j e   s   v aa o m   l o k a l n o m   m r e~ o m .   T o   m o~ e t e   d o p u s t i t i   i   k a s n i j e   u   i O S   p o s t a v k a m a   z a   o v u   a p l i k a c i j u .X%d postoo N e m a   d o s t u p n i h   u r e a j ao E m i t i r a n j e   n a   u r e a j   % @o° D a   b i s t e   p o v e z a l i   s v o j e   u r e a j e ,   o v o j   a p l i k a c i j i   p o t r e b a n   j e   p r i s t u p   v aa o j   W i - F i   m r e~ i . 
 
 Z a   e m i t i r a n j e   i d i t e   n a   P o s t a v k e   i   u k l j u
 i t e   " P r i s t u p   l o k a l n o j   m r e~ i "   z a   o v u   a p l i k a c i j u .o` U   p o s t a v k a m a   n a   o v o m   t e l e f o n u   p r o v j e r i t e   j e   l i   p r i s t u p   l o k a l n o j   m r e~ i   u k l j u
 e n   z a   o v u   a p l i k a c i j u_Gumb za emitiranje se povezujeWtelefono S e s i j a   e m i t i r a n j a   z a p o
 e l ao0 P r o v j e r i t e   j e   l i   u k l j u
 e n   p r i s t u p   l o k a l n o j   m r e~ ie U} I V Oo S e s i j a   e m i t i r a n j a   z a v ra i l a_30 sekundi naprijed  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-di~Þçöþ£ÇÒÙû~Ë				&	0	_		£	¬¦Õ
i,MUïú1             T              G


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/hu.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTOFUVWXYTZ[\]^_`QabcdIefghijRakElmnoUD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKg H a n g e rQk C s a t l a k o z á sW(Label)o A d j a   m e g   a   P I N - k ó d o to Á t k ü l d é s   a   n a p p a l i b aYFeliratokW(title)Z(Subtitle)oD É r i n t s e   m e g   m é d i a t a r t a l o m   t é v é r e   v a g y   h a n g s z ó r ó r a   v a l ó   á t k ü l d é s é h e z .o Á t k ü l d é s   l e á l l í t á s aTpin0l C s a t l a k o z á s &h H i r d e t é sg H a n g s á v](device name)g B e z á r á se M é g s eW(Title)_pin_cancel_buttonTpin2WFelirato H i r d e t é s   á t u g r á s ao  H i r d e t é s   l e j á t s z á s a   f o l y a m a t b a n &Tpin1_connecting_skip_button_welcome_cancel_buttono A d j a   m e g   a   k ö z e l i   e s z k ö z   k e z dQ k é p e r n yQ j é n   l á t h a t ó   n é g y j e g yq   P I N - k ó d o t .   A z   e s z k ö z t u l a j d o n o s   a   C h r o m e c a s t   a l k a l m a z á s b a n   i s   m e g t a l á l h a t j a   a   P I N - k ó d o t .h K i h a g y á so N i n c s   k i v á l a s z t v a   m é d i a t a r t a l o mo/ K o p p i n t s o n   r á   a   k i b o n t o t t   v e z é r lQ   a k t i v á l á s á h o z_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono H a n g - / f e l i r a t s á v   k i v á l a s z t á s ao P I N - k ó d   m e g h a l l g a t á s ao L e j á t s z á s / s z ü n e t e l t e t é s_(device status)UTitle_(multizone device name)o C s a t l a k o z á s   k ö z e l i   e s z k ö z h ö z_welcome_skip_buttonX(artist)]skip_ad_labeld K é s z_connecting_cancel_buttono Á t k ü l d é s   a   k ö v e t k e zQ r e :oU A   k a p c s o l ó d á s h o z   a   m i k r o f o n j á t   á t m e n e t i l e g   a   P I N - k ó d   m e g h a l l g a t á s á r a   h a s z n á l j u k   m a j d .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n«ÂÊõ *2=Èñö /=LW_sx¥èí		
G
X

ú#7KµæøþSir¤Õ             u              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/hu.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@<ABCDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELg H a n g s á vo V i s s z a   3 0   m á s o d p e r c e to T o v á b b i   i n f o r m á c i óo- A   h i r d e t é s t   % l d   m á s o d p e r c   m ú l v a   u g o r h a t j a   á t &k % d .   h a n g s á vk K a p c s o l ó d á si L e j á t s z á soS G yQ zQ d j ö n   m e g   a r r ó l ,   h o g y   a ( z )   % @   é s   a   C a s t - e s z k ö z   u g y a n a z o n   a   W i - F i - h á l ó z a t o n   v a n .o F e l i r a t s á v   k i v á l a s z t á s ao M é d i a l e j á t s z á s   l e á l l í t á s aUNincsROK_Cast nincs csatlakoztatvaoD A z   á t k ü l d é s h e z   a z   a l k a l m a z á s n a k   h o z z á   k e l l   f é r n i e   a   h e l y i   h á l ó z a t h o zU--:--f T o v á b bk B e á l l í t á s o ko Á t k ü l d é s   a   k ö v e t k e zQ r e :o N é m í t á s   b e -   é s   k i k a p c s o l á s aYFeliratokh t á b l a g é pe E lQ zQn % d .   f e l i r a t s á vo E l l e nQ r i z z e   a   W i - F i - h á l ó z a t o t_Cast csatlakoztatvao L e j á t s z á s / s z ü n e t e l t e t é sm S z ü n e t e l t e t é so A h h o z ,   h o g y   a z   a l k a l m a z á s   c s a t l a k o z n i   t u d j o n   a z   e s z k ö z e i h e z ,   h o z z á   k e l l   f é r n i e   a z   Ö n   W i - F i - h á l ó z a t á h o z . 
 
 A z   á t k ü l d é s h e z   v á l a s s z a   a z    O K    l e h e tQ s é g e t ,   a m i k o r   a z   a l k a l m a z á s   c s a t l a k o z n i   s z e r e t n e   a   h e l y i   h á l ó z a t h o z .   E z t   k é sQ b b   i s   e n g e d é l y e z h e t i   a z   a l k a l m a z á s n á l   a z   i O S   b e á l l í t á s a i b a n .k % d   s z á z a l é ko N i n c s   r e n d e l k e z é s r e   á l l ó   e s z k ö zo Á t k ü l d é s   i d e :   % @oÝ A h h o z ,   h o g y   a z   a l k a l m a z á s   c s a t l a k o z n i   t u d j o n   a z   e s z k ö z e i h e z ,   h o z z á   k e l l   f é r n i e   a z   Ö n   W i - F i - h á l ó z a t á h o z . 
 
 A z   á t k ü l d é s h e z   l é p j e n   a   B e á l l í t á s o k b a ,   m a j d   k a p c s o l j a   b e   a z   a l k a l m a z á s n á l   a    H o z z á f é r é s   h e l y i   h á l ó z a t o n    b e á l l í t á s t .o L é p j e n   a   t e l e f o n   B e á l l í t á s o k   p o n t j á b a ,   é s   e l l e nQ r i z z e ,   h o g y   b e   v a n - e   k a p c s o l v a   a   h e l y i   h á l ó z a t h o z   v a l ó   h o z z á f é r é s   e n n é l   a z   a l k a l m a z á s n á lo C a s t   c s a t l a k o z á s a   f o l y a m a t b a nWtelefono Á t k ü l d é s i   m u n k a m e n e t   m e g k e z d v eoM G yQ zQ d j ö n   m e g   a r r ó l ,   h o g y   a   h e l y i   h á l ó z a t h o z   v a l ó   h o z z á f é r é s   b e   v a n   k a p c s o l v ac É LPo Á t k ü l d é s i   m u n k a m e n e t   b e f e j e z v eo E lQ r e   3 0   m á s o d p e r c e t  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-ds Ç$;Re?tz}	$	*	7	N		¸	Â	Ó	Þ	û
8
N

Îå
&
IV^:A             T              «


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/hy.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpSqrJsT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitled5ra~dAauvfDkavalW(Label)oDxace   P I N  oxdho@e|aqaoxt   «@uxa}evuao »h5viaceW(title)Z(Subtitle)oI@ze `  tedka  auleh  qe  pe|x}axukv    baqamx}vekv  xmavelx  patao4adaevel  pe|aqaoxthTpin0hDkaxt &f3x~afdf1xdkx](device name)eSaoelhIeraoelgDkaxtW(Title)_pin_cancel_buttonTpin2o2a  ixrvel  cx~afdho3x~afdk  xadxt . . .Tpin1_connecting_skip_button_welcome_cancel_buttonoDxace  txaoa  }ak  pktvaoav  goavkv  xad~xr  a|avkw   P I N  oxdh :  Mak  }eaoavaeh   P I N  oxdh  oaxr  g  cvel  va   C h r o m e c a s t  pa~el~anxt :j2a  ixrveloDedka  aul  yk  hv~elo7@ze `  hvdlauv~an  oa|a~atav  ~apavaov  aok~avelx  pata_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono?aatav  hvxiuxvo@vyevel   P I N  oxdho «F~acaoel /dadaevel »  oxsao_(device status)UTitle_(multizone device name)oDkae  txaoa  }ak_welcome_skip_buttonX(artist)]skip_ad_label_connecting_cancel_buttonl8ve  }aho\Dkavalx  pata  jatavaoa~xaze}  ocacxn~k  qe  }ak  mx}axrh]   P I N  oxdh  pvyevelx  vzaaox~ :   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¢«¸Àé 19DÙ
 -:HSds{»èí		
7
L
y
ê
ÿ';fÆØÞø!7@Ni             t              
=


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/hy.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELf1xdkxo 3 0  ~auouav  pe  avvelm;taval  a~elkvo"3x~afdh  oaxr  e  ba  ixrvel   % l dk &k?aaxt   % do@a}avelk  }aejF~acaoxto?@atxf~e ,  x  qe   % @h     G o o g l e   C a s t  }ah  vxuv   W i - F i  avxt  evo8ve  eviacek  qauvxrkvo4adaevel  v~acaoxthgHy  teohd5ra~o G o o g l e   C a s t -h  tka~an  ygoI@e|aqaoelx  pata  au}  pa~el~ankv  avpajew  g  lxoal  avk  pa}avelkxiuxvU--:--d1|a{o1vvel  oaca~xxtvel8ve  }ahoDkavel /av{ael  qauvhh5viacegzlavwen?aca~xxtvec@eoMxce  qe   W i - F i  avho G o o g l e   C a s t -h  tka~an  go «F~acaoel /dadaevel »  oxsaoe4adaoèMaekv  tkavalx  pata  au}  pa~el~ankv  ze  g  pa}avelk  lkvk  qe   W i - F i  avh 
 
@e|aqaoelx  pata  hve   «5ra~ » ,  eb  pa~el~anh  lxoal  avkv  tkavalx  ixul~xiuxv  mvdk  4x  oaxr  e  a~elk  xw  ixulael  da   i O S -k  oaca~xxtvextT%d %o@a}avelk  }ae  yoavo@e|aqaoxt   « % @ »  }akvoÏMaekv  tkavalx  pata  au}  pa~el~ankv  avpajew  g  qe   W i - F i  avv  cacxnelx  ixul~xiuxv 
 
@e|aqaoelx  pata  ave  oaca~xxtve    tkae   «<xoal  avk  pa}avelkxiuxv »  zaatev  au}  pa~el~ank  pataoq1u}  pe|amx}xt  ave  oaca~xxtve    }xce]  adux  lxoal  avk  pa}avelkxiuxvh  tka~an  g  au}  pa~el~ank  patao G o o g l e   C a s t -h  tkavxt  g &gpe|amx}o@e|aqaoxth  }o}~eo3@atxf~e ,  x  lxoal  avk  pa}avelkxiuxvh  tka~an  gjHRB;B  595Po@e|aqaoxtv  a~a~eo 3 0  ~auouav  a|a{  al  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dq »:OÐ6EN			%	R	k		©	¸	Õ	Ü

>
y
W\¸Y>q©'T             T              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/id.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleSOkeVVolumeYHubungkanW(Label)\Masukkan PIN_Mentransmisi ke Ruang TamuXSubtitelW(title)Z(Subtitle)_1Sentuh untuk mentransmisi media ke TV dan Speaker_Hentikan transmisiTpin0_Menghubungkan...UIklanUAudio](device name)UTutupUBatal]MenghubungkanW(Title)_pin_cancel_buttonTpin2\Lewati Iklan_Iklan sedang ditayangkan...Tpin1_connecting_skip_button_welcome_cancel_button_Masukkan PIN 4 digit yang ditampilkan di layar utama perangkat terdekat. Pemilik perangkat juga dapat menemukan PIN di aplikasi Chromecast.VLewati_Tidak ada media yang dipilih_2Ketuk untuk mengaktifkan pengontrol yang diperluas_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button^Pemilihan Trek]Dengarkan PIN_Tombol putar/jeda_(device status)UTitle_(multizone device name)_Hubungkan ke perangkat terdekat_welcome_skip_buttonX(artist)]skip_ad_labelWSelesai_connecting_cancel_button_Transmisikan ke_SUntuk menghubungkan, mikrofon Anda akan digunakan sementara untuk mendengarkan PIN.   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¤®¶Ãàéñü0EJ]ciw}­²¿Ýâû¡¨Çü			%	9	M	\	j	~			°	Ò	è	ñ	ÿ

"
4             u              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/id.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFG?HIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudio_Putar ulang 30 detik_Pelajari lebih lanjut_'Anda dapat melewati iklan dalam %ld ...WLagu %d_Menghubungkan keUPutar_HPastikan %@ dan perangkat transmisi berada pada jaringan Wi-Fi yang sama_Pilih teks subtitel_Hentikan pemutaran mediaYTidak adaSOke_Cast tidak terhubung_FAplikasi ini memerlukan Akses Jaringan Lokal untuk melakukan TransmisiU--:--ZBerikutnya\Buka Setelan_Transmisikan ke_Alihkan status penonaktifanXSubtitelVtabletWSetelanZSebelumnyaWTeks %d_Periksa jaringan Wi-Fi Anda^Cast terhubung_Tombol putar/jedaTJedao  U n t u k   m e n g h u b u n g k a n   k e   p e r a n g k a t ,   a p l i k a s i   i n i   m e m e r l u k a n   a k s e s   k e   j a r i n g a n   W i - F i   A n d a . 
 
 U n t u k   m e l a k u k a n   T r a n s m i s i ,   p i l i h    O k e    s a a t   a p l i k a s i   m e m i n t a   t e r h u b u n g   k e   j a r i n g a n   l o k a l   A n d a .   A n d a   j u g a   d a p a t   m e n g i z i n k a n n y a   n a n t i   d i   i O S   S e t t i n g s   u n t u k   a p l i k a s i   i n i .Y%d persen_Perangkat tidak tersedia_Mentransmisi ke %@o¸ U n t u k   m e n g h u b u n g k a n   k e   p e r a n g k a t ,   a p l i k a s i   i n i   m e m e r l u k a n   a k s e s   k e   j a r i n g a n   W i - F i   A n d a . 
 
 U n t u k   m e l a k u k a n   T r a n s m i s i ,   b u k a   S e t e l a n   d a n   a k t i f k a n    A k s e s   J a r i n g a n   L o k a l    u n t u k   a p l i k a s i   i n i ._ZBuka Setelan di ponsel ini dan pastikan Akses Jaringan Lokal diaktifkan untuk aplikasi ini_Cast sedang dihubungkanVponsel_Sesi transmisi dimulai_#Pastikan Akses Jaringan Lokal aktifTLIVE_Sesi transmisi berakhir]Maju 30 detik  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-djÃËÞä/E`jnÎÔßìþ%,4?Get


¶
Ë>µ¼Õû
 
             U              
(


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/is.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpSqrJsT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlef Í   l a g il H l j ó ð s t y r k u rVTengjaW(Merki)o S l á ð u   i n n   P I N - n ú m e ro S e n d i r   ú t   í   s t o f ui S k j á t e x t iW(title)Z(Subtitle)o= S n e r t u   t i l   a ð   s e n d a   ú t   e f n i   í   s j ó n v a r p i n u   þ í n u   o g   h á t ö l u r u n u mo S t ö ð v a   ú t s e n d i n g uTpin0ZTengist...i A u g l ý s i n ge H l j ó ð](device name)TLokai H æ t t a   v i ðWTengistW(Title)o p i n _ h æ t t a _ v i ð _ h n a p p u rTpin2o S l e p p a   a u g l ý s i n g uo A u g l ý s i n g   í   g a n g i . . .Tpin1_tengist_sleppa_hnappuro v e l k o m i n _ h æ t t a _ v i ð _ h n a p p u ro S l á ð u   i n n   f j ö g u r r a   t a l n a   P I N - n ú m e r i ð   s e m   b i r t i s t   á   h e i m a s k j á   n á l æ g s   t æ k i s .   E i g a n d i   t æ k i s i n s   g e t u r   e i n n i g   s é ð   P I N - n ú m e r i ð   í   C h r o m e c a s t   f o r r i t i n u .VSleppao E k k e r t   e f n i   v a l i ðo$ Ý t t u   t i l   a ð   v i r k j a   s t æ k k a ð a   s t ý r i n g u_pin_tengja_hnappurTpin3o s l e p p a _ a u g l ý s i n g u _ h n a p p u r_pin_hlusta_hnappuro v e l k o m i n _ í _ l a g i _ h n a p p u rn V a l   á   h l j ó ð r á so H l u s t a   e f t i r   P I N - n ú m e r io S p i l a   e ð a   g e r a   h l é_(device status)UTitle_(multizone device name)o T e n g j a s t   n á l æ g u   t æ k i_velkomin_sleppa_hnappurX(artist)o s l e p p a _ a u g l ý s i n g u _ m e r k io t e n g i s t _ h æ t t a _ v i ð _ h n a p p u rj S e n d a   ú t   íoU T i l   a ð   t e n g j a s t   v e r ð u r   h l j ó ð n e m i n n   n o t a ð u r   t í m a b u n d i ð   t i l   a ð   h l u s t a   e f t i r   P I N - n ú m e r i .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¦¿ÆÎ÷/7B¿äéô %8@HuzÊÏè	
B
I
n
¹
Î
ÓNkÃÕÛõ :Ct©¾             t              
k


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/is.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQR9STU_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe H l j ó ðo A f t u r   u m   3 0   s e k ú n d u ro F r e k a r i   u p p l ý s i n g a ro( Þ ú   g e t u r   s l e p p t   a u g l ý s i n g u   e f t i r   % l d   . . .k H l j ó ð r á s   % dWTengistUSpilaoC G a k k t u   ú r   s k u g g a   u m   a ð   % @   o g   ú t s e n d i n g a r t æ k i ð   s é u   á   s a m a   W i - F i   n e t io V e l d u   s k j á t e x t a r á so S t ö ð v a   s p i l u n   á   e f n iVEnginnf Í   l a g io Ú t s e n d i n g   e k k i   t e n g do8 Þ e t t a   f o r r i t   þ a r f   a ð g a n g   a ð   s t a ð a r n e t i n u   t i l   a ð   s e n d a   ú tU--:--e Á f r a m_Opna Stillingarj S e n d a   ú t   ío S l ö k k v a / k v e i k j a   á   h l j ó ð ij S k j á t e x t a rk s p j a l d t ö l v aZStillingarUFyrraf R á s   % do A t h u g a ð u   W i - F i   n e t i ð   þ i t to Ú t s e n d i n g   t e n g do S p i l a   e ð a   g e r a   h l éc H l éi S k j á t e x t ioî Þ e t t a   f o r r i t   þ a r f   a ð g a n g   a ð   W i - F i   n e t i n u   þ í n u   t i l   a ð   t e n g j a s t   t æ k j u n u m   þ í n u m . 
 
 T i l   a ð   s e n d a   ú t   s k a l t u   v e l j a    O K    þ e g a r   f o r r i t i ð   b i ð u r   u m   a ð   t e n g j a s t   s t a ð a r n e t i n u   þ í n u .   Þ ú   g e t u r   e i n n i g   l e y f t   þ e t t a   s í ð a r   í   i O S - s t i l l i n g u m   f y r i r   þ e t t a   f o r r i t .j % d   p r ó s e n to E n g i n   t æ k i   í   b o ð in S e n d i r   ú t   í   % @o² Þ e t t a   f o r r i t   þ a r f   a ð g a n g   a ð   W i - F i   n e t i n u   þ í n u   t i l   a ð   t e n g j a s t   t æ k j u n u m   þ í n u m . 
 
 T i l   a ð   s e n d a   ú t   s k a l t u   f a r a   í   s t i l l i n g a r n a r   o g   k v e i k j a   á    L o c a l   N e t w o r k   A c c e s s    f y r i r   þ e t t a   f o r r i t .of O p n a ð u   s t i l l i n g a r   í   þ e s s u m   s í m a   o g   a t h u g a ð u   h v o r t   k v e i k t   s é   á   a ð g a n g i   a ð   s t a ð a r n e t i   f y r i r   þ e t t a   f o r r i to Ú t s e n d i n g   t e n g i s td s í m io Ú t s e n d i n g a r l o t a   h a f i no8 G a k k t u   ú r   s k u g g a   u m   a ð   k v e i k t   s é   á   a ð g a n g i   a ð   s t a ð a r n e t ih Í   B E I N N Io Ú t s e n d i n g a r l o t u   l o k i ðo Á f r a m   u m   3 0   s e k ú n d u r  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-doÃ-5;Äë*UÈÎÙë	 	3	H	_	j	p	}	²	Ó	ú

ó-J
±¥®ÛN_             V              ·


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/it.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKVVolumeXConnettiW(Label)_Inserisci il PIN_Trasmissione a Salotto[SottotitoliW(title)Z(Subtitle)_HTocca per trasmettere contenuti multimediali alla TV e agli altoparlanti_Interrompi trasmissioneTpin0l C o n n e s s i o n e &XAnnuncioUAudio](device name)VChiudiWAnnulla_Connessione in corsoW(Title)_pin_cancel_buttonTpin2[Sottotitolo^Salta annuncioo A n n u n c i o   i n   c o r s o &Tpin1_connecting_skip_button_welcome_cancel_buttono´ I n s e r i s c i   i l   P I N   d i   q u a t t r o   c i f r e   v i s u a l i z z a t o   n e l l a   s c h e r m a t a   H o m e   d i   u n   d i s p o s i t i v o   n e l l e   v i c i n a n z e .   I l   p r o p r i e t a r i o   d e l   d i s p o s i t i v o   p u ò   t r o v a r e   i l   P I N   a n c h e   n e l l ' a p p   C h r o m e c a s t .VIgnora_)Nessun contenuto multimediale selezionato_(Tocca per attivare il controller espanso_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button_Selezione tracce^Ascolta il PIN_ Attiva/disattiva Riproduci/Pausa_(device status)UTitle_(multizone device name)_)Connettiti al dispositivo nelle vicinanze_welcome_skip_buttonX(artist)]skip_ad_labelTFine_connecting_cancel_button[Trasmetti aom P e r   p o t e r   s t a b i l i r e   l a   c o n n e s s i o n e ,   i l   m i c r o f o n o   v e r r à   m o m e n t a n e a m e n t e   u t i l i z z a t o   p e r   i l   r i l e v a m e n t o   d e l   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£¬´ÇàìôÿJdi¦®ÅÍáæò(-F^	É	Ð	ü
'
<
A
P
d
x


½
Ï
Õ
ï1:HMht             v              Q


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/it.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudio_Indietro di 30 secondi_Ulteriori informazionio  P u o i   s a l t a r e   l ' a n n u n c i o   t r a   % l d &ZTraccia %d]Connessione aYRiproduci_`Assicurati che il tuo %@ e il dispositivo di trasmissione siano collegati alla stessa rete Wi-Fi_/Seleziona una traccia di sottotitoli codificati_4Interrompi la riproduzione di contenuti multimedialiWNessunoROK_Trasmetti, non connesso_?Per trasmettere, questa app richiede l'accesso alla rete localeU--:--VAvanti_Vai a Impostazioni[Trasmetti a_Attiva/disattiva audio_Sottotitoli codificatiVtablet\ImpostazioniXIndietro_Controlla la rete Wi-Fi_Trasmetti, connesso_ Attiva/disattiva Riproduci/PausaUPausa[Sottotitoli_ýPer connettersi ai tuoi dispositivi, questa app richiede l'accesso alla tua rete Wi-Fi.

Per trasmettere, seleziona "OK" quando l'app richiede la connessione alla rete locale. Puoi anche autorizzare l'app in un secondo momento nelle impostazioni di iOS.S%d%_Nessun dispositivo disponibile_Trasmissione di contenuti a %@_ÁPer connettersi ai tuoi dispositivi, questa app richiede l'accesso alla tua rete Wi-Fi.

Per trasmettere, vai alle Impostazioni e attiva l'opzione "Accesso mediante rete locale" per questa app._uVai alle Impostazioni di questo telefono e controlla che l'opzione Accesso alla rete locale sia attiva per questa app_Trasmetti, connessione in corsoXtelefono_ Sessione di trasmissione avviata_<Assicurati che l'opzione Accesso alla rete locale sia attivaTLIVE_"Sessione di trasmissione terminata_Avanti 30 secondi  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-djßêøeÎÖÙó5;BWc|©²Ìâ			


<
]!»Äç&+P             U              d


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/iw.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleeÐÙéÕèiâÕæÞê  çÕÜe×ÙÑÕèW(Label)i ÔÖàê   P I No ÞÕäâÜ   C a s t  ÜáÜÕßgÛêÕÑÙÕêW(title)Z(Subtitle)o< æèÙÚ  ÜÒâê  ÛÓÙ  ÜÔäâÙÜ   C a s t  éÜ  ÞÓÙÔ  ÐÜ  ÔØÜÕÕÙÖÙÔ  ÕÐÜ  ÔèÞçÕÜÙÝo âæÙèÔ  éÜ  ÔäâÜê  Ô - C a s tTpin0oÞêÑæâê  Ôê×ÑèÕê . . .eÞÕÓâÔeÐÕÓÙÕ](device name)eáÒÙèÔeÑÙØÕÜnÞêÑæâê  Ôê×ÑèÕêW(Title)_pin_cancel_buttonTpin2fÛêÕÑÙêoÓÙÜÕÒ  âÜ  ÔÞÕÓâÔoÞêÑæâê  ÔæÒê  ÞÕÓâÔ . . .Tpin1_connecting_skip_button_welcome_cancel_buttono æèÙÚ  ÜÔÖÙß  Ðê  çÕÓ  ÔÐÙÞÕê  Ñß  ÐèÑâ  ÔáäèÕê  ÔÞÕæÒ  ÑÞáÚ  ÔÑÙê  éÜ  ÞÛéÙè  çèÕÑ .  ÑâÜ  ÔÞÛéÙè  ÙÛÕÜ  ÜÞæÕÐ  Ðê  çÕÓ  ÔÐÙÞÕê  ÒÝ  ÑÐäÜÙçæÙÔ  éÜ   C h r o m e c a s t .eÓÙÜÕÒmÜÐ  àÑ×èÔ  ÞÓÙÔoÙé  ÜÔçÙé  ÛÓÙ  ÜÔäâÙÜ  Ñçè  ÞÕè×Ñ_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonjÑ×Ùèê  ØèÐçoÔÐÖàÔ  ÜçÕÓ  ÐÙÞÕêoÜ×æß  ÔäâÜÔ /ÔéÔÙÙÔ_(device status)UTitle_(multizone device name)oÔê×ÑèÕê  ÐÜ  ÞÛéÙè  çèÕÑ_welcome_skip_buttonX(artist)]skip_ad_labeldáÙÕÝ_connecting_cancel_buttonn ÔäâÜê   C a s t  ÐÜo<ÛÓÙ  ÜÔê×Ñè ,  ÔÞÙçèÕäÕß  éÜÚ  ÙéÞé  ÑÐÕäß  ÖÞàÙ  ÜÔÐÖàÔ  ÜçÕÓ  ÐÙÞÕê .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¤·ÂÊÝ$ÎÓø'2OWkp}ÉÎçÿ


6
s



°
Ä
Ù
ü!39S­¶Ñî             v              i


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/iw.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELeÐÕÓÙÕoçäÙæÔ   3 0  éàÙÕê  Ð×ÕèÔiÞÙÓâ  àÕáão Ðäéè  ÜÓÜÒ  âÜ  ÔÞÕÓâÔ  ÑâÕÓ   % l d   . . .gØèÐç   % doÞêÑæâê  Ôê×ÑèÕê  ÐÜeÔäâÜÔo9 Ùé  ÜÕÕÓÐ  éÔ % @  ÕÞÛéÙè  Ô - C A S T  éÜÚ  Þ×ÕÑèÙÝ  ÜÐÕêÔ  èéê   W i - F i .oÑ×Ùèê  ØèÐç  ÛêÕÑÙÕêoÔäáçê  ÔäâÜÔ  éÜ  ÞÓÙÔcÜÜÐeÐÙéÕèn  C a s t  ÜÐ  Þ×ÕÑèoA ÛÓÙ  ÜÔäâÙÜ   C a s t  ÓèÚ  ÔÐäÜÙçæÙÔ  ÔÖÕ ,  æèÙÚ  Üêê  ÜÔ  ÒÙéÔ  Üèéê  ÔÞçÕÞÙêU--:--cÔÑÐlÞâÑè  ÜÔÒÓèÕên ÔäâÜê   C a s t  ÐÜoÔéêçÔ  ÐÕ  ÑÙØÕÜ  ÔéêçÔgÛêÕÑÙÕêeØÐÑÜØfÔÒÓèÕêeÔçÕÓÝo ÑÓÙçÔ  éÜ  èéê  Ô - W i - F ik  C A S T  Þ×ÕÑèoÜ×æß  ÔäâÜÔ /ÔéÔÙÙÔeÔéÔÙÔoÑ ÛÓÙ  ÜÔê×Ñè  ÜÞÛéÙèÙÝ  éÜÚ ,  ÔÐäÜÙçæÙÔ  ÔÖÕ  æèÙÛÔ  ÒÙéÔ  Üèéê  Ô - W i - F i  éÜÚ . 
 
ÛÓÙ  ÜÔäâÙÜ   C a s t ,  æèÙÚ  ÜÜ×Õå  âÜ   'ÐÙéÕè '  ÛéêÕæÒ  ÑçéÔ  ÑÐäÜÙçæÙÔ  ÜÔê×Ñè  Üèéê  ÔÞçÕÞÙê .  Ðäéè  ÒÝ  ÜÐéè  ÖÐê  ÞÐÕ×è  ÙÕêè  ÑÔÒÓèÕê   i O S  éÜ  ÔÐäÜÙçæÙÔ  ÔÖÕ .i % d  Ð×ÕÖÙÝoÐÙß  ÞÛéÙèÙÝ  ÖÞÙàÙÝo ÞÕäâÜ   C a s t  ÐÜ   % @o ÛÓÙ  ÜÔê×Ñè  ÜÞÛéÙèÙÝ  éÜÚ ,  ÔÐäÜÙçæÙÔ  ÔÖÕ  æèÙÛÔ  ÒÙéÔ  Üèéê  Ô - W i - F i  éÜÚ . 
 
ÛÓÙ  ÜÔäâÙÜ   C a s t ,  æèÙÚ  ÜâÑÕè  ÜÔÒÓèÕê  ÕÜÔäâÙÜ  Ðê   'ÒÙéÔ  Üèéê  ÔÞçÕÞÙê '  ÜÐäÜÙçæÙÔ  ÔÖÕ .oKÙé  ÜâÑÕè  ÜÔÒÓèÕê  ÑØÜäÕß  ÔÖÔ  ÕÜÑÓÕç  éÔÒÙéÔ  Üèéê  ÔÞçÕÞÙê  ÞÕäâÜê  ÜÐäÜÙçæÙÔ  ÖÕ .o ÞêÑæâ  ×ÙÑÕè  éÜ   C a s teØÜäÕßo ÔäâÜê  Ô - C a s t  Ôê×ÙÜÔo#Ùé  ÜÕÕÓÐ  éÔÒÙéÔ  Üèéê  ÔÞçÕÞÙê  ÞÕäâÜêiÑéÙÓÕè  ×Ùo áéß  ÔäâÜê  Ô - C a s t  ÔáêÙÙÝoçäÙæÔ   3 0  éàÙÕê  çÓÙÞÔ  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do­ðÿ$/¤Ëôû#¨®µÎë		%	0	=	H	u		±	¼atÀñ

µ
À
ë4Gz             T              ¥


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ja.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKbóÏbc¥}W(Label)g P I N  0nQeRo00ê0Ó0ó0°0ë0ü0à0
0k0­0ã0¹0È0W0f0D0~0Yb[W^UW(title)Z(Subtitle)o0¿0Ã0×0Y00h0Æ0ì0Ó00¹0Ô0ü0«0ü0k0á0Ç0£0¢00­0ã0¹0È0g0M0~0Yg0­0ã0¹0È0P\kbTpin0jc¥}0W0f0D0~0Y . . .b^TJbóXð](device name)c0X0e0­0ã0ó0»0ëcc¥}N-W(Title)_pin_cancel_buttonTpin2g^TJ00¹0­0Ã0×m^TJ0Qu0W0f0D0~0Y . . .Tpin1_connecting_skip_button_welcome_cancel_buttonoRNØÑ0n0Ç0Ð0¤0¹0n0Û0ü0àu;b0khy:0U00f0D0   4  hA0n   P I N  0QeR0W0f0O0`0U0D00Ç0Ð0¤0¹0nb@g	0nX4T0 C h r o m e c a s t  0¢0×0ê0g0   P I N  0xº0g0M0~0Y0d0¹0­0Ã0×m0á0Ç0£0¢0xb0W0f0D0~0[0o0Õ0ë  0³0ó0È0í0ü0é0g	R¹0k0Y00k0o0¿0Ã0×0W0~0Y_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttong0È0é0Ã0¯0nxbi P I N  00ê0Ã0¹0ólQu0hN fBP\kb0R0fÿ0H_(device status)UTitle_(multizone device name)kÑ0O0n0Ç0Ð0¤0¹0x0nc¥}_welcome_skip_buttonX(artist)]skip_ad_labelb[N_connecting_cancel_buttoni0­0ã0¹0ÈQH0Ç0Ð0¤0¹o!c¥}fB0 P I N  00ê0Ã0¹0ó0Y00_00k0Þ0¤0¯0LN fBv0kOu(0U00~0Y0   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¡¦®½æëóþ;JOdin|±¶Åàåþ½Æá		'	,	;	O	c	r			°	¶	Ð	ç	ý



4
G             u              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ja.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELbóXðh 3 0  yÒ]û0Mb;0Wbs}0o^TJ00¹0­0Ã0×0g0M000F0k0j00~0g00B0h   % l d . . .g0È0é0Ã0¯   % dcc¥}QHbQuo. % @0h0­0ã0¹0È  0Ç0Ð0¤0¹0LT0X   W i - F i  0Í0Ã0È0ï0ü0¯0kc¥}0U00f0D00S0h00Txº0O0`0U0Di[W^U0È0é0Ã0¯0xbj0á0Ç0£0¢0nQu0P\kbb0j0WROKh0­0ã0¹0È0kg*c¥}o*0S0n0¢0×0ê0K00­0ã0¹0È0Y00k0o00í0ü0«0ë  0Í0Ã0È0ï0ü0¯0x0n0¢0¯0»0¹01Sï0W0f0O0`0U0DU--:--bk!0xe-[0kyûRÕi0­0ã0¹0ÈQH0Ç0Ð0¤0¹k0ß0å0ü0Èr¶aK0R0fÿ0Hl0¯0í0ü0º0É  0­0ã0×0·0ç0óe0¿0Ö0ì0Ã0Èb-[bRM0xo W i - F i  0Í0Ã0È0ï0ü0¯0xº0Y0i0­0ã0¹0È0kc¥}n0lQu0hN fBP\kb0R0fÿ0HdN fBP\kbb[W^Uo0JO0D0n0Ç0Ð0¤0¹0kc¥}0Y00k0o00S0n0¢0×0ê0k   W i - F i  0Í0Ã0È0ï0ü0¯0x0n0¢0¯0»0¹01Sï0Y0_Å0L0B00~0Y0 
 
0­0ã0¹0È0Y00k0o00í0ü0«0ë  0Í0Ã0È0ï0ü0¯0x0nc¥}00¢0×0ê0K0lB0000_0   [ O K ]  0xb0W0f0O0`0U0D0_0g   i O S  0n-[0g00S0n0¢0×0ê0k0¢0¯0»0¹01Sï0Y00S0h00g0M0~0Y0h % d  0Ñ0ü0»0ó0ÈoR)u(Sïý0j0Ç0Ð0¤0¹0o0B00~0[0m % @  0k0­0ã0¹0È0W0f0D0~0Yot0JO0D0n0Ç0Ð0¤0¹0kc¥}0Y00k0o00S0n0¢0×0ê0k   W i - F i  0Í0Ã0È0ï0ü0¯0x0n0¢0¯0»0¹01Sï0Y0_Å0L0B00~0Y0 
 
0­0ã0¹0È0Y00k0o0 [-[ ]  0kyûRÕ0W00S0n0¢0×0ê0k[þ0W0f   [0í0ü0«0ë  0Í0Ã0È0ï0ü0¯0x0n0¢0¯0»0¹ ]  0g	R¹0k0W0f0O0`0U0D0oB0S0n0¹0Þ0ü0È0Õ0©0ó0n   [-[ ]  0kyûRÕ0W00S0n0¢0×0ê0n   [0í0ü0«0ë  0Í0Ã0È0ï0ü0¯  0¢0¯0»0¹ ]  0L0ª0ó0k0j0c0f0D00S0h00Txº0O0`0U0Dh0­0ã0¹0È0kc¥}N-g0¹0Þ0ü0È0Õ0©0óo0­0ã0¹0È  0»0Ã0·0ç0ó0YË0W0~0W0_o"0í0ü0«0ë  0Í0Ã0È0ï0ü0¯0x0n0¢0¯0»0¹0L0ª0ó0k0j0c0f0D00K0i0F0Kxº0Y0c0é0¤0Öo0­0ã0¹0È  0»0Ã0·0ç0ó0}BN0W0~0W0_g 3 0  yÒeé0  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-diz¸ÇÎÓ2EZ_bsÊÐÕàó
#.38]p	¸	É	ê

ðw¼
/             U              >


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ka.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleeÙÐàÒØcîÛÐkÓÐÙÐÕèØàÔÑÐW(Label)oèÔØçÕÐÜÔ×   P I N -ÙÝÓØo7ÛØÛÓØÜÐàÔÝÑá  âàÐÜáÚØàÔÑÐ  ÛÝìçÝÑØÚÝÑÐÖÔ   ÛØáÐæÔÑØ  Ý×ÐîØ jáãÑâØâàÔÑØW(title)Z(Subtitle)o@èÔÔîÔ×  ÛÔÓØØá  ×åÕÔÜá  âÔÚÔÕØÖÝàáÐ  ÓÐ  ÓØÜÐÛØÙÔÑèØ  âàÐÜáÚØàÔÑØá×ÕØáoâàÐÜáÚØàÔÑØá  èÔìçÕÔâÐTpin0oÛØÛÓØÜÐàÔÝÑá  ÓÐÙÐÕèØàÔÑÐ . . .gàÔÙÚÐÛÐeÐãÓØÝ](device name)gÓÐîãàÕÐhÒÐãåÛÔÑÐoÛØÛÓØÜÐàÔÝÑá  ÓÐÙÐÕèØàÔÑÐW(Title)_pin_cancel_buttonTpin2háãÑâØâàØoàÔÙÚÐÛØá  ÒÐÛÝâÝÕÔÑÐo ÛØÛÓØÜÐàÔÝÑá  àÔÙÚÐÛØá  éÕÔÜÔÑÐ . . .Tpin1_connecting_skip_button_welcome_cancel_buttonoèÔØçÕÐÜÔ×  ÐîÚÝÛÓÔÑÐàÔ  ÛÝìçÝÑØÚÝÑØá  Û×ÐÕÐà  ÔÙàÐÜÖÔ  ÜÐéÕÔÜÔÑØ   4 -êØäàØÐÜØ   P I N -ÙÝÓØ .  ÛÝìçÝÑØÚÝÑØá  ÛäÚÝÑÔÚá   P I N -ÙÝÓØá  ÞÝÕÜÐ   C h r o m e c a s t  ÐÞèØê  èÔãëÚØÐ .jÒÐÛÝâÝÕÔÑÐoÛÔÓØÐ  ÐàéÔãÚØ  Ðà  ÐàØáo*èÔÔîÔ×  ÒÐèÚØÚØ  ÙÝÜâàÝÚÔàØá  ÒÐáÐÐåâØãàÔÑÚÐÓ_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonoéÐÜÐìÔàÔÑØá  ÐàéÔÕÐo P I N -ÙÝÓØá  ÛÝáÛÔÜÐo)ÓÐÙÕàÐáÐ  ÓÐ  ÞÐãÖÐá  èÝàØá  ÒÐÓÐà×ÕØá  æØÚÐÙØ_(device status)UTitle_(multizone device name)o'ÐîÚÝÛÓÔÑÐàÔ  ÛÝìçÝÑØÚÝÑÐá×ÐÜ  ÓÐÙÐÕèØàÔÑÐ_welcome_skip_buttonX(artist)]skip_ad_labelfÛÖÐÓÐÐ_connecting_cancel_buttonoâàÐÜáÚØàÔÑÐ  ÛÝìçÝÑØÚÝÑÐèØ :oWÓÐÙÐÕèØàÔÑØá  ÛØÖÜØ× ,   P I N -ÙÝÓØá  ÛÝáÐáÛÔÜÐÓ  ÓàÝÔÑØ×  ×åÕÔÜØ  ÛØÙàÝäÝÜØá  ÒÐÛÝçÔÜÔÑÐ  ÛÝîÓÔÑÐ .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¤«ÂÊñbw
:?x ¯Àóû			%	N			¯	Ç
ê
ÿ,¬ÀÔû u§ø


%
2
M
             v              5


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ka.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELeÐãÓØÝo 3 0  ìÐÛØ×  ãÙÐÜ  ÒÐÓÐîÕÔÕÐmèÔØâçÕÔ×  ÛÔâØo& % l d  ÓÐ  àÔÙÚÐÛØá  ÒÐÛÝâÝÕÔÑÐá  èÔëÚÔÑ× . . .kéÐÜÐìÔàØ   % doÓÐÙÐÕèØàÔÑÐ  ÛÝìçÝÑØÚÝÑÐá×ÐÜ :fÓÐÙÕàÐo_ÓÐàìÛãÜÓØ× ,  àÝÛ  ×åÕÔÜØ   % @  ÓÐ  ÒÐÓÐêÔÛØá  ÛÝìçÝÑØÚÝÑÐ  Ôà×áÐ  ÓÐ  ØÛÐÕÔ   W i - F i  åáÔÚ×ÐÜÐÐ  ÓÐÙÐÕèØàÔÑãÚØo#ÐØàéØÔ×  ÓÐîãàãÚØ  áãÑâØâàÔÑØá  ÑØÚØÙØoÛÔÓØØá  ÓÐÙÕàØá  èÔìçÕÔâÐgÐàêÔà×ØeÙÐàÒØoâàÐÜáÚÐêØÐ ,  ÐàÐÐ  ÓÐÙÐÕèØàÔÑãÚØo9âàÐÜáÚØàÔÑØá×ÕØá  ÐÛ  ÐÞá  ÐÓÒØÚÝÑàØÕ  åáÔÚÖÔ  ìÕÓÝÛÐ  áíØàÓÔÑÐU--:--gèÔÛÓÔÒØoÞÐàÐÛÔâàÔÑÖÔ  ÒÐÓÐáÕÚÐoâàÐÜáÚØàÔÑÐ  ÛÝìçÝÑØÚÝÑÐèØ :oÓÐÓãÛÔÑØá  ÒÐÓÐà×ÕÐjáãÑâØâàÔÑØgâÐÑÚÔâØkÞÐàÐÛÔâàÔÑØdìØÜÐoèÔÐÛÝìÛÔ×  ×åÕÔÜØ   W i - F i -åáÔÚØ .oâàÐÜáÚÐêØÐ ,  ÓÐÙÐÕèØàÔÑãÚØÐo)ÓÐÙÕàÐáÐ  ÓÐ  ÞÐãÖÐá  èÝàØá  ÒÐÓÐà×ÕØá  æØÚÐÙØeÞÐãÖÐoò×åÕÔÜá  ÛÝìçÝÑØÚÝÑÔÑ×ÐÜ  ÓÐáÐÙÐÕèØàÔÑÚÐÓ  ÐÛ  ÐÞá  ×åÕÔÜá   W i - F i  åáÔÚÖÔ  ìÕÓÝÛÐ  áíØàÓÔÑÐ . 
 
âàÐÜáÚØàÔÑØá×ÕØá ,  ÐØàéØÔ×   ÙÐàÒØ  ,  àÝÓÔáÐê  ÐÞØ  ×åÕÔÜá  ÐÓÒØÚÝÑàØÕ  åáÔÚ×ÐÜ  ÓÐÙÐÕèØàÔÑÐá  Ò×îÝÕ× .  ÐÛØá  ÓÐèÕÔÑÐ  ÛÝÒÕØÐÜÔÑØ×Ðê  èÔÒØëÚØÐ×  ÐÛ  ÐÞØá   i O S  ÞÐàÐÛÔâàÔÑØÓÐÜ .k % d  ÞàÝêÔÜâØoÛÝìçÝÑØÚÝÑÔÑØ  ÛØãìÕÓÝÛÔÚØÐoÛØÛÓØÜÐàÔÝÑá  âàÐÜáÚØàÔÑÐ   % @ -èØo¯×åÕÔÜá  ÛÝìçÝÑØÚÝÑÔÑ×ÐÜ  ÓÐáÐÙÐÕèØàÔÑÚÐÓ  ÐÛ  ÐÞá  ×åÕÔÜá   W i - F i  åáÔÚÖÔ  ìÕÓÝÛÐ  áíØàÓÔÑÐ . 
 
âàÐÜáÚØàÔÑØá×ÕØá ,  ÒÐÓÐÓØ×  ×åÕÔÜá  ÞÐàÐÛÔâàÔÑÖÔ  ÓÐ  éÐãà×Ô×  ÐÛ  ÐÞá   ÐÓÒØÚÝÑàØÕ  åáÔÚÖÔ  ìÕÓÝÛÐ  .oaÒÐÓÐÓØ×  ÐÛ  âÔÚÔäÝÜØá  ÞÐàÐÛÔâàÔÑÖÔ  ÓÐ  èÔÐÛÝìÛÔ× ,  àÝÛ  ÐÓÒØÚÝÑàØÕ  åáÔÚÖÔ  ìÕÓÝÛÐ  ÐÛ  ÐÞØá×ÕØá  éÐà×ãÚØÐoâàÐÜáÚÐêØÐ ,  ãÙÐÕèØàÓÔÑÐhâÔÚÔäÝÜØoâàÐÜáÚØàÔÑØá  áÔáØÐ  ÓÐØìçÝo1ÓÐàìÛãÜÓØ× ,  àÝÛ  ÐÓÒØÚÝÑàØÕ  åáÔÚÖÔ  ìÕÓÝÛÐ  éÐà×ãÚØÐiÞØàÓÐÞØàØoâàÐÜáÚØàÔÑØá  áÔáØÐ  ÓÐáàãÚÓÐo 3 0  ìÐÛØ×  ìØÜ  ÒÐÓÐîÕÔÕÐ  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do »
!\i*s¤³¾ý	r	x		´	ë

'
6
M
V

Ê*

(
_
ÿÄõ; ³ì             T              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/km.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlegËÒkÒ·Æ¡ÁfÒ¶ËW(Label)nÒ¼ ¼   P I NoÆ»Ò¼ ÅÒË ½ÒÀh¢ÒËW(title)Z(Subtitle)o>» ¾Ò¸Ò¼ ÁÀÅ¼ÒÍ  · §Í ÆÆ¡Á Ë¢ÒoÒË¶Ò¼Tpin0oÆ» Ò¶Ë . . .o¶Ò¶¶·ÒÒeÆ¡Á](device name)c·fÄÇËkÆ»Ò¶ËW(Title)_pin_cancel_buttonTpin2oÆ¶Ò¶¶·ÒÒo!Æ»¶Ë ¶Ò¶ ¶·ÒÒ . . .Tpin1_connecting_skip_button_welcome_cancel_buttonoÒ¼¼   P I N   4  ÒËÂ Ò ¶Å¾ ¢ÁÒË¾ Ë §Í Â Å·Ô  Ò¶Ë§Í Ï¢¶ ¼   P I N  ÁÇ¶ ÅÒ» Ò·¸   C h r o m e c a s t  ÂÔdÆo·¶ Ò¾¾ ÁÀÁo)» ¾Ò¸ ¾Æ¾¶ »¶Ò¶ ÒÂ_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonn¶Ò¾¾ mÒ¶Ë¼   P I Nj¶Ë /Ò¢¶_(device status)UTitle_(multizone device name)oÒ¶ËÅ §Í Å·_welcome_skip_buttonX(artist)]skip_ad_labelg½¶Ë_connecting_cancel_buttonhÒ¼ÅoR¾Ò¸Ò¶Ë  ¸Ò¼ Ò¼Ë¢Ò¹Ò¼¶Ò¾¶ÒÄÇ¢¶Ò¾Ò¸Ò¶Ë¼   P I N  Ô   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¨¿ÌÔñ0AITÓôùCN\cp£¨Ù		#	<	T
o
x
§
ü%9Mj¬²Ìù&5Pa             u              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/km.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELeÆ¡ÁoÒÄ   3 0  ·¶¸nÒÂËÒÂo8¢Ò¢¶ Æ ¶Ò¶¶·ÒÒ ¶Ò» ÈÁ   % l d   . . .i Á   % dmÆ»Ò¶ËÅd¶ËoB¼Ò¶¶   % @  Ë¢Ò  ·§ÍÒ¼ Ò·¾Ò¶   W i - F i  Â½ÔoÒ¾¾ Â ¶¢ÒËoÒË¶¶ËÁÀeÒ¶gËÒo·¶Ò¶Ë¶Ò¼Áo5Ò·¸ÁÇÒ¼¶¼Ò¾Ò¶¼Ò¶  ¾Ò¸Ò¼U--:--gÒ¶Ëo¼Å¶Ë¶ÆËhÒ¼Åm· /¾ Æ¡Ái¢Ò ËgÁÒÁh¶ÆËc»o ··Ò¾ Ò¶   W i - F i  Ë¢Òo¶Ò¶Ë¶Ò¼j¶Ë /Ò¢¶eÒ¢¶h¢ÒËo¾Ò¸Ò¶Ë¶½§ÍË¢Ò   Ò·¸ÁÇÒ¼¶¼Ò¾Ò¶   W i - F i  Ë¢ÒÔ 
 
¾Ò¸Ò¼  ¼Ò¾¾   ËÒ   ÅÁÒ·¸ÁÇÒ¾»ÆÒ¶Ë¶½Ò¶¼Ò¶Ë¢ÒÔ  ¢ÒÏ¢¶¢»Ò¶¶¼Ò¾Ò¶ËÒ·¸ÁÇÅÁÒÄÒ»¶ÆË   i O S  ¶ÂÔh % d  ¶o· ¶ §Í ÁoÆ» Ò¼Å   % @o³¾Ò¸Ò¶Ë¶½§ÍË¢Ò   Ò·¸ÁÇÒ¼¶¼Ò¾Ò¶   W i - F i  Ë¢ÒÔ 
 
¾Ò¸Ò¼  ¼¼Å¶Ë¶ÆËË¢Ò   ½¾   ¶¼Ò¾Ò¶¼Ò¶   Ò¶ËÒ·¸ÁÇÔol¼Å¶Ë ¶ÆËÅ¾ ¼ÒÁÇ  ···Ò¾¶ ·Ò·¼Ò¾Ò¶ ¼Ò¶Ò¼¶¾ Ò¶ËÒ·¸ÁÇoÆ»Ò¶Ë¶Ò¼g¼Òo¶ ¶ËÒ¾ ¶Ò¼  ¾o3¼Ò¶¶  ·Ò·¼Ò¾Ò¶ ¼Ò¶Ò¼¶¾kÒ¶Ò¶Ëo¶ÒË ¶Ò¼  ¾oÅ»   3 0  ·¶¸  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do±$7R[â>IXöü		0	A	\	o	~			Ù
 

 
19Jo
ýØK´Ëü             U              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ko.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlebÖUÇxb¼ü¹hbÅð¬°W(Label)f P I N  Ç¸%f¬pÂä¸\  ÈÁ¡bÇ¹ÉW(title)Z(Subtitle)oÑ0ÎXÕXÅì   T VÆ@  Â¤Õ<Îä¸\  »øµÅ´¹|  ÈÁ¡ÕXÁ8Æ .eÈÁ¡  ÉÉÀTpin0gÅð¬°  É . . .b­¬àcÆ$µÆ$](device name)b²ë®0bÍèÁdÅð¬°  ÉW(Title)_pin_cancel_buttonTpin2g­¬à  ¬t±¶ð®0j­¬à  Ç¬ÀÝ  É . . .Tpin1_connecting_skip_button_welcome_cancel_buttonoIÈü¼À  ®0®0ÇX  ÖH  ÖTºtÅÐ  Ô\ÂÜ´   P I N   4Ç¹¬¹|  Ç¸%ÕXÁ8Æ .  ®0®0ÇX  ÁÇ Ç²   C h r o m e c a s t  ÅqÅÐÁ³Ä   P I NÇD  Ì>ÇD  Â  ÇÂµ²È²ä .d¬t±¶ð®0nÁ ÐÝ´  »øµÅ´¬   ÅÆÂµ²È²ä .oÖUÇ¥  ÎèÒ¸¸d·ì¹|  Ö\Á1ÖTÕX¸$ºt  ÐíÕXÁ8Æ_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttoneÒ¸·  Á ÐÝf P I N  ´ã®0jÇ¬ÀÝ  Ç|ÂÜÉÉÀ  ÈÖX_(device status)UTitle_(multizone device name)iÈü¼À  ®0®0ÅÐ  Åð¬°_welcome_skip_buttonX(artist)]skip_ad_labelbÆD¸Ì_connecting_cancel_buttonfÈÁ¡Õ`  ®0®0o"Åð¬°ÇD  ÇÕt   P I NÇD  ´ã²  ³p  ¹ÈÇtÐl¬   Ç|ÂÜÈÇ<¸\  À¬Æ©´)²È²ä .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£¨°½ÊÏ×â"'6;BPUZck¨­ÆÞs|ÄÙÞí			 	-	B	T	Z	t			¦	´	¹	Ô	á             u              
(


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ko.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELcÆ$µÆ$i 3 0Í  ´¤¸\  Çt³ÙhÇÁ8×  ÅLÅD¼ô®0o % l dÍ  ÖÄÅÐ  ­¬à¹|  ¬t±¶ø  Â  ÇÂµ²È²ä . . .eÒ¸·   % dk²äÇL  ®0®0¸\  Åð¬°  ÉbÇ¬ÀÝo/ % @  ®0®0Æ@   C a s t  ®0®0¬   ³ÙÇ|Õ\   W i - F i  ±$Ò¸ÆÌÐlÅÐ  Åð¬°´Å´  Ç²ÉÀ  ÖUÇxÕXÁ8Æ .hÇ¹É  Ò¸·  Á ÐÝi»øµÅ´  Ç¬ÀÝ  ÉÉÀbÅÆÇLbÖUÇxm C a s t¬   Åð¬°´ÉÀ  ÅJÇLoÈÁ¡ÕX¸$ºt  ÅqÅÐ  ¸\Îì  ±$Ò¸ÆÌÐl  ÅaÁ8Â¤  ­Õ\Çt  ÕDÆÕi²È²äU--:--b²äÇLgÁ$ÈÇ<¸\  Çt³ÙfÈÁ¡Õ`  ®0®0iÇLÁ¬p  ÀÁÐÜ  ÈÖXbÇ¹ÉcÐÜ¾¹¿bÁ$ÈbÇtÈm W i - F i  ±$Ò¸ÆÌÐl  ÖUÇxfÈÁ¡  Åð¬°´(jÇ¬ÀÝ  Ç|ÂÜÉÉÀ  ÈÖXdÇ|ÂÜÉÉÀo®0®0ÅÐ  Åð¬°ÕX¸$ºt  ÅqÅÐ   W i - F i  ±$Ò¸ÆÌÐlÅÐ  ³ Õ\  ÅaÁ8Â¤  ­Õ\Çt  ÕDÆÕi²È²ä . 
 
ÈÁ¡ÕX¸$ºt  ÅqÅÐÁ  ¸\Îì  ±$Ò¸ÆÌÐl  Åð¬°ÇD  ÆÌ­Õ`  µL   'ÖUÇx 'ÇD  Á ÐÝÕXÁ8Æ .  ¶Õ\  °ÉÅÐ   i O S  Á$ÈÅÐÁ  ÅqÅÐ  ³ Õ\  ÅaÁ8Â¤  ­Õ\ÇD  ½ÅìÕ`  Â³Ä  ÇÂµ²È²ä .e % dÓ|Á<Ò¸lÀ¬Æ©  ¬ ²¥Õ\  ®0®0  ÅÆÇLk % @ (Ç< )¸\  ÈÁ¡  ÉoW®0®0ÅÐ  Åð¬°ÕX¸$ºt  ÅqÅÐ   W i - F i  ±$Ò¸ÆÌÐlÅÐ  ³ Õ\  ÅaÁ8Â¤  ­Õ\Çt  ÕDÆÕi²È²ä . 
 
ÈÁ¡ÕX¸$ºt  Á$ÈÇ<¸\  Çt³ÙÕXÅì  ÅqÇX   '¸\Îì  ±$Ò¸ÆÌÐl  ÅaÁ8Â¤ '¹|  À¬Æ©  Á$ÈÕXÁ8Æ .o3×4³ ÈÖT  Á$ÈÇ<¸\  Çt³ÙÕXÅì  Çt  ÅqÅÐ  ¸\Îì  ±$Ò¸ÆÌÐl  ÅaÁ8Â¤¬   À¬Æ©  Á$È´Å´  Ç²ÉÀ  ÖUÇxÕXÁ8Æ .i C a s t  Åð¬°  ÉdÂ¤¹ÈÒ¸ÓðiÈÁ¡  Á8ÁX  ÂÜÇ´(o¸\Îì  ±$Ò¸ÆÌÐl  ÅaÁ8Â¤¬   À¬Æ©  Á$È´Å´  Ç²ÉÀ  ÖUÇxcÂäÂÜ¬iÈÁ¡  Á8ÁX  È¸Ì´(j 3 0Í  Å^Ç<¸\  Çt³Ù  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dk~ÄÏæëL]puzÔÚßîû$?Laj	k	v		¦
W
À
Ó
Ü
ï(/B             T              W


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/lo.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlef»¥»h¥°±ª½iÀ·È­¡ÍÈW(Label)hÉ­   P I Noª»Èª±²«²«É­®±Ák³ÁÉ­²W(title)Z(Subtitle)o/Á°À·È­ª»Èª±²ª·È«²Â¥°²  Á¥°  ¥³Â­È²o¢¸²ª»Èª±²Tpin0o³¥±À·È­¡ÍÈ . . .fÂª°²cª½](device name)c´g»À¥µn³¥±À·È­¡ÍÈW(Title)_pin_cancel_buttonTpin2d³ÁjÉ²¡Âª°²o³¥±ª°ÁÂª°²¢¹È . . .Tpin1_connecting_skip_button_welcome_cancel_buttonoÉ­   P I N   4  »§À¥µÈ²»ÃÜÉ²Í«¼±­­¸°­µÈ¢¹ÈÃÉ½ .  ­²±É ,  À»É²­­¸°­±ª²¡²À´È   P I N  ÃÁ­±   C h r o m e c a s t  ÄÉ³ .dÉ²¡oÍÈÄÉÀ¥·­ª·ÈÃo!Á°À·È­ÀµÃÉ»§§¸¡Á°«²_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonk²À¥·­Àj±ª½   P I No«¼´É  «¼·  ¢¸»È§²§_(device status)c·È_(multizone device name)oÀ·È­¡ÍÈ±­¸°­µÈ¢¹ÈÃÉ½_welcome_skip_buttonX(artist)]skip_ad_labeleÁ¥É§Æ_connecting_cancel_buttonlª»Èª±²«²o?À·È­À·È­¡ÍÈ ,  Ä¡Â£Â­È²°·ÃÉ»È§²§  À·È­±ª½   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¦·ÊÒã'/:¾Ãèõü
 =EY^g|«°Éá	æ	ï

W
l
q


¨
¿
Ô
ÿ2s «Æß             v              `


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/lo.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELcª½o­«¼±   3 0  §´²µnª¶ª²ÀµÈ¡Àµ¡o#È²ª²¡²É²¡Âª°²ÄÉÃ­µ   % l d   . . .fÀ   % do³¥±À·È­¡ÍÈ±e«¼´ÉoF§ª­§È²   % @  ­È²  Á¥°  ­¸°­   C h r o m e c a s t  ¢¹ÈÃÀ·­È²   W i - F i  ½§±mÀ¥·­³±²n¢¸²«¼´Éª·ÈeÍÈ¡µf»¥»oÍÈÄÉÀ·È­¡ÍÈÀ·È­ª»Èª±²o6Á­±µÉÉ­²ª´À»É²À´À·­È²²ÃÀ·È­ª»Èª±²U--:--eÍÈÄoÄµÈ²±ÉÈ²lª»Èª±²«²oª±È½²§°´ª½h³±²hÁ±À¥±j²±ÉÈ²fÈ²¡²o§ª­À·­È²   W i - F i  ­È²oÀ·È­¡ÍÈÀ·È­ª»Èª±²Á¥É§o«¼´É  «¼·  ¢¸»È§²§j¢¸»È§²§k³ÁÉ­²oòÀ·È­À·È­¡ÍÈ±­¸°­­È² ,  Á­±µÉÉ­²ª´À»É²À´À·­È²   W i - F i  ­È² . 
 
À·È­ª»Èª±² ,  °¥¸²À¥·­   »¥»   À¡·È­Á­±ÍÀ·È­¡ÍÈ±À·­È²²Ã­È² .  ­±ÉÈ²±ª²¡²­°¸²ª´ÈµÉÃ²«¼±ÄÉÃ²±ÉÈ²   i O S  ª³¥±Á­±µÉ .j % d  ÀµÀ±lÍÈ¡µ­¸°­oÍ²¥±ª»Èª±²«²   % @o´À·È­À·È­¡ÍÈ±­¸°­­È² ,  Á­±µÉÉ­²ª´À»É²À´À·­È²   W i - F i  ­È² . 
 
À·È­ª»Èª±² ,  °¥¸²ÄµÈ²±ÉÈ²­È²  Á¥°  Àµ   ª´À»É²À´À·­È²²Ã   ª³¥±Á­±µÉ .oWÄµÈ²±ÉÈ²ÃÂ¥°ª±µÉ  Á¥°  §À´È§È²ª´À»É²À´À·­È²²ÃÀµ¢¹Èª³¥±Á­±µÉo³¥±À·È­¡ÍÈÀ·È­ª»Èª±²gÂ¥°ª±oÀ¥µÈ¡À±²ª»Èª±²Á¥É§o.§Ã«ÉÁÈÃ§È²ª´À»É²À´À·­È²²ÃÀµ¢¹Ècª»oÀ±²ª»Èª±²ª´Éª¸Á¥É§oÄÜÉ²   3 0  §´²µ  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dk­ö(3ÂÝúQÀÆÑò		0	A	R	g	t	¯	ê

*
A(=V
îÜë&Ë             U              ì


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/lt.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleUGeraiXGarsumasWSusietiW(Label)o. v e s k i t e   P I N   k o do P e r d u o d a m a  /   s v e t a i nYSubtitraiW(title)Z(Subtitle)o9 P a l i e s k i t e ,   k a d   p e r d u o t u m t e   m e d i j  /   T V   i r   g a r s i a k a l b i u so S u s t a b d y t i   p e r d a v i mTpin0_Prisijungiama...YSkelbimasl G a r s o  / r aa a s](device name)h U~ d a r y t ih A ta a u k t i]PrisijungiamaW(Title)_pin_cancel_buttonTpin2o P r a l e i s t i   s k e l b i m_Rodomas skelbimas...Tpin1_connecting_skip_button_welcome_cancel_buttono£. v e s k i t e   p a g r i n d i n i a m e   n e t o l i e s e   e s a n
 i o  / r e n g i n i o   e k r a n e   r o d o m   4   s k a i t m e ns   P I N   k o d .  . r e n g i n i o   s a v i n i n k a s   t a i p   p a t   g a l i   s u r a s t i   P I N   k o d    C h r o m e c a s t    p r o g r a m o j e .YPraleisti_Nepasirinkta jokios medijoso/ P a l i e s k i t e   i r   s u a k t y v i n k i t e   ia s k l e i s t   v a l d i k l/_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button_Takelio pasirinkimas_Klausyti PIN kodo_!Leidimo / pristabdymo perjungimas_(device status)UTitle_(multizone device name)o- P r i s i j u n k i t e   p r i e   n e t o l i e s e   e s a n
 i o  / r e n g i n i o_welcome_skip_buttonX(artist)]skip_ad_labelWAtlikta_connecting_cancel_buttonl P e r d a v i m a s  /oT P r i s i j u n g i a n t   b u s   l a i k i n a i   n a u d o j a m a s   m i k r o f o n a s ,   k a d   bk ts   g a l i m a   k l a u s y t i   P I N   k o d o .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¨°¸Ý
'ÇÌßé!2@H\a¤½Õ

(
F
§
¼
Á
Ð
ä
ø#GY_yÖìõ&?             u              ê


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/lt.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELl G a r s o  / r aa a so A t s u k t i   3 0   s e k u n d~ is   a t g a lo S u~ i n o k i t e   d a u g i a uo% S k e l b i m   g a l s i t e   p r a l e i s t i   p o   % l d . . .Z%d takelis_Jungiamasi prieVLeistioS. s i t i k i n k i t e ,   k a d   % @   i r   p e r d a v i m o  / r e n g i n y s   p r i j u n g t i   p r i e   t o   p a t i e s    W i - F i    t i n k l oo P a s i r i n k t i   s u b t i t rs   t a k e l/o S t a b d y t i   m e d i j o s   a t kk r i md N r aUGeraio  C a s t  ,   n e p r i j u n g t aoa R e i k i a  / j u n g t i  a i o s   p r o g r a m o s   n u s t a t y m    V i e t i n i o   t i n k l o   p a s i e k i a m u m a s  ,   k a d   bk ts   g a l i m a   p e r d u o t iU--:--TKitao E i t i  /   n u s t a t y m u sl P e r d a v i m a s  /o P e r j u n g t i   n u t i l d y m o   bk s e nYSubtitraio p l a na e t i n i s   k o m p i u t e r i sZNustatymaiZAnkstesniso P a t i k r i n k i t e    W i - F i    t i n k lo  C a s t  ,   p r i j u n g t a_!Leidimo / pristabdymo perjungimas[Pristabdytio	 K a d   g a l ts   p r i s i j u n g t i   p r i e   jk ss  / r e n g i n is ,  a i   p r o g r a m a   t u r i   p a s i e k t i   jk ss    W i - F i    t i n k l . 
 
 K a d   bk ts   p e r d u o d a m a ,   p a s i r i n k i t e    G e r a i  ,   k a i   p r o g r a m a   p a p r aa y s   p r i s i j u n g t i   p r i e   v i e t i n i o   t i n k l o .   T a i   g a l i t e   p a d a r y t i   i r   v l i a u    i O S    n u s t a t y m u o s e ,   s k i r t u o s e  a i a i   p r o g r a m a i .X%d proc.o N r a   j o k is   p a s i e k i a ms  / r e n g i n iso P e r d u o d a m a  /    % @ oÊ K a d   g a l ts   p r i s i j u n g t i   p r i e   jk ss  / r e n g i n is ,  a i   p r o g r a m a   t u r i   p a s i e k t i   jk ss    W i - F i    t i n k l . 
 
 K a d   bk ts   p e r d u o d a m a ,   e i k i t e  /   n u s t a t y m u s   i r  / j u n k i t e  a i o s   p r o g r a m o s   n u s t a t y m    V i e t i n i o   t i n k l o   p a s i e k i a m u m a s  .o E i k i t e  /  a i o   t e l e f o n o   s k i l t/    N u s t a t y m a i    i r   p a t i k r i n k i t e ,   a r  a i o s   p r o g r a m o s   n u s t a t y m a s    V i e t i n i o   t i n k l o   p a s i e k i a m u m a s   / j u n g t a so  C a s t  ,   p r i j u n g i a m aYtelefonaso P e r d a v i m o   s e s i j a   p r a s i d j ooE. s i t i k i n k i t e ,   k a d   n u s t a t y m a s    V i e t i n i o   t i n k l o   p a s i e k i a m u m a s   / j u n g t a sZTIESIOGIAIo P e r d a v i m o   s e s i j a   b a i g s io P e r s u k t i   3 0   s e k u n d~ is   p i r m y n  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-d}´Û(3ELõ,ajp	^	d	i		§	Þ	è

$
/
h

±
½ÓÜ

BÙÜFÓÞ             T              L


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/lv.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleTLabig S k a< u m sXSavienotW(Label)ZPIN ievade_Apraide uz viesistabuXSubtitriW(title)Z(Subtitle)oK P i e s k a r i e t i e s ,   l a i   a p r a i d+ t u   m u l t i v i d e s   s a t u r u   s a v   t e l e v i z o r   u n   s k a< r uF o so A p t u r t   a p r a i d iTpin0_Notiek savienojuma izveide...g R e k l m aUAudio](device name)g A i z v r tVAtcelt_Notiek savienojuma izveideW(Title)_pin_cancel_buttonTpin2o I z l a i s t   r e k l m uo N o t i e k   r e k l m a s   a t s k aF oa a n a . . .Tpin1_connecting_skip_button_welcome_cancel_buttono I e v a d i e t   4   c i p a r u   P I N ,   k a s   r e d z a m s   t u v u m   e s oa s   i e r+ c e s   s k u m a   e k r n .   I e r+ c e s  + p aa n i e k s   v a r   a r+   a t r a s t   P I N   l i e t o t n   C h r o m e c a s t .WIzlaisto N a v   a t l a s+ t s   m u l t i v i d e s   s a t u r so2 P i e s k a r i e t i e s ,   l a i   a k t i v i z t u   i z v r s t o   v a d m i e r+ c i_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono I e r a k s t a   a t l a s+a a n an K l a u s+ t i e s   P I No" P r s l g t   a t s k aF oa a n u   u n   a p t u ra a n u_(device status)UTitle_(multizone device name)o* S a v i e n o j u m a   i z v e i d e   a r   t u v u m   e s oa u   i e r+ c i_welcome_skip_buttonX(artist)]skip_ad_labelVGatavs_connecting_cancel_buttono A p r a i d e s   i e r+ c e s   i z v l eoP S a v i e n o j u m a   i z v e i d e i   t i k s  + s l a i c+ g i   i z m a n t o t s   jk s u   m i k r o f o n s ,   l a i   k l a u s+ t o s   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n­¶¾Éáêòý·¼Üëñÿ2:NSt³¸Ñé	î	ö
5

±
¶
Å
Ù
í3z¬"07R             u              
&


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/lv.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudioo A t t+ t   a t p a k a<   p a r   3 0   s e k u n d mn U z z i n t   v a i r ko  V a r a t   i z l a i s t   r e k l m u   p c   % l d . . .l % d .   i e r a k s t s_Notiek savienojuma izveide ar:h A t s k aF o toX P r b a u d i e t ,   v a i   jk s u   % @   u n   a p r a i d e s   i e r+ c e   i r   s a v i e n o t a   a r   v i e n u   u n   t o   p aa u   W i - F i   t+ k l u .o A t l a s+ t   s u b t i t r u   c e l iF uo A p t u r t   m u l t i v i d e s   a t s k aF oa a n uSNavTLabio# A p r a i d e      s a v i e n o j u m s   n a v   i z v e i d o t soJ` a i   l i e t o t n e i   n e p i e c i ea a m a   p i e k< u v e   l o k l a j a m   t+ k l a m ,   l a i   a p r a i d+ t u   s a t u r uU--:--e T l ko P r i e t   u z   i e s t a t+ j u m i e mo A p r a i d e s   i e r+ c e s   i z v l eo I z s l g t / i e s l g t   s k aF uXSubtitrim p l a na e t d a t o r sk I e s t a t+ j u m ig A t p a k a<o P r b a u d i e t   W i - F i   t+ k l uo A p r a i d e      s a v i e n o j u m s   i z v e i d o t so" P r s l g t   a t s k aF oa a n u   u n   a p t u ra a n ug A p t u r to	 L a i   i z v e i d o t u   s a v i e n o j u m u   a r   jk s u   i e r+ c m ,  a a i   l i e t o t n e i   n e p i e c i ea a m a   p i e k< u v e   jk s u   W i - F i   t+ k l a m . 
 
 L a i   a p r a i d+ t u   s a t u r u ,   a t l a s i e t    O K    ( L a b i ) ,   k a d   l i e t o t n e   v l a s   i z v e i d o t   s a v i e n o j u m u   a r   jk s u   l o k l o   t+ k l u .   V a r s i e t   a r+   t o   a t< a u t   v l k   i O S   i e s t a t+ j u m o s  a a i   l i e t o t n e i .k % d   p r o c e n t io N a v   p i e e j a m a   n e v i e n a   i e r+ c eo N o t i e k   a p r a i d e   u z   i e r+ c i   % @oò L a i   i z v e i d o t u   s a v i e n o j u m u   a r   jk s u   i e r+ c m ,  a a i   l i e t o t n e i   n e p i e c i ea a m a   p i e k< u v e   jk s u   W i - F i   t+ k l a m . 
 
 L a i   a p r a i d+ t u   s a t u r u ,   p r e j i e t   u z   l i e t o t n i   S e t t i n g s   u n   i e s l d z i e t   i e s t a t+ j u m u    L o c a l   N e t w o r k   A c c e s s    ( P i e k< u v e   l o k l a j a m   t+ k l a m )  a a i   l i e t o t n e i .om` a j   t l r u n+   p r e j i e t   u z   i e s t a t+ j u m i e m   u n   p r b a u d i e t ,   v a i  a a i   l i e t o t n e i   i r   i e s l g t a   p i e k< u v e   v i e t j a m   t+ k l a m .o$ A p r a i d e      n o t i e k   s a v i e n o j u m a   i z v e i d eh t l r u n i so A p r a i d e s   s e s i j a   s k t ao) J bk t   i e s l g t a i   p i e k< u v e i   v i e t j a m   t+ k l a mi T I E` R A I D E_Apraides sesija pabeigtao! P r t+ t   u z   p r i e ka u   p a r   3 0   s e k u n d m  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dj§Ä AR6uy~Ç	^	d	o	 	Ñ	þ

"
9
H
w
¸
ÿ
$
;
t
­q¼ÍúOb}             T              Â


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/mk.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlef>  @54n0G8=0  =0  72C:f>2@78W(Label)k=5A5B5   P I No!5  5<8BC20  2>   =52=0  A>10 g"8B;>28W(title)Z(Subtitle)o>>?@5B5  70  5<8BC20Z5  0C48>287C5;=8  A>4@68=8  =0  "  8  72CG=8F8B5o!>?@8  3>  5<8BC20Z5B>UPIN 0l!5  ?>2@7C20 &g 5:;0<0eC48>](device name)g0B2>@8fB:068k!5  ?>2@7C20W(Title)_pin_cancel_buttonUPIN 2d"8B;o@5A:>:=8  X0  @5:;0<0B0o!5  ?@8:06C20  @5:;0<0 &UPIN 1_connecting_skip_button_welcome_cancel_buttono =5A5B5  3>  G5B8@8F8D@5=8>B   P I N  ?@8:060=  =0  ?>G5B=8>B  5:@0=  >4  C@54>B  2>  1;878=0 .  !>?AB25=8:>B  =0  C@54>B  <>65  40  3>  =0X45   P I N -:>4>B  8  2>  0?;8:0F8X0B0   C h r o m e c a s t .i@5A:>:=8o#5<0  871@0=8  0C48>287C5;=8  A>4@68=8o1>?@5B5  70  40  3>  0:B828@0B5  ?@>H8@5=8>B  :>=B@>;5@_pin_connect_buttonUPIN 3^skip_ad_button_pin_listen_button_welcome_ok_buttonn71>@  =0  70?8Am!;CH0X  70   P I NkCHB8 /?0C70_(device status)UTitle_(multizone device name)o>2@75B5  A5  A>  C@54  2>  1;878=0_welcome_skip_buttonX(artist)]skip_ad_labelf>B>2>_connecting_cancel_buttonm<8BC20XB5  =0oJ0  40  A5  ?>2@75B5 ,  <8:@>D>=>B  ?@82@5<5=>  \5  A5  :>@8AB8  70  40  A;CH0  70   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¦ÃÐØï(7?JÉôú"-;JWnvÈõû		,
o

Ë0EKZnºÑãéBXao|²             v              
I


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/mk.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQR9STU_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELeC48>o@5<>B0X  =0=0704   3 0  A5:C=48o>7=0XB5  ?>25\5o(>65  40  X0  ?@5A:>:=5B5  @5:;0<0B0  70   % l d &mC48>70?8A   % dn!5  ?>2@7C20  A>eCHB8o@@>25@5B5  40;8  20H8>B   % @  8  C@54>B  A>   C a s t  A5  =0  8AB0   W i - F i  <@560o715@5B5  70?8A  A>  B8B;>28o1!>?@8  X0  @5?@>4C:F8X0B0  =0  0C48>287C5;=8  A>4@68=8d5<0f>  @54o C a s t  =5  5  ?>2@70=oE0  0?;8:0F8X020  ]  5  ?>B@515=  ?@8AB0?  4>  ;>:0;=0B0  <@560  70  40  5<8BC20U--:--f!;54=>oB2>@5B5   >AB02:8 m<8BC20XB5  =0o:;CG8 /8A:;CG8  72C:o0B2>@5=8  B8B;>28fB01;5Bh>AB02:8i@5BE>4=>h0?8A   % do@>25@5B5  X0   W i - F i  <560B0n C a s t  5  ?>2@70=kCHB8 /?0C70h0C78@0Xg"8B;>28o0  40  A5  ?>2@75  A>  C@548B5 ,  =0  0?;8:0F8X020  ]  5  ?>B@515=  ?@8AB0?  4>  20H0B0   W i - F i  <@560 . 
 
0  40  5<8BC20 ,  8715@5B5   >  @54   :>30  0?;8:0F8X0B0  \5  ?>10@0  40  A5  ?>2@75  A>  20H0B0  ;>:0;=0  <@560 .  20  <>65  40  3>  >2>7<>68B5  8  ?>4>F=0  2>  ?>AB02:8B5  70   i O S  70  0?;8:0F8X020 .k % d  ?@>F5=B8o5<0  4>AB0?=8  C@548o!5  5<8BC20  =0    % @ o´0  40  A5  ?>2@75  A>  C@548B5 ,  =0  0?;8:0F8X020  ]  5  ?>B@515=  ?@8AB0?  4>  20H0B0   W i - F i  <@560 . 
 
0  40  5<8BC20 ,  >45B5  2>   >AB02:8   8  2:;CG5B5   @8AB0?  4>  ;>:0;=0B0  <@560   70  0?;8:0F8X020 .omB2>@5B5   >AB02:8   =0  B5;5D>=>2  8  ?@>25@5B5  40;8   @8AB0?>B  4>  ;>:0;=0B0  <@560   5  2:;CG5=  70  >200  0?;8:0F8X0o!5  ?>2@7C20   C a s tgB5;5D>=o!5A8X0B0  70  5<8BC20Z5  70?>G=0o8#25@5B5  A5  45:0   @8AB0?>B  4>  ;>:0;=0B0  <@560   5  2:;CG5=g  o!5A8X0B0  70  5<8BC20Z5  702@H8o@5<>B0X  =0=0?@54   3 0  A5:C=48  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do¨É7T_â|·	D	J	W			Ä	é	ö


+
`
}

¥
´ÂÙ

)q£àSb             V              Ø


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/mn.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleblCC=K  B¯2H8=f%>;1>EW(Label)k  >@CC;0Eo>G=K  é@éé=4  40<6CC;6  109=0f%04<0;W(title)Z(Subtitle)o7"  1>;>=  G0=30  O@83G400  <5480  40<6CC;0EK=  BC;4  40@=0  CCo0<6CC;0EK3  7>3A>>Ed?8= 0o%>;1>34>6  109=0 . . .c0@eC48>](device name)d%00Ef&CF;0Eo%>;1>34>6  109=0W(Title)_pin_cancel_buttond?8= 2m0@K3  0;30A0Eo0@K3  1>;>2A@CC;6  109=0 . . .d?8= 1_connecting_skip_button_welcome_cancel_buttono9@>;F>>E  BéEéé@é<689=  =¯¯@  4M;3MFM4  E0@CC;A0=   4  >@>=B>9    :>4K3  >@CC;=0  CC .  "éEéé@é<6  M7M<H83G  M=M    :>4K3   C h r o m e c a s t  0??00A  020E  1>;><6B>9 .g;30A0Eo/<0@  G  <5480  A>=3>>3¯9  109=0o/è@3éB3éAé=  EO=03G893  84M2E6¯¯;ME  1>;  B>2H8=>  CC_pin_connect_buttond?8= 3^skip_ad_button_pin_listen_button_welcome_ok_buttono8G;M389=  A>=3>;Bj  A>=A>Eo#">3;CC;0E  B¯@  7>3A>>EK3  84M2E6¯¯;ME_(device status)UTitle_(multizone device name)o9@>;F>>E  BéEéé@é<684  E>;1>34>E_welcome_skip_buttonX(artist)]skip_ad_labelf>;A>=_connecting_cancel_buttoni0<6CC;0EoC%>;1>34>EK=  BC;4  B0=K  <8:@>D>=K3    A>=A>E  7>@8;3>>@  B¯@  0H83;0=0 .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n·ÄÌã)1<­Öß
&/<]eyÔÝö	
3
B
}
Þ
ó
ü3Xm¶ÈÎè)?HVc~             u              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/mn.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELeC48>o 3 0  A5:C=4  CE@00EoM<M;B  <M4MM;M;  020Eo*"0  70@K3   % l d -=  40@00  0;30A0E  1>;><6B>9   . . .i8G;M3   % do%>;1>34>6  109=0i">3;CC;0EoS"0=K   % @  1>;>=  40<6CC;03G  BéEéé@é<6  =M3   W i - F i  A¯;6MM=4  E>;1>34A>=  MAME893  H0;30=0  CCo$%00;BB09  B09;10@K=  H8=6;M;893  A>=3>Eo5480  B>3;CC;0EK3  7>3A>>Eg09E3¯9ROKo0<6CC;0;BK3  E>;1>>3¯9  109=0o>-=M  0??  =L   C a s t  E89E89=  BC;4  >B>>4  A¯;6MM=89  E0=40;B  H00@4403U--:--f0@00Eo">E8@3>>  @CC  >G8Ei0<6CC;0EoCC3  E00E  Bé;é2893  84M2E6¯¯;MEo%00;BB09  B09;10@CC4fB01;5Bh">E8@3>>eè<=éEo W i - F i  A¯;6MM3MM  H0;30Eo0<6CC;0;BK3  E>;1>A>=o#">3;CC;0E  B¯@  7>3A>>EK3  84M2E6¯¯;MEk"¯@  7>3A>>Ef%04<0;oó"0=K  BéEéé@é<684  E>;1>34>EK=  BC;4  M=M  0??  =L  B0=K   W i - F i  A¯;6MM=4  E0=40E  H00@4;030B09 . 
 
 C a s t  E89E89=  BC;4 ,  0??  B0=00A  4>B>>4  A¯;6MM=4  E>;1>34>EK3  E¯AME  ¯54   " " -3  A>=3>=>  CC .  "0  <é=  ¯¯=893  M=M  0??K=   i O S  B>E8@3>>=  4MM@  E>68<  7é2Héé@éE  1>;><6B>9 .g % d  EC2Lo>;><6B>9  BéEéé@é<6  109E3¯9o % @ -4  40<6CC;6  109=0o±"0=K  BéEéé@é<684  E>;1>34>EK=  BC;4  M=M  0??  =L  B0=K   W i - F i  A¯;6MM=4  E0=40E  H00@4;030B09 . 
 
 C a s t  E89E89=  BC;4 ,  ">E8@3>>  @CC300  >G86  BCA  0??K=   ">B>>4  A¯;6MM=89  E0=40;B " -K3  0A00=0  CC .ob-=M  CBA0=  4MM@E  ">E8@3>>  @CC  >G86 ,  >B>>4  A¯;6MM=89  E0=40;BK3  M=M  0??04  0A00A0=  MAME893  H0;30=0  CCo0<6CC;0;BK3  E>;1>6  109=0dCB0Ao%0<6CC;0E  E0@8;F0=  ¯9;4;893  ME;¯¯;AM=o5>B>>4  A¯;6MM=89  E0=40;B  0A00;BB09  MAME893  H0;30=0  CCd(##o#0<6CC;0E  E0@8;F0=  ¯9;4;893  4CCAA0=o 3 0  A5:C=4  C@03H;CC;0E  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do½'H[OÑ	P	V	c			Ú


!
,
[

Ñ
è
õÞí
&
O´{°¹s|Å             U              ò


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/mr.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFJVWIXTYZ[\]^_Q`abcIdefghiR`jEklmnJD^TJopqrJsT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlec			Gd		5	>	j		(	G		M	  		0	>f (	2	G	,	2 )l	*	?	(  				0  		0	>o	,	H	 		@		M	/	>  		K	2	@	5	0  		>	8	M	  		0	#	Gg	8	,		>	/		2h (	6	@	0	M	7	 )i (	8	,		>	/		2 )o=		*	2	M	/	>  		@	5	M	9	@  		#	?  	8	M	*	@		0	5	0  	.	@	!	?	/	>  		>	8	M	  		0	#	M	/	>	8	>	 	@  	8	M	*	0	M	6  		0	>o		>	8	M	  		0	#	G  	%	>		,	5	>d	*	?	(	fo		(	G		M	  		0	$  		9	G . . .g		>	9	?	0	>	$d		!	?	o (	!	?	5	M	9	>		8		G  	(	>	5 )g	,		&  		0	>h	0	&	M	&  		0	>n		(	G		M	  		0	$  		9	G_pin_cancel_buttond	*	?	(	hl		>	9	?	0	>	$  	5		3	>o		>	9	?	0	>	$  	*	M	0		$	@	*	%	>	5	0  		9	G . . .d	*	?	(	g_connecting_skip_button_welcome_cancel_buttono{		5	3	*	>	8		M	/	>  	!	?	5	M 
	9	>		8		M	/	>  	9	K	.	8	M		M	0	@	(	5	0  	&	>		5	2	G	2	>  	j  				@  	*	?	(  				0  		0	> .  	!	?	5	M 
	9	>		8  	.	>	2	   C h r o m e c a s t  	r	*	.	'	M 
	/	G  	*	?	(  	&	G		@	2  	6	K	'	B  	6		$	K .d	5		3	>o		K	#	$	>	9	@  	.	@	!	?	/	>  	(	?	5	!	2	>  	(	>	9	@o2	5	?	8	M	$	C	$  		G	2	G	2	>  	(	?	/		$	M	0	  	8		M	0	?	/  		0	#	M 
	/	>	8	>	 	@  		E	*  		0	>_pin_connect_buttond	*	?	(	i^skip_ad_button_pin_listen_button_welcome_ok_buttonj		M	0	E	  	(	?	5	!g	*	?	(  			>o	*	M	2	G  		0	>  	5	?	0	>	.  	&	M	/	>  		I		2  		0	>o (	!	?	5	M	9	>		8		@  	8	M	%	?	$	@ )f	6	@	0	M	7	o (			>	'	?	  	5	?	-	>	  	!	?	5	M	9	>		8		G  	(	>	5 )o!		5	3	*	>	8		M	/	>  	!	?	5	M 
	9	>		8	6	@  		(	G		M	  		0	>_welcome_skip_buttonh (		2	>		>	0 )]skip_ad_labeld		>	2	G_connecting_cancel_buttonn	/	>	5	0  		>	8	M	  		0	>oS		(	G		M 
	  		0	#	M 
	/	>		0	$	> ,  	*	?	(  			#	M 
	/	>	8	>	 	@  	$	A	.		M	/	>  	.	>	/		M	0	K	+	K	(		>  	$	>	$	M	*	A	0	$	>  	5	>	*	0  		G	2	>  		>		2 .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n ©¾Ëä,=PÍòû /8[j{¬µÎ			'	?
8
A
x
ß
ô
ý 4IX¼ÉKar¤Á             t              
j


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/mr.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELd		!	?	o 3 0  	8	G			&  	.	>		G  	(	M	/	>o		'	?	  		>	#	B	(  		M	/	>o*	$	A	.	M	9	@   % l d  	8	G			&	>	.	'	M 
	/	G  		>	9	?	0	>	$  	5		3	B  	6		$	> &h		M	0	E	   % dn		(	G		M	  		0	$  		9	Gh	*	M	2	G  		0	>oF	$	A	.		G   % @  		#	?  		>	8	M	  	!	?	5	M	9	>		8  			>	  	5	>	/ -	+	>	/  	(	G		5	0	M		5	0  		8	2	M	/	>		@  		>	$	M	0	@  		0	>o	8	,		>	/		2  		M	0	E	  	(	?	5	!	>o	.	@	!	?	/	>  	*	M	2	G	,	E	  	%	>		,	5	>k		>	9	@	9	@  	(	>	9	@c			Go		>	8	M 
	  		(	G		M 
	  		G	2	G	2	G  	(	>	9	@o@	/	>  	r	*	2	>  		>	8	M	  		0	#	M	/	>	8	>	 	@  	8	M	%	>	(	?	  	(	G		5	0	M	  	 
	E		M	8	G	8		@  		5	6	M	/		$	>  		9	GU--:--d	*	A	"	Gn	8	G		?			M	  	5	0  		>n	/	>	5	0  		>	8	M	  		0	>o	.	M	/	B	  	8	M	%	?	$	@  		I		2  		0	>g	8	,		>	/		2f		E	,	2	G	h	8	G		?			M	e	.	>		@	2o	$	A	.		M	/	>  	5	>	/ -	+	>	/		G  	(	G		5	0	M	  	$	*	>	8	>o		>	8	M 
	  		(	G		M 
	  		G	2	G  		9	Go	*	M	2	G  		0	>  	5	?	0	>	.  	&	M	/	>  		I		2  		0	>f	%	>		,	5	>o	$	A	.		M 
	/	>  	!	?	5	M 
	9	>		8	(	>  		(	G		M	  		0	#	M	/	>	8	>	 	@ ,  	/	>  	r	*	2	>  	$	A	.		M 
	/	>  	5	>	/ -	+	>	/  	(	G		5	0	M			M 
	/	>  	 
	E		M	8	G	8		@  		5	6	M	/		$	>  		9	G . 
 
	r	*  	$	A	.		M 
	/	>  	8	M 
	%	>	(	?	  	(	G		5	0	M		2	>  		(	G		M	  		0	#	M	/	>	8  	8	>			G	2  	$	G	5	M 
	9	>  		>	8	M	  		0	#	M	/	>	8	>	 	@   			G   	(	?	5	!	> .  	$	A	.	M 
	9	@  	/	>	8	>	 	@  	(		$	0	&	G		@	2  	/	>  	r	*		M 
	/	>   i O S  	8	G		?			M	  	/	>	.	'	M	/	G  		(	A	.	$	@  	&	G	
  	6		$	> .h % d  			M		Go		K	#	$	@	9	@  	!	?	5	M	9	>		8  			*	2	,	M	'  	(	>	9	@	$o % @  	5	0  		>	8	M	  		0	$  		9	GoÅ	$	A	.		M 
	/	>  	!	?	5	M 
	9	>		8	(	>  		(	G		M	  		0	#	M	/	>	8	>	 	@ ,  	/	>  	r	*	2	>  	$	A	.		M 
	/	>  	5	>	/ -	+	>	/  	(	G		5	0	M			M 
	/	>  	 
	E		M	8	G	8		@  		5	6	M	/		$	>  		9	G . 
 
		>	8	M 
	  		0	#	M	/	>	8	>	 	@ ,  	$	A	.		M 
	/	>  	8	G		?			M	  	5	0  		>  		#	?  	/	>  	r	*	8	>	 	@   	8	M	%	>	(	?	  	(	G		5	0	M	  	 
	E		M	8	G	8   	8	A	0	B  		0	> .oc	/	>  	+	K	(	5	0	@	2  	8	G		?			M	  	.	'	M	/	G  		>  		#	?  	/	>  	 
	E	*	8	>	 	@  	8	M	%	>	(	?	  	(	G		5	0	M	  	 
	E		M	8	G	8  	8	A	0	B  		G	2	>  		8	2	M	/	>		@  		>	$	M	0	@  		0	>o		>	8	M 
	  		(	G		M 
	  		0	$  		9	Gc	+	K	(o		>	8	M	  	8	$	M	0  	8	A	0	B  		>	2	Go1	8	M	%	>	(	?	  	(	G		5	0	M	  	 
	E		M	8	G	8  	8	A	0	B  		8	2	M	/	>		@  		>	$	M	0	@  		0	>f	2	>		5	M	9o		>	8	M	  	8	$	M	0  	8	.	>	*	M	$  		>	2	Go 3 0  	8	G			&  	+	I	0	5	0	M	!  		0	>  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dmµ:KÚ0GN				4	Q	~			«	¶	÷
(
c
pÚ
Yº,[             T              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ms.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROK[KelantanganWSambungW(Label)\Masukkan PIN_Menghantar ke Ruang TamuYSari KataW(title)Z(Subtitle)_;Sentuh untuk menghantar media ke TV dan Pembesar Suara anda_Berhenti menghantarTpin0k M e n y a m b u n g &UIklanUAudio](device name)UTutupUBatalZMenyambungW(Title)_pin_cancel_buttonTpin2]Langkau Iklan_Iklan sedang ditayangkan...Tpin1_connecting_skip_button_welcome_cancel_button_Masukkan PIN 4 digit yang dipaparkan pada skrin utama peranti berdekatan. Pemilik peranti boleh mendapatkan PIN dalam apl Chromecast juga.WLangkau_Tiada media dipilih_3Ketik untuk mengaktifkan pengawal yang dikembangkan_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button^Pemilihan LaguZDengar PIN_Togol main jeda_(device status)UTitle_(multizone device name)_Sambung ke peranti berdekatan_welcome_skip_buttonX(artist)]skip_ad_labelWSelesai_connecting_cancel_buttonYHantar ke_XUntuk bersambung, mikrofon anda akan digunakan untuk sementara waktu bagi mendengar PIN.   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¨°¸Åàêòý;QVmsy¦º¿Íëð	!®¶Ì				+	?	S	b	m				±	Ñ	ç	ð	þ

!
+             u              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ms.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudio^Mandir 30 saat_Ketahui lebih lanjut_-Anda boleh melangkau iklan dalam masa %ld ...WLagu %d]Menyambung keTMain_GPastikan %@ anda dan peranti cast menggunakan rangkaian Wi-Fi yang sama_Pilih runut sari kata_Hentikan main balik mediaUTiadaROK_Cast tidak disambungkan_<Apl ini memerlukan Akses Rangkaian Setempat untuk MenghantarU--:--ZSeterusnya_Pergi ke TetapanYHantar ke_Togol keadaan redam_Kapsyen TertutupVtabletWTetapanZSebelumnya_Semak rangkaian Wi-Fi anda_Cast disambungkan_Togol main jedaTJedaYSari Katao
 U n t u k   m e n y a m b u n g   k e   p e r a n t i   a n d a ,   a p l   i n i   m e m e r l u k a n   a k s e s   k e p a d a   r a n g k a i a n   W i - F i   a n d a . 
 
 U n t u k   m e m b u a t   P e n g h a n t a r a n ,   p i l i h    O K    a p a b i l a   a p l   m e m i n t a   u n t u k   m e n y a m b u n g   k e p a d a   r a n g k a i a n   s e t e m p a t   a n d a .   A n d a   j u g a   b o l e h   m e m b e n a r k a n   p e r k a r a   i n i   d a l a m   T e t a p a n   i O S   u n t u k   a p l   i n i .Z%d peratus_Tiada peranti yang tersedia_Menghantar ke %@oÁ U n t u k   m e n y a m b u n g   k e   p e r a n t i   a n d a ,   a p l   i n i   m e m e r l u k a n   a k s e s   k e p a d a   r a n g k a i a n   W i - F i   a n d a . 
 
 U n t u k   m e m b u a t   P e n g h a n t a r a n ,   p e r g i   k e   T e t a p a n   a n d a   d a n   h i d u p k a n    A k s e s   R a n g k a i a n   S e t e m p a t    u n t u k   a p l   i n i ._dPergi ke Tetapan pada telefon ini dan semak bahawa Akses Rangkaian Setempat dihidupkan untuk apl ini_Cast sedang menyambungWtelefon_Sesi Hantar bermula_,Pastikan Akses Rangkaian Setempat dihidupkanXLANGSUNG_Sesi Hantar tamat^Mundar 30 saat  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-djyÀÈÖÛ%=Y_b|»ÁÌßéÿ!,I]ot~

§
Å
Ø]ÄÝåû
*
3
G             U              
V


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/my.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFDQRSTFJUVWXSYZ[\]^_D`abcIdefghiQ`jEklmnJD^SJopqrJsS_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKc!6k;-: ::i (!
=>:8 )o:6+:  
7:+o'
7::8-/7   ,:/:1
:n,:8-/8;,8k (1+:8	: )l (,:8-/8 )o:7:   T V  >7:  . ,;,8-/7  ..,;,8 -/   ,:/::  -+o ,:/:<:8 -/  :<:8d:@n;-: :1
: &h <1,:<,o ( :9
:8!
: )g-::i/:1,7m;-: :1
:o:6+: _/:1,7 _/:d:Bj,:8-/8o <1,:<, -/   ;1,:<:8o <1,:<,<1
: . . .d:Ao;-: :<:8 _ ;1,:: _/:o-: : _/:1,7 _/:o!.8!,8>-   :O  :,; :>,1+:=:  <,81,  :8  D   -/68  :6+: -/  
7:+K   :-/:>:
:  :6+: -/   C h r o m e c a s t  ! ::=:  >,=17-/:
:Kh ;1,::o..,=1818+o;-/8;27,8
7:  -:8;/:>/: -/  :!/68</:  -/7+o:6+: _;-: :: _/:d:Co <1,:<, _ ;1,:: _/:o:6+: _,81,:: _/:o-: : _ o k _/:o.;:8/:  =18;:>/o:6+:  ,81,:<:8o=7:-/:J  :-/:
7:  /:o ( :9
:8  !<1!1 )i1+:8	:o (/:;,8=,>-   :!
: )o!.8!,8>-   :-/7  ;-: ::o-: : _ ;1,:: _/:l (!/
,>: )o <1,:<, _ ;1,:: _!
=>:8g<.8<.o;-: :<:8 _/:1,7 _/:o-/7 ,:/:<:8oR;-: ::!= :  :6+: -/  ,81,::  7:-/ :-//:8 -/  ,.!/68</+
:K   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£ºÍð'D[të )FWz·ìõ	
	9	`	i	¤	Õ8±êó$]±â
!
L
_

ÓP_Á             t              h


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/my.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELc!6o 9 7:  C@  1, :-/7  <:::n-/-/17,:o2:
:   % l d   <,;>:   <1,:<, -/   ;1,:-/:+
: . . .n.;:8/:   % do-/7  ;-: :1
:k=:7,8
:ob:O   % @  >7:   ,:/:-/:
7: :  -/7
:   W i - F i   =: ::/
:8-/7  ;-: :,8 <1,:8  1;,+1o&,:8<,8
:7  .;:8/: -/  =18:o..,=7:<:8 -/  ::d>-ROKo ,:  ;-: :,8+oA ' ,:/:: '  $! ::    '!-:=:8/68 =: :  !/68</=7: '  -/
:U--:--h>17-/7o ::;,8-/7  =,8:o-/7 ,:/:<:8o!6-:<:8  !=7:!-:/:j,:8;,8g : :j ::;,8d:o:O   W i - F i   =: : -/  :18+o ,:  ;-: :,8
:o=7:-/:J  :-/:
7:  /:k:,8
:n,:8-/8;,8oö7: :;,8 -/  ;-: ::  $! ::   7:   W i - F i   =: :  /68=7:-/
:K 
 
 ' ,:/:: '  != :  7:!-:=:8/68 =: :-/7  ;-: ::  ! :: 1,:8-/,
7:!+   " O K "   -/  =18+K  $! ::!= :  N:8 -/  1, :-/:8=:   i O S   ::;,8L  =7:</-/:+
:Kk % d  ,>/:8o :9
:8;,8  -/:+o % @  -/7   ,:/:1
:o7: :;,8 -/  ;-: ::  $! ::   7:   W i - F i   =: :  /68=7:-/
:K 
 
 ' ,:/:: '  $! ::!= :   "!-:=:8/68 =: :  !/68</=7: "   -/  =7:+Kov$/:8=:    ::;,8   -/7=,8<.8  $! ::!= :   !-:=:8/68 =: :  !/68</=7:   =7:,8<:8  >-J  >-  :18+o ,:  ;-: :1
:e/:8o% ,::>:18,8
:7!;-:  :+<.o> !-:=:8/68 =: :  !/68</=7:   =7:,8 <1,:8  1;,+1j-/ :-/ :o) ,::>:18,8
:7!;-:  <.8=,8+<.o 9 7:  C@  !>17-/7  ::  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dk¬É0MtR¡Øáä	
			©	Ø	ý
:
O
^
s
|
»
ä#:W
F
]

½æÕüTÓè=             U              v


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ne.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlee	 	?	  	g	-	K	2	M	/	A	.j		K	!	M	(	A	9	K	8	MW(Label)n P I N  	9	>	2	M	(	A	9	K	8	Mo	,	H	 	  		K	 	>	.	>   C a s t i n g  		0	M	&	Hk			*	6	@	0	M	7		9	0	BW(title)Z(Subtitle)o;	$	*	>				>  		?	-	@  	0  	8	M	*	?		0	9	0	B	.	>  	.	?	!	?	/	>   c a s t  		0	M	(		>  	2	>		?  		A	(	A	9	K	8	Mo c a s t i n g  	0	K		M	(	A	9	K	8	MTpin0i		K	!	M	&	H . . .h	5	?		M		>	*	(e		!	?	/	K](device name)n	,	(	M	&  		0	M	(	A	9	K	8	Mn	0	&	M	&  		0	M	(	A	9	K	8	Mf		K	!	M	&	HW(Title)_pin_cancel_buttonTpin2h			*	6	@	0	M	7	o	5	?		M		>	*	(  	9		>			(	A	9	K	8	Mo	5	?		M		>	*	(  		>	0	@  	 . . .Tpin1_connecting_skip_button_welcome_cancel_buttonou	(		?		H		K  			*		0	#		K  		C	9  	8	M		M	0	?	(	.	>  	&	G		>				K  	j  					K   P I N  	9	>	2	M	(	A	9	K	8	M	d  			*		0	#  	.	>	2	?		2	G  	*	(	?   C h r o m e c a s t  		*	.	>   P I N  	+	G	2	>  	*	>	0	M	(  	8		M		do	8	M		?	*  		0	M	(	A	9	K	8	Mo		A	(	H  	*	(	?  	.	?	!	?	/	>  		/	(  		0	?			K  		H	(o7	5	?	8	M	$	C	$  		0	?			K  	(	?	/	(	M	$	M	0		2	>	  	8		M	0	?	/  		0	M	(  		M	/	>	*  		0	M	(	A	9	K	8	M_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonj		M	0	/	>	  		/	(n P I N  	8	A	(	M	(	A	9	K	8	Mo-	*	M	2	G  		0	M	(	G  	0  	*	  		0	M	(	G  	8	A	5	?	'	>	,	?	  			2  		0	M	(	G  	,		(_(device status)UTitle_(multizone device name)o	5	0	*	0		K  	/	(	M	$	M	0	8		  		K	!	M	(	A	9	K	8	M_welcome_skip_buttonX(artist)]skip_ad_labelk	8	.	M	*	(	M	(  	-	/	K_connecting_cancel_buttono	/	8	.	>   c a s t  		0	M	(	A	9	K	8	MoO		K	!	M	(	G  	*	M	0	/	K		(		>  	2	>		?   P I N  	8	A	(	M	(  	$	*	>				K  	.	>			M	0	K	+	K	(  		8	M	%	>	/	@  	0	B	*	.	>  	*	M	0	/	K	  		0	?	(	G  	   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¤³ÈÐí"9ALÅìñ .Khu}§Ð÷ü		-

;
z
ë (<QnËÝãý6LUcz¾             v              
_


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ne.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe		!	?	/	Ko	i	f  	8	G		G	(	M	!  	*		>	!	?  	2	H		>	(	A	9	K	8	Mm	%	*  		>	(	M	(	A	9	K	8	Mo1	$	*	>		   % l d  	8	G		G	(	M	!	.	>  	5	?		M		>	*	(  		K	!	M	(  	8		M	(	A	9	A	(	M	   . . .j		M	0	M	/	>	   % do	(	?	.	M	(  	!	?	-	>		8	.	>  		K	!	?		&	Hn	*	M	2	G  		0	M	(	A	9	K	8	Mo]	$	*	>				K   % @  	0   c a s t  	/	(	M	$	M	0  			9	@   W i - F i  	(	G		5	0	M		.	>  		(	G		M	  		0	?			>  		(	M  	-	(	M	(	G  		A	0	>  	8	A	(	?	6	M		?	$  		0	M	(	A	9	K	8	Mo#			*	6	@	0	M	7		9	0	B		K  		M	0	M	/	>	  		/	(  		0	M	(	A	9	K	8	Mo	.	?	!	?	/	>		K  	*	M	2	G	,	M	/	>	  	0	K		M	(	A	9	K	8	Mm		A	(	H  	*	(	?  	9	K		(e	 	?	  	o C a s t  		(	G		M	  	-			K  		H	(o@		>	8	M	  		0	M	(  	/	K  		*	2	>	  	8	M	%	>	(	@	/  	(	G		5	0	M	  	*	M	0	/	K	  		0	M	(  	&	?	(	A  	*	0	M	(	G  	9	A	(	M	U--:--e		0	M		Ko	8	G		?		.	>  		>	(	A	9	K	8	Mo	/	8	.	>   c a s t  		0	M	(	A	9	K	8	Mo	.	M	/	B			K  		5	8	M	%	>	2	>	  			2  		0	M	(	A	9	K	8	Mo	5	?	8	M	$	C	$  			* -	6	@	0	M	7		9	0	Bi		M	/	>	,	M	2	G	e	8	G		?	g			?	2	M	2	Ko		+	M	(	K   W i - F i  	(	G		5	0	M	  		>			M	(	A	9	K	8	Mo C a s t  		(	G		M	  	-			K  	o-	*	M	2	G  		0	M	(	G  	0  	*	  		0	M	(	G  	8	A	5	?	'	>	,	?	  			2  		0	M	(	G  	,		(l	*	  		0	M	(	A	9	K	8	Mk			*	6	@	0	M	7		9	0	Boý	$	*	>				>  	/	(	M	$	M	0	8		  		(	G		M	  		0	M	(  	/	K  		*	2	>	  	$	*	>				K   W i - F i  	(	G		5	0	M	  	*	M	0	/	K	  		0	M	(  	&	?	(	A  	*	0	M	(	G  	9	A	(	M		d 
 
		>	8	M	  		0	M	(  		*	2	G  	$	*	>				K  	8	M	%	>	(	@	/  	(	G		5	0	M		.	>  		(	G		M	  		0	M	(	G  		(	A	.	$	?  	.	>		M	&	>   	 	?	  	   		/	(  		0	M	(	A	9	K	8	M	d  	$	*	>		  	*		?   i O S  		>  	8	G		?		.	>  			0  	*	(	?  	/	K  		*	2	>	  				M	$  		(	A	.	$	?  	&	?	(  	8		M	(	A	9	A	(	M		dj % d  	*	M	0	$	?	6	$o		A	(	H  	*	(	?  	/	(	M	$	M	0  			*	2	,	M	'  		H	(o % @  	.	>   C a s t  		0	M	&	HoÁ	$	*	>				>  	/	(	M	$	M	0	8		  		(	G		M	  		0	M	(  	/	K  		*	2	>	  	$	*	>				K   W i - F i  	(	G		5	0	M	  	*	M	0	/	K	  		0	M	(  	&	?	(	A  	*	0	M	(	G  	9	A	(	M		d 
 
		>	8	M	  		0	M	(  		+	M	(	K  	!	?	-	>		8		K  	8	G		?		.	>  		>	(	A	9	K	8	M  	0  	/	K  		*	2	>	   	8	M	%	>	(	@	/  	(	G		5	0	M	  	*	M	0	/	K	  		0	M	(	G  		(	A	.	$	?   	&	?	(	A	9	K	8	M	dor	/	K  	+	K	(		K  	8	G		?		.	>  		>	(	A	9	K	8	M  		(	?  	/	K  		*	2	>	  	8	M	%	>	(	@	/  	(	G		5	0	M	  	*	M	0	/	K	  		0	M	(	G  		(	A	.	$	?  	&	?				K  	  	-	(	M	(	G  		A	0	>  	8	A	(	?	6	M		?	$  		0	M	(	A	9	K	8	Mo C a s t  		(	G		M	  	9	A		&	H  	c	+	K	(o C a s t  	8	.	M	,	(	M	'	@  	8	$	M	0  	8	A	0	A  	-	/	KoK	8	M	%	>	(	@	/  	(	G		5	0	M	  	*	M	0	/	K	  		0	M	(	G  		(	A	.	$	?  	&	?				K  	  	-	(	M	(	G  		A	0	>  	8	A	(	?	6	M		?	$  		0	M	(	A	9	K	8	Md	2	>		-o C a s t  	8	.	M	,	(	M	'	@  	8	$	M	0  	8	.	>	*	M	$  	-	/	Ko	i	f  	8	G		G	(	M	!  			>	!	?  	,	"	>			(	A	9	K	8	M  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do¨Ã(=lFÌçò		 	¦	±	Ô	ý
>
i
|


×
þ[t


Ô
÷|cÌen«             U              ä


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/nl.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKVVolumeYVerbindenW(Label)_Pincode opgeven_Casten naar woonkamer[OndertitelsW(title)Z(Subtitle)_-Tik om media te casten naar je tv en speakers^Casten stoppenTpin0_Verbinding maken...[AdvertentieUAudio](device name)WSluitenYAnnuleren_Verbinding makenW(Title)_pin_cancel_buttonTpin2]Ondertiteling_Advertentie overslaan_Advertentie wordt afgespeeld...Tpin1_connecting_skip_button_welcome_cancel_button_´Geef de viercijferige pincode op die wordt weergegeven op het startscherm van een apparaat in de buurt. De eigenaar van het apparaat kan de pincode ook vinden in de Chromecast-app.YOverslaan_Geen media geselecteerd_)Tik om uitgevouwen bediening te activeren_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button]Trackselectie_Pincode detecteren_$Schakelaar voor afspelen/onderbreken_(device status)UTitle_(multizone device name)_-Verbinding maken met een apparaat in de buurt_welcome_skip_buttonX(artist)]skip_ad_labelUKlaar_connecting_cancel_button[Casten naar_hJe microfoon wordt tijdelijk gebruikt om een pincode te detecteren, zodat verbinding kan worden gemaakt.   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£­µÇßëóþ.=BXdjx¥¹¾Ìä$<óý		C	X	]	l			¢	·	Þ	ð	ö

@
V
_
m
s

             v              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/nl.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUAudio_30 seconden terug_Meer informatie_-Je kunt de advertentie overslaan over %ld ...XTrack %d_Verbinding maken metXAfspelen_PZorg dat je %@ en het cast-apparaat verbinding hebben met hetzelfde wifi-netwerk_"Een ondertitelingstrack selecteren_Afspelen van media stoppenTGeenROK_Casten, niet verbonden_7Deze app heeft lokale netwerktoegang nodig om te castenU--:--XVolgende_Ga naar 'Instellingen'[Casten naar_Dempen aan-/uitzetten]OndertitelingVtablet\InstellingenVVorige_Check je wifi-netwerk_Casten, verbonden_$Schakelaar voor afspelen/onderbreken[Onderbreken[Ondertitels_Deze app heeft toegang tot je wifi-netwerk nodig om verbinding te maken met je apparaten.

Als je wilt casten, selecteer je OK als de app toestemming vraagt om verbinding te maken met je lokale netwerk. Je kunt dit ook later doen in de iOS-instellingen voor deze app.Z%d procent_Geen apparaten beschikbaar_Er wordt gecast naar %@_½Deze app heeft toegang tot je wifi-netwerk nodig om verbinding te maken met je apparaten.

Als je wilt casten, ga je naar 'Instellingen' en zet je 'Lokale netwerktoegang' aan voor deze app._^Ga naar Instellingen op deze telefoon en ga na of lokale netwerktoegang aanstaat voor deze app_Casten, verbinding makenXtelefoon_Cast-sessie gestart_'Zorg dat lokale netwerktoegang aanstaatTLIVEo C a s t - s e s s i e   b e ë i n d i g d_30 seconden vooruit  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dj~ÀÉàé<a~Ùßè
%3:GNfz¡­¹	È	Ó	ð


Ê+FOeÁ             U              ×


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/no.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKUVolumYKoble tilW(Label)_Skriv inn PIN-koden_Caster til stuen\UnderteksterW(title)Z(Subtitle)o1 T r y k k   f o r   å   c a s t e   m e d i e r   t i l   T V - e n   o g   h ø y t t a l e r n e_Stopp castingenTpin0l K o b l e r   t i l   &WAnnonseSLyd](device name)TLukkVAvbrytZKobler tilW(Title)_pin_cancel_buttonTpin2_Hopp over annonseno A n n o n s e   p å g å r   &Tpin1_connecting_skip_button_welcome_cancel_buttono S k r i v   i n n   d e n   f i r e s i f r e d e   P I N - k o d e n   d u   s e r   p å   s t a r t s k j e r m e n   t i l   e n   e n h e t   i   n æ r h e t e n .   E i e r e n   a v   e n h e t e n   k a n   o g s å   s e   P I N - k o d e n   i   C h r o m e c a s t - a p p e n .YHopp over_Ingen medier er valgto. T r y k k   f o r   å   a k t i v e r e   d e n   u t v i d e d e   k o n t r o l l e r e n_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonXSporvalgo H ø r   e t t e r   P I N - k o d eo S p i l l   a v   /   s e t t   p å   p a u s e_(device status)UTitle_(multizone device name)o K o b l e   t i l   e n   e n h e t   i   n æ r h e t e n_welcome_skip_buttonX(artist)]skip_ad_labelVFerdig_connecting_cancel_buttonXCast tiloY M i k r o f o n e n   d i n   b r u k e s   m i d l e r t i d i g   f o r   å   r e g i s t r e r e   e n   P I N - k o d e ,   s l i k   a t   d u   k a n   k o b l e   t i l .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¢¬´ÊÝêòýbty¬±¸ÃËßäù8P	s	}		ô
	


1
E
N
u
¨
º
À
Ú-6DKfo             u              $


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/no.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLM1NOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELSLyd_Spol 30 sekunder tilbake[Finn ut mer_!Du kan hoppe over annonsen om %ldWSpor %dZKobler tilXSpill av_=Sjekk at %@ og Cast-enheten er koblet til samme Wifi-nettverk_Velg et spor for teksting_Stopp medieavspillingenUIngenROk^Ikke tilkobletoG D e n n e   a p p e n   t r e n g e r   t i l g a n g   t i l   d e t   l o k a l e   n e t t v e r k e t   f o r   å   k u n n e   c a s t eU--:--UNesteo G å   t i l   i n n s t i l l i n g e rXCast tilo S l å   l y d e n   a v   e l l e r   p åo T e k s t i n g   f o r   h ø r s e l s h e m m e d e[nettbrettet]InnstillingerWForrige_Sjekk Wifi-nettverket dittYTilkobleto S p i l l   a v   /   s e t t   p å   p a u s eUPause\Underteksteroù D e n n e   a p p e n   t r e n g e r   t i l g a n g   t i l   w i f i - n e t t v e r k e t   f o r   å   k u n n e   k o b l e   s e g   t i l   e n h e t e n e   d i n e . 
 
 F o r   å   c a s t e ,   v e l g   « O K »   n å r   a p p e n   b e r   o m   å   f å   k o b l e   s e g   t i l   d e t   l o k a l e   n e t t v e r k e t .   D u   k a n   o g s å   g i   t i l g a n g   t i l   d e t t e   s e n e r e   i   i O S - i n n s t i l l i n g e n e   f o r   d e n n e   a p p e n .Z%d prosent_Ingen enheter er tilgjengelige]Caster til %@o° D e n n e   a p p e n   t r e n g e r   t i l g a n g   t i l   w i f i - n e t t v e r k e t   f o r   å   k u n n e   k o b l e   s e g   t i l   e n h e t e n e   d i n e . 
 
 F o r   å   c a s t e ,   g å   t i l   i n n s t i l l i n g e n e   o g   s l å   p å   « L o k a l   n e t t v e r k s t i l g a n g »   f o r   d e n n e   a p p e n .og G å   t i l   I n n s t i l l i n g e r   p å   d e n n e   t e l e f o n e n ,   o g   s j e k k   a t   l o k a l   n e t t v e r k s t i l g a n g   e r   s l å t t   p å   f o r   d e n n e   a p p e nYtelefoneno C a s t e ø k t e n   e r   s t a r t e to( S ø r g   f o r   a t   l o k a l   n e t t v e r k s t i l g a n g   e r   p åWDIREKTEo C a s t e ø k t e n   e r   a v s l u t t e t_Spol 30 sekunder fremover  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dh³»ÆÏ+EKN]îôú%.[ ®¶ÓÝ			##DRµ


½I             T              e


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/pl.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKh GB o[ n o[f P oB c zW(Label)]Wpisz kod PINo P r z e s yB a n i e   d o   s a l o n uVNapisyW(title)Z(Subtitle)o8 K l i k n i j ,   b y   p r z e s yB a   m u l t i m e d i a   n a   t e l e w i z o r   i   gB o[ n i k io Z a t r z y m a j   p r z e s yB a n i eo p o z y c j a   0   k o d u   p i nhA c z . . .WReklamaf Dz w i k](device name)WZamknijVAnulujeA c zW(Title)_#przycisk anuluj na ekranie kodu pino p o z y c j a   2   k o d u   p i nm P o m iD   r e k l a mo W y[ w i e t l a m   r e k l a m &o p o z y c j a   1   k o d u   p i no$ p r z y c i s k   p o m iD   n a   e k r a n i e   p oB c z e n i a_$przycisk anuluj na ekranie powitaniao W p i s z   4 - c y f r o w y   k o d   P I N   w y[ w i e t l a n y   n a   e k r a n i e   gB ó w n y m   u r z d z e n i a   w   p o b l i| u .   WB a[ c i c i e l   u r z d z e n i a   z n a j d z i e   g o   t e|   w   a p l i k a c j i   C h r o m e c a s t .e P o m iDo N i e   w y b r a n o   m u l t i m e d i ó wo) K l i k n i j ,   b y   wB c z y   r o z s z e r z o n y   k o n t r o l e ro# p r z y c i s k   p oB c z   n a   e k r a n i e   k o d u   p i no p o z y c j a   3   k o d u   p i no p r z y c i s k   p o m i n i c i a   r e k l a m yo& p r z y c i s k   n a sB u c h u j   n a   e k r a n i e   k o d u   p i n_ przycisk ok na ekranie powitanial W y b ó r   u t w o r uo N a sB u c h u j   k o d u   P I No O d t w ó r z / w s t r z y m a j_(device status)UTitleo" ( n a z w a   u r z d z e n i a   w i e l o s t r e f o w e g o )o" P oB c z   s i   z   u r z d z e n i e m   w   p o b l i| uo# p r z y c i s k   p o m iD   n a   e k r a n i e   p o w i t a n i aX(artist)o e t y k i e t a   p o m i n i c i a   r e k l a m yVGotoweo% p r z y c i s k   a n u l u j   n a   e k r a n i e   p oB c z e n i ak P r z e[ l i j   n aoV A b y   n a w i z a   p oB c z e n i e ,   t y m c z a s o w o   z o s t a n i e   u| y t y   m i k r o f o n   d o   n a sB u c h i w a n i a   k o d u   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n­ºÂÐý·Þï÷!,4ZÅì	7	^
u

±Ov¯þ!:aå
,
u
~
·
¾"             u              Ñ


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/pl.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELf Dz w i ko P r z e w iD   3 0   s   d o   t yB uo W i c e j   i n f o r m a c j io M o| e s z   p o m i n   r e k l a m   z a   % l d &h U t w ó r   % dgA c z   zg O d t w ó r zoJ U p e w n i j   s i ,  | e   % @   o r a z   u r z d z e n i e   p r z e s yB a j c e   s   w   t e j   s a m e j   s i e c i   W i - F io W y b i e r z  [ c i e| k   n a p i s ó wo! Z a t r z y m a j   o d t w a r z a n i e   m u l t i m e d i ó wTBrakROKo P r z y c i s k   C a s t ,   b r a k   p oB c z e n i aoE P r z e s yB a n i e   z a   p o m o c   t e j   a p l i k a c j i   w y m a g a   d o s t p u   p r z e z   s i e   l o k a l nU--:--UDalejo O t w ó r z   U s t a w i e n i ak P r z e[ l i j   n ao P r z eB c z   w y c i s z e n i eVNapisyVtabletZUstawieniaVWsteczo S p r a w dz   s i e   W i - F io P r z y c i s k   C a s t ,   p oB c z o n oo O d t w ó r z / w s t r z y m a jYWstrzymajo
 A b y   t a   a p l i k a c j a   m o gB a   p oB c z y   s i   z   T w o i m i   u r z d z e n i a m i ,   p o t r z e b u j e   d o s t p u   d o   s i e c i   W i - F i . 
 
 A b y   wB c z y   p r z e s yB a n i e ,   w y b i e r z    O K  ,   g d y   a p l i k a c j a   p o p r o s i   o   p oB c z e n i e   z   s i e c i   l o k a l n .   M o| e s z   t e|   z e z w o l i   n a   t o   p óz n i e j   w   u s t a w i e n i a c h   i O S   d o t y c z c y c h   t e j   a p l i k a c j i .j % d   p r o c e n to B r a k   d o s t p n y c h   u r z d z eDo P r z e s yB a m   n a :   % @oÂ A b y   t a   a p l i k a c j a   m o gB a   p oB c z y   s i   z   T w o i m i   u r z d z e n i a m i ,   p o t r z e b u j e   d o s t p u   d o   s i e c i   W i - F i . 
 
 A b y   wB c z y   p r z e s yB a n i e ,   p r z e j dz   d o   u s t a w i eD   i   wB c z   d l a   t e j   a p l i k a c j i    D o s t p   p r z e z   s i e   l o k a l n  .of O t w ó r z   u s t a w i e n i a   n a   t y m   t e l e f o n i e   i   s p r a w dz ,   c z y   d l a   t e j   a p l i k a c j i   wB c z o n o   D o s t p   p r z e z   s i e   l o k a l no P r z y c i s k   C a s t ,  B c zWtelefono P r z e s yB a n i e   r o z p o c z t eo/ S p r a w dz ,   c z y   wB c z o n o   D o s t p   p r z e z   s i e   l o k a l ng N A  { Y W Oo P r z e s yB a n i e   z a k oD c z o n eo 3 0   s e k u n d   d o   p r z o d u  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dqÁ  /Æ÷<AD				A	X					¡	È	û
 
*BW­4.6eÆÕ             T              -


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/pt.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROkVVolumeXConectarW(Label)]Inserir o PINo* T r a n s m i t i n d o   c o n t e ú d o   p a r a   a   s a l a   d e   e s t a rXLegendasW(title)Z(Subtitle)o< T o q u e   p a r a   t r a n s m i t i r   m í d i a   p a r a   s u a   T V   e   s e u s   a l t o - f a l a n t e so P a r a r   t r a n s m i s s ã oTpin0k C o n e c t a n d o &g A n ú n c i oe Á u d i o](device name)VFecharXCancelarZConectandoW(Title)_pin_cancel_buttonTpin2WLegendam P u l a r   a n ú n c i oo A n ú n c i o   e m   a n d a m e n t o &Tpin1_connecting_skip_button_welcome_cancel_buttono I n s i r a   o   P I N   d e   q u a t r o   d í g i t o s   e x i b i d o   n a   t e l a   i n i c i a l   d e   u m   d i s p o s i t i v o   p r ó x i m o .   O   p r o p r i e t á r i o   d o   d i s p o s i t i v o   t a m b é m   p o d e   e n c o n t r a r   o   P I N   n o   a p p   C h r o m e c a s t .UPularo N e n h u m a   m í d i a   s e l e c i o n a d a_&Toque para ativar o controle expandido_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono S e l e ç ã o   d e   f a i x a sYOuvir PINo- B o t ã o   d e   a l t e r n â n c i a   p a r a   r e p r o d u z i r   e   p a u s a r_(device status)UTitle_(multizone device name)o" C o n e c t e - s e   a   d i s p o s i t i v o s   p r ó x i m o s_welcome_skip_buttonX(artist)]skip_ad_labelROK_connecting_cancel_button_Transmitir paraoO D u r a n t e   a   c o n e x ã o ,   o   m i c r o f o n e   s e r á   u s a d o   t e m p o r a r i a m e n t e   p a r a   d e t e c t a r   u m   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£¬´Â"*5°ÕÚñ  )4<PU]x¥ªÃÛ

 
U
~


§
»
Ï
ô
þ[msÔêó1             v              Ò


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/pt.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe Á u d i o_Voltar 30 segundosZSaiba maiso# V o c ê   p o d e   p u l a r   o   a n ú n c i o   e m   % l d . . .XFaixa %d_Conectando-se aUTocaroT C o n f i r a   s e   o   % @   e   s e u   d i s p o s i t i v o   d e   t r a n s m i s s ã o   e s t ã o   c o n e c t a d o s   à   m e s m a   r e d e   W i - F i_'Selecionar uma faixa de closed captionsk P a r a r   m í d i aWNenhumaROKo  B o t ã o   " T r a n s m i t i r "   n ã o   c o n e c t a d oo8 E s t e   a p p   p r e c i s a   d e   a c e s s o   à   r e d e   l o c a l   p a r a   t r a n s m i s s ã oU--:--g P r ó x i m ao A b r i r   c o n f i g u r a ç õ e s_Transmitir para_Ativar ou desativar o som_Closed captionsVtabletm C o n f i g u r a ç õ e sXAnterior_Verificar sua rede Wi-Fio B o t ã o   " T r a n s m i t i r "   c o n e c t a d oo- B o t ã o   d e   a l t e r n â n c i a   p a r a   r e p r o d u z i r   e   p a u s a rVPausarXLegendasoð P a r a   s e   c o n e c t a r   a o s   s e u s   d i s p o s i t i v o s ,   e s t e   a p p   p r e c i s a   d e   a c e s s o   à   r e d e   W i - F i . 
 
 P a r a   t r a n s m i t i r ,   s e l e c i o n e   " O K "   q u a n d o   o   a p p   s o l i c i t a r   c o n e x ã o   à   r e d e   l o c a l .   V o c ê   t a m b é m   p o d e   p e r m i t i r   i s s o   m a i s   t a r d e   n a s   c o n f i g u r a ç õ e s   d o   i O S   p a r a   e s t e   a p p .\%d por centoo N e n h u m   d i s p o s i t i v o   d i s p o n í v e l_Transmitindo para %@o§ P a r a   s e   c o n e c t a r   a o s   s e u s   d i s p o s i t i v o s ,   e s t e   a p p   p r e c i s a   d e   a c e s s o   à   r e d e   W i - F i . 
 
 P a r a   t r a n s m i t i r ,   a c e s s e   a s   c o n f i g u r a ç õ e s   e   a t i v e   " A c e s s o   à   r e d e   l o c a l "   p a r a   e s t e   a p p .oj A c e s s e   a s   c o n f i g u r a ç õ e s   d o   s e u   s m a r t p h o n e   e   v e r i f i q u e   s e   a   o p ç ã o   " A c e s s o   à   r e d e   l o c a l "   e s t á   a t i v a d a   n o   a p po B o t ã o   " T r a n s m i t i r "   c o n e c t a n d oZsmartphoneo A   s e s s ã o   d e   t r a n s m i s s ã o   c o m e ç o uo. C o n f e r i r   s e   o   a c e s s o   à   r e d e   l o c a l   e s t á   a t i v a d oWAO VIVOo  A   s e s s ã o   d e   t r a n s m i s s ã o   t e r m i n o uo A v a n ç a r   3 0   s e g u n d o s  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-doØáóù¤Îåíð3¦¬»äö		$	+	F	O	j	¥

	
õ?V
§~»Æfn±             U              Ú


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/pt_PT.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTOFUVWXYTZ[\]^_`QabcdIefghijRakElmnoUD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKVVolumeULigarW(Label)_Introduza o PINo+ A   t r a n s m i t i r   c o n t e ú d o   p a r a   a   s a l a   d e   e s t a r &XLegendasW(title)Z(Subtitle)oF T o q u e   p a r a   t r a n s m i t i r   c o n t e ú d o   m u l t i m é d i a   p a r a   a   s u a   T V   e   a l t i f a l a n t e so P a r a r   t r a n s m i s s ã oTpin0h A   l i g a r &g A n ú n c i oe Á u d i o](device name)VFecharXCancelarW(Title)_pin_cancel_buttonTpin2WLegendao I g n o r a r   a n ú n c i oo A n ú n c i o   e m   c u r s o &Tpin1_connecting_skip_button_welcome_cancel_buttono­ I n t r o d u z a   o   P I N   d e   q u a t r o   d í g i t o s   a p r e s e n t a d o   n o   e c r ã   p r i n c i p a l   d e   u m   d i s p o s i t i v o   p r ó x i m o .   O   p r o p r i e t á r i o   d o   d i s p o s i t i v o   t a m b é m   p o d e   e n c o n t r a r   o   P I N   n a   a p l i c a ç ã o   C h r o m e c a s t .WIgnoraro& N e n h u m   c o n t e ú d o   m u l t i m é d i a   s e l e c i o n a d o_)Toque para ativar o controlador expandido_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono S e l e ç ã o   d e   f a i x a sYOuvir PINo A l t e r n a r   e n t r e   r e p r o d u ç ã o / p a u s a_(device status)UTitle_(multizone device name)o L i g u e   a   u m   d i s p o s i t i v o   p r ó x i m o_welcome_skip_buttonX(artist)]skip_ad_labeli C o n c l u í d o_connecting_cancel_button_Transmita para:oM P a r a   l i g a r ,   o   s e u   m i c r o f o n e   s e r á   u t i l i z a d o   t e m p o r a r i a m e n t e   p a r a   o u v i r   u m   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£©±Ã%-8Çìñ*1:BV[c©®Çß
<
D

¿
Ô
Ù
è
ü5?²ñ1L^             u              û


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/pt_PT.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe Á u d i o_Retroceder 30 segundosZSaber maiso% P o d e   i g n o r a r   o   a n ú n c i o   d e n t r o   d e   % l d &XFaixa %dj A   l i g a r   a &ZReproduziroZ C e r t i f i q u e - s e   d e   q u e   o   % @   e   o   d i s p o s i t i v o   d e   t r a n s m i s s ã o   e s t ã o   l i g a d o s   à   m e s m a   r e d e   W i - F i ._Selecionar faixa de legendaso P a r a r   r e p r o d u ç ã o   d e   m u l t i m é d i aXNenhumasROKo T r a n s m i s s ã o   n ã o   l i g a d aoC E s t a   a p p   n e c e s s i t a   d e   a c e s s o   à   r e d e   l o c a l   p a r a   t r a n s m i t i r   c o n t e ú d o sU--:--XSeguinteo A c e d e r   à s   D e f i n i ç õ e s_Transmita para:_Ativar/desativar somXLegendasVtabletj D e f i n i ç õ e sXAnterior_Verifique a sua rede Wi-Fio T r a n s m i s s ã o   l i g a d ao A l t e r n a r   e n t r e   r e p r o d u ç ã o / p a u s aVPausaro P a r a   l i g a r   a o s   s e u s   d i s p o s i t i v o s ,   e s t a   a p p   n e c e s s i t a   d e   a c e s s o   à   r e d e   W i - F i . 
 
 P a r a   t r a n s m i t i r   c o n t e ú d o s ,   s e l e c i o n e   " O K "   q u a n d o   a   a p p   p e d i r   p a r a   e s t a b e l e c e r   l i g a ç ã o   à   r e d e   l o c a l .   T a m b é m   p o d e   c o n c e d e r   a u t o r i z a ç ã o   m a i s   t a r d e   n a s   D e f i n i ç õ e s   d o   i O S   p a r a   e s t a   a p p .\%d por centoo N e n h u m   d i s p o s i t i v o   d i s p o n í v e lo A   t r a n s m i t i r   p a r a   % @ &o± P a r a   l i g a r   a o s   s e u s   d i s p o s i t i v o s ,   e s t a   a p p   n e c e s s i t a   d e   a c e s s o   à   r e d e   W i - F i . 
 
 P a r a   t r a n s m i t i r   c o n t e ú d o s ,   a c e d a   à s   D e f i n i ç õ e s   e   a t i v e   a   o p ç ã o   " A c e s s o   à   r e d e   l o c a l "   p a r a   e s t a   a p p .od A c e d a   à s   D e f i n i ç õ e s   n e s t e   t e l e m ó v e l   e   v e r i f i q u e   s e   o   a c e s s o   à   r e d e   l o c a l   e s t á   a t i v a d o   p a r a   e s t a   a p p .o T r a n s m i s s ã o   e m   l i g a ç ã oi t e l e m ó v e lo0 A   s e s s ã o   d e   t r a n s m i s s ã o   d e   c o n t e ú d o   f o i   i n i c i a d ao7 C e r t i f i q u e - s e   d e   q u e   o   a c e s s o   à   r e d e   l o c a l   e s t á   a t i v a d oYEM DIRETOo1 A   s e s s ã o   d e   t r a n s m i s s ã o   d e   c o n t e ú d o   f o i   t e r m i n a d ao A v a n ç a r   3 0   s e g u n d o s  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-doàéþ	Àß'*Yâèñ		.	E	N	U	j	s		·	ø	ÿQ~
ã®ÝðSÄÎ3             T              \


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ro.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKUVolumi C o n e c t a iW(Label)o I n t r o d u c e i   c o d u l   P I No S e   p r o i e c t e a z   î n   c a m e r a   d e   z ij S u b t i t r r iW(title)Z(Subtitle)oF A t i n g e i   p e n t r u   a   p r o i e c t a   c o n i n u t   m e d i a   p e   t e l e v i z o r   i   î n   d i f u z o a r eo N u   m a i   p r o i e c t a iTpin0n S e   c o n e c t e a z &e A n u nn C o n i n u t   a u d i o](device name)i Î n c h i d e ig A n u l a im S e   c o n e c t e a zW(Title)_pin_cancel_buttonTpin2ZSubtitrareo Î n c h i d e i   a n u n u lo S e   r e d   a n u n u l . . .Tpin1_connecting_skip_button_welcome_cancel_buttono± I n t r o d u c e i   c o d u l   P I N   d i n   p a t r u   c i f r e   a f i a t   p e   e c r a n u l   d e   p o r n i r e   a l   u n u i   d i s p o z i t i v   d i n   a p r o p i e r e .   P r o p r i e t a r u l   d i s p o z i t i v u l u i   p o a t e   g s i   c o d u l   P I N   i   î n   a p l i c a i a   C h r o m e c a s t .g O m i t e io N i c i u n   c o n i n u t   m e d i a   s e l e c t a to+ A t i n g e i   p e n t r u   a   a c t i v a   c o n t r o l e r u l   e x t i n s_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono* S e l e c t a r e a   î n r e g i s t r r i i   a u d i o / s u b t i t r r i io A s c u l t a i   c o d u l   P I No C o m u t a i   î n t r e   r e d a r e / p a u z_(device status)UTitle_(multizone device name)o* C o n e c t a i - v   l a   d i s p o z i t i v u l   d i n   a p r o p i e r e_welcome_skip_buttonX(artist)]skip_ad_labelXTerminat_connecting_cancel_buttonm P r o i e c t a i   p eoU C a   s   v   c o n e c t a i ,   m i c r o f o n u l   v a   f i   f o l o s i t   t e m p o r a r   p e n t r u   a s c u l t a r e a   u n u i   c o d   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¢µ½ê)>FQà
'2O]p¢¶»Æë			0	H
­
¼
ûTin}¥ü%^pvçý



8
S             v               


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ro.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELn C o n i n u t   a u d i oo D e r u l a i   î n a p o i   3 0   d e   s e c u n d eo A f l a i   m a i   m u l t eo  P u t e i   î n c h i d e   a n u n u l   î n   % l d . . .ZMelodia %do S e   c o n e c t e a z   l af R e d a ioU A s i g u r a i - v   c   % @   i   d i s p o z i t i v u l   d e   p r o i e c i e   s u n t   c o n e c t a t e   l a   a c e e a i   r e e a   W i - F io S e l e c t a i   o   s u b t i t r a r eo! O p r i i   r e d a r e a   c o n i n u t u l u i   m e d i ad F rROKo& S e r v i c i u l   d e   p r o i e c i e   n u   s - a   c o n e c t a to< A p l i c a i a   n e c e s i t   a c c e s   î n   r e e a u a   l o c a l   p e n t r u   a   p r o i e c t aU--:--g Î n a i n t eo A c c e s a i   S e t t i n g s   ( S e t r i )m P r o i e c t a i   p eo A c t i v a i / d e z a c t i v a i   s u n e t u lj S u b t i t r r iWtabletaf S e t r if Î n a p o io V e r i f i c a i   r e e a u a   W i - F io# S e r v i c i u l   d e   p r o i e c i e   s - a   c o n e c t a to C o m u t a i   î n t r e   r e d a r e / p a u zk Î n t r e r u p e io P e n t r u   a   s e   c o n e c t a   l a   d i s p o z i t i v e ,   a p l i c a i a   n e c e s i t   a c c e s   l a   r e e a u a   W i - F i . 
 
 P e n t r u   a   p r o i e c t a ,   s e l e c t a i    O K    c â n d   a p l i c a i a   s o l i c i t   c o n e c t a r e a   l a   r e e a u a   l o c a l .   P u t e i   p e r m i t e   m a i   t â r z i u   a c c e s u l   a p l i c a i e i   î n   S e t t i n g s   ( S e t r i )   d e   p e   d i s p o z i t i v u l   i O S .[%d procente_Nu sunt disponibile dispozitiveo S e   p r o i e c t e a z   p e   % @oÎ P e n t r u   a   s e   c o n e c t a   l a   d i s p o z i t i v e ,   a p l i c a i a   n e c e s i t   a c c e s   l a   r e e a u a   W i - F i . 
 
 P e n t r u   a   p r o i e c t a ,   a c c e s a i   S e t t i n g s   ( S e t r i )   i   a c t i v a i    L o c a l   N e t w o r k   A c c e s s    ( A c c e s u l   î n   r e e a u a   l o c a l )   p e n t r u   a p l i c a i e .ol A c c e s a i   S e t r i   p e   t e l e f o n   i   v e r i f i c a i   d a c   a i   a c t i v a t   A c c e s u l   î n   r e e a u a   l o c a l   p e n t r u   a c e a s t   a p l i c a i eo$ S e r v i c i u l   d e   p r o i e c i e   s e   c o n e c t e a zYtelefonulo S e s i u n e a   d e   p r o i e c i e   a   î n c e p u to5 A s i g u r a i - v   c   a i   a c t i v a t   A c c e s u l   î n   r e e a u a   l o c a lTLIVEo" S e s i u n e a   d e   p r o i e c i e   s - a   î n c h e i a to Î n a i n t e   c u   3 0   d e   s e c u n d e  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-d¾á$/R_;Û	V	\	k	¢	½	ø


"
/
b
«
ä
û



/
ZùÔ)j×Ü#             T              V


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ru.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTOFUTVIWTXYWTZW[Q\E]^I_`a_bcR\dEefWgUDWTJ^hTiJjT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlebi@><:>ABLj>4:;NG8BLW(Label)o2548B5   P I N -:>4o*"@0=A;OF8O  =0  CAB@>9AB2>   ">;LH0O  :><=0B0 "h!C1B8B@KW(title)Z(Subtitle)o906<8B5 ,  GB>1K  =0G0BL  B@0=A;OF8N  =0  B5;5287>@  8;8  :>;>=:8o@5:@0B8BL  B@0=A;OF8No5@20O  F8D@0   P I N -:>40l>4:;NG5=85 &g 5:;0<0o2C:>2K5  4>@>6:8](device name)g0:@KBLfB<5=0W(Title)o"@5BLO  F8D@0   P I N -:>40j@>?CAB8BLn>:07  @5:;0<K &oB>@0O  F8D@0   P I N -:>40o2548B5  G5BK@5E7=0G=K9   P I N -:>4  A  M:@0=0  =0E>4OI53>AO  @O4><  CAB@>9AB20  8;8  ?>?@>A8B5  2;045;LF0  CAB@>9AB20  ?>A<>B@5BL  MB>B   P I N -:>4  2  ?@8;>65=88   G o o g l e   H o m e .o>=B5=B  =5  2K1@0=o306<8B5 ,  GB>1K  ?>:070BL  1>;LH5  M;5<5=B>2  C?@02;5=8Oo'5B25@B0O  F8D@0   P I N -:>40o@>?CAB8BL  @5:;0<Co>A?@>8725AB8   P I N -:>4j@>4>;68BLoK15@8B5  4>@>6:Co>A?@>872545=85 /?0C70_(device status)UTitle_(multizone device name)o-K?>;=8B5  ?>4:;NG5=85  :  CAB@>9AB2C  ?>1;87>AB8X(artist)f>B>2>oK15@8B5  CAB@>9AB2>od;O  CAB0=>2:8  ?>4:;NG5=8O  1C45B  8A?>;L7>20=  <8:@>D>=  =0  CAB@>9AB25 .  -B>  ?>72>;8B  @0A?>7=0BL   P I N -:>4 .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n±ÆÎïFW_jß9Ra¡®¶ãø		B
y
:a£Æó%Á             k              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ru.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELo2C:>2K5  4>@>6:8o5@5<>B0BL  =0   3 0  A5:C=4  =0704i>4@>1=55o# 5:;0<C  <>6=>  ?@>?CAB8BL  G5@57   % l d &j>@>6:0   % doK?>;=O5BAO  ?>4:;NG5=85 &o>A?@>872545=85oU#1548B5AL ,  GB>   % @  8  CAB@>9AB2>  4;O  B@0=A;OF88  ?>4:;NG5=K  :  >4=>9  8  B>9  65  A5B8   W i - F i .oK1@0BL  4>@>6:C  AC1B8B@>2oAB0=>28BL  2>A?@>872545=85a bo+=>?:0  B@0=A;OF88 ,  CAB@>9AB2>  =5  ?>4:;NG5=>o=;O  B@0=A;OF88  MB><C  ?@8;>65=8N  =C65=  4>ABC?  :  ;>:0;L=>9  A5B8U--:--e0;55oB:@KBL  =0AB@>9:8oK15@8B5  CAB@>9AB2>o:;NG8BL  8;8  2K:;NG8BL  72C:h!C1B8B@Kg?;0=H5Bi0AB@>9:8e0704o"@>25@LB5  ?>4:;NG5=85  :  A5B8   W i - F io(=>?:0  B@0=A;OF88 ,  CAB@>9AB2>  ?>4:;NG5=>o>A?@>872545=85 /?0C70e0C70oÂ@8;>65=8N  =5>1E>48<>  ?>4:;NG5=85  :  20H59  A5B8   W i - F i . 
 
'B>1K  <>6=>  1K;>  B@0=A;8@>20BL  :>=B5=B ,  =06<8B5   " " ,  :>340  >=>  70?@>A8B  4>ABC?  :  A5B8 .   07@5H8BL  ?>4:;NG5=85  <>6=>  ?>765  2  =0AB@>9:0E   i O S .T%d %o5B  4>ABC?=KE  CAB@>9AB2o"@0=A;OF8O  =0  CAB@>9AB2>   " % @ "o@8;>65=8N  =5>1E>48<>  ?>4:;NG5=85  :  20H59  A5B8   W i - F i . 
 
'B>1K  <>6=>  1K;>  B@0=A;8@>20BL  :>=B5=B ,  >B:@>9B5  =0AB@>9:8  8  ?@54>AB02LB5  ?@8;>65=8N  4>ABC?  :  A5B8 .o`B:@>9B5  =0AB@>9:8  B5;5D>=0  8  C1548B5AL ,  GB>  MB><C  ?@8;>65=8N  @07@5H5=  4>ABC?  ?>  ;>:0;L=>9  A5B8 .o*=>?:0  B@0=A;OF88 ,  2K?>;=O5BAO  ?>4:;NG5=85gB5;5D>=o"@0=A;OF8O  70?CI5=0o"5>1E>48<  4>ABC?  ?>  ;>:0;L=>9  A5B8o //  " !/&/o"@0=A;OF8O  7025@H5=0o5@5<>B0BL  =0   3 0  A5:C=4  2?5@Q4  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dÄ× 5h6k¢¥ª					¶	ß

)
8
K
V

ð(¯´å
"Ys«òB             T              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/si.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlec
Ä
»
Òi
Ä
¬  
´
»
Ò
¸
Ï
Àg
Ã
¶
³
Ò
±
Ê
±W(Label)o P I N  

­
Ô
Å
­
Ê  

»
±
Ê
±o

½
Ò
±
Ê
¯
º
§  
À
Ò

Ï
Á
º  

Ù
»
Úh

´
Ã
Ò
»
Ð
Ã
ÒW(title)Z(Subtitle)o5

¶
Ú   T V  
Ã
Ä  
Ã
Ê
´
Ó

»  
À
Ù
­  
¸
Ï
°
Ê 

º  
À
Ò

Ï
Á  

Ò
»
Ó
¸
§  
Ã
Ê
´
»
Ê
Á  

»
±
Ê
±m
À
Ò

Ï
Á
º  
±
À
­
±
Ê
±Tpin0o
Ã
¸
Ê
¶
±
Ê
°  
À
Ù
¸
Ò
±
Ê &g
¯
Ð
±
Ê
À
Ó
¸h
Á
Ê 

»
À
Ê 

º](device name)e
À
Ã
±
Ê
±l

À
½


Ô  

»
±
Ê
±i
Ã
¶
Ð
³
Ù
¸
Ò
±
ÊW(Title)_pin_cancel_buttonTpin2i

´
Ã
Ò
»
Ð
Ã
Ò
ºo
¯
Ð
±
Ê
À
Ó
¸  
¸
  
Ä
»
Ò
±
Ê
±o
¯
Ð
±
Ê
À
Ó
¸  
´
Ê 

»

­
Ò
º
Ú  
´
À
­
Ó . . .Tpin1_connecting_skip_button_welcome_cancel_buttono

À
§  

´
Ï


º
  
¸
Ô
½
Ê  
´
Ò
§
Ô  
­
Ò
»
º
Ú  
Ã

¯
»
Ê
Á
±
º  
À
±  

½

Ê

¸
Ê   4
  
»
Ä
Ã
Ê  



º  

­
Ô
Å
­
Ê  

»
±
Ê
± .  

´
Ï

  
Ä
Ò
¸
Ò

»
Ô
§   C h r o m e c a s t  
º
Ù
¯
Ô
¸
Ù
Ä
Ò  
»
Ä
Ã
Ê  



º  
Ã
Ù
Ï
º
Ï  

Ð
±
Ó
¸
§  
¯  
Ä
Ð

Ò  
À
Ù
º
Ò .i
¸
  
Ä
»
Ò
±
Ê
±o
¸
Ï
°
Ê 

º  
­
Ý
»
Ï  
±
Ð
­o.
¯
Ò
  
Ä
Ð
»
Ò
º  
´
Ï
½

º  

Ê 

»
Ò
º
Ï
­
Ê
¸
  

Ò
»
Ó
¸
§  
­
§
Ê
§
Ô  

»
±
Ê
±_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono
Á
Ê 

»
À
Ê 

º  

«
Ê
©  
­
Ú
»
Ó
¸o
»
Ä
Ã
Ê  



º  
Ã
³
Ä
Ï  
Ã
À
±
Ê  
¯
Ù
±
Ê
±o
À
Ï
¯
±  
À
Ò
»
Ï
¸  
§
Ü

½
º_(device status)UTitle_(multizone device name)o

À
§  

´
Ï


º
§  
Ã
¶
³
Ò
±
Ê
±_welcome_skip_buttonX(artist)]skip_ad_labelc

Å
Ï_connecting_cancel_buttono
¸
Ù
º
§  
À
Ò

Ï
Á  

»
±
Ê
±oI
Ã
¶
Ð
³
Ó
¸
§ ,  

¶
Ú  
¸
º
Ò

Ê 

»
Æ
Ý
±
º  
»
Ä
Ã
Ê  



º

Ê  
Ã
³
Ä
Ï  
Ã
À
±
Ê  
¯
Ó
¸
§  
­
Ï
À

Ï
½
Ò

À  
·
Ï
À
Ò
­  

Ù
»
Ú .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n ³ÂÊí)1<©ÄÉêù
#<OWkp¨Ýâû	
8
K
l
Ë
à
å
ôEz¯µÏø%,Gj             v              ÿ


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/si.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELh
Á
Ê 

»
À
Ê 

ºo
­
­
Ê
´
»   3 0

Ê  

´
Ã
Ê
Ã
§m
­
À
­
Ê  
¯
Ð
±  

±
Ê
±o%

¶
§   % l d  
Ä
Ò
¯
Ó  
¯
Ð
±
Ê
À
Ó
¸  
¸
  
Ä
Ð
»
Ò
º  
Ä
Ð
   . . .o
Á
Ê 

»
À
Ê 

º  

«
Ê
©
º   % do
¸
Ù
º
§  
Ã
¸
Ê
¶
±
Ê
°  

Ù
»
Úe
À
Ï
¯
±
ºo;

¶

Ú   % @  
Ã
Ä   c a s t  

´
Ï


º  


¸   W i - F i  
¢
Ï
½
º
Ú  

­
Ò  
¶
À  
Ã
Ä
­
Ò
  

»  

±
Ê
±o$
À
Ð
Ã
Ö  
Ã
Ò
»
Ã
Ê
­
½  
Á
Ê 

»
À
Ê 

º  

«
Ê
©
º

Ê  
­
Ý
»
±
Ê
±o
¸
Ï
°
Ê 

º  
´
Ã
Ô
°
Ï
À
±
º  
±
À
­
Ê  
À
±
Ê
±k

Ò
Ã
Ò
À

Ê  
±
Ð
­c
Ä
»
Òo
À
Ò

Ï
Á
º  
Ã
¸
Ê
¶
±
Ê
°  
±
Ð
­o6
¸
Ù
¸  
º
Ù
¯
Ô
¸
§  
À
Ò

Ï
Á
±  

Ò
»
Ó
¸
§  
Ã
Ê
®
Ï
±
Ó
º  
¢
Ï
½  
´
Ê 

»
À
Ú
Á
º  

À
Á
Ê 

º
º
ÒU--:--d
¸
Ó
Å
o
Ã
Ð

Ã
Ó
¸
Ê  
À
Ù
­  
º
±
Ê
±o
¸
Ù
º
§  
À
Ò

Ï
Á  

»
±
Ê
±o
±
Ò
Ä
¬  
­
­
Ê
­
Ê 

À
º  
§
Ü

½
Ê  

»
±
Ê
±l
À
Ð
Ã
Ö  
Ã
Ò
»
Ã
Ê
­
½g
§
Ð
¶
Ê
½
§
ºg
Ã
Ð

Ã
Ó
¸
Êc
´
Ù
»o

¶
Ú   W i - F i  
¢
Ï
½
º  
´
»
Ó

Ê
Â
Ï  

»
±
Ê
±o
À
Ò

Ï
Á
º  
Ã
¸
Ê
¶
±
Ê
°
Ò
­
º
Òo
À
Ï
¯
±  
À
Ò
»
Ï
¸  
§
Ü

½
ºf
À
Ò
»
Ï
¸
ºh

´
Ã
Ò
»
Ð
Ã
Òo×

¶
Ú  

´
Ï

  
Ã
¸
Ê
¶
±
Ê
°  

Ò
»
Ó
¸
§ ,  
¸
Ù
¸  
º
Ù
¯
Ô
¸
§  

¶
Ú   W i - F i  
¢
Ï
½
º  
À
Ù
­  
´
Ê 

»
À
Ú
Á  
À
Ó
¸  

À
Á
Ê 

º
º
Ò . 
 

À
Ò

Ï
Á
±  

Ò
»
Ó
¸
§ ,  
º
Ù
¯
Ô
¸  

¶
Ú  
Ã
Ê
®
Ï
±
Ó
º  
¢
Ï
½
º
§  
Ã
¸
Ê
¶
±
Ê
°  

Ò
»
Ó
¸
§  

½
Ê
½
±  
À
Ò
§   
Ä
»
Ò   
­
Ý
»
±
Ê
± .  
´
Ã
Ô
À  

¶
§  
¸
Ù
¸  
º
Ù
¯
Ô
¸  
Ã
³
Ä
Ï   i O S  
Ã
Ð

Ã
Ó
¸
Ê  
­
Ô
Å  
¯  
¸
Ù
º
§  

©  
¯
Ò
º  
Ä
Ð
 .h
Ã
Ò
º
º
§   % do

Ò
Ã
Ò
¯
Ô  

´
Ï


º

Ê  
±
Ü
¸
Ð
­o % @  
À
Ù
­  
À
Ò

Ï
Á  

Ù
»
Úo§

¶
Ú  

´
Ï

  
Ã
¸
Ê
¶
±
Ê
°  

Ò
»
Ó
¸
§ ,  
¸
Ù
¸  
º
Ù
¯
Ô
¸
§  

¶
Ú   W i - F i  
¢
Ï
½
º  
À
Ù
­  
´
Ê 

»
À
Ú
Á  
À
Ó
¸  

À
Á
Ê 

º
º
Ò . 
 

À
Ò

Ï
Á
±  

Ò
»
Ó
¸
§ ,  

¶
Ú  
Ã
Ð

Ã
Ó
¸
Ê  
À
Ù
­  

Ü
Ã
Ê  
¸
Ù
¸  
º
Ù
¯
Ô
¸  
Ã
³
Ä
Ï   
Ã
Ê
®
Ï
±
Ó
º  
¢
Ï
½  
´
Ê 

»
À
Ú
Á
º   
Ã

Ê 

»
Ó
º  

»
±
Ê
± .od
¸
Ù
¸  
¯
Ô
»

®
±
º  
¸
­  
Ã
Ð

Ã
Ó
¸
Ê  
À
Ù
­  

Ü
Ã
Ê  
¸
Ù
¸  
º
Ù
¯
Ô
¸  
Ã
³
Ä
Ï  
Ã
Ê
®
Ï
±
Ó
º  
¢
Ï
½  
´
Ê 

»
À
Ú
Á
º  
Ã

Ê 

»
Ò
º  

»  

­
Ò
¯
Ð
º
Ò  
´
»
Ó

Ê
Â
Ï  

»
±
Ê
±o
À
Ò

Ï
Á
º  
Ã
¸
Ê
¶
±
Ê
°  
À
Úg
¯
Ô
»

®
±
ºo
À
Ò

Ï
Á
±  
Ã
Ð
Ã
Ò
º  

»
¹
Ò
«
Òo5
Ã
Ê
®
Ï
±
Ó
º  
¢
Ï
½  
´
Ê 

»
À
Ú
Á
º  
Ã

Ê 

»
Ò
º  

»  

­
Ò  
¶
À  
­
Ä
À
Ô
»
Ô  

»  

±
Ê
±e
Ã
¢
Ó
À
Óo
À
Ò

Ï
Á
±  
Ã
Ð
Ã
Ò
º  
±
Ò
¸
Ï  
À
Ò
ºo
­
­
Ê
´
»   3 0  

¯
Ò
»
Ò
º
§  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-duµ'LWÐPgn		
		6	Y		§	¶	Å	Ì

.
Q
^
o 1^
ÔÄÓüit¡             U              Ä


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/sk.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKi H l a s i t o seh P r i p o j ieh (` t í t o k )[Zadajte PINo! P r e n áa a   s a   d o   z a r i a d e n i a   O b ý v a
 k aWTitulkyg ( n á z o v )j ( P o d n á z o v )o= K l e p n u t í m   m ô~ e t e   p r e n áa ae   m é d i á   d o   t e l e v í z o r a   a   r e p r o d u k t o r o vo Z a s t a v ie   p r e n o sTpin0k P r i p á j a   s a &WReklamaTZvuko ( n á z o v   z a r i a d e n i a )g Z a v r i eef Z r ua ieZPripojenieg ( N á z o v )o t l a
 i d l o _ z r ua e n i a _ k ó d u _ p i nTpin2o P r e s k o
 ie   r e k l a m uo P r e h r á v a   s a   r e k l a m a &Tpin1o t l a
 i d l o _ p r e s k o
 e n i a _ p r i p á j a n i ao t l a
 i d l o _ z r ua e n i a _ u v í t a n i ao Z a d a j t e  a t v o r m i e s t n y   P I N   z o b r a z e n ý   n a   p l o c h e   z a r i a d e n i a   v   b l í z k o s t i .   V l a s t n í k   z a r i a d e n i a   t e n t o   P I N   n á j d e   a j   v   a p l i k á c i i   C h r o m e c a s t .i P r e s k o
 ieo N i e   s ú   v y b r a n é  ~ i a d n e   m é d i áo& K l e p n u t í m   a k t i v u j e t e   r o z b a l e n ý   o v l á d a
o t l a
 i d l o _ k ó d u _ p i n _ p r i p o j e n i aTpin3o t l a
 i d l o _ p r e s k o
 e n i a _ r e k l a m yo t l a
 i d l o _ p o
 ú v a n i a _ k ó d u _ p i no u v í t a c i e _ t l a
 i d l o _ o kk V ý b e r   s t o p yo V y p o
 ue   z v u k o v ý   k ó d   P I No P r e p í n a
   P r e h r ae / p o z a s t a v ie_(stav zariadenia)e N á z o vo& ( n á z o v   z a r i a d e n i a   v o   v i a c e r ý c h   z ó n a c h )o$ P r i p o j t e   s a   k   z a r i a d e n i u   v   b l í z k o s t io t l a
 i d l o _ p r e s k o
 e n i a _ u v í t a n i a[(interpret)oa t í t o k _ p r e s k o
 e n i a _ r e k l a m yVHotovoo t l a
 i d l o _ z r ua e n i a _ p r i p o j e n i ak P r e n áa ae   d oo] A k   s a   c h c e t e   p r i p o j ie ,   v áa   m i k r o f ó n   b u d e   k r á t k o d o b o   p o u~ i t ý   n a   v y h> a d a n i e   z v u k o v é h o   k ó d u   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¯ÀÑÝ"*9NËìñ<KXcr©®Óþ		D	{


ÐZ_ÓþFí
8
u

¸
¿
ú             u              Î


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/sk.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELTZvuko O   3 0   s e k ú n d   s p äeo a la i e   i n f o r m á c i eo  R e k l a m u   m ô~ e t e   p r e s k o
 ie   o   % l d   &XStopa %do P r i p á j a   s a   k   z a r i a d e n i ug P r e h r aeo^ S k o n t r o l u j t e ,  
 i   s ú   v aa e   z a r i a d e n i e   % @   a   z a r i a d e n i e   n a   p r e n o s   p r i p o j e n é   k   r o v n a k e j   s i e t i   W i  F io V y b r ae   s t o p u   s k r y t ý c h   t i t u l k o vo& Z a s t a v ie   p r e h r á v a n i e   m e d i á l n e h o   o b s a h uf} i a d n eROKo P r e n o s   n i e   j e   p r i p o j e n ýo: T á t o   a p l i k á c i a   v y~ a d u j e   n a   p r e n o s   p r í s t u p   k   m i e s t n e j   s i e t iU--:--e a l e jo P r e j se   d o   N a s t a v e n ík P r e n áa ae   d oo V y p n úe   a l e b o   z a p n úe   z v u kn S k r y t é   t i t u l k yVtabletZNastaveniaf N a s p äeo S k o n t r o l u j t e   s i ee   W i  F io P r e n o s   j e   p r i p o j e n ýo P r e p í n a
   p r e h r ae / p o z a s t a v iej P o z a s t a v ieWTitulkyoù T á t o   a p l i k á c i a   v y~ a d u j e   n a   p r i p o j e n i e   s a   k   z a r i a d e n i a m   p r í s t u p   k   v aa e j   s i e t i   W i - F i . 
 
 A k   c h c e t e   s p u s t ie   p r e n o s ,   v y b e r t e   O K ,   k e   a p l i k á c i a   p o~ i a d a   o   p r i p o j e n i e   k   v aa e j   m i e s t n e j   s i e t i .   A p l i k á c i i   t o   m ô~ e t e   t i e~   p o v o l ie   n e s k ô r   v   N a s t a v e n i a c h   s y s t é m u   i O S .j % d   p e r c e n to% N i e   s ú   k   d i s p o z í c i i  ~ i a d n e   z a r i a d e n i a_ Prebieha prenos do zariadenia %@o» T á t o   a p l i k á c i a   v y~ a d u j e   n a   p r i p o j e n i e   s a   k   z a r i a d e n i a m   p r í s t u p   k   v aa e j   s i e t i   W i - F i . 
 
 A k   c h c e t e   s p u s t ie   p r e n o s ,   p r e j d i t e   d o   N a s t a v e n í   a   z a p n i t e   p r e   t ú t o   a p l i k á c i u   P r í s t u p   k   m i e s t n e j   s i e t i .op P r e j d i t e   v   t o m t o   t e l e f ó n e   d o   N a s t a v e n í   a   s k o n t r o l u j t e ,  
 i   j e   p r e   t ú t o   a p l i k á c i u   z a p n u t ý   p r í s t u p   k   m i e s t n e j   s i e t io P r e n o s   s a   p r i p á j ag t e l e f ó no R e l á c i a   p r e n o s u   b o l a   s p u s t e n áo4 S k o n t r o l u j t e ,  
 i   j e   z a p n u t ý   p r í s t u p   k   m i e s t n e j   s i e t if N A} I V Oo R e l á c i a   p r e n o s u   s a   s k o n
 i l ao O   3 0   s e k ú n d   v p r e d  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-di±ôý.=ü;Ë	B	H	S	|		Æ	ã	ê	õ

3
\

ª
²§¼
	
,¥­¼ùdqª             U              Ï


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/sl.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleVV reduXGlasnostf P o v e~ iW(Label)_Vnesite kodo PIN_Predvajanje v dnevni sobiYPodnapisiW(title)Z(Subtitle)oM D o t a k n i t e   s e ,  
 e  ~ e l i t e   p r e d v a j a t i   p r e d s t a v n o s t   p r e k   t e l e v i z o r j a   i n   z v o
 n i k o v_Ustavitev predvajanjaTpin0m P o v e z o v a n j e   &UOglasTZvok](device name)UZaprih P r e k l i
 i_Vzpostavljanje povezaveW(Title)_pin_cancel_buttonTpin2XPodnapisn P r e s k o
 i   o g l a s_Oglas se predvaja ...Tpin1_connecting_skip_button_welcome_cancel_buttono V n e s i t e  a t i r i m e s t n o   k o d o   P I N ,   p r i k a z a n o   n a   z a
 e t n e m   z a s l o n u   n a p r a v e   v   b l i~ i n i .   L a s t n i k   n a p r a v e   l a h k o   k o d o   P I N   n a j d e   t u d i   v   a p l i k a c i j i   C h r o m e c a s t .h P r e s k o
 i_Ni izbrane predstavnostio9 D o t a k n i t e   s e ,  
 e  ~ e l i t e   a k t i v i r a t i   r a za i r j e n   u p r a v l j a l n i k_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_button_Izbira posnetka/podnapisao* P o s l ua a j ,   a l i   j e   b i l a   i z g o v o r j e n a   k o d a   P I No1 P r e k l o p   m e d   p r e d v a j a n j e m   i n   z a
 a s n o   z a u s t a v i t v i j o_(device status)UTitle_(multizone device name)o) V z p o s t a v i t e v   p o v e z a v e   z   n a p r a v o   v   b l i~ i n i_welcome_skip_buttonX(artist)]skip_ad_labelg K o n
 a n o_connecting_cancel_button_Predvajanje v napravioh Z a   v z p o s t a v i t e v   p o v e z a v e   b o   m i k r o f o n   z a
 a s n o   u p o r a b l j e n   z a   p o s l ua a n j e ,   a l i   j e   b i l a   i z g o v o r j e n a   k o d a   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n ©¶¾Ñí÷ÿ
§¿Äßåêøþ)1EJSp¦¾	ã	ô




­
Á
Õ
ñH­¿Åß4JSap£             v              
v


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/sl.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELTZvok_30 sekund nazaji V e
   o   t e mo" O g l a s   l a h k o   p r e s k o
 i t e  
 e z   % l d   . . .[Posnetek %d_!Vzpostavljanje povezave z napravo[PredvajanjeoO N a p r a v a   % @   i n   n a p r a v a   z a   p r e d v a j a n j e   m o r a t a   b i t i   p o v e z a n i   v   i s t o   o m r e~ j e   W i - F i ._Izbira podnapisov_#Ustavitev predvajanja predstavnostiTBrezVV redu_Cast ni povezanoI T a   a p l i k a c i j a   p o t r e b u j e   d o s t o p   d o   l o k a l n e g a   o m r e~ j a ,  
 e  ~ e l i t e   p r e d v a j a t iU--.--VNaprej\V nastavitve_Predvajanje v napravi_Vklop in izklop zvokaYPodnapisio t a b l i
 n i   r a
 u n a l n i kZNastavitveUNazajo P r e v e r i t e   o m r e~ j e   W i - F i_Cast je povezano1 P r e k l o p   m e d   p r e d v a j a n j e m   i n   z a
 a s n o   z a u s t a v i t v i j oo Z a
 a s n a   z a u s t a v i t e vo e  ~ e l i t e   v z p o s t a v i t i   p o v e z a v o   z   n a p r a v a m i ,   t a   a p l i k a c i j a   p o t r e b u j e   d o s t o p   d o   o m r e~ j a   W i - F i . 
 
 e  ~ e l i t e   p r e d v a j a t i ,   i z b e r i t e   » V   r e d u « ,   k o   v a s   a p l i k a c i j a   p o z o v e   k   v z p o s t a v i t v i   p o v e z a v e   z   l o k a l n i m   o m r e~ j e m .   T o   l a h k o   t u d i   o m o g o
 i t e   p o z n e j e   v   n a s t a v i t v a h   s i s t e m a   i O S   z a   t o   a p l i k a c i j o .T%d %_Nobena naprava ni na voljo_Predvajanje v napravi %@oÂ e  ~ e l i t e   v z p o s t a v i t i   p o v e z a v o   z   n a p r a v a m i ,   t a   a p l i k a c i j a   p o t r e b u j e   d o s t o p   d o   o m r e~ j a   W i - F i . 
 
 e  ~ e l i t e   p r e d v a j a t i ,   o d p r i t e   n a s t a v i t v e   i n   v k l o p i t e   » D o s t o p   d o   l o k a l n e g a   o m r e~ j a «   z a   t o   a p l i k a c i j o .om O d p r i t e   n a s t a v i t v e   v   t e m   t e l e f o n u   i n   p r e v e r i t e ,   a l i   j e   d o s t o p   d o   l o k a l n e g a   o m r e~ j a   z a   t o   a p l i k a c i j o   o m o g o
 e n ._Cast se povezujeWtelefono S e j a   p r e d v a j a n j a   s e   j e   z a
 e l ao. D o s t o p   d o   l o k a l n e g a   o m r e~ j a   m o r a   b i t i   o m o g o
 e nf V  } I V Oo S e j a   p r e d v a j a n j a   j e   k o n
 a n a_30 sekund naprej  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-di{Õá²Æìñø
¥¬¹Ñéó		'	-	^	p	Õ	þ27To
öÓæî+Ð             T              ã


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/sr.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleg>B2@48l0G8=0  72C:0f>2568W(Label)k#=5A8B5   P I No@510FCX5  A5  C  4=52=C  A>1Cg"8B;>28W(title)Z(Subtitle)o6>48@=8B5  40  18AB5  ?@510F820;8  <548X5  =0  "  8  72CG=8:5o0CAB028  ?@510F820Z5Tpin0n>257CX5  A5 . . .e3;0AeC48>](device name)g0B2>@8fB:068k>257CX5  A5W(Title)_pin_cancel_buttonTpin2n@5A:>G8  >3;0Ao3;0A  A5  @5?@>4C:CX5 &Tpin1_connecting_skip_button_welcome_cancel_buttono#=5A8B5   4 -F8D@5=8   P I N  :>X8  A5  ?@8:07CX5  =0  ?>G5B=><  5:@0=C  C@5R0X0  C  1;878=8 .  ;0A=8:  C@5R0X0  <>65  40  ?@>=0R5   P I N  8  C  0?;8:0F8X8   C h r o m e c a s t .h@5A:>G8o'8X5  8701@0=0  =8X54=0  <548XA:0  40B>B5:0o1>48@=8B5  40  18AB5  0:B828@0;8  ?@>H8@5=8  :>=B@>;5@_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono71>@  0C48>  A=8<:0o'5:0X  40  A5  873>2>@8   P I No$@5:840G  70  :><0=45  CAB8  8  0C78@0X_(device status)UTitle_(multizone device name)o>2568B5  A0  C@5R0X5<  C  1;878=8_welcome_skip_buttonX(artist)]skip_ad_labelf>B>2>_connecting_cancel_buttonl@510F8B5  =0oY0  18AB5  A5  ?>2570;8 ,  <8:@>D>=  [5  A5  ?@82@5<5=>  :>@8AB8B8  40  18  G5:0>  40  A5  873>2>@8   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¨ÁÎÖí$3;Fµàå
&5BYauzÄÉâú

&
w
Ü
ñ
ö-TÒäêCYbp}±             u              
f


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/sr.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELeC48>o@5<>B0X  C=0704   3 0  A5:C=48m!07=0XB5  28H5o*>65B5  40  ?@5A:>G8B5  >20X  >3;0A  70   % l d   . . .oC48>  A=8<0:   % dn>257CX5  A5  A0eCAB8o@#25@8B5  A5  40  AC   % @  8  C@5R0X  70  ?@510F820Z5  =0  8AB>X   W i F i  <@568 .o7015@8B5  >?F8>=0;=8  B8B;o0CAB028  @5?@>4C:F8XC  <548X0d5<0g>B2@48o8AB5  ?>2570=8  70  ?@510F820Z5o;2>X  0?;8:0F8X8  B@510  ?@8ABC?  ;>:0;=>X  <@568  70  ?@510F820Z5U--:--g!;545[5o48  C  >45H020Z0l@510F8B5  =0o#:YCG8B5  8;8  8A:YCG8B5  72C:d"8B;fB01;5Bj>45H020Z0i@5BE>4=>o@>25@8B5   W i F i  <@56Co>2570=8  AB5  70  ?@510F820Z5o$@5:840G  70  :><0=45  CAB8  8  0C78@0Xh0C78@0Xg"8B;>28o0  18  A5  ?>2570;0  A0  C@5R0X8<0 ,  >2>X  0?;8:0F8X8  B@510  ?@8ABC?   W i F i  <@568 . 
 
0  18AB5  ?@510F820;8 ,  87015@8B5   O K   (>B2@48 )  :040  0?;8:0F8X0  70B@068  40  A5  ?>2565  =0  ;>:0;=C  <@56C .  2>  <>65B5  40  4>72>;8B5  8  :0A=8X5  C   i O S   S e t t i n g s   (>45H020Z0   i O S -0 )  70  >2C  0?;8:0F8XC .S%d%o8X5  4>ABC?0=  =8X540=  C@5R0Xo@510FCX5  A5  =0   % @oÊ0  18  A5  ?>2570;0  A0  C@5R0X8<0 ,  >2>X  0?;8:0F8X8  B@510  ?@8ABC?   W i F i  <@568 . 
 
0  18AB5  ?@510F820;8 ,  848B5  C   S e t t i n g s   (>45H020Z0 )  8  C:YCG8B5   L o c a l   N e t w o r k   A c c e s s   (@8ABC?  ;>:0;=>X  <@568 )  70  >2C  0?;8:0F8XC .og48B5  C  >45H020Z0  =0  >2><  B5;5D>=C  8  C25@8B5  A5  40  X5  ?@8ABC?  ;>:0;=>X  <@568  C:YCG5=  70  >2C  0?;8:0F8XCo>257CX5B5  A5  70  ?@510F820Z5gB5;5D>=o!5A8X0  ?@510F820Z0  X5  70?>G5B0o/#25@8B5  A5  40  X5  C:YCG5=  ?@8ABC?  ;>:0;=>X  <@568e#o!5A8X0  ?@510F820Z0  X5  702@H5=0o@5<>B0X  C=0?@54   3 0  A5:C=48  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do¦Á9VaäT]l©	"	(	7	Z	s	¬	µ	Â	×	ê

N

ª
¹ÇË

-ÄÐßÉ             U              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/sv.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKUVolymVAnslutY(Etikett)[Ange pinkod_Castar till vardagsrummet[UndertexterW(titel)[(Undertext)o; T r y c k   h ä r   o m   d u   v i l l   c a s t a   m e d i a   t i l l   t v : n   e l l e r   h ö g t a l a r n a[Sluta castaTpin0j A n s l u t e r   &VAnnonsTLjud_(enhetens namn)e S t ä n gVAvbrytXAnsluterW(Titel)_pin_cancel_buttonTpin2YUndertexto H o p p a   ö v e r   a n n o n so A n n o n s e n   s p e l a s   u p p   &Tpin1_connecting_skip_button_welcome_cancel_buttono A n g e   d e n   f y r s i f f r i g a   p i n k o d e n   s o m   v i s a s   p å   s t a r t s k ä r m e n   p å   e n h e t e n   s o m   f i n n s   i   n ä r h e t e n .   E n h e t e n s   ä g a r e   h i t t a r   ä v e n   p i n k o d e n   i   C h r o m e c a s t - a p p e n .j H o p p a   ö v e r_Ingen media har valtso4 T r y c k   h ä r   o m   d u   v i l l   a k t i v e r a   d e n   u t ö k a d e   k o n t r o l l e n_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono T i l l g ä n g l i g a   s p å r_Lyssna efter pinkod_Spela upp och pausa^(enhetsstatus)TNamno ( e n h e t e n s   n a m n      f l e r a   z o n e r )o A n s l u t   t i l l   e n   e n h e t   i   n ä r h e t e n_welcome_skip_buttonX(artist)]skip_ad_labelTKlar_connecting_cancel_buttonZCasta tillo[ N ä r   d u   a n s l u t e r   a n v ä n d s   m i k r o f o n e n   t i l l f ä l l i g t   f ö r   a t t   f å n g a   u p p   l j u d s i g n a l e n   m e d   p i n k o d e n .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¢©³¿Ûçïût¡¦¸ÃÊÓÛïôþ#PUn	©	¾	Ö
A
V
[
j
~

·
Í
ã
ò
÷4u¢§ÂÍ             v              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/sv.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELTLjud_Spola tillbaka 30 sekunderg L ä s   m e ro# D u   k a n   h o p p a   ö v e r   a n n o n s e n   o m   % l d   &g S p å r   % d]Ansluter tillYSpela uppoG K o n t r o l l e r a   a t t   % @   o c h   C a s t - e n h e t e n   ä r   a n s l u t n a   t i l l   s a m m a   w i f i - n ä t v e r ko V ä l j   e t t   t e x t n i n g s s p å r_Stoppa medieuppspelningTIngaROKo C a s t a      i n t e   a n s l u t e noA D u   m å s t e   g e   a p p e n   å t k o m s t   t i l l   d e t   l o k a l a   n ä t v e r k e t   f ö r   a t t   c a s t aU--:--e N ä s t ao Ö p p n a   I n s t ä l l n i n g a rZCasta tillj L j u d   a v / p åXTextningZsurfplattam I n s t ä l l n i n g a rj F ö r e g å e n d eo K o n t r o l l e r a   w i f i - n ä t v e r k e to C a s t a      a n s l u t e n_Spela upp och pausaUPausa[Undertexteroô A p p e n   m å s t e   h a   å t k o m s t   t i l l   w i f i - n ä t v e r k e t   f ö r   a t t   k u n n a   a n s l u t a   t i l l   d i n a   e n h e t e r . 
 
 O m   d u   v i l l   c a s t a   v ä l j e r   d u   O K   n ä r   a p p e n   b e r   o m   a t t   a n s l u t a   t i l l   d e t   l o k a l a   n ä t v e r k e t .   D u   k a n   ä v e n   t i l l å t a   d e t t a   s e n a r e   i   i O S - i n s t ä l l n i n g a r n a   f ö r   d e n   h ä r   a p p e n .j % d   p r o c e n to I n g a   t i l l g ä n g l i g a   e n h e t e r^Castar till %@oº A p p e n   m å s t e   h a   å t k o m s t   t i l l   w i f i - n ä t v e r k e t   f ö r   a t t   k u n n a   a n s l u t a   t i l l   d i n a   e n h e t e r . 
 
 O m   d u   v i l l   c a s t a   ö p p n a r   d u   I n s t ä l l n i n g a r   o c h   a k t i v e r a r   Å t k o m s t   t i l l   l o k a l t   n ä t v e r k   f ö r   d e n   h ä r   a p p e n .os Ö p p n a   i n s t ä l l n i n g a r n a   p å   t e l e f o n e n   o c h   k o n t r o l l e r a   a t t   Å t k o m s t   t i l l   l o k a l t   n ä t v e r k   h a r   a k t i v e r a t s   f ö r   d e n   h ä r   a p p e no C a s t a      a n s l u t e rWtelefon_Castsessionen har startato: K o n t r o l l e r a   a t t   Å t k o m s t   t i l l   l o k a l t   n ä t v e r k   h a r   a k t i v e r a t sTLIVE_Castsession har avslutatso S p o l a   f r a m å t   3 0   s e k u n d e r  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-diÞíûÅßäçªÓÞóü		"	7	n		§	­	¹¤¹îý
t]¤ <             U              o


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/sw.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFDQRSTFUVWIXSYZ[\]^_D`abcIdefghiQ`jEklmnUD^SJopqrJsS_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleTSawaUSautiYUnganishaW(Label)XWeka PIN_Inatuma SebuleniWManukuuW(title)Z(Subtitle)_.Gusa ili utume maudhui kwenye TV na Spika zako[Acha kutumaTpin0_Inaunganisha...WTangazo_(jina la kifaa)UFungaVGhairi\InaunganishaW(Title)_pin_cancel_buttonTpin2\Ruka Tangazo_Tangazo linaendelea...Tpin1_connecting_skip_button_welcome_cancel_button_ Weka PIN ya tarakimu 4 inayoonekana kwenye skrini ya kwanza ya kifaa kilicho karibu nawe. Mmiliki wa kifaa anaweza pia kupata PIN katika programu ya Chromecast.TRuka_Hakuna maudhui yaliyochaguliwa_+Gusa ili uwezeshe kidhibiti kilichopanuliwa_pin_connect_buttonTpin3_kitufe_cha_ruka_tangazo_pin_listen_button_welcome_ok_button^Kuchagua Wimbo\Sikiliza PIN_Kitufe cha cheza sitisha geuza_(device status)TJina_(multizone device name)_*Unganisha kwenye kifaa kilicho karibu nawe_welcome_skip_buttonX(artist)_ruka_lebo_ya_tangazoYYamefutwa_ Inaunganisha_kitufe_cha_kughairi[Tuma kwenye_BIli uunganishe, maikrofoni yako itatumiwa kwa muda kusikiliza PIN.   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¤®¶¿ÒÚâí*/AI[ahu}£¼ÁÚò»éþ			1	E	T	a				³	à	ö	ÿ

 
C
O             t              



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/sw.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELUSauti_Rudisha nyuma kwa sekunde 30_Pata maelezo zaidi_,Unaweza kuruka tangazo hili baada ya %ld ...[Wimbo wa %d_Inaunganisha kwenyeUCheza_THakikisha kuwa %@ yako na kifaa kinachotuma maudhui vinatumia mtandao mmoja wa Wi-Fi_Chagua wimbo wenye manukuu_Sitisha kucheza maudhuiUHamnaTSawa_%Kipengele cha kutuma hakijaunganishwa_KProgramu hii inahitaji Idhini ya Kufikia Mtandao wa Karibu ili iweze KutumaU--:--WEndelea_Nenda kwenye Mipangilio[Tuma kwenye_Geuza hali ya kuzima sautiWManukuu^kompyuta kibaoZMipangilio]Iliyotangulia_Kagua mtandao wako wa Wi-Fi_#Kipengele cha kutuma kimeunganishwa_Kitufe cha cheza sitisha geuzaWSitishao I l i   k u u n g a n i s h a   k w e n y e   v i f a a   v y a k o ,   p r o g r a m u   h i i   i n a h i t a j i   i d h i n i   y a   k u f i k i a   m t a n d a o   w a k o   w a   W i - F i . 
 
 I l i   u w e z e   k u t u m a ,   c h a g u a    S a w a    p r o g r a m u   i t a k a p o o m b a   r u h u s a   y a   k u u n g a n i s h a   k w e n y e   m t a n d a o   w a k o   w a   k a r i b u .   U n a w e z a   p i a   k u i r u h u s u   b a a d a y e   k a t i k a   M i p a n g i l i o   y a   i O S   y a   p r o g r a m u   h i i .[Asilimia %d_Hakuna vifaa vinavyopatikana^Tuma kwenye %@oá I l i   k u u n g a n i s h a   k w e n y e   v i f a a   v y a k o ,   p r o g r a m u   h i i   i n a h i t a j i   i d h i n i   y a   k u f i k i a   m t a n d a o   w a k o   w a   W i - F i . 
 
 I l i   u w e z e   k u t u m a ,   n e n d a   k w e n y e   M i p a n g i l i o   y a k o   k i s h a   u w a s h e    I d h i n i   y a   K u f i k i a   M t a n d a o   w a   K a r i b u    k w a   a j i l i   y a   p r o g r a m u   h i i ._Nenda kwenye Mipangilio kwenye simu hii na uhakikishe umewasha kipengele cha Idhini ya Kufikia Mtandao wa Karibu kwa ajili ya programu hii_#Kipengele cha kutuma kinaunganishwaTsimu_Kipindi cha kutuma kimeanza_KHakikisha kwamba umewasha kipengele cha Idhini ya Kufikia Mtandao wa Karibu]MOJA KWA MOJA_Kipindi cha kutuma kimekwisha_Sogeza mbele kwa sekunde 30  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-djÍÙïõLi¶
,8U]lw£Éêò".M\
!
®
Ô
Ù
÷ESs             T              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ta.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlec°¿g²¿¯³µÁc£ÈW(Label)oª¿©Í©È  ³Í³¿ÁÍ³Ío¹¾²ÁÍÁ  ©ÁªÍªÁ¿±¤ÁnªÍÈÍ¿²Í³ÍW(title)Z(Subtitle)o5¿µ¿ÍÁ®Í  ¸ÍªÀÍ°Í³ÁÍÁ®Í  ®À¿¯¾µÈ  ©ÁªÍª  ¤ÊµÁ®Ío©ÁªÍªÁµ¤È  ¨¿±Á¤Í¤Áeª¿©Í 0m£ÈÍ¿±¤Á . . .iµ¿³®Íª°®Íe¿¯Ë](device name)f®ÂÁ®Íi°¤Í¤ÁÆ¯Íj£ÈÍ¿±¤ÁW(Title)_pin_cancel_buttoneª¿©Í 2eµ©®Íoµ¿³®Íª°¤Í¤È¤Í  ¤µ¿°Íoµ¿³®Íª°®Í  ª¿³Ç  ¿±¤Á . . .eª¿©Í 1_connecting_skip_button_welcome_cancel_buttono°Á¿²Á³Í³  ¾¤©¤Í¤¿©Í  ®ÁªÍªÁ¤Í  ¤¿°È¯¿²Í  ¾ÍªÍªÁ®Í   4  ²ÍªÍ  ª¿©Í©È  ³Í³¿µÁ®Í .  ¾¤©¤Í¤¿©Í  °¿®È¯¾³°Í   C h r o m e c a s t  ªÍ¸¿²Á®Í  ª¿©Í©ÈªÍ  ª¾°ÍÍ  ®Á¿¯Á®Í .e¤µ¿°Ío&®À¿¯¾  ¤ÁµÁ®Í  ¤Ç°Í¨Í¤ÆÁÍªÍªµ¿²Í²Èo(Í¸ÍªÇ£ÍÍ  £ÍÍ°Ë²°È  ¯Í¤Í  ¤ÍµÁ®Í_pin_connect_buttoneª¿©Í 3^skip_ad_button_pin_listen_button_welcome_ok_buttono¿°¾Í  ¤Ç°Í¨Í¤ÆÁªÍªÁmª¿©Í©ÈÍ  Â±Áo/¯ÍÁ¤²Í /È¨¿±Á¤Í¤Á¤²ÁÍÁ  È¯Ç  ¨¿²È®¾±Í±Á®Í_(device status)UTitle_(multizone device name)o!°Á¿²Á³Í³  ¾¤©¤Í¤Á©Í  £ÈÍµÁ®Í_welcome_skip_buttonX(artist)]skip_ad_labeli®Á¿¨Í¤¤Á_connecting_cancel_buttono¤±ÍÁ  ©ÁªÍªÁ :oe°Á¿²Á³Í³  ¾¤©¤Í¤Á©Í  £ÈÍ  ª¿©Í©ÈÍ  ÇÍª¤±ÍÁ  Í³Í  ®ÈÍ°ËªË©Í  ¤±Í¾²¿®¾ªÍ  ª¯©ÍªÁ¤Í¤ªÍªÁ®Í .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n ¯¶¾ç19D±Úå ,9Lai}¼ïú		+
^
i
¸ +:Nbª#=¡¯ÂÝþ             v              
Ë


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/ta.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe¿¯Ëo 3 0  µ¿©¾¿³Í  ª¿©ÍÆ²Í²Á®Ík®Ç²Á®Í  ±¿o&µ¿³®Íª°¤Í¤È¤Í  ¤µ¿°ÍÍ  ©Í©Á®Í   % l d   . . .i¿°¾Í   % do£ÈÍªÍªÁ®Í  ¾¤©®Í :mª¿³Ç  Æ¯Í¯Á®ÍofÍ³Í   % @  ®±Í±Á®Í  ©ÁªÍªÁ®Í  ¾¤©®Í  °Ç  µÈªÈ  ¨ÆÍµÊ°ÍÍ¿²Í  £ÈÍªÍªÍ¿°ÁªÍª¤È  ±Á¤¿Æ¯Í¤Á  Ê³Í³µÁ®Ío4µ¿µ°¿ªÍªÁ  ªÍÈÍ¿²Í³Í  ¿°¾ÍÈ¤Í  ¤Ç°Í¨Í¤ÆÁÍÁ®Ío®À¿¯¾  ª¿³Ç  µ¤È  ¨¿±Á¤Í¤Á®Ík¤ÁµÁ®¿²Í²Èc°¿o²Èª°ªÍªÁ  £ÈÍªÍªµ¿²Í²Èo-¨Í¤  ªÍ¸Í  ²Èª°ªÍª    ¨ÆÍµÊ°ÍÍ  £Á²Í  ¤ÇµÈU--:--gÁ¤Í¤Áo®ÈªÍªÁ³ÁÍÁ  Æ²Ío¤±ÍÁ  ©ÁªÍªÁ :o¯Í  ¨¿²ÈÍÁ  ®¾±Í±Á®Íoµ¿µ°¿ªÍªÁ  ªÍÈÍ¿²Í³ÍhÇªÍ²ÆÍj®ÈªÍªÁ³Íi®Á¨Í¤È¯¤ÁoµÈªÈ  £ÈªÍªÈÍ  °¿ª¾°ÁÍ³Ío²Èª°ªÍªÁ  £ÈÍªÍªÍ¤Áo/¯ÍÁ¤²Í /È¨¿±Á¤Í¤Á¤²ÁÍÁ  È¯Ç  ¨¿²È®¾±Í±Á®ÍmÈ¨¿±Á¤Í¤Á®ÍnªÍÈÍ¿²Í³ÍoéÍ³Í  ¾¤©Í³Á©Í  £ÈÍ ,  ¨Í¤  ªÍ¸ÁÍÁ  µÈªÈ  ¨ÆÍµÊ°ÍÍ¿©Í  £Á²Í  ¤ÇµÈ . 
 
²Èª°ªÍª ,  Í³Í    ¨ÆÍµÊ°ÍÍÁ©Í  £ÈÍ  ªÍ¸Í  Ë°Á®ÍªË¤Á   °¿   ©Íª¤È¤Í  ¤Ç°Í¨Í¤ÆÁÍµÁ®Í .  ¨Í¤  ªÍ¸ÁÍ¾©   i O S  ®ÈªÍªÁ³¿²Á®Í  ¤ÈªÍ  ª¿±Á  ©Á®¤¿Í²¾®Í .j % d  ¤µÀ¤®Ío¾¤©Í³Í  ¤ÁµÁ®¿²Í²Èo % @ÍÁ  ©ÁªÍªÁ¿±¤Áo¬Í³Í  ¾¤©Í³Á©Í  £ÈÍ ,  ¨Í¤  ªÍ¸ÁÍÁ  µÈªÈ  ¨ÆÍµÊ°ÍÍ¿©Í  £Á²Í  ¤ÇµÈ . 
 
²Èª°ªÍª ,  ®ÈªÍªÁ³ÁÍÁÍ  Æ©Í±Á  ¨Í¤  ªÍ¸ÁÍ¾©     ¨ÆÍµÊ°ÍÍ  £Á²Í   ©Íª¤È  ©Í  Æ¯Í¯µÁ®Í .of®ÊªÈ²Í  ®ÈªÍªÁ³ÁÍÁÍ  Æ©Í±Á  ¨Í¤  ªÍ¸¿±Í¾©    ¨ÆÍµÊ°ÍÍ  £Á²Í  ¯ÍªÍªÍÁ³Í³¤¾  ©ªÍ  ª¾°ÍÍµÁ®Ío²Èª°ªÍªÁ  £ÈÍªÍªÁ¿±¤Áf®ÊªÈ²Ío©ÁªÍªÁ¤²Í  ®°ÍµÁ  ¤ÊÍ¿¯¤Áo>  ¨ÆÍµÊ°ÍÍ  £Á²Í  ¯ÍªÍªÍÁ³Í³¤È  ±Á¤¿Æ¯Í¤Á  Ê³Í³ÁÍ³Íe¨Ç°²Èo©ÁªÍªÁ¤²Í  ®°ÍµÁ  ®Á¿¨Í¤¤Áo 3 0  µ¿©¾¿³Í  ®Á©ÍÆ²Í²Á®Í  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do¤»
Je4Øïö	-				È	é

M
^
s

Á
ôUp
b
w
¤
Í(÷.;võ 9             U              n


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/th.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitled%j#01@*5"i@
7H-!H-W(Label)hI-   P I No3%1A*LD"1+I-1H@%Hh3##"2"W(title)Z(Subtitle)o(A0@7H-A*L*7H-D"15'5A%0%3B-8i+"8A*LTpin0o3%1@
7H-!H- . . .eB)2e@*5"](device name)c4f"@%4n3%1@
7H-!H-W(Title)_pin_cancel_buttonTpin2iI2!B)2o3%1A*B)2 . . .Tpin1_connecting_skip_button_welcome_cancel_buttonoqI-   P I N   4  +%15H#2+I2-+%1--8#L5H-"9HC%I@5"  @I2--8#L"19   P I N  CA-   C h r o m e c a s t  DI-5I'"dI2!oD!HDI@%7-*7H-D'Io"A0@7H-@4C
I21''8!5H"2"_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono#2"2#A#G5H@%7-g1   P I No*%12#@%H /+"8
1H'#2'_(device status)UTitle_(multizone device name)o@
7H-!H--8#L5H-"9HC%I_welcome_skip_buttonX(artist)]skip_ad_labele@*#G_connecting_cancel_buttonjA*LD"1o;C2#@
7H-!H-  #00C
ID!B#B@G2#
1H'#2'@7H-1   P I N   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n¢·ÊÒã-5@¦«ÐÛæôû%-AFY~´		¢	É

%
*
9
M
a


Ì
Þ
ä
þ7MVdo             u              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/th.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELe@*5"o#-%1   3 0  '425o9I-!9%@4H!@4!o8I2!B)25IDIC-5   % l d   . . .hA#G   % do3%1@
7H-!H-1d@%HoC#'*-'H2   % @  A%0-8#LA*L-8@
7H-!H--"9H@#7-H2"@5"'1o@%7-A#G3##"2"A@*5"l+"8@%H*7H-eD!H!5d%oA*LD!H@
7H-!H-o3A-5II-C
I2#@I26H2@#7-H2"   L A N  @7H-A*LU--:--e1DoD5H2#1IH2jA*LD"1o*%1*202#4@*5"o3##"2"A@*5"hAG@%Gj2#1IH2hH-+I2o#'*-@#7-H2"   W i - F i  -8o@
7H-!H-@7H-A*LA%I'o*%12#@%H /+"8
1H'#2'l+"8
1H'#2'h3##"2"oÏA-5II-@I26@#7-H2"   W i - F i  @7H-@
7H-!H-1-8#L-8 
 
+2I-2#A*L  C+I@%7-   "% "  @!7H-A--@
7H-!H-1@#7-H2"   L A N  -8  80-8
22#@
7H-!H-5I 2"+%1C2#1IH2   i O S  *3+#1A-5IGDIn % d  @-#L@GLoD!H!5-8#L5HC
IDImA*LD"1   % @oA-5II-@I26@#7-H2"   W i - F i  @7H-@
7H-!H-1-8#L-8 
 
+2I-2#A*L  C+ID5H2#1IH2A%0@4   "2#@I26H2@#7-H2"   L A N "  *3+#1A-5IoUD"12#1IH2CB#(1LA%0#'*-'H2@4   "2#@I26@#7-H2"   L A N "  *3+#1A-5IA%I'o3%1@
7H-!H-@7H-A*LhB#(1Lo@#4H!@*
12#A*LA%I'o0#'*-'H2DI@42#@I26@#7-H2"   L A N  D'IA%I'b*o*4I*8@*
12#A*LA%I'o#-DI2+I2   3 0  '425  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-do¹ú09Âù&K´ºÅæû	&	I	Z	o		½	î
!
:
Kì	6Q
~+^o =             U              n


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/tr.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXYZT[\]^_`aQbcdeIfghijkRblEmnopVD`TJqrstJuT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleUTamamj S e s   d ü z e y if B a l a nW(Label)YPIN girino O t u r m a   O d a s1 n a   Y a y1 n l a n1 y o rj A l t y a z1 l a rW(title)Z(Subtitle)o4 T V   v e   H o p a r l ö r l e r i n i z e   m e d y a   y a y1 n l a m a k   i ç i n   d o k u n u nm Y a y1 n1   d u r d u rTpin0o B a l a n1 l1 y o r . . .VReklamSSes](device name)UKapate0 p t a lj B a l a n1 y o rW(Title)o p i n _ i p t a l _ d ü m e s iTpin2g A l t y a z1l R e k l a m1   A t l a_Reklam devam ediyor...Tpin1o b a l a n t1 _ a t l a _ d ü m e s io h o_ _ g e l d i n i z _ i p t a l _ d ü m e s io Y a k1 n d a k i   b i r   c i h a z1 n   a n a   e k r a n1 n d a   g ö r ü n t ü l e n e n   4   b a s a m a k l1   P I N ' i   g i r i n .   C i h a z1 n   s a h i b i ,   P I N ' i   C h r o m e c a s t   u y g u l a m a s1 n d a   d a   b u l a b i l i r .TAtlao M e d y a   s e ç i l m e d io7 G e n i_ l e t i l m i_   d e n e t l e y i c i y i   e t k i n l e_ t i r m e k   i ç i n   d o k u n u no p i n _ b a l a n _ d ü m e s iTpin3o r e k l a m1 _ a t l a _ d ü m e s io p i n _ d i n l e _ d ü m e s io h o_ _ g e l d i n i z _ t a m a m _ d ü m e s il P a r ç a   S e ç i m io P I N   g i r i_ i n i   d i n l eo O y n a t / d u r a k l a t   d ü m e s i_(device status)UTitle_(multizone device name)o Y a k1 n d a k i   c i h a z a   b a l a n1 no h o_ _ g e l d i n i z _ a t l a _ d ü m e s iX(artist)o r e k l a m1 _ a t l a _ e t i k e t iUBittio b a l a n1 y o r _ i p t a l _ d ü m e s io Y a y1 n l a n a c a k   c i h a zo\ B a l a n m a k   i ç i n   P I N   g i r i_ i   d i n l e n e c e k .   B u n u n   i ç i n   m i k r o f o n u n u z   g e ç i c i   o l a r a k   k u l l a n1 l a c a k t1 r .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n´ÁÉÓ!)4º¿àçëùÿ
'LQ`yÄû



0
¡
È
Í
øTmÃÕÛõ*_hÌó             v              
®


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/tr.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELSSes_30 saniye geri git_Daha fazla bilgio/ R e k l a m1   % l d   s a n i y e   i ç i n d e   a t l a y a b i l e c e k s i n i z . . .i % d .   P a r ç ao B a l a n1 l a c a k   c i h a z :UOynatoE % @   v e   y a y1 n   c i h a z1 n1 z1 n   a y n1   k a b l o s u z   a a   b a l1   o l d u u n d a n   e m i n   o l u n .o A l t y a z1   k a n a l1   s e ço M e d y a   o y n a t m a y1   d u r d u rSYokUTamamo C a s t   b a l a n m a d1o: B u   u y g u l a m a ,   Y a y1 n l a m a k   i ç i n   Y e r e l   A   E r i_ i m i   g e r e k t i r i y o rU--:--WSonraki]Ayarlar'a gito Y a y1 n l a n a c a k   c i h a zo S e s i   k a p a t m a   d u r u m u n u   d e i_ t i rj A l t y a z1 l a rVtabletWAyarlarf Ö n c e k io K a b l o s u z   a1 n1 z1   k o n t r o l   e d i nm C a s t   b a l a n d1o O y n a t / d u r a k l a t   d ü m e s iXDuraklatoè B u   u y g u l a m a n1 n ,   c i h a z l a r1 n1 z a   b a l a n m a k   i ç i n   k a b l o s u z   a1 n1 z a   e r i_ m e s i   g e r e k i y o r . 
 
 Y a y1 n l a m a k   i ç i n ,   u y g u l a m a   y e r e l   a1 n1 z a   b a l a n m a k   i s t e d i i n d e   " T a m a m "1   s e ç i n .   B u   u y g u l a m a   i ç i n   b u   i z n i   d a h a   s o n r a   i O S   A y a r l a r1 ' n d a   d a   v e r e b i l i r s i n i z .h Y ü z d e   % do K u l l a n1 l a b i l i r   c i h a z   y o ko % @   c i h a z1 n a   y a y1 n l a n1 y o ro¡ B u   u y g u l a m a n1 n ,   c i h a z l a r1 n1 z a   b a l a n m a k   i ç i n   k a b l o s u z   a1 n1 z a   e r i_ m e s i   g e r e k i y o r . 
 
 Y a y1 n l a m a k   i ç i n   A y a r l a r1 n1 z a   g i d i p   b u   u y g u l a m a   i ç i n    Y e r e l   A   E r i_ i m i  n i   a ç1 n .og B u   t e l e f o n d a   A y a r l a r ' a   g i d i p   Y e r e l   A   E r i_ i m i ' n i n   b u   u y g u l a m a   i ç i n   a ç1 l m1_   o l u p   o l m a d11 n1   k o n t r o l   e d i no C a s t   b a l a n1 y o rWtelefono Y a y1 n l a m a   o t u r u m u   b a_ l a t1 l d1o- Y e r e l   A   E r i_ i m i n i n   a ç1 k   o l d u u n d a n   e m i n   o l u nUCANLIo Y a y1 n l a m a   o t u r u m u   b i t i r i l d i_30 saniye ileri git  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dh}ñ-3Àç A¸¾ÆÔû	:	O	V	^	k	¨	Ã	ò	ûÎßE
[|¿"[             T              q


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/uk.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKhCG=VABLjV4:;NG8B8W(Label)o254VBL   P I N -:>4o"@0=A;OFVO  C  2VB0;L=Vh!C1B8B@8W(title)Z(Subtitle)o=0B8A=VBL ,  I>1  B@0=A;N20B8  <54V02<VAB  =0  B5;52V7>@  V  48=0<V:8o@8?8=8B8  B@0=A;OFVNi P I N -:>4   0lV4:;NG5==O &g 5:;0<0jC4V>D09;8](device name)g0:@8B8i!:0AC20B8kV4:;NG5==OW(Title)o#:=>?:0  A:0AC20B8  >B@8<0==O   P I N -:>4Ci P I N -:>4   2o@>?CAB8B8  @5:;0<Co"@820T  @5:;0<0 &i P I N -:>4   1o%:=>?:0  ?@>?CAB8B8  ?V4  G0A  ?V4:;NG5==Oo#:=>?:0  A:0AC20B8  ?V4  G0A  ?@82VB0==Oo254VBL   4 -7=0G=89   P I N -:>4 ,  O:89  7 'O28BLAO  =0  3>;>2=><C  5:@0=V  ?@8AB@>N  ?>@CG .  ;0A=8:  ?@8AB@>N  <>65  7=09B8  F59   P I N -:>4  C  4>40B:C   C h r o m e c a s t .j@>?CAB8B8o5  281@0=>  <54V02<VABo.0B8A=VBL ,  I>1  0:B82C20B8  @>7H8@5=89  :>=B@>;5@o):=>?:0  ?V4:;NG5==O  4;O  >B@8<0==O   P I N -:>4Ci P I N -:>4   3o:=>?:0  ?@>?CAB8B8  @5:;0<Co:=>?:0  >B@8<0B8   P I N -:>4o:=>?:0   O K  ?V4  G0A  ?@82VB0==Oo81V@  AC1B8B@V2oB@8<0B8   P I N -:>4o"5@5<8:0G  2V4B2>@5==O /?@87C?8=5==O_(device status)UTitle_(multizone device name)oV4:;NGVBL  ?@8AB@V9  ?>@CGo$:=>?:0  ?@>?CAB8B8  ?V4  G0A  ?@82VB0==OX(artist)o<VB:0  ?@>?CAB8B8  @5:;0<Cf>B>2>o$:=>?:0  A:0AC20B8  ?V4  G0A  ?V4:;NG5==On"@0=A;N20B8  =0oIV4  G0A  ?V4:;NG5==O  B8<G0A>2>  22V<:=5BLAO  <V:@>D>= ,  I>1  >B@8<0B8   P I N -:>4 .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n­ÂÊë)1<¹ä÷4BQd{Ìß		'	:		Ð
ë -áô)Z¶Ù
 
2
8
R

Ò
Ûf             u              


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/uk.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEF?GHIJKLMNOP9QRS_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELjC4V>D09;8o5@5<>B0B8  =0704  =0   3 0  A5:C=4j>:;04=VH5o# 5:;0<C  <>6=0  ?@>?CAB8B8  G5@57   % l d &m><?>78FVO   % doV4:;NG5==O  4>  ?@8AB@>N :jV4B2>@8B8oP5@5:>=09B5AO ,  I>   % @  V  ?@8AB@V9  4;O  B@0=A;OFVW  ?V4:;NG5=>  4>  >4=VTW  <5@56V   W i - F io81@0B8  AC1B8B@8o C?8=8B8  2V4B2>@5==O  <54V0D09;V2e5<0TROKo G o o g l e   C a s t  =5  ?V4:;NG5=>oJ)>1  B@0=A;N20B8  :>=B5=B ,  FL><C  4>40B:C  ?>B@V15=  4>ABC?  4>  ;>:0;L=>W  <5@56VU--:--d0;Vi0@0<5B@8n"@0=A;N20B8  =0o#2V<:=CB8  01>  28<:=CB8  72C:h!C1B8B@8g?;0=H5Bl0;0HBC20==Oe0704o%5@52V@B5  ?V4:;NG5==O  4>  <5@56V   W i - F io G o o g l e   C a s t  ?V4:;NG5=>o"5@5<8:0G  2V4B2>@5==O /?@87C?8=5==Ok@87C?8=8B8oö)>1  ?V4:;NG8B8AO  4>  20H8E  ?@8AB@>W2 ,  FL><C  4>40B:C  ?>B@V15=  4>ABC?  4>  <5@56V   W i - F i . 
 
)>1  B@0=A;N20B8  :>=B5=B ,  =0B8A=VBL   " O K " ,  :>;8  2  4>40B:C  7 'O2;OTBLAO  70?8B  =0  ?V4:;NG5==O  4>  ;>:0;L=>W  <5@56V .  8  B0:>6  <>65B5  =040B8  F59  4>72V;  C  ?0@0<5B@0E   i O S .S%d%o5<0T  4>ABC?=8E  ?@8AB@>W2o"@0=A;OFVO  =0  ?@8AB@V9   " % @ "o½)>1  ?V4:;NG8B8AO  4>  20H8E  ?@8AB@>W2 ,  FL><C  4>40B:C  ?>B@V15=  4>ABC?  4>  <5@56V   W i - F i . 
 
)>1  B@0=A;N20B8  :>=B5=B ,  2V4:@89B5  ?0@0<5B@8  9  C2V<:=VBL   ">ABC?  4>  ;>:0;L=>W  <5@56V "  4;O  FL>3>  4>40B:0 .o^)>1  ?5@52V@8B8 ,  G8  <0T  F59  4>40B>:  4>ABC?  4>  ;>:0;L=>W  <5@56V ,  2V4:@89B5  =0;0HBC20==O  B5;5D>=0oV4:;NG5==O   G o o g l e   C a s tgB5;5D>=o!50=A  B@0=A;OFVW  ?>G02AOo65@5:>=09B5AO ,  I>  4>ABC?  4>  ;>:0;L=>W  <5@56V  22V<:=5=>fo!50=A  B@0=A;OFVW  70:V=G82AOo5@5<>B0B8  2?5@54  =0   3 0  A5:C=4  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dy¶Ë/bw=Ã	Z	`	i	|		Ò	ã	ò


c

Ù
ðßã

QÎ¾Í o|µ             T              ô


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/vi.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitleROKh Â m   l°ã n gg K¿ t   nÑ iW(Label)k N h­ p   m ã   P I No a n g   t r u yÁ n   tÛ i   p h ò n g   k h á c hf P hå  ÁW(title)Z(Subtitle)o4 C h¡ m  Ã   t r u yÁ n   nÙ i   d u n g   a   p h°¡ n g   t iÇ n   tÛ i   T V   v à   l o ak Dë n g   t r u yÁ nTpin0m a n g   k¿ t   nÑ i &i Q u£ n g   c á oh Â m   t h a n h](device name)d ó n gc Hç yl a n g   k¿ t   nÑ iW(Title)_pin_cancel_buttonTpin2o BÏ   q u a   q u£ n g   c á oo a n g   p h á t   q u£ n g   c á o . . .Tpin1_connecting_skip_button_welcome_cancel_buttono N h­ p   m ã   P I N   gÓ m   4   c hï   sÑ   h iÃ n   t hË   t r ê n   m à n   h ì n h   c h í n h   cç a   t h i¿ t   bË  ß   g§ n .   C hç   sß   hï u   t h i¿ t   bË   ci n g   c ó   t hÃ   t ì m   m ã   P I N   t r o n g  é n g   då n g   C h r o m e c a s t .f BÏ   q u ao% C h° a   c hÍ n   nÙ i   d u n g   a   p h°¡ n g   t iÇ n   n à oo' N h¥ n  Ã   k í c h   h o¡ t   bÙ   iÁ u   k h iÃ n   mß   rÙ n g_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttono Lñ a   c hÍ n   b£ n   â m   t h a n h / p hå  Ák N g h e   m ã   P I No N ú t   p h á t / t¡ m   dë n g_(device status)UTitle_(multizone device name)o K¿ t   nÑ i   vÛ i   t h i¿ t   bË  ß   g§ n_welcome_skip_buttonX(artist)]skip_ad_labelTXong_connecting_cancel_buttonj T r u yÁ n   tÛ io?Ã   k¿ t   nÑ i ,   m i c r ô   cç a   b¡ n   s½  °ã c   d ù n g   t¡ m   t hÝ i  Ã   n g h e   m ã   P I N .   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n­¼ÄÛ!)4¶»Öéú19MRu¤©ÂÚ	û

U
¦
»
À
Ï
ã
÷2In ×íö	$9             u              º


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/vi.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELh Â m   t h a n ho T u a   l¡ i   3 0   g i â ym T ì m   h iÃ u   t h ê mo' B¡ n   c ó   t hÃ   bÏ   q u a   q u£ n g   c á o   s a u   % l d   . . .i B£ n   sÑ   % do a n g   k ê t   n ô i   v¡ id P h á to9£ m   b£ o   % @   v à   t h i¿ t   bË   t r u yÁ n   c ù n g   sí   då n g   mÙ t   m¡ n g   W i - F io C hÍ n   mÙ t   b£ n   p hå  Áo% Dë n g   p h á t   l¡ i   nÙ i   d u n g   a   p h°¡ n g   t iÇ ne K h ô n gROKo N ú t   T r u yÁ n   c h° a   k¿ t   nÑ io8è n g   då n g   n à y   c§ n   c ó   Q u yÁ n   t r u y   c­ p   m¡ n g   cå c   bÙ  Ã   t r u yÁ nU--:--i T i¿ p   t h e oo C h u yÃ n  ¿ n   p h§ n   C à i  · tj T r u yÁ n   tÛ io B­ t   t i¿ n g / t¯ t   t i¿ n go P hå  Á   c h i   t i¿ tm m á y   t í n h   b£ n gg C à i  · te T r°Û co K iÃ m   t r a   m¡ n g   W i - F i   cç a   b¡ no N ú t   T r u yÁ n   ã   k¿ t   nÑ io N ú t   p h á t / t¡ m   dë n gh T¡ m   dë n gf P hå  ÁoüÃ   k¿ t   nÑ i   vÛ i   c á c   t h i¿ t   bË   cç a   b¡ n ,  é n g   då n g   n à y   c§ n   c ó   q u yÁ n   t r u y   c­ p   v à o   m¡ n g   W i - F i . 
 
Ã   t r u yÁ n ,   h ã y   c hÍ n    O K    k h i  é n g   då n g   n à y   m uÑ n   k¿ t   nÑ i   vÛ i   m¡ n g   cå c   bÙ   cç a   b¡ n .   B¡ n   ci n g   c ó   t hÃ   c¥ p   q u yÁ n   n à y   v à o   l ú c   k h á c   t r o n g   p h§ n   C à i  · t   i O S   c h o  é n g   då n g   n à y .l % d   p h§ n   t r mo K h ô n g   c ó   t h i¿ t   bË   n à oo a n g   t r u yÁ n   tÛ i   % @o¶Ã   k¿ t   nÑ i   vÛ i   c á c   t h i¿ t   bË   cç a   b¡ n ,  é n g   då n g   n à y   c§ n   c ó   q u yÁ n   t r u y   c­ p   v à o   m¡ n g   W i - F i . 
 
Ã   t r u yÁ n ,   h ã y   c h u yÃ n  ¿ n   p h§ n   C à i  · t   rÓ i   b­ t    Q u yÁ n   t r u y   c­ p   m¡ n g   cå c   bÙ    c h o  é n g   då n g   n à y .o~ C h u yÃ n  ¿ n   p h§ n   C à i  · t   t r ê n   iÇ n   t h o¡ i   n à y   v à   k iÃ m   t r a  Ã  £ m   b£ o   r± n g   b¡ n   ã   b­ t   Q u yÁ n   t r u y   c­ p   m¡ n g   cå c   bÙ   c h o  é n g   då n g   n à yo N ú t   T r u yÁ n   a n g   k¿ t   nÑ ij iÇ n   t h o¡ io P h i ê n   t r u yÁ n   ã   b¯ t  § uo-£ m   b£ o   b¡ n   ã   b­ t   Q u yÁ n   t r u y   c­ p   m¡ n g   cå c   bÙi T Rð C   T I¾ Po P h i ê n   t r u yÁ n   ã   k¿ t   t h ú cn T u a   i   3 0   g i â y  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-du±>G¼å2=@qäêý	.	C	l		¨	·	Â	û
(
M
^
kf¬ÓBAr¸([             U              x


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/zh.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlebxn[bóÏbÞc¥W(Label)hQe   P I N  xgkcW(be>R0[¢Sb[W^UW(title)Z(Subtitle)o{æSsSï\ZOSQ[¹be>R0`¨vu5ÆTóTÍ¾YdP\kbbe>Tpin0ekcW(Þc¥ &b^TJbó](device name)bQsíbSÖmdkcW(Þc¥W(Title)_pin_cancel_buttonTpin2dóÇ^TJgkcW(d­e>^TJ &Tpin1_connecting_skip_button_welcome_cancel_buttono?÷QeDÑ¾YvN;\O^UN
f>y:v   4  OMep   P I N  x0vø^¾Yvb@g	N_SïW(   C h r o m e c a s t  ^u(N-b~R0å   P I N  x0bóÇig*	béNûOUZOSQ[¹mp¹c	SsSïT/u(\U_ Tvc§R6Vh_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonh	béóhb[W^UhhT,SÖ   P I N  xm d­e>  / fP\ Rcbc	®_(device status)UTitle_(multizone device name)hÞc¥R0DÑv¾Y_welcome_skip_buttonX(artist)]skip_ad_labelb[b_connecting_cancel_buttoncbe>R0oN:N^úzËÞc¥ÿ`¨v¦QKÎ\feöu(NT,SÖ   P I N  x0   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£¨°ÁÐÕÝè#.38FKPYauz°ÈINa|¥¹ÍÞï	
		"	<	M	c	l	z			¡             u              	Ø


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/zh.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFG?HIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELbógT    3 0  yÒdNãæ`Åo`¨SïW(   % l d  yÒTóÇ^TJ &fóh   % dekcW(Þc¥R0bd­e>o÷xnOÝ`¨v % @Tb@u(be>¾YOu(vf/TN N*   W i - F i  Q~Üe	bé[W^UhhP\kbd­e>ZOSQ[¹aeàcwåSNog*Þc¥R0   C h r o m e c a s tokd^u( ·_[ùg,W0Q~Üv¿îgCPbMýbe>Q[¹U--:--cNN N*flR0 ¾n cbe>R0i_ T/ /QsíYór¶`b[W^Ud^sgu5b¾ncN
N N*f[W^Uh   % dn÷hÀgå`¨v   W i - F i  Q~Üo]òÞc¥R0   C h r o m e c a s tm d­e>  / fP\ Rcbc	®bfP\oZkd^u( g	gC¿î`¨v   W i - F i  Q~ÜÿbMýÞc¥R0`¨v¾Y0 
 
Y ÛLbe>ÿ÷W(kd^u(÷lBÞc¥R0`¨vg,W0Q~Üeö	bé xn[ 0`¨N_SïNeåTNÎ   i O S  ¾nN-Tkd^u(cNÙygCP0fv~RNK   % dgl¡g	Sïu(v¾YgkcW(be>R0 % @oAkd^u( g	gC¿î`¨v   W i - F i  Q~ÜÿbMýÞc¥R0`¨v¾Y0 
 
Y ÛLbe>ÿ÷lR0 ¾n ^vN:kd^u(_ T/ g,W0Q~Ü¿îgCP 0o)÷RM_ÙèbKg:N
v ¾n èRhÀgåvø^¾nÿxnOÝ]òN:å^u(_ T/ g,W0Q~Ü¿îgCP okcW(Þc¥R0   C h r o m e c a s tbbKg:gbe>OÝ]ò_ YËo÷xnOÝ]ò_ T/ g,W0Q~Ü¿îgCP bvôd­gbe>OÝ]ò~Óg_g_ëÛ   3 0  yÒ  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dix¢¯º¿þ	$Ev|ª¯¸½ÄÑî*/æó				ë


"
E
J
Y             U              
h


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/zh_CN.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlebxn[bóÏbÞc¥W(Label)hQe   P I N  xgkcW(be>R0[¢Sb[W^UW(title)Z(Subtitle)o{æSsSï\ZOSQ[¹be>R0`¨vu5ÆTóTÍ¾YdP\kbbe>Tpin0ekcW(Þc¥ &b^TJbó](device name)bQsíbSÖmdkcW(Þc¥W(Title)_pin_cancel_buttonTpin2dóÇ^TJgkcW(d­e>^TJ &Tpin1_connecting_skip_button_welcome_cancel_buttono?÷QeDÑ¾YvN;\O^UN
f>y:v   4  OMep   P I N  x0vø^¾Yvb@g	N_SïW(   C h r o m e c a s t  ^u(N-b~R0å   P I N  x0bóÇig*	béNûOUZOSQ[¹mp¹c	SsSïT/u(\U_ Tvc§R6Vh_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttonh	béóhb[W^UhhT,SÖ   P I N  xm d­e>  / fP\ Rcbc	®_(device status)UTitle_(multizone device name)hÞc¥R0DÑv¾Y_welcome_skip_buttonX(artist)]skip_ad_labelb[b_connecting_cancel_buttoncbe>R0oN:N^úzËÞc¥ÿ`¨v¦QKÎ\feöu(NT,SÖ   P I N  x0   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£¨°ÁÐÕÝè#.38FKPYauz°ÈINa|¥¹ÍÞï	
		"	<	M	c	l	z			¡             u              	Ø


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/zh_CN.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFG?HIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELbógT    3 0  yÒdNãæ`Åo`¨SïW(   % l d  yÒTóÇ^TJ &fóh   % dekcW(Þc¥R0bd­e>o÷xnOÝ`¨v % @Tb@u(be>¾YOu(vf/TN N*   W i - F i  Q~Üe	bé[W^UhhP\kbd­e>ZOSQ[¹aeàcwåSNog*Þc¥R0   C h r o m e c a s tokd^u( ·_[ùg,W0Q~Üv¿îgCPbMýbe>Q[¹U--:--cNN N*flR0 ¾n cbe>R0i_ T/ /QsíYór¶`b[W^Ud^sgu5b¾ncN
N N*f[W^Uh   % dn÷hÀgå`¨v   W i - F i  Q~Üo]òÞc¥R0   C h r o m e c a s tm d­e>  / fP\ Rcbc	®bfP\oZkd^u( g	gC¿î`¨v   W i - F i  Q~ÜÿbMýÞc¥R0`¨v¾Y0 
 
Y ÛLbe>ÿ÷W(kd^u(÷lBÞc¥R0`¨vg,W0Q~Üeö	bé xn[ 0`¨N_SïNeåTNÎ   i O S  ¾nN-Tkd^u(cNÙygCP0fv~RNK   % dgl¡g	Sïu(v¾YgkcW(be>R0 % @oAkd^u( g	gC¿î`¨v   W i - F i  Q~ÜÿbMýÞc¥R0`¨v¾Y0 
 
Y ÛLbe>ÿ÷lR0 ¾n ^vN:kd^u(_ T/ g,W0Q~Ü¿îgCP 0o)÷RM_ÙèbKg:N
v ¾n èRhÀgåvø^¾nÿxnOÝ]òN:å^u(_ T/ g,W0Q~Ü¿îgCP okcW(Þc¥R0   C h r o m e c a s tbbKg:gbe>OÝ]ò_ YËo÷xnOÝ]ò_ T/ g,W0Q~Ü¿îgCP bvôd­gbe>OÝ]ò~Óg_g_ëÛ   3 0  yÒ  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dix¢¯º¿þ	$Ev|ª¯¸½ÄÑî*/æó				ë


"
E
J
Y             U              
h


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/zh_TW.lproj/CastComponents.strings
================================================
bplist00ßB	

 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPFQRSTUFVWXIYTZ[\]^_`QabcdIefghijRakElmnoVD_TJpqrsJtT_D99-Fv-lop.normalTitle_uAB-Px-adl.accessibilityLabel_e3Z-dE-wqG.normalTitle_Lhe-oV-TnQ.text_SvP-S4-dSs.text_2hN-dO-o1h.text_UkJ-Ur-vO7.title_cEG-rN-xi9.text_OeB-9X-Zvu.text_PrO-Tb-lTh.text_TWp-Ch-vE1.title_Jv2-ce-wPj.accessibilityLabel_JaP-sD-eei.text_Cpc-2P-jqZ.text_bBe-4s-Ldf.text_G1S-qS-RQq.title_qc5-tm-DuI.text_xVY-4i-km9.accessibilityLabel_Xr7-VL-77w.normalTitle_mzB-yv-vHK.text_pOe-QM-L6Y.text_U4U-Lq-GZf.text_wUg-V1-Wt4.accessibilityLabel_smG-oC-Any.accessibilityLabel_njH-9L-tXP.text_7AN-p4-akj.normalTitle_wUg-V1-Wt4.normalTitle_A6c-qN-vVG.text_oqh-4w-eyl.accessibilityLabel_Lfv-7G-1wM.accessibilityLabel_LDd-o2-liO.accessibilityLabel_opW-7R-6Hf.text_Lfv-7G-1wM.normalTitle_QTz-rB-2qi.text_mzQ-08-M2L.title_U4U-Lq-GZf.accessibilityHint_e3Z-dE-wqG.accessibilityLabel_ONP-t3-UEC.accessibilityLabel_7AN-p4-akj.accessibilityLabel_C87-rF-Kff.title_CEL-po-0tH.accessibilityLabel_7yl-xN-PoS.accessibilityLabel_Ro9-uN-p9o.title_CEL-po-0tH.normalTitle_VHI-cO-lf5.accessibilityLabel_Yn9-Hv-drf.text_816-um-uBQ.text_njH-9L-tXP.accessibilityHint_o53-8g-FTH.title_7yl-xN-PoS.normalTitle_zpT-2R-GiI.text_gcC-lG-r5q.text_4T1-G0-EXr.accessibilityLabel_f83-Qp-cVj.text_qkY-7z-dL0.text_XY7-4w-Hj6.accessibilityLabel_4T1-G0-EXr.normalTitle_HtV-wH-rzn.title_7vq-Z2-zTk.text_pOe-QM-L6Y.accessibilityLabel_mRB-ag-MIv.title_Xr7-VL-77w.accessibilityLabel_lH7-Hc-2WN.title_6as-SX-sqU.text_jLS-MZ-0Ij.text_LDd-o2-liO.normalTitlebxº[bóÏb#}ÚW(Label)h8Qe   P I N  x¼ebe>R0[¢^ób[W^UW(title)Z(Subtitle)oøSsSï\ZÔbe>R0ûTcÚrVhdP\kbbe>Tpin0f#}ÚN- . . .b^ãTJbó
](device name)bÜbSÖmc#}ÚN-W(Title)_pin_cancel_buttonTpin2dueN^ãTJikcW(d­e>^ãTJ . . .Tpin1_connecting_skip_button_welcome_cancel_buttono?Ë8QeDÑÝnN;ukbN
oy:v   4  OMex   P I N  x¼0ÝndÁg	N_SïNåW(   C h r o m e c a s t  aÉu(z_N-b~R0P   P I N  x¼0bueNgg*xSÖNûOUZÔløSsSïU_u(\Uvc§R6Vh_pin_connect_buttonTpin3^skip_ad_button_pin_listen_button_welcome_ok_buttondfòvîxdÇh}SÖ   P I N  x¼gd­e> /f«P\RcÛ_(device status)UTitle_(multizone device name)h#}ÚóDÑvÝn_welcome_skip_buttonX(artist)]skip_ad_labelb[b_connecting_cancel_buttoncbe>óoY#}Úÿ_Åf«fBOu(¥QK¨O}SÖ   P I N  x¼0   ¨ È á ó*<N`s¥·ÉÜî'9K]}¯Èáó3Se~£Ââ"5Uu¡ÁÓå0BTt¸Ñäö)I\n£¨°ÁÌÑÙä"',:?DKSglu¦¾?DSl©½Æ×æøþ		)	?	H	V	[	v	}             u              	°


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/GoogleCastUIResources.bundle/zh_TW.lproj/UILocalizable.strings
================================================
bplist00ß+	

 !"#$%&'()*+,-./0123456789:;<=>?@AB0CDEFGHIJKLMNOPQ9RST_AUDIO_TRACKS_TITLE_3MINI_CONTROLLER_REWIND30_BUTTON_ACCESSIBILITY_LABEL_CAST_LEARN_MORE]SKIP_AD_LABEL_DEFAULT_AUDIO_TRACK_NAME_CAST_DIALOG_CONNECTING_TITLE_/PLAYPAUSE_BUTTON_PLAY_STATE_ACCESSIBILITY_LABEL_WIFI_ERROR_DESCRIPTION_9MINI_CONTROLLER_CLOSEDCAPTIONS_BUTTON_ACCESSIBILITY_LABEL_/MINI_CONTROLLER_STOP_BUTTON_ACCESSIBILITY_LABEL_NO_TEXT_TRACK_ITEMWCAST_OK_-CAST_BUTTON_NOT_CONNECTED_ACCESSIBILITY_LABEL_$CAST_NETWORK_PERMISSION_DENIED_TITLE_NO_TIME_DISPLAY_/MINI_CONTROLLER_NEXT_BUTTON_ACCESSIBILITY_LABEL_CAST_ENABLE_IN_SETTINGS_CAST_DIALOG_TITLE_5MINI_CONTROLLER_MUTETOGGLE_BUTTON_ACCESSIBILITY_LABEL_TRACK_NAME_CLOSED_CAPTIONS_TABLET_LOWERCASEXSETTINGS_3MINI_CONTROLLER_PREVIOUS_BUTTON_ACCESSIBILITY_LABEL_DEFAULT_TEXT_TRACK_NAME_WIFI_ERROR_TITLE_)CAST_BUTTON_CONNECTED_ACCESSIBILITY_LABEL_4MINI_CONTROLLER_PLAYPAUSE_BUTTON_ACCESSIBILITY_LABEL_0PLAYPAUSE_BUTTON_PAUSE_STATE_ACCESSIBILITY_LABEL_TEXT_TRACKS_TITLE_ CAST_NETWORK_PERMISSION_SUBTITLE_<CAST_DIALOG_VOLUME_SLIDER_PERCENT_FORMAT_ACCESSIBILITY_LABEL_NO_DEVICES_AVAILABLE_EXPANDED_CONTROLS_CASTING_TO_'CAST_NETWORK_PERMISSION_DENIED_SUBTITLE_1LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_DESCRIPTION_*CAST_BUTTON_CONNECTING_ACCESSIBILITY_LABEL_PHONE_LOWERCASE_/CAST_STATE_CONNECTED_ACCESSIBILITY_NOTIFICATION_+LOCAL_NETWORK_ACCESS_PERMISSION_ERROR_TITLE_CAST_NETWORK_PERMISSION_TITLE_CAST_LIVE_INDICATOR_LIVE_TEXT_2CAST_STATE_DISCONNECTED_ACCESSIBILITY_NOTIFICATION_4MINI_CONTROLLER_FORWARD30_BUTTON_ACCESSIBILITY_LABELbó
gPI   3 0  yÒdw­ãs`ÅoO`SïNåW(   % l d  yÒ_ueN^ãTJ . . .efòvî   % dekcW(#}Úóbd­e>oËxº % @Tbe>Ýn]ò#N
TN P   W i - F i  }²ïjxSÖ±Ï_R©[W^UÌfP\kbd­e>ZÔaq!bxº[koy:pºg*#}Úvbe>c	oPaÉu(z_ S@Wß}²ï[XSÖk
bMýbe>Qg[¹U--:--cNN dRM_-[cbe>ófRcÛ\órÀaKg±Ï_R©[W^Ud^sgûfb-[cN
N kj¢gå   W i - F i  }²ïkoy:pº]ò#}Úvbe>c	gd­e> /f«P\RcÛbf«P\b[W^UoaY#}ÚóO`vÝnÿPaÉu(z__Å[XSÖO`v   W i - F i  }²ï0 
 
Y2Lbe>ÿËW(aÉu(z_lB#}ÚóO`vS@Wß}²ïfBxSÖ   [xº[ ]0O`N_SïNåeå_QN   i O S  v0-[0
aÉu(z_QA1k
P0fv~RNK   % dflg	Sïu(ÝnikcW(be>ó0 % @0
oWY#}ÚóO`vÝnÿPaÉu(z__Å[XSÖO`v   W i - F i  }²ï0 
 
Y2Lbe>ÿËRM_0-[0
aÉu(z_ÿN&pºPaÉu(z_U_   [ L o c a l   N e t w o r k   A c c e s s ]0oËRM_bKj_v0-[0
bÿxºPaÉu(z_]òU_u(S@Wß}²ï[XSÖk
koy:pº#}ÚN-vbe>c	bbKj_ibe>]åO\kµ]òYËlxº]òU_u(S@Wß}²ï[XSÖk
dSsfBN2mAibe>]åO\kµ]ò}Pg_g_ëI   3 0  yÒ  a v ¬ ¾ Ì ç8Q¿ÔÜ3Ew¥Ýú
Lfy¥Ü#F»åFX¸Øø-dix¨³¾Ãø
"9fls|¨­´ËâñöûÀÍÚí		ß	ö	û

'
0
C             U              
R


================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKAdBreakClipInfo.h
================================================
// Copyright 2013 Google Inc.

#import <Foundation/Foundation.h>

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaRequestItem.h>
#import <GoogleCast/GCKVastAdsRequest.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * The value for the @ref whenSkippable field if an ad is not skippable.
 *
 * @since 4.3
 */
GCK_EXTERN const int kAdBreakClipNotSkippable;

// This is left here for backwards compatibility reasons.
GCK_EXPORT
GCK_DEPRECATED("Deprecated. Use GCKVASTAdsRequest instead.")
@interface GCKAdBreakClipVastAdsRequest : GCKVASTAdsRequest
@end

/**
 * A class representing an ad break clip.
 *
 * @since 3.3
 */
GCK_EXPORT
@interface GCKAdBreakClipInfo : NSObject <NSCopying, NSSecureCoding>

/** A string that uniquely identifies this ad break clip. */
@property(nonatomic, readonly) NSString *adBreakClipID;

/** The clip's duration. */
@property(nonatomic, readonly) NSTimeInterval duration;

/** The clip's title. */
@property(nonatomic, readonly, nullable) NSString *title;

/** The click-through URL for this clip. */
@property(nonatomic, readonly, nullable) NSURL *clickThroughURL;

/** URL for the content that represents this clip (typically an image). */
@property(nonatomic, readonly, nullable) NSURL *contentURL;

/** MIME type of the content referenced by @ref contentURL. */
@property(nonatomic, readonly, nullable) NSString *mimeType;

/**
 * The content's ID.
 * @since 4.1
 */
@property(nonatomic, readonly, nullable) NSString *contentID;

/**
 * The poster URL for this clip.
 * @since 4.1
 */
@property(nonatomic, readonly, nullable) NSURL *posterURL;

/**
 * The length of time into the clip when it can be skipped in seconds.
 * @since 4.3
 */
@property(nonatomic, readonly) NSTimeInterval whenSkippable;

/**
 * The HLS segment format for this clip.
 * @since 4.1
 */
@property(nonatomic, readonly) GCKHLSSegmentFormat hlsSegmentFormat;

/**
 * The VAST ad request configuration if any. See more here:
 * <a href="https://www.iab.com/guidelines/digital-video-ad-serving-template-vast-4-0/">
 * Digital Video Ad Serving Template 4.0</a>.
 * If this is non-nil, all other fields will be ignored.
 *
 * @since 4.1
 */
@property(nonatomic, readonly, nullable) GCKVASTAdsRequest *vastAdsRequest;

/** Custom application-specific data associated with the clip. */
@property(nonatomic, strong, readonly, nullable) id customData;

- (instancetype)init NS_UNAVAILABLE;

@end  // GCKAdBreakClipInfo

/**
 * A builder object for constructing new or derived GCKAdBreakClipInfo instances. The builder may
 * be used to derive a GCKAdBreakClipInfo from an existing one:
 *
 * @code
 * GCKAdBreakClipInfoBuilder *builder =
 *     [[GCKAdBreakClipInfoBuilder alloc] initWithAdBreakClipInfo:originalAdBreakClipInfo];
 * builder.adBreakClipID = ...; // Change the ad break clip ID.
 * builder.duration = 100; // Change the ad break's duration.
 * GCKAdBreakClipInfo *derivedAdBreakClipInfo = [builder build];
 * @endcode
 *
 * It can also be used to construct a new GCKAdBreakClipInfo from scratch:
 *
 * @code
 * GCKAdBreakClipInfoBuilder *builder =
 *     [[GCKAdBreakClipInfoBuilder alloc] initWithAdBreakClipID:...];
 * builder.title = ...;
 * builder.contentURL = ...;
 * builder.contentID = ...;
 * // Set all other desired propreties...
 * GCKAdBreakClipInfo *newAdBreakClipInfo = [builder build];
 * @endcode
 *
 * @since 4.3.4
 */
GCK_EXPORT
@interface GCKAdBreakClipInfoBuilder : NSObject

/** A string that uniquely identifies this ad break clip. */
@property(nonatomic, copy) NSString *adBreakClipID;

/** The clip's duration. */
@property(nonatomic) NSTimeInterval duration;

/** The clip's title. */
@property(nonatomic, copy, nullable) NSString *title;

/** The click-through URL for this clip. */
@property(nonatomic, copy, nullable) NSURL *clickThroughURL;

/** URL for the content that represents this clip (typically an image). */
@property(nonatomic, copy, nullable) NSURL *contentURL;

/** MIME type of the content referenced by @ref contentURL. */
@property(nonatomic, copy, nullable) NSString *mimeType;

/**
 * The content's ID.
 */
@property(nonatomic, copy, nullable) NSString *contentID;

/**
 * The poster URL for this clip.
 */
@property(nonatomic, copy, nullable) NSURL *posterURL;

/**
 * The length of time into the clip when it can be skipped in seconds.
 */
@property(nonatomic) NSTimeInterval whenSkippable;

/**
 * The HLS segment format for this clip.
 */
@property(nonatomic) GCKHLSSegmentFormat hlsSegmentFormat;

/**
 * The VAST ad request configuration if any. See more here:
 * <a href="https://www.iab.com/guidelines/digital-video-ad-serving-template-vast-4-0/">
 * Digital Video Ad Serving Template 4.0</a>.
 */
@property(nonatomic, nullable) GCKVASTAdsRequest *vastAdsRequest;

/** Custom application-specific data associated with the clip. */
@property(nonatomic, nullable) id customData;

/**
 * Constructs a new GCKAdBreakClipInfoBuilder with all of the fields of the adBreakClipInfo object.
 *
 * @param adBreakClipInfo The ad break clip info to get the fields from.
 */
- (instancetype)initWithAdBreakClipInfo:(GCKAdBreakClipInfo *)adBreakClipInfo;

/**
 * Constructs a new GCKAdBreakClipInfoBuilder with the ad break clip ID and all other attributes
 * initialized to default values.
 *
 * @param adBreakClipID The clip ID of the ad break clip info.
 */
- (instancetype)initWithAdBreakClipID:(NSString *)adBreakClipID NS_DESIGNATED_INITIALIZER;

- (instancetype)init NS_UNAVAILABLE;

/**
 * Builds a GCKAdBreakClipInfo using the builder's current attributes.
 *
 * @return The new GCKAdBreakClipInfo instance.
 */
- (GCKAdBreakClipInfo *)build;

@end  // GCKAdBreakClipInfoBuilder

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKAdBreakInfo.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKAdBreakClipInfo.h>
#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class representing an ad break.
 *
 * @since 3.1
 */
GCK_EXPORT
@interface GCKAdBreakInfo : NSObject <NSCopying, NSSecureCoding>

/**
 * A string that uniquely identifies this ad break.
 *
 * @since 3.3
 */
@property(nonatomic, strong, readonly) NSString *adBreakID;

/**
 * The playback position, in seconds, at which this ad will start playing.
 *
 * @since 3.1
 */
@property(nonatomic, assign, readonly) NSTimeInterval playbackPosition;

/**
 * A list of identifier strings for the ad break clips contained by this ad break.
 *
 * @since 3.3
 */
@property(nonatomic, strong, readonly, nullable) NSArray<NSString *> *adBreakClipIDs;

/**
 * Whether the ad break has already been watched or not.
 *
 * @since 3.3
 */
@property(nonatomic, assign, readonly) BOOL watched;

/**
 * Whether the ad break is embedded.
 *
 * @since 4.1
 */
@property(nonatomic, assign, readonly) BOOL embedded;

/**
 * Whether the ad break is expanded.
 *
 * @since 4.7.0
 */
@property(nonatomic, assign, readonly) BOOL expanded;

/**
 * This is here for backwards compatibility reasons, but will return nil.
 */
- (instancetype)initWithPlaybackPosition:(NSTimeInterval)playbackPosition
    GCK_DEPRECATED("Use the GCKAdBreakInfoBuilder to initialize GCKAdBreakInfos.");

- (instancetype)init NS_UNAVAILABLE;

@end  // GCKAdBreakInfo

/**
 * A builder object for constructing new or derived GCKAdBreakInfo instances. The builder may
 * be used to derive a GCKAdBreakInfo from an existing one:
 *
 * @code
 * GCKAdBreakInfoBuilder *builder =
 *     [[GCKAdBreakInfoBuilder alloc] initWithAdBreakInfo:originalAdBreakInfo];
 * builder.adBreakID = ...; // Change the ad break clip ID.
 * builder.playbackPosition = 100; // Change the ad break's duration.
 * GCKAdBreakInfo *derivedAdBreakInfo = [builder build];
 * @endcode
 *
 * It can also be used to construct a new GCKAdBreakInfo from scratch:
 *
 * @code
 * GCKAdBreakInfoBuilder *builder =
 *     [[GCKAdBreakInfoBuilder alloc] initWithAdBreakID:...];
 * builder.title = ...;
 * builder.contentURL = ...;
 * builder.contentID = ...;
 * // Set all other desired propreties...
 * GCKAdBreakInfo *newAdBreakInfo = [builder build];
 * @endcode
 *
 * @since 4.3.4
 */
GCK_EXPORT
@interface GCKAdBreakInfoBuilder : NSObject

/**
 * A string that uniquely identifies this ad break.
 */
@property(nonatomic, copy) NSString *adBreakID;

/**
 * The playback position, in seconds, at which this ad will start playing.
 */
@property(nonatomic, assign) NSTimeInterval playbackPosition;

/**
 * A list of identifier strings for the ad break clips contained by this ad break.
 */
@property(nonatomic, copy, nullable) NSArray<NSString *> *adBreakClipIDs;

/**
 * Whether the ad break has already been watched or not.
 */
@property(nonatomic, assign) BOOL watched;

/**
 * Whether the ad break is embedded.
 */
@property(nonatomic, assign) BOOL embedded;

/**
 * Whether the ad break is expanded.
 */
@property(nonatomic, assign) BOOL expanded;

/*
 * Constructor for GCKAdBreakInfoBuilder using an existing adBreakInfo object.
 *
 * @param adBreakInfo The Ad Break Info object to copy fields from.
 */
- (instancetype)initWithAdBreakInfo:(GCKAdBreakInfo *)adBreakInfo;

/*
 * Constructor for GCKAdBreakInfoBuilder other fields will be set to default values.
 *
 * @param adBreakID The adBreakID of the ad break to be built.
 * @param adBreakClipIDs The list of ad break clip IDs in this ad break.
 */
- (instancetype)initWithAdBreakID:(NSString *)adBreakID
                   adBreakClipIds:(nullable NSArray<NSString *> *)adBreakClipIDs
    NS_DESIGNATED_INITIALIZER;

- (instancetype)init NS_UNAVAILABLE;

- (GCKAdBreakInfo *)build;

@end  // GCKAdBreakInfoBuilder

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKAdBreakStatus.h
================================================
// Copyright 2016 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class representing the ad break status.
 *
 * @since 3.3
 */
GCK_EXPORT
@interface GCKAdBreakStatus : NSObject <NSCopying>

/** The current time within the current ad break. */
@property(nonatomic, assign, readonly) NSTimeInterval currentAdBreakTime;

/** The current time within the current ad clip break. */
@property(nonatomic, assign, readonly) NSTimeInterval currentAdBreakClipTime;

/**
 * The minimum count in seconds into the clip required to enable skipping.
 *
 * @since 4.4.5
 */
@property(nonatomic, assign, readonly) NSTimeInterval whenSkippable;

/** The string identifier for the current ad break. */
@property(nonatomic, strong, readonly) NSString *adBreakID;

/** The string identifier for the current ad clip break. */
@property(nonatomic, strong, readonly) NSString *adBreakClipID;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKApplicationMetadata.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKImage;
@class GCKSenderApplicationInfo;

NS_ASSUME_NONNULL_BEGIN

/**
 * Information about a receiver application.
 */
GCK_EXPORT
@interface GCKApplicationMetadata : NSObject <NSCopying>

/** The application's unique ID. */
@property(nonatomic, copy, readonly) NSString *applicationID;

/** The application's name, in a format that is appropriate for display. */
@property(nonatomic, copy, readonly) NSString *applicationName;

/** Any icon images for the application, as an array of GCKImage objects. */
@property(nonatomic, copy, readonly, nullable)
    NSArray<GCKImage *> *images GCK_DEPRECATED("Use iconURL.");

/**
 * The icon URL for the application.
 *
 * @since 4.3.5
 */
@property(nonatomic, copy, readonly, nullable) NSURL *iconURL;

/** The set of protocol namespaces supported by this application. */
@property(nonatomic, copy, readonly, nullable) NSArray<NSString *> *namespaces;

/**
 * Information about the sender application that is the counterpart to the receiver application,
 * if any.
 */
@property(nonatomic, copy, readonly, nullable) GCKSenderApplicationInfo *senderApplicationInfo;

/**
 * The identifier (app ID) of the sender application that is the counterpart to the receiver
 * application, if any.
 */
- (nullable NSString *)senderAppIdentifier;

/**
 * The launch URL (URL scheme) for the sender application that is the counterpart to the receiver
 * application, if any.
 */
- (nullable NSURL *)senderAppLaunchURL;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKCastChannel.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKError;

NS_ASSUME_NONNULL_BEGIN

/**
 * A virtual communication channel for exchanging messages between a Cast sender and a Cast
 * receiver. Each channel is tagged with a unique namespace, so multiple channels may be multiplexed
 * over a single network connection between a sender and a receiver.
 *
 * A channel must be registered with a GCKCastSession before it can be used. When the associated
 * session is established, the channel will be connected automatically and can then send and receive
 * messages.
 *
 * Subclasses should implement the @ref didReceiveTextMessage: method to process incoming messages,
 * and will typically provide additional methods for sending messages that are specific to a given
 * namespace.
 */
GCK_EXPORT
@interface GCKCastChannel : NSObject

/** The channel's namespace. */
@property(nonatomic, copy, readonly) NSString *protocolNamespace;

/** A flag indicating whether this channel is currently connected. */
@property(nonatomic, assign, readonly) BOOL isConnected;

/**
 * A flag indicating whether this channel is currently writable.
 *
 * @since 4.0
 */
@property(nonatomic, assign, readonly) BOOL isWritable;

/**
 * Designated initializer. Constructs a new GCKCastChannel with the given namespace.
 *
 * @param protocolNamespace The namespace.
 */
- (instancetype)initWithNamespace:(NSString *)protocolNamespace;

/**
 * Default initializer is not available.
 */
- (instancetype)init NS_UNAVAILABLE;

/**
 * Called when a text message has been received on this channel. The default implementation is a
 * no-op.
 *
 * @param message The message.
 */
- (void)didReceiveTextMessage:(NSString *)message;

/**
 * Sends a text message on this channel.
 *
 * @param message The message.
 * @param error A pointer at which to store the error result. May be <code>nil</code>.
 * @return <code>YES</code> on success or <code>NO</code> if the message could not be sent.
 */
- (BOOL)sendTextMessage:(NSString *)message
                  error:(GCKError *_Nullable *_Nullable)error;

/**
 * Generates a request ID for a new message.
 *
 * @return The generated ID, or @ref kGCKInvalidRequestID if the channel is not currently connected.
 */
- (NSInteger)generateRequestID;

/**
 * A convenience method which wraps the result of @ref generateRequestID in an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>.
 *
 * @return The generated ID, or <code>nil</code> if the channel is not currently connected.
 */
- (nullable NSNumber *)generateRequestNumber;

/**
 * Called when this channel has been connected, indicating that messages can now be exchanged with
 * the Cast device over this channel. The default implementation is a no-op.
 */
- (void)didConnect;

/**
 * Called when this channel has been disconnected, indicating that messages can no longer be
 * exchanged with the Cast device over this channel. The default implementation is a no-op.
 */
- (void)didDisconnect;

/**
 * Called when the writable state of this channel has changed. The default implementation is a
 * no-op.
 *
 * @param isWritable Whether the channel is now writable.
 *
 * @since 4.0
 */
- (void)didChangeWritableState:(BOOL)isWritable;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKCastContext+UI.h
================================================
// Copyright 2016 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKCastContext.h>

#import <GoogleCast/GCKCommon.h>
#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

@class GCKUICastButton;
@class GCKUICastContainerViewController;
@class GCKUIExpandedMediaControlsViewController;
@class GCKUIMiniMediaControlsViewController;

@protocol GCKUIImageCache;
@protocol GCKUIImagePicker;

NS_ASSUME_NONNULL_BEGIN

/**
 * The name of the notification that will be published when the expanded media controls should be
 * presented to users.
 *
 * @memberof GCKCastContext
 */
GCK_EXTERN NSString *const kGCKExpandedMediaControlsTriggeredNotification;

/**
 * The name of the notification that will be published when the Cast dialog is about to be shown.
 *
 * @memberof GCKCastContext
 * @since 3.4
 */
GCK_EXTERN NSString *const kGCKUICastDialogWillShowNotification;

/**
 * The name of the notification that will be published when the Cast dialog has been dismissed.
 *
 * @memberof GCKCastContext
 * @since 3.4
 */
GCK_EXTERN NSString *const kGCKUICastDialogDidHideNotification;

/**
 * A category on GCKCastContext containing UI-specific APIs.
 *
 * @since 3.0
 */
@interface GCKCastContext (UI)

/**
 * The image cache implementation that will be used by the framework to fetch images that are
 * referenced in media metadata. A default implementation will be used if one is not provided by the
 * application. May be set to <code>nil</code> to reinstate the default image cache.
 */
@property(nonatomic, strong, nullable) id<GCKUIImageCache> imageCache;

/**
 * The image picker implementation that will be used to select an image for a specific purpose.
 * A default implementation will be used if one is not provided by the application. May be set to
 * <code>nil</code> to reinstate the default image picker.
 */
@property(nonatomic, strong, nullable) id<GCKUIImagePicker> imagePicker;

/**
 * Displays the Cast dialog.
 */
- (void)presentCastDialog;

/**
 * Constructs a GCKUICastContainerViewController that embeds the given view controller.
 */
- (GCKUICastContainerViewController *)createCastContainerControllerForViewController:
    (UIViewController *)viewController;

/**
 * Constructs a GCKUIMiniMediaControlsViewController.
 */
- (GCKUIMiniMediaControlsViewController *)createMiniMediaControlsViewController;

/**
 * If it has not been shown before, presents a fullscreen modal view controller
 * that calls attention to the Cast button and displays some brief instructional
 * text about its use.
 *
 * @return <code>YES</code> if the view controller was shown, <code>NO</code> if
 * it was not shown because it had already been shown before. Since version 4.1,
 * <code>NO</code> is also returned if the Cast Button was not found.
 * @deprecated Use presentCastInstructionsViewControllerOnceWithCastButton:.
 */
- (BOOL)presentCastInstructionsViewControllerOnce
    GCK_DEPRECATED("Use presentCastInstructionsViewControllerOnceWithCastButton:");

/**
 * If it has not been shown before, presents a fullscreen modal view controller
 * that calls attention to the Cast button, whose view is passed in, and displays
 * some brief instructional text about its use.
 *
 * @return <code>YES</code> if the view controller was shown, <code>NO</code> if
 * it was not shown because it had already been shown before. <code>NO</code> is
 * also returned if the Cast Button was not found.
 *
 * @since 4.1
 */
- (BOOL)presentCastInstructionsViewControllerOnceWithCastButton:(GCKUICastButton *)castButton;

/**
 * Clears the persistent flag that tracks whether the Cast instructions modal view controller has
 * been shown.
 */
- (void)clearCastInstructionsShownFlag;

/**
 * Displays the default Cast expanded media controls.
 */
- (void)presentDefaultExpandedMediaControls;

/**
 * Configures the behavior of the framework when there's a user action that should result in the
 * presentation of the expanded controls. If <code>YES</code>, the framework will present the
 * default expaned controls view. If <code>NO</code>, the framework will just trigger a
 * @ref GCKCastContext::kGCKExpandedMediaControlsTriggeredNotification.
 */
@property(nonatomic, assign) BOOL useDefaultExpandedMediaControls;

/**
 * The instance of the default Cast expanded media controls view controller.
 */
@property(nonatomic, strong, readonly)
    GCKUIExpandedMediaControlsViewController *defaultExpandedMediaControlsViewController;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKCastContext.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKCommon.h>
#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKCastOptions;
@class GCKCredentialsData;
@class GCKDiscoveryManager;
@class GCKDeviceProvider;
@class GCKError;
@class GCKMediaRequestItem;
@class GCKSessionManager;

/**
 * @file GCKCastContext.h
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * The <code>userInfo</code> key for the new Cast state in a Cast state change notification.
 *
 * @memberof GCKCastContext
 */
GCK_EXTERN NSString *const kGCKNotificationKeyCastState;

/**
 * The name of the notification that will be published when the Cast state changes.
 *
 * @memberof GCKCastContext
 */
GCK_EXTERN NSString *const kGCKCastStateDidChangeNotification;

/**
 * A class containing global objects and state for the framework. The context must be initialized
 * early in the application's lifecycle via a call to @ref setSharedInstanceWithOptions:.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKCastContext : NSObject

/**
 * The current casting state for the application. Changes to this property can be monitored with
 * KVO or by listening for @ref kGCKCastStateDidChangeNotification notifications.
 */
@property(nonatomic, assign, readonly) GCKCastState castState;

/**
 * The discovery manager. This object handles the discovery of receiver devices.
 */
@property(nonatomic, strong, readonly) GCKDiscoveryManager *discoveryManager;

/**
 * The session manager. This object manages the interaction with receiver devices.
 */
@property(nonatomic, strong, readonly) GCKSessionManager *sessionManager;

/**
 * Sets the shared instance, supplying a Cast options object. If the shared instance is already
 * initialized, an exception will be thrown.
 *
 * @param options The Cast options.
 */
+ (void)setSharedInstanceWithOptions:(GCKCastOptions *)options;

/**
 * Sets the shared instance, supplying a Cast options object. The call will fail if the context is
 * already initialized. This method must be called on the main thread.
 *
 * @param options The Cast options.
 * @param error A pointer at which to store the error in case of a failure.
 * @return <code>YES</code> on success, <code>NO</code> on failure.
 * @since 4.0
 */
+ (BOOL)setSharedInstanceWithOptions:(GCKCastOptions *)options
                               error:(GCKError *_Nullable *_Nullable)error;

/**
 * Returns the singleton instance. If a shared instance has not yet been initialized, an exception
 * will be thrown.
 */
+ (instancetype)sharedInstance;

/**
 * Tests if the singleton instance has been initialized yet.
 *
 * @since 3.5.4
 */
+ (BOOL)isSharedInstanceInitialized;

/**
 * Registers a device provider, which adds support for a new type of (non-Cast) device.
 *
 * @param deviceProvider An instance of a GCKDeviceProvider subclass for managing the devices.
 */
- (void)registerDeviceProvider:(GCKDeviceProvider *)deviceProvider;

/**
 * Unregisters the device provider for a given device category.
 *
 * @param category A string that uniquely identifies the type of device.
 */
- (void)unregisterDeviceProviderForCategory:(NSString *)category;

/**
 * Sets the credentials data of the current user. You should call this API with the current user
 * information before starting a cast session and whenever user account is changed.
 *
 * The credentials data will be embedded in the launch request. If it is to launch an
 * Android TV app, the app can use the credentials data to determine if the app supports
 * this specific user. If not, the cast app will be launched instead.
 *
 * If an Android TV app is launched, the credential data will be passed to the app, within
 * the launch intent. The app can use this data to personalize the user experience.
 *
 * @param credentialsData An instance of @c GCKCredentialsData. May be <code>nil</code>.
 */
- (void)setLaunchCredentialsData:(GCKCredentialsData *_Nullable)credentialsData;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKCastOptions.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKDiscoveryCriteria;
@class GCKLaunchOptions;

NS_ASSUME_NONNULL_BEGIN

/**
 * Options that affect the discovery of Cast devices and the behavior of Cast sessions. Writable
 * properties must be set before passing this object to the GCKCastContext.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKCastOptions : NSObject <NSCopying, NSSecureCoding>

/**
 * Constructs a new GCKCastOptions object with the specified discovery criteria.
 *
 * @param discoveryCriteria The discovery criteria to apply to discovered Cast devices. Only those
 * devices that satisfy the criteria will be made available to the application.
 *
 * @since 4.0
 */
- (instancetype)initWithDiscoveryCriteria:(GCKDiscoveryCriteria *)discoveryCriteria;

/**
 * Constructs a new GCKCastOptions object with the specified receiver application ID.
 *
 * @param applicationID The ID of the receiver application which must be supported by discovered
 * Cast devices, and which will be launched when starting a new Cast session.
 *
 * @deprecated Use initWithDiscoveryCriteria:.
 */
- (instancetype)initWithReceiverApplicationID:(NSString *)applicationID
    GCK_DEPRECATED("Use initWithDiscoveryCriteria:");

/**
 * Constructs a new GCKCastOptions object with the specified list of namespaces.
 *
 * @param namespaces A list of namespaces which must be supported by the currently running receiver
 * application on each discovered Cast device.
 *
 * @deprecated Use initWithDiscoveryCriteria:.
 */
- (instancetype)initWithSupportedNamespaces:(NSArray<NSString *> *)namespaces
    GCK_DEPRECATED("Use initWithDiscoveryCriteria:");

/**
 * A flag indicating whether the sender device's physical volume buttons should control the
 * session's volume.
 */
@property(nonatomic, assign) BOOL physicalVolumeButtonsWillControlDeviceVolume;

/**
 * A flag indicating whether the discovery of Cast devices should start automatically at
 * context initialization time. If set to <code>NO</code>, discovery can be started and stopped
 * on-demand by using the methods GCKDiscoveryManager::startDiscovery and
 * GCKDiscoveryManager::stopDiscovery. By default this option is set to @c NO.
 *
 * @since 3.4
 */
@property(nonatomic, assign) BOOL disableDiscoveryAutostart;

/**
 * A flag which is used to disable or enable collection of diagnostic data to improve the
 * reliability of Cast device discovery. The default value is <code>NO</code> (enabled); it may be
 * disabled by setting the value to <code>YES</code>.
 *
 * @since 4.0
 */
@property(nonatomic, assign) BOOL disableAnalyticsLogging;

/**
 * The receiver launch options to use when starting a Cast session.
 */
@property(nonatomic, copy, nullable) GCKLaunchOptions *launchOptions;

/**
 * The shared container identifier to use for background HTTP downloads that are performed by the
 * framework.
 *
 * @since 3.2
 */
@property(nonatomic, copy, nullable) NSString *sharedContainerIdentifier;

/**
 * Whether sessions should be suspended when the sender application goes into the background (and
 * resumed when it returns to the foreground). By default this option is set to <code>YES</code>.
 * It is appropriate to set this to <code>NO</code> in applications that are able to maintain
 * network connections indefinitely while in the background.
 *
 * @since 3.4
 */
@property(nonatomic, assign) BOOL suspendSessionsWhenBackgrounded;

/**
 * Whether the receiver application should be terminated when the user ends the session via the
 * "Stop Casting" button. By default this option is set to <code>NO</code>.
 *
 * @since 4.0
 */
@property(nonatomic, assign) BOOL stopReceiverApplicationWhenEndingSession;

/**
 * Whether cast devices discovery start only after a user taps on the @c GCKUICastButton the first
 * time.
 *
 * If set to <code>YES</code>, @c GCKUICastButton is displayed until a user taps on the cast button
 * the first time. On the first tap, an interstitial is presented to explain why local network
 * access permission is required for the cast to work. Discovery starts once the interstitial is
 * dismissed. The cast button is shown again only when the device is connected to a Wi-Fi network.
* When a Wi-Fi network connection is not present, the cast button is hidden.
 * If set to <code>NO</code>, discovery starts based on the flag @c disableDiscoveryAutoStart. This
 * flag comes into effect only on iOS 14 and above if the flag @c disableDiscoveryAutoStart is set
 * to <code>NO</code>. Default value is <code>YES</code>.
 *
 * @since 4.5.3
 */
@property(nonatomic, assign) BOOL startDiscoveryAfterFirstTapOnCastButton;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKCastSession.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKSession.h>
#import <GoogleCast/GCKSessionOptions.h>

#import <Foundation/Foundation.h>

@class GCKApplicationMetadata;
@class GCKCastChannel;
@class GCKCastOptions;
@class GCKDevice;
@class GCKDynamicDevice;
@class GCKMultizoneDevice;
@class GCKMultizoneStatus;
@class GCKRequest;
@class GCKSessionEndpoint;
@protocol GCKCastDeviceStatusListener;

NS_ASSUME_NONNULL_BEGIN

/**
 * A class that manages a Cast session with a receiver device.
 *
 * Sessions are created and managed automatically by the GCKSessionManager. The application should
 * not directly call the session lifecycle methods such as @ref start or @ref endWithAction:.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKCastSession : GCKSession

/**
 * The device's current "active input" status.
 */
@property(nonatomic, assign, readonly) GCKActiveInputStatus activeInputStatus;

/**
 * The device's current "standby" status.
 */
@property(nonatomic, assign, readonly) GCKStandbyStatus standbyStatus;

/**
 * The metadata for the receiver application that is currently running on the receiver device, if
 * any; otherwise <code>nil</code>.
 */
@property(nonatomic, copy, readonly, nullable) GCKApplicationMetadata *applicationMetadata;

/**
 * Constructs a new Cast session with the given Cast options.
 *
 * @param device The receiver device.
 * @param sessionID The session ID, if resuming; otherwise <code>nil</code>.
 * @param sessionOptions The session options, if any; otherwise <code>nil</code>.
 * @param castOptions The Cast options.
 *
 * @since 4.0
 */
- (instancetype)initWithDevice:(GCKDevice *)device
                     sessionID:(nullable NSString *)sessionID
                sessionOptions:(nullable GCKSessionOptions *)sessionOptions
                   castOptions:(GCKCastOptions *)castOptions;

/**
 * Registers a channel with the session.
 *
 * If the session is connected and the receiver application supports the channel's namespace, the
 * channel will be automatically connected. If the session is not connected, the channel will remain
 * in a disconnected state until the session is started.
 *
 * @param channel The channel to register.
 * @return <code>YES</code> if the channel was registered successfully, <code>NO</code> otherwise.
 */
- (BOOL)addChannel:(GCKCastChannel *)channel;

/**
 * Removes a previously registered channel from the session.
 *
 * @param channel The channel to unregister.
 * @return <code>YES</code> if the channel was unregistered successfully, <code>NO</code> otherwise.
 */
- (BOOL)removeChannel:(GCKCastChannel *)channel;

/**
 * Adds a GCKCastDeviceStatusListener to this object's list of listeners.
 *
 * The added listener is weakly held, and should be retained to avoid unexpected deallocation.
 *
 * @param listener The listener to add.
 */
- (void)addDeviceStatusListener:(id<GCKCastDeviceStatusListener>)listener;

/**
 * Removes a GCKCastDeviceStatusListener from this object's list of listeners.
 *
 * @param listener The listener to remove.
 */
- (void)removeDeviceStatusListener:(id<GCKCastDeviceStatusListener>)listener;

/**
 * Sets the individual device's volume in a multizone group. This is an asynchronous operation.
 *
 * @param volume The new volume, in the range [0.0, 1.0].
 * @param device The multizone device.
 * @return A GCKRequest object for tracking the request.
 */
- (GCKRequest *)setDeviceVolume:(float)volume forMultizoneDevice:(GCKMultizoneDevice *)device;

/**
 * Sets the individual device's muted state in a multizone group. This is an asynchronous operation.
 *
 * @param muted The new muted state.
 * @param device The multizone device.
 * @return A GCKRequest object for tracking the request.
 */
- (GCKRequest *)setDeviceMuted:(BOOL)muted forMultizoneDevice:(GCKMultizoneDevice *)device;

/**
 * Request multizone status from a multizone group. This is an asynchronous operation. When the
 * multizone status is received, the
 * GCKCastDeviceStatusListener::castSession:didReceiveMultizoneStatus: delegate method will be
 * messaged.
 *
 * @return A GCKRequest object for tracking the request.
 */
- (GCKRequest *)requestMultizoneStatus;

@end  // GCKCastSession

/**
 * A listener protocol for receiving Cast device status change notifications.
 *
 * @since 3.0
 */
@protocol GCKCastDeviceStatusListener <NSObject>

@optional

/**
 * Called when the Cast device's active input status has changed.
 *
 * @param castSession The Cast session.
 * @param activeInputStatus The new active input status.
 */
- (void)castSession:(GCKCastSession *)castSession
    didReceiveActiveInputStatus:(GCKActiveInputStatus)activeInputStatus;

/**
 * Called when the Cast device's standby status has changed.
 *
 * @param castSession The Cast session.
 * @param standbyStatus The new standby status.
 */
- (void)castSession:(GCKCastSession *)castSession
    didReceiveStandbyStatus:(GCKStandbyStatus)standbyStatus;

/**
 * Called when the Cast device's multizone status has changed.
 *
 * @param castSession The Cast session.
 * @param multizoneStatus The new multizone status.
 */
- (void)castSession:(GCKCastSession *)castSession
    didReceiveMultizoneStatus:(GCKMultizoneStatus *)multizoneStatus;

/**
 * Called whenever a multizone device is added.
 *
 * @param castSession The Cast session.
 * @param device The newly-added multizone device.
 */
- (void)castSession:(GCKCastSession *)castSession
    didAddMultizoneDevice:(GCKMultizoneDevice *)device;

/**
 * Called whenever a multizone device is updated.
 *
 * @param castSession The Cast session.
 * @param device The updated multizone device.
 */
- (void)castSession:(GCKCastSession *)castSession
    didUpdateMultizoneDevice:(GCKMultizoneDevice *)device;

/**
 * Called whenever a multizone device is removed.
 *
 * @param castSession The Cast session.
 * @param deviceID The deviceID of the removed multizone device.
 */
- (void)castSession:(GCKCastSession *)castSession
    didRemoveMultizoneDeviceWithID:(NSString *)deviceID;

@end  // GCKCastDeviceStatusListener

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKColor.h
================================================
// Copyright 2013 Google Inc.

#import <Foundation/Foundation.h>
#if TARGET_OS_IPHONE
#include <UIKit/UIColor.h>
#else
#include <AppKit/NSColor.h>
#endif

#import <GoogleCast/GCKDefines.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class that represents an RGBA color.
 */
GCK_EXPORT
@interface GCKColor : NSObject <NSCopying, NSSecureCoding>

/** The red intensity of the color; a value in the range [0.0, 1.0]. */
@property(nonatomic, readonly) CGFloat red;
/** The green intensity of the color; a value in the range [0.0, 1.0]. */
@property(nonatomic, readonly) CGFloat green;
/** The blue intensity of the color; a value in the range [0.0, 1.0]. */
@property(nonatomic, readonly) CGFloat blue;
/** The alpha (transparency) of the color; a value in the range [0.0, 1.0]. */
@property(nonatomic, readonly) CGFloat alpha;

/**
 * Designated initializer. Constructs a GCKColor object with the given red, green, blue, and alpha
 * values. All color components are in the range [0.0, 1.0].
 */
- (instancetype)initWithRed:(CGFloat)red
                      green:(CGFloat)green
                       blue:(CGFloat)blue
                      alpha:(CGFloat)alpha;

/**
 * Constructs a GCKColor object with the given red, green, blue values and an alpha value of 1.0
 * (full opacity). All color components are in the range [0.0, 1.0].
 */
- (instancetype)initWithRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue;

#if TARGET_OS_IPHONE

/**
 * Constructs a GCKColor object from a UIColor.
 */
- (instancetype)initWithUIColor:(UIColor *)color;

#else

/**
 * Constructs a GCKColor object from an NSColor.
 */
- (instancetype)initWithNSColor:(NSColor *)color;

#endif  // TARGET_OS_IPHONE

/**
 * Constructs a GCKColor object from a CGColor.
 */
- (instancetype)initWithCGColor:(CGColorRef)color;

/**
 * Constructs a GCKColor object from a CGColor and a given alpha value.
 *
 * @since 4.0
 */
- (instancetype)initWithCGColor:(CGColorRef)color alpha:(CGFloat)alpha;

/**
 * Constructs a GCKColor object from a CSS string representation in the form "#RRGGBBAA" or
 * "#RRGGBB".
 */
- (instancetype)initWithCSSString:(NSString *)CSSString;

/**
 * Returns a CSS string representation of the color, in the form "#RRGGBBAA".
 */
- (NSString *)CSSString;

/** The color black. */
+ (GCKColor *)black;
/** The color red. */
+ (GCKColor *)red;
/** The color green. */
+ (GCKColor *)green;
/** The color blue. */
+ (GCKColor *)blue;
/** The color cyan. */
+ (GCKColor *)cyan;
/** The color magenta. */
+ (GCKColor *)magenta;
/** The color yellow. */
+ (GCKColor *)yellow;
/** The color white. */
+ (GCKColor *)white;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKCommon.h
================================================
// Copyright 2014 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/**
 * @file GCKCommon.h
 * GCKCastState, GCKConnectionState, GCKConnectionSuspendReason, GCKActiveInputStatus, and
 * GCKStandbyStatus enums.
 */

/**
 * @var kGCKFrameworkVersion
 * A string constant containing the version number of the GoogleCast framework.
 */
GCK_EXTERN NSString *const kGCKFrameworkVersion;

/**
 * @var kGCKInvalidRequestID
 * An invalid request ID; if a method returns this request ID, it means that the request could
 * not be made.
 */
GCK_EXTERN const NSInteger kGCKInvalidRequestID;

/**
 * @var kGCKThreadException
 * An exception type indicating that an API was called from an invalid thread.
 */
GCK_EXTERN NSString *const kGCKThreadException;

/**
 * @enum GCKConnectionState
 * Enum defining Cast connection states.
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKConnectionState) {
  /** Disconnected from the device or application. */
  GCKConnectionStateDisconnected = 0,
  /** Connecting to the device or application. */
  GCKConnectionStateConnecting = 1,
  /** Connected to the device or application. */
  GCKConnectionStateConnected = 2,
  /** Disconnecting from the device. */
  GCKConnectionStateDisconnecting = 3
};

/**
 * @enum GCKConnectionSuspendReason
 * Enum defining the reasons for a connection becoming suspended.
 */
typedef NS_ENUM(NSInteger, GCKConnectionSuspendReason) {
  GCKConnectionSuspendReasonUnknown = -1,
  GCKConnectionSuspendReasonNone = 0,
  /** The connection was suspended because the application is going into the background. */
  GCKConnectionSuspendReasonAppBackgrounded = 1,
  /** The connection was suspended because of a network I/O or protocol error. */
  GCKConnectionSuspendReasonNetworkError = 2,
  /** The connection was suspended because the network is not reachable. */
  GCKConnectionSuspendReasonNetworkNotReachable = 3,
  /** The connection was suspended because app was terminated while connected. */
  GCKConnectionSuspendReasonAppTerminated = 4,
};

/**
 * @enum GCKActiveInputStatus
 * An enum describing the active input status states. This status indicates whether a receiver
 * device is currently the active input on its connected TV or AVR.
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKActiveInputStatus) {
  /** The active input status is unknown. */
  GCKActiveInputStatusUnknown = -1,
  /** The input is inactive. */
  GCKActiveInputStatusInactive = 0,
  /** The input is active. */
  GCKActiveInputStatusActive = 1,
};

/**
 * @enum GCKStandbyStatus
 * An enum describing the standby status states. This status indicates whether a receiver device's
 * connected TV or AVR is currently in "standby" mode.
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKStandbyStatus) {
  /** The standby status is unknown.  */
  GCKStandbyStatusUnknown = -1,
  /** The device is not in standby mode.  */
  GCKStandbyStatusInactive = 0,
  /** The device is in standby mode.  */
  GCKStandbyStatusActive = 1,
};

/**
 * @enum GCKCastState
 *
 * An enum describing the possible casting states for the sender application.
 */
typedef NS_CLOSED_ENUM(NSUInteger, GCKCastState) {
  /** No Cast session is established, and no Cast devices are available. */
  GCKCastStateNoDevicesAvailable = 0,
  /** No Cast session is establishd, and Cast devices are available. */
  GCKCastStateNotConnected = 1,
  /** A Cast session is being established. */
  GCKCastStateConnecting = 2,
  /** A Cast session is established. */
  GCKCastStateConnected = 3,
};



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKCredentialsData.h
================================================
#import <Foundation/Foundation.h>

#import <GoogleCast/GCKDefines.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class to maintain the application specific credentials data to identify and
 * possibly authenticates the user.
 *
 * @since 4.4.8
 */
GCK_EXPORT
@interface GCKCredentialsData : NSObject

- (instancetype)init NS_UNAVAILABLE;

/**
 * Initializes and returns a newly allocated @c GCKCredentialsData object with the specified
 * credentials.
 *
 * The @c credentialsType is assigned "ios" as default value to indicate it comes from an iOS
 * sender.
 *
 * @param credentials A string to identify and possibly authenticate the user. May be
 * <code>nil</code>.
 */
- (instancetype)initWithCredentials:(NSString *_Nullable)credentials;

/**
 * Initializes and returns a newly allocated @c GCKCredentialsData object with the specified
 * credentials and credentials type.
 *
 * @param credentials A string to identify and possibly authenticate the user. May be
 * <code>nil</code>.
 * @param credentialsType A string to identify the type of the credentials. May be <code>nil</code>.
 */
- (instancetype)initWithCredentials:(NSString *_Nullable)credentials
                    credentialsType:(NSString *_Nullable)credentialsType NS_DESIGNATED_INITIALIZER;

- (NSString *_Nullable)credentials;
- (NSString *_Nullable)credentialsType;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKDefines.h
================================================
// Copyright 2014 Google Inc.

#import <Availability.h>

#define GCK_VERSION_MAJOR 4
#define GCK_VERSION_MINOR 8
#define GCK_VERSION_FIX 3

#define GCK_VERSION_IS_LESS_THAN(__major, __minor, __fix)               \
  ((__major > GCK_VERSION_MAJOR)                                        \
   || ((__major == GCK_VERSION_MAJOR) && (__minor > GCK_VERSION_MINOR)) \
   || ((__major == GCK_VERSION_MAJOR) && (__minor == GCK_VERSION_MINOR) \
       && (__fix > GCK_VERSION_FIX)))

#define GCK_VERSION_IS_AT_LEAST(__major, __minor, __fix)                              \
  (!GCK_VERSION_IS_LESS_THAN(__major, __minor, __fix))

#define GCK_VERSION_IS_EQUAL_TO(__major, __minor, __fix)                              \
  ((__major == GCK_VERSION_MAJOR) && (__minor == GCK_VERSION_MINOR)                   \
   && (__fix == GCK_VERSION_FIX))

#define GCK_EXPORT __attribute__((visibility("default")))
#define GCK_DEPRECATED(message) __attribute__((deprecated(message)))
#define GCK_HIDDEN __attribute__((visibility("hidden")))

#ifdef __cplusplus
#define GCK_EXTERN extern "C" GCK_EXPORT
#else
#define GCK_EXTERN extern GCK_EXPORT
#endif

// The macros below are all deprecated, but are left for backwards compatibility reasons.
#if __has_feature(nullability)
  #define GCK_NULLABLE_TYPE _Nullable
  #define GCK_NONNULL_TYPE _Nonnull
  #define GCK_NULLABLE nullable
  #define GCK_NONNULL nonnull
#else
  #define GCK_NULLABLE_TYPE
  #define GCK_NONNULL_TYPE
  #define GCK_NULLABLE
  #define GCK_NONNULL
#endif  // __has_feature(nullability)

#if __has_feature(assume_nonnull)
  #define GCK_ASSUME_NONNULL_BEGIN _Pragma("clang assume_nonnull begin")
  #define GCK_ASSUME_NONNULL_END   _Pragma("clang assume_nonnull end")
#else
  #define GCK_ASSUME_NONNULL_BEGIN
  #define GCK_ASSUME_NONNULL_END
#endif  // __has_feature(assume_nonnull)



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKDevice.h
================================================
// Copyright 2012 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

#import <GoogleCast/GCKNetworkAddress.h>

/**
 * @file GCKDevice.h
 * GCKDeviceStatus enum.
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKDeviceStatus
 * Enum defining the device status at the time the device was scanned.
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKDeviceStatus) {
  /** Unknown status. */
  GCKDeviceStatusUnknown = -1,
  /** Idle device status. */
  GCKDeviceStatusIdle = 0,
  /** Busy/join device status. */
  GCKDeviceStatusBusy = 1,
};

/**
 * @enum GCKDeviceCapabilities
 * Enum defining the capabilities of a receiver device.
 */
typedef NS_OPTIONS(NSInteger, GCKDeviceCapabilities) {
  /** The device has video-out capability. */
  GCKDeviceCapabilityVideoOut = 1 << 0,
  /** The device has video-in capability. */
  GCKDeviceCapabilityVideoIn = 1 << 1,
  /** The device has audio-out capability. */
  GCKDeviceCapabilityAudioOut = 1 << 2,
  /** The device has audio-in capability. */
  GCKDeviceCapabilityAudioIn = 1 << 3,
  /** The device is a multizone group. */
  GCKDeviceCapabilityMultizoneGroup = 1 << 5,
  /** The device is a dynamic group. */
  GCKDeviceCapabilityDynamicGroup = 1 << 6,
  /**
   * The device is a multichannel group.
   *
   * @since 4.4.7
   */
  GCKDeviceCapabilityMultiChannelGroup = 1 << 7,
  /**
   * The device is a multichannel member.
   *
   * @since 4.4.7
   */
  GCKDeviceCapabilityMultiChannelMember = 1 << 8,
  /** The device has master or fixed volume mode capability. */
  GCKDeviceCapabilityMasterOrFixedVolume = 1 << 11,
  /** The device has attenuation or fixed volume mode capability. */
  GCKDeviceCapabilityAttenuationOrFixedVolume = 1 << 12,
  /** The device can be part of a dynamic group. */
  GCKDeviceCapabilityDynamicGroupingSupported = 1 << 16,
};

/**
 * This is left for backwards compatibility reasons.
 */
typedef GCKDeviceCapabilities GCKDeviceCapability;

/**
 * @enum GCKDeviceType
 * Device types.
 * @since 3.3
 */
typedef NS_ENUM(NSInteger, GCKDeviceType) {
  /** Generic Cast device. */
  GCKDeviceTypeGeneric = 0,
  /** Cast-enabled TV. */
  GCKDeviceTypeTV,
  /** Cast-enabled speaker or other audio device. */
  GCKDeviceTypeSpeaker,
  /** Speaker group. */
  GCKDeviceTypeSpeakerGroup,
  /**
   * The "Nearby Devices" pseudo-device, which represents any nearby unpaired guest-mode devices.
   */
  GCKDeviceTypeNearbyUnpaired
};

/**
 * @var kGCKCastDeviceCategory
 * The device category that identifies Cast devices.
 */
GCK_EXTERN NSString *const kGCKCastDeviceCategory;

@class GCKImage;

/**
 * An object representing a receiver device.
 */
GCK_EXPORT
@interface GCKDevice : NSObject <NSCopying, NSSecureCoding>

- (instancetype)init NS_UNAVAILABLE;

/**
 * @deprecated Use @ref networkAddress
 * The device's IPv4 address, in dot-notation. Used when making network requests.
 * This will be an empty string for @ref GCKDevice objects that are created with an IPv6 address.
 */
@property(nonatomic, copy, readonly)
    NSString *ipAddress GCK_DEPRECATED("Use networkAddress for both IPv4 and IPv6 support");

/**
 * The device's IP address. Used when making network requests.
 * @since 4.2
 */
@property(nonatomic, copy, readonly) GCKNetworkAddress *networkAddress;

/** The device's service port. */
@property(nonatomic, readonly) uint16_t servicePort;

/** A unique identifier for the device. */
@property(nonatomic, copy, readonly) NSString *deviceID;

/** The device's friendly name. This is a user-assignable name such as "Living Room". */
@property(nonatomic, copy, nullable) NSString *friendlyName;

/** The device's model name. */
@property(nonatomic, copy, nullable) NSString *modelName;

/** An array of GCKImage objects containing icons for the device. */
@property(nonatomic, copy, nullable) NSArray<GCKImage *> *icons;

/** The device's status at the time that it was most recently scanned. */
@property(nonatomic) GCKDeviceStatus status;

/** The status text reported by the currently running receiver application, if any. */
@property(nonatomic, copy, nullable) NSString *statusText;

/** The device's protocol version. */
@property(nonatomic, copy, nullable) NSString *deviceVersion;

/** YES if this device is on the local network. */
@property(nonatomic, readonly) BOOL isOnLocalNetwork;

/**
 * The device type.
 *
 * @since 3.3
 */
@property(nonatomic, readonly) GCKDeviceType type;

/**
 * The device category, a string that uniquely identifies the type of device. Cast devices have
 * a category of @ref kGCKCastDeviceCategory.
 */
@property(nonatomic, copy, readonly) NSString *category;

/**
 * A globally unique ID for this device. This is a concatenation of the @ref category and
 * @ref deviceID properties.
 */
@property(nonatomic, copy, readonly) NSString *uniqueID;

/**
 * Tests if this device refers to the same physical device as another. Returns <code>YES</code> if
 * both GCKDevice objects have the same category, device ID, IP address, service port, and protocol
 * version.
 */
- (BOOL)isSameDeviceAs:(const GCKDevice *)other;

/**
 * Returns <code>YES</code> if the device supports all of the given capabilities.
 *
 * @param deviceCapabilities A bitwise-OR of one or more of the @ref GCKDeviceCapabilities
 * constants.
 */
- (BOOL)hasCapabilities:(GCKDeviceCapabilities)deviceCapabilities;

/**
 * Sets an arbitrary attribute in the object. May be used by custom device providers to store
 * device-specific information for non-Cast devices.
 *
 * @param attribute The attribute value, which must be key-value coding compliant, and cannot be
 * <code>nil</code>.
 * @param key The key that identifies the attribute. The key is an arbitrary string. It cannot be
 * <code>nil</code>.
 */
- (void)setAttribute:(NSObject<NSSecureCoding> *)attribute forKey:(NSString *)key;

/**
 * Looks up an attribute in the object.
 *
 * @param key The key that identifies the attribute. The key is an arbitrary string. It cannot be
 * <code>nil</code>.
 * @return The value of the attribute, or <code>nil</code> if no such attribute exists.
 */
- (nullable NSObject<NSSecureCoding> *)attributeForKey:(NSString *)key;

/**
 * Removes an attribute from the object.
 *
 * @param key The key that identifies the attribute. The key is an arbitrary string. It cannot be
 * <code>nil</code>.
 */
- (void)removeAttributeForKey:(NSString *)key;

/**
 * Removes all attributes from the object.
 */
- (void)removeAllAttributes;

/**
 * Extracts the device category from a device unique ID.
 */
+ (NSString *)deviceCategoryForDeviceUniqueID:(NSString *)deviceUniqueID;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKDeviceProvider+Protected.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDeviceProvider.h>

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKDevice.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * Convenience methods for constructing GCKDevice objects and sending discovery notifications to the
 * framework.
 *
 * @since 3.0
 */
@interface GCKDeviceProvider (Protected)

/**
 * Notifies the discovery manager that discovery has started.
 */
- (void)notifyDidStartDiscovery;

/**
 * Notifies the discovery manager that a new device has been published.
 */
- (void)notifyDidPublishDevice:(GCKDevice *)device;

/**
 * Notifies the discovery manager that a previously-published device has been unpublished, because
 * it is no longer available.
 */
- (void)notifyDidUnpublishDevice:(GCKDevice *)device;

/**
 * Notifies the discovery manager that one or more of a previously-published device's display
 * attributes (such as friendly name or icons) have changed.
 */
- (void)notifyDidUpdateDevice:(GCKDevice *)device;

/**
 * @deprecated Use createDeviceWithID:networkAddress:servicePort: for IPv4 and IPv6 support
 *
 * Factory method for constructing new GCKDevice instances. The parameters correspond to
 * immutable properties of a GCKDevice.
 *
 * @param deviceID The unique ID identifying this device. This value must be unique among all
 * GCKDevice objects that are created by this provider.
 * @param ipAddress The IP address of the device, in numeric form (for example,
 * <code>@@"10.0.0.10"</code>). May not be <code>nil</code>. Supports IPv4 only.
 * @param servicePort The service port on which connections should be made to this device. May be
 * 0 if a service port is not applicable.
 */
- (GCKDevice *)createDeviceWithID:(NSString *)deviceID
                        ipAddress:(NSString *)ipAddress
                      servicePort:(uint16_t)servicePort
    GCK_DEPRECATED("Use createDeviceWithID:networkAddress:servicePort: for IPv4 and IPv6 support");

/**
 * Factory method for constructing new GCKDevice instances. The parameters correspond to
 * immutable properties of a GCKDevice.
 *
 * @param deviceID The unique ID identifying this device. This value must be unique among all
 * GCKDevice objects that are created by this provider.
 * @param networkAddress The IP address of the device, either IPv4 or IPv6
 * @param servicePort The service port on which connections should be made to this device. May be
 * 0 if a service port is not applicable.
 *
 * @since 4.2
 */
- (GCKDevice *)createDeviceWithID:(NSString *)deviceID
                   networkAddress:(GCKNetworkAddress *)networkAddress
                      servicePort:(uint16_t)servicePort;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKDeviceProvider.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKDevice.h>
#import <GoogleCast/GCKSession.h>
#import <GoogleCast/GCKSessionOptions.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * An abstract base class for performing device discovery and session construction. Support for
 * additional device types can be added by extending this class. See the
 * @ref GCKDeviceProvider(Protected) category for a list of helper methods intended for use by
 * subclasses. New device providers are registered with the framework using @ref
 * GCKCastContext::registerDeviceProvider:.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKDeviceProvider : NSObject

/**
 * A string that uniquely identifies the type of device that will be discovered by this provider.
 */
@property(nonatomic, copy, readonly) NSString *deviceCategory;

/**
 * Whether the scan should be a passive scan. A passive scan sends discovery queries less
 * frequently, so it is more efficient, but the results will not be as fresh. It's appropriate to
 * do a passive scan when the user is not actively selecting a Cast target. Not all implementations
 * will honor this property.
 */
@property(nonatomic, assign) BOOL passiveScan;

/** The array of discovered devices. */
@property(nonatomic, copy, readonly) NSArray<GCKDevice *> *devices;

/**
 * Designated initializer. Constructs a new GCKDeviceProvider for devices of the specified type.
 *
 * @param deviceCategory A string that uniquely identifies the type of device that is managed by
 * by this provider.
 */
- (instancetype)initWithDeviceCategory:(NSString *)deviceCategory NS_DESIGNATED_INITIALIZER;

/**
 * Starts a new discovery scan. This is (commonly) an asynchronous operation. If any of the
 * devices discovered by the previous scan are no longer valid, the provider should unpublish them
 * at this time. Must be overridden by subclasses.
 *
 * The provider <b>must</b> notify the discovery manager once the scan has been started (and any
 * stale devices have been unpublished) by calling @ref GCKDeviceProvider::notifyDidStartDiscovery.
 * If a particular implementation of this method has no asynchronous work to do when starting a
 * scan, it can call the notification method directly before returning.
 */
- (void)startDiscovery;

/**
 * Stops the discovery scan. Must be overridden by subclasses.
 */
- (void)stopDiscovery;

/**
 * Constructs a new session for the given device and optionally an existing session ID.
 * Must be overridden by subclasses.
 *
 * @param device The device to connect to.
 * @param sessionID The ID of the session to resume; or <code>nil</code> to start a new session.
 * @param sessionOptions The session options, if any; otherwise <code>nil</code>.
 *
 * @since 4.0
 */
- (GCKSession *)createSessionForDevice:(GCKDevice *)device
                             sessionID:(nullable NSString *)sessionID
                        sessionOptions:(nullable GCKSessionOptions *)sessionOptions;

/**
 * Constructs a new session for the given device and optionally an existing session ID.
 *
 * @param device The device to connect to.
 * @param sessionID The ID of the session to resume; or <code>nil</code> to start a new session.
 *
 * @deprecated Subclasses should call createSessionForDevice:sessionID:sessionOptions instead.
 */
- (GCKSession *)createSessionForDevice:(GCKDevice *)device
                             sessionID:(nullable NSString *)sessionID
    GCK_DEPRECATED("Use createSessionForDevice:sessionID:sessionOptions:");

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKDiscoveryCriteria.h
================================================
// Copyright 2016 Google Inc.

#import <Foundation/Foundation.h>

#import <GoogleCast/GCKDefines.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * The receiver application ID for the Default Media Receiver.
 *
 * @memberof GCKDiscoveryCriteria
 */
GCK_EXTERN NSString *const kGCKDefaultMediaReceiverApplicationID;

/**
 * Device discovery filter criteria.
 *
 * @since 4.0
 */
GCK_EXPORT
@interface GCKDiscoveryCriteria : NSObject<NSCopying, NSSecureCoding>

/** A list of supported receiver application IDs to test for. */
@property(nonatomic, strong, readonly, nullable) NSOrderedSet<NSString *> *applicationIDs;

/** Whether the discovery criteria includes any application IDs. */
@property(nonatomic, assign, readonly) BOOL hasApplicationIDs;

/** A list of supported namespaces to test for. */
@property(nonatomic, strong, readonly, nullable) NSSet<NSString *> *namespaces;

/** Whether the discovery criteria includes any namespaces. */
@property(nonatomic, assign, readonly) BOOL hasNamespaces;

/** The discovery criteria as a set of mDNS subtypes. */
@property(nonatomic, strong, readonly) NSSet<NSString *> *allSubtypes;

/**
 * Initializes a new GCKDiscoveryCriteria with a receiver application ID.
 *
 * @param applicationID The receiver application ID.
 */
- (instancetype)initWithApplicationID:(NSString *)applicationID;

/**
 * Initializes a new GCKDiscoveryCriteria with the given attributes.
 *
 * @param namespaces A set of namespaces.
 */
- (instancetype)initWithNamespaces:(NSSet<NSString *> *)namespaces;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKDiscoveryManager.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKDevice;

NS_ASSUME_NONNULL_BEGIN

GCK_EXTERN NSString *const kGCKKeyHasDiscoveredDevices;

typedef NS_ENUM(NSInteger, GCKDiscoveryState) {
  GCKDiscoveryStateStopped = 0,
  GCKDiscoveryStateRunning = 1
};

@protocol GCKDiscoveryManagerListener;

/**
 * A class that manages the device discovery process. GCKDiscoveryManager manages a collection of
 * GCKDeviceProvider subclass instances, each of which is responsible for discovering devices of
 * a specific type. It also maintains a lexicographically ordered list of the currently discovered
 * devices.
 *
 * The framework automatically starts the discovery process when the application moves to the
 * foreground and suspends it when the application moves to the background. It is generally not
 * necessary for the application to call GCKDiscoveryManager::startDiscovery and
 * GCKDiscoveryManager::stopDiscovery, except as an optimization measure to reduce network traffic
 * and CPU utilization in areas of the application that do not use Cast functionality.
 *
 * If the application is using the framework's Cast dialog, either by way of GCKUICastButton or
 * by presenting it directly, then that dialog will use GCKDiscoveryManager to populate its list
 * of available devices. If however the application is providing its own device selection/control
 * dialog UI, then it should use the GCKDiscoveryManager and its associated listener protocol,
 * GCKDiscoveryManagerListener, to populate and update its list of available devices.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKDiscoveryManager : NSObject

/**
 * The current discovery state.
 */
@property(nonatomic, assign, readonly) GCKDiscoveryState discoveryState;

/**
 * A flag indicating whether any devices have been discovered by any of the discovery providers
 * managed by this object.
 */
@property(nonatomic, assign, readonly) BOOL hasDiscoveredDevices;

/**
 * A flag indicating whether discovery should employ a "passive" scan. Passive scans are less
 * resource-intensive but do not provide results that are as fresh as active scans.
 */
@property(nonatomic, assign) BOOL passiveScan;

/**
 * A flag indicating whether discovery is active or not.
 *
 * @since 3.4
 */
@property(nonatomic, assign, readonly) BOOL discoveryActive;

/**
 * The number of devices that are currently discovered.
 */
@property(nonatomic, assign, readonly) NSUInteger deviceCount;

/**
 * Default initializer is not available.
 */
- (instancetype)init NS_UNAVAILABLE;

/**
 * Adds a listener that will receive discovery notifications.
 *
 * The added listener is weakly held, and should be retained to avoid unexpected deallocation.
 *
 * @param listener The listener to add.
 */
- (void)addListener:(id<GCKDiscoveryManagerListener>)listener;

/**
 * Removes a previously registered listener.
 *
 * @param listener The listener to remove.
 */
- (void)removeListener:(id<GCKDiscoveryManagerListener>)listener;

/**
 * Starts the discovery process.
 */
- (void)startDiscovery;

/**
 * Stops the discovery process.
 */
- (void)stopDiscovery;

/**
 * Tests whether discovery is currently active for the given device category.
 */
- (BOOL)isDiscoveryActiveForDeviceCategory:(NSString *)deviceCategory;

/**
 * Returns the device at the given index in the manager's list of discovered devices.
 */
- (GCKDevice *)deviceAtIndex:(NSUInteger)index;

/**
 * Returns the device with the given unique ID in the manager's list of discovered devices.
 *
 * @param uniqueID The device's unique ID.
 * @return The matching GCKDevice object, or <code>nil</code> if a matching device was not found.
 */
- (nullable GCKDevice *)deviceWithUniqueID:(NSString *)uniqueID;

/**
 * Waits for a device with the given unique ID to be discovered, and invokes a completion block. If
 * a matching device is already in the discovered device list, the completion block will be invoked
 * immediately (but after this method returns). Only one find operation can be active at a time;
 * starting a new find operation while another one is in progress will cancel the current one.
 *
 * @param uniqueID The unique ID of the device.
 * @param timeout The maximum amount of time to wait for the device to be discovered.
 * @param completion The completion block to invoke when either the device is found or the timeout
 * is reached. The device (if found) or <code>nil</code> (if not found) will be passed to the
 * completion block.
 *
 * @since 4.0
 */
- (void)findDeviceWithUniqueID:(NSString *)uniqueID
                       timeout:(NSTimeInterval)timeout
                    completion:(void (^)(GCKDevice *))completion;

/**
 * Cancels any in-progress find operation started by findDeviceWithUniqueID:timeout:completion:.
 *
 * @since 4.0
 */
- (void)cancelFindOperation;

@end

/**
 * The GCKDiscoveryManager listener protocol.
 *
 * @since 3.0
 */
@protocol GCKDiscoveryManagerListener <NSObject>

@optional

/**
 * Called when discovery has started for the given device category.
 */
- (void)didStartDiscoveryForDeviceCategory:(NSString *)deviceCategory;

/**
 * Called when the list of discovered devices is about to be updated in some way.
 */
- (void)willUpdateDeviceList;

/**
 * Called when the list of discovered devices has been updated in some way.
 */
- (void)didUpdateDeviceList;

/**
 * Called when a newly-discovered device has been inserted into the list of devices.
 *
 * @param device The device that was inserted.
 * @param index The list index at which the device was inserted.
 */
- (void)didInsertDevice:(GCKDevice *)device atIndex:(NSUInteger)index;

/**
 * Called when a previously-discovered device has been updated.
 *
 * @param device The device that was updated.
 * @param index The list index of the device.
 */
- (void)didUpdateDevice:(GCKDevice *)device atIndex:(NSUInteger)index;

/**
 * Called when a previously-discovered device has been updated and/or reordered within the list.
 *
 * @param device The device that was updated.
 * @param index The previous list index of the device.
 * @param newIndex The current list index of the device.
 */
- (void)didUpdateDevice:(GCKDevice *)device
                atIndex:(NSUInteger)index
         andMoveToIndex:(NSUInteger)newIndex;

/**
 * Called when a previously-discovered device has gone offline and has been removed from the list of
 * devices.
 *
 * @param index The list index of the device that was removed.
 */
- (void)didRemoveDeviceAtIndex:(NSUInteger)index;

/**
 * Called when a previously-discovered device has gone offline and has been
 * removed from the list of devices. This is an alternative to @ref
 * didRemoveDeviceAtIndex:. If both are implemented, both will be called.
 *
 * @param device The device that was removed.
 * @param index The list index of the device that was removed.
 *
 * @since 4.1
 */
- (void)didRemoveDevice:(GCKDevice *)device atIndex:(NSUInteger)index;

/**
 * Called when there are some previously-discovered devices in the list before the discovery process
 * starts. These devices are still valid and not expired since being discovered by the last
 * discovery process. The full list of previously-discovery devices can be obtained by using @ref
 * deviceCount: and @ref deviceAtIndex:.
 *
 * @since 4.4.1
 */
- (void)didHaveDiscoveredDeviceWhenStartingDiscovery;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKDynamicDevice.h
================================================
#import <GoogleCast/GCKDevice.h>

#import <Foundation/Foundation.h>

#import <GoogleCast/GCKDefines.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A device object that can be part of a multizone group.
 *
 * @since 4.3.5
 */
GCK_EXPORT
@interface GCKDynamicDevice : NSObject <NSCopying, NSSecureCoding>

/** The unique device ID. */
@property(nonatomic, copy, readonly) NSString *deviceID;

/** The friendly name of the device. */
@property(nonatomic, copy, readonly, nullable) NSString *friendlyName;

/** The device capabilities. */
@property(nonatomic, assign, readonly) GCKDeviceCapabilities capabilities;

- (instancetype)init NS_UNAVAILABLE;

/**
 * Returns <code>YES</code> if the device supports the given capabilities.
 *
 * @param deviceCapabilities A bitwise-OR of one or more of the @ref GCKDeviceCapability constants.
 */
- (BOOL)hasCapabilities:(GCKDeviceCapabilities)deviceCapabilities;

@end  // GCKDynamicDevice

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKError.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/** @file GCKError.h
 * Framework errors.
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKErrorCode
 * Framework error codes.
 */
typedef NS_ENUM(NSInteger, GCKErrorCode) {
  /**
   * Error Code indicating no error.
   */
  GCKErrorCodeNoError = 0,

  /**
   * Error code indicating a network I/O error.
   */
  GCKErrorCodeNetworkError = 1,

  /**
   * Error code indicating that an operation has timed out.
   */
  GCKErrorCodeTimeout = 2,

  /**
   * Error code indicating an authentication error.
   */
  GCKErrorCodeDeviceAuthenticationFailure = 3,

  /**
   * Error code indicating that an invalid request was made.
   */
  GCKErrorCodeInvalidRequest = 4,

  /**
   * Error code indicating that an in-progress request has been cancelled, most likely because
   * another action has preempted it.
   */
  GCKErrorCodeCancelled = 5,

  /**
   * Error code indicating that a request has been replaced by another request of the same type.
   */
  GCKErrorCodeReplaced = 6,

  /**
   * Error code indicating that the request was disallowed and could not be completed.
   */
  GCKErrorCodeNotAllowed = 7,

  /**
   * Error code indicating that a request could not be made because the same type of request is
   * still in process.
   */
  GCKErrorCodeDuplicateRequest = 8,

  /**
   * Error code indicating that the request is not allowed in the current state.
   */
  GCKErrorCodeInvalidState = 9,

  /**
   * Error code indicating that data could not be sent because the send buffer is full.
   */
  GCKErrorCodeSendBufferFull = 10,

  /**
   * Error indicating that the request could not be sent because the message exceeds the maximum
   * allowed message size.
   */
  GCKErrorCodeMessageTooBig = 11,

  /**
   * Error indicating that a channel operation could not be completed because the channel is not
   * currently connected.
   */
  GCKErrorCodeChannelNotConnected = 12,

  /**
   * Error indicating that the user is not authorized to use a Cast device.
   */
  GCKErrorCodeDeviceAuthorizationFailure = 13,

  /**
   * Error indicating that a device request could not be completed because there is no connection
   * currently established to the device.
   */
  GCKErrorCodeDeviceNotConnected = 14,

  /**
   * Error indicating that there is a mismatch between the protocol versions being used on the
   * sender and the receiver for a given namespace implementation.
   */
  GCKErrorCodeProtocolVersionMismatch = 15,

  /**
   * Error indicating that the maximum number of users is already connected to the receiver.
   */
  GCKErrorCodeMaxUsersConnected = 16,

  /**
   * Error indicating that the network is not reachable.
   */
  GCKErrorCodeNetworkNotReachable = 17,

  /**
   * Error indicating a protocol error (invalid data received).
   */
  GCKErrorCodeProtocolError = 18,

  /**
   * Error indicating that an attempt was made to initialize an already initialized singleton.
   */
  GCKErrorCodeAlreadyInitialized = 19,

  /**
   * Error code indicating that a requested application could not be found.
   */
  GCKErrorCodeApplicationNotFound = 20,

  /**
   * Error code indicating that a requested application is not currently running.
   */
  GCKErrorCodeApplicationNotRunning = 21,

  /**
   * Error code indicating that the application session ID was not valid.
   */
  GCKErrorCodeInvalidApplicationSessionID = 22,

  /**
   * Error code indicating a TLS error. The underlying error is one of the
   * error codes as documented here:
   * https://developer.apple.com/library/mac/documentation/Security/Reference/secureTransportRef/
   */
  GCKErrorCodeSecureTransportError = 23,

  /**
   * Error indicating that a connect attempt was made on a socket that is already connected.
   */
  GCKErrorCodeSocketAlreadyConnected = 24,

  /**
   * Error indicating that an invalid network or socket address or address type was supplied to
   * a method or initializer.
   */
  GCKErrorCodeSocketInvalidAddress = 25,

  /**
   * Error indicating that an invalid parameter was supplied to a method or initializer.
   */
  GCKErrorCodeSocketInvalidParameter = 26,

  /**
   * Error indicating that the response received was invalid.
   */
  GCKErrorCodeInvalidResponse = 27,

  /**
   * Error indicating that the session update went through, but all devices could not be moved.
   */
  GCKErrorCodeFailedSessionUpdate = 28,

  /**
   * Error indicating that a device request could not be completed because the current session is
   * not active.
   *
   * @since 4.4.5
   */
  GCKErrorCodeSessionIsNotActive = 29,

  /**
   * Error code indicating that a media load failed on the receiver side.
   */
  GCKErrorCodeMediaLoadFailed = 30,

  /**
   * Error code indicating that a media media command failed because of the media player state.
   */
  GCKErrorCodeInvalidMediaPlayerState = 31,

  /**
   * Error indicating that no media session is currently available.
   */
  GCKErrorCodeNoMediaSession = 32,

  /**
   * Error code indicating that the current session is not a cast session.
   */
  GCKErrorCodeNotCastSession = 33,

  /**
   * Error code indicating that a generic media error happens.
   */
  GCKErrorCodeMediaError = 34,

  /**
   * Error code indicating that device authentication failed due to error received.
   */
  GCKErrorCodeAuthenticationErrorReceived = 40,

  /**
   * Error code indicating that device authentication failed because a malformed client certificate
   * is received.
   */
  GCKErrorCodeMalformedClientCertificate = 41,

  /**
   * Error code indicating that device authentication failed because certificate received from
   * Chromecast is not expected format.
   */
  GCKErrorCodeNotX509Certificate = 42,

  /**
   * Error code indicating that device authentication failed because the device certificate is not
   * trusted.
   */
  GCKErrorCodeDeviceCertificateNotTrusted = 43,

  /**
   * Error code indicating that device authentication failed because the SSL certificate is not
   * trusted.
   */
  GCKErrorCodeSSLCertificateNotTrusted = 44,

  /**
   * Error code indicating that device authentication failed because the response from device is
   * malformed.
   */
  GCKErrorCodeMalformedAuthenticationResponse = 45,

  /**
   * Error code indicating that device authentication failed because the device capability shows
   * unsupported.
   */
  GCKErrorCodeDeviceCapabilityNotSupported = 46,

  /**
   * Error code indicating that device authentication failed because CRL from device is invalid.
   */
  GCKErrorCodeCRLInvalid = 47,

  /**
   * Error code indicating that device authentication failed because device certificate is revoked
   * by CRL.
   */
  GCKErrorCodeCRLCheckFailed = 48,

  /**
   * Error code indicating that the broadcast message failed to encrypt.
   */
  GCKErrorCodeBroadcastMessageEncryptionFailed = 50,

  /**
   * Error code indicating that the key exchange response is invalid.
   */
  GCKErrorCodeBroadcastKeyExchangeInvalidResponse = 51,

  /**
   * Error code indicating that the key exchange response shows an invalid input error.
   */
  GCKErrorCodeBroadcastKeyExchangeInvalidInput = 52,

  /**
   * Error code indicating that the key exchange response doesn't contain a wrapped sender key.
   */
  GCKErrorCodeBroadcastKeyExchangeEmptyResponse = 53,

  /**
   * Error code indicating that the key exchange request has timed out.
   */
  GCKErrorCodeBroadcastKeyExchangeRequestTimeout = 54,

  /**
   * Error code indicating that no device that is capable for key exchange can be found.
   */
  GCKErrorCodeBroadcastKeyExchangeFailedToFindDevice = 55,

  /**
   * Error code indicating that it failed to connect to the device that is capable for key exchange.
   */
  GCKErrorCodeBroadcastKeyExchangeFailedToConnect = 56,

  /**
   * Error code indicating that the broadcast message is dropped because of cache limit.
   */
  GCKErrorCodeBroadcastMessageDropped = 57,

  /**
   * Error code indicating that the broadcast message is not sent out due to socket error.
   */
  GCKErrorCodeBroadcastSocketError = 58,

  /**
   * Error code indicating that the broadcast encryption key is failed to be generated.
   */
  GCKErrorCodeBroadcastFailedToGenerateEncryptionKey = 59,

  /**
   * Error code indicating that the listening failed.
   */
  GCKErrorCodeGuestModeListenFailed = 60,

  /**
   * Error code indicating that an unspecified Remote Display error has occurred. Additional details
   * may be available in the value associated with the key kGCKErrorExtraInfoKey in the user info.
   */
  GCKErrorCodeRemoteDisplayError = 80,

  /**
   * Error code indicating that the target device does not support Remote Display.
   */
  GCKErrorCodeRemoteDisplayDeviceNotSupported = 81,

  /**
   * Error code indicating that the target device does not support a paraticular Remote Display
   * feature.
   */
  GCKErrorCodeRemoteDisplayFeatureNotSupported = 82,

  /**
   * Error code indicating that the provided Remote Display configuration has been rejected by the
   * receiver device.
   */
  GCKErrorCodeRemoteDisplayConfigurationRejectedByReceiver = 83,

  /**
   * Error indicating that an OpenGL error has occurred. Additional details may be available in the
   * value associated with the key kGCKErrorExtraInfoKey in the user info.
   */
  GCKErrorCodeRemoteDisplayOpenGLError = 84,

  /**
   * Error indicating that a Metal error has occurred. Additional details may be available in the
   * value associated with the key kGCKErrorExtraInfoKey in the user info.
   */
  GCKErrorCodeRemoteDisplayMetalError = 85,

  /**
   * Error indicating that an audio conversion error has occurred. Additional details may be
   * available in the value associated with the key kGCKErrorExtraInfoKey in the user info.
   */
  GCKErrorCodeRemoteDisplayAudioConversionError = 86,

  /**
   * Error code indicating that the application moved to the background.
   */
  GCKErrorCodeAppDidEnterBackground = 91,

  /**
   * Error code indicating that the connection to the receiver was closed.
   */
  GCKErrorCodeDisconnected = 92,

  /**
   * Error code indicating that the feature or action is unsupported either on this iOS device or
   * the receiver.
   */
  GCKErrorCodeUnsupportedFeature = 93,

  /**
   * Error code indicating that an unknown, unexpected error has occurred.
   */
  GCKErrorCodeUnknown = 99,

  /**
   * Error code indicating that the authentication message received was not properly formatted and
   * encountered an error while parsing.
   *
   * @since 4.4.5
   */
  GCKErrorCodeDeviceAuthenticationMessageParseFailure = 100,

  /**
   * Error code indicating that the authentication message received had the <code>challenge</code>
   * property set to a non-null value.
   *
   * @since 4.4.5
   */
  GCKErrorCodeDeviceAuthenticationMessageChallengeReceivedFailure = 101,

  /**
   * Error code indicating that the authentication message request timed out.
   *
   * @since 4.4.5
   */
  GCKErrorCodeDeviceAuthenticationTimeoutFailure = 102,

  /**
   * Error code indicating that an  Application launch request was cancelled.
   *
   * @since 4.6.0
   */
  GCKErrorCodeLaunchRequestCancelled = 103,

  /**
   * Error code indicating that a requested application is not currently running due to a mismatched
   * namespace.
   */
  GCKErrorCodeApplicationNotRunningWithNamespaceMismatched = 104,

  /**
   * Error code indicating that a requested application is not currently running when resumed.
   */
  GCKErrorCodeApplicationNotRunningWhenResumed = 105,

  /**
   * Error code indicating that a request application can not be joined.
   */
  GCKErrorCodeApplicationNotRunningForJoin = 106,

  /**
   * Error code indicating that a requested application can not be joined when reconnecting.
   */
  GCKErrorCodeApplicationNotRunningForJoinWhenReconnecting = 107,

  /**
   * Error code indicating that a requested application is not currently running due to a mismatched
   * applicationID.
   */
  GCKErrorCodeApplicationNotRunningWithApplicationIDMismatch = 108,
};

/**
 * The key for the customData JSON object associated with the error in the userInfo dictionary.
 */
GCK_EXTERN NSString *const kGCKErrorCustomDataKey;

/**
 * The key for an API-specific detailed error code.
 *
 * @since 4.4.3
 */
GCK_EXTERN NSString *const kGCKErrorDetailedCodeKey;

/**
 * The key for extra error information, such as an API-specific error description.
 */
GCK_EXTERN NSString *const kGCKErrorExtraInfoKey;

/**
 * The key for an API-specific error reason.
 *
 * @since 4.4.3
 */
GCK_EXTERN NSString *const kGCKErrorReasonKey;

/**
 * The error domain for GCKErrorCode.
 */
GCK_EXTERN NSString *const kGCKErrorDomain;

/**
 * A subclass of <a href="https://goo.gl/WJbrdL"><b>NSError</b></a> for framework errors.
 */
GCK_EXPORT
@interface GCKError : NSError

/** Constructs a GCKError with the given error code. */
+ (GCKError *)errorWithCode:(GCKErrorCode)code;

/** Constructs a GCKError with the given error code and optional custom data. */
+ (GCKError *)errorWithCode:(GCKErrorCode)code customData:(nullable id)customData;

/** Returns the human-readable description for a given error code. */
+ (NSString *)enumDescriptionForCode:(GCKErrorCode)code;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKGenericChannel.h
================================================
// Copyright 2014 Google Inc.

#import <GoogleCast/GCKCastChannel.h>
#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@protocol GCKGenericChannelDelegate;

NS_ASSUME_NONNULL_BEGIN

/**
 * A generic GCKCastChannel implementation, suitable for use when subclassing is not desired.
 * GCKGenericChannel forwards message and connectivity events to its delegate, and has no
 * processing logic of its own.
 *
 * See GCKGenericChannelDelegate for the delegate protocol.
 */
GCK_EXPORT
@interface GCKGenericChannel : GCKCastChannel

/**
 * The delegate for receiving notifications about changes in the channel's state.
 */
@property(nonatomic, weak, nullable) id<GCKGenericChannelDelegate> delegate;

/**
 * Designated initializer.
 *
 * @param protocolNamespace The namespace for this channel. This namespace must be unique across
 * all channels used by a given application.
 */
- (instancetype)initWithNamespace:(NSString *)protocolNamespace NS_DESIGNATED_INITIALIZER;

@end

/**
 * The GCKGenericChannel delegate protocol.
 */
GCK_EXPORT
@protocol GCKGenericChannelDelegate <NSObject>

/**
 * Called when a text message has been received on the channel.
 */
- (void)castChannel:(GCKGenericChannel *)channel
    didReceiveTextMessage:(NSString *)message
            withNamespace:(NSString *)protocolNamespace;

@optional

/**
 * Called when the channel has been connected, indicating that messages can now be exchanged with
 * the Cast device over the channel.
 *
 * @param channel The channel.
 */
- (void)castChannelDidConnect:(GCKGenericChannel *)channel;

/**
 * Called when the channel has been disconnected, indicating that messages can no longer be
 * exchanged with the Cast device over the channel.
 *
 * @param channel The channel.
 */
- (void)castChannelDidDisconnect:(GCKGenericChannel *)channel;

/**
 * Called when the writable state of the channel has changed.
 *
 * @param channel The channel.
 * @param writable Whether the channel is now writable.
 * @since 4.0
 */
- (void)castChannel:(GCKCastChannel *)channel didChangeWritableState:(BOOL)writable;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKHLSSegmentFormat.h
================================================
#import <Foundation/Foundation.h>

#import <GoogleCast/GCKDefines.h>

/**
 * @file GCKHLSSegmentFormat.h
 * GCKHLSSegmentFormat enum.
 */

NS_ASSUME_NONNULL_BEGIN

/** HLS segment types. */
typedef NS_ENUM(NSInteger, GCKHLSSegmentFormat) {
  /** Undefined. Used when streaming protocol is not HLS. */
  GCKHLSSegmentFormatUndefined = 0,
  /** HLS segment type AAC. */
  GCKHLSSegmentFormatAAC = 1,
  /** HLS segment type AC3. */
  GCKHLSSegmentFormatAC3 = 2,
  /** HLS segment type MP3. */
  GCKHLSSegmentFormatMP3 = 3,
  /** HLS segment type TS. */
  GCKHLSSegmentFormatTS = 4,
  /** HLS segment type TS AAC. */
  GCKHLSSegmentFormatTS_AAC = 5,
  /** HLS segment type E AC3. */
  GCKHLSSegmentFormatE_AC3 = 6,
  /** HLS segment type FMP4. */
  GCKHLSSegmentFormatFMP4 = 7,
};

/**
 * Class that provides helpers to convert between @c GCKHLSSegmentFormat and
 * @c NSString.
 */
GCK_EXPORT
@interface GCKHLSSegment : NSObject

/**
 * Helper method to convert from @c GCKHLSSegmentFormat to @c NSString.
 *
 * @return NSString The string value corresponding to @c GCKHLSSegmentFormat. @c nil for @c
 * GCKHLSSegmentFormatUndefined and invalid enum values.
 *
 * @since 4.6.0
 */
+ (nullable NSString *)mapHLSSegmentFormatToString:(GCKHLSSegmentFormat)hlsSegmentFormat;

/**
 * Helper method to convert from @c NSString to @c GCKHLSSegmentFormat. The
 * comparison is case insensitive.
 *
 * @return GCKHLSSegmentFormat The corresponding @c GCKHLSSegmentFormat enum value. @c
 * GCKHLSSegmentFormatUndefined for invalid string.
 *
 * @since 4.6.0
 */
+ (GCKHLSSegmentFormat)mapHLSSegmentFormatStringToEnum:(NSString *)hlsSegmentFormatString;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKHLSVideoSegmentFormat.h
================================================
#import <Foundation/Foundation.h>

#import <GoogleCast/GCKDefines.h>

/**
 * @file GCKHLSVideoSegmentFormat.h
 * GCKHLSVideoSegmentFormat enum.
 */

NS_ASSUME_NONNULL_BEGIN

/** HLS video segment types. */
typedef NS_ENUM(NSInteger, GCKHLSVideoSegmentFormat) {
  /** Undefined. Used when streaming protocol is not HLS. */
  GCKHLSVideoSegmentFormatUndefined = 0,
  /** HLS segment type MPEG2 TS. */
  GCKHLSVideoSegmentFormatMPEG2_TS = 1,
  /** HLS segment type FMP4. */
  GCKHLSVideoSegmentFormatFMP4 = 2,
};

/**
 * Class that provides helpers to convert between @c GCKHLSVideoSegmentFormat and
 * @c NSString.
 */
GCK_EXPORT
@interface GCKHLSVideoSegment : NSObject

/**
 * Helper method to convert from @c GCKHLSVideoSegmentFormat to @c NSString.
 *
 * @return NSString The string value corresponding to @c GCKHLSVideoSegmentFormat. @c nil for @c
 * GCKHLSVideoSegmentFormatUndefined and invalid enum values.
 *
 * @since 4.6.0
 */
+ (nullable NSString *)mapHLSVideoSegmentFormatToString:
    (GCKHLSVideoSegmentFormat)hlsVideoSegmentFormat;

/**
 * Helper method to convert from @c to @c GCKHLSVidoeSegmentFormat. The
 * comparison is case insensitive.
 *
 * @return GCKHLSVideoSegmentFormat The corresponding @c GCKHLSVideoSegmentFormat enum value. @c
 * GCKHLSVideoSegmentFormatUndefined for invalid string.
 *
 * @since 4.6.0
 */
+ (GCKHLSVideoSegmentFormat)mapHLSVideoSegmentFormatStringToEnum:
    (NSString *)hlsVideoSegmentFormatString;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKImage.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class that represents an image that is located on a web server. Used for such things as
 * GCKDevice icons and GCKMediaMetadata artwork.
 */
GCK_EXPORT
@interface GCKImage : NSObject <NSCopying, NSSecureCoding>

/**
 * The image URL.
 */
@property(nonatomic, strong, readonly) NSURL *URL;

/**
 * The image width, in pixels.
 */
@property(nonatomic, assign, readonly) NSInteger width;

/**
 * The image height, in pixels.
 */
@property(nonatomic, assign, readonly) NSInteger height;

/**
 * Constructs a new GCKImage with the given URL and dimensions. Designated initializer.
 *
 * @param URL The URL of the image.
 * @param width The width of the image, in pixels.
 * @param height The height of the image, in pixels.
 * @throw NSInvalidArgumentException if the URL is <code>nil</code> or empty, or the dimensions are
 * invalid.
 */
- (instancetype)initWithURL:(NSURL *)URL width:(NSInteger)width height:(NSInteger)height;

/**
 * Default initializer is not available.
 */
- (instancetype)init NS_UNAVAILABLE;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKJSONUtils.h
================================================
// Copyright 2012 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * Utility methods for working with JSON data.
 */
GCK_EXPORT
@interface GCKJSONUtils : NSObject

/**
 * Parses a JSON string into an object.
 *
 * @param json The JSON string to parse.
 * @return The root object of the object hierarchy that represents the data (either an
 * <a href="https://goo.gl/q3tY5n"><b>NSArray</b></a> or an
 * <a href="https://goo.gl/0kFoNp"><b>NSDictionary</b></a>), or <code>nil</code> if the parsing
 * failed.
 */
+ (nullable id)parseJSON:(NSString *)json;

/**
 * Parses a JSON string into an object.
 *
 * @param json The JSON string to parse.
 * @param error If not nil, the location at which to store a pointer to an
 * <a href="https://goo.gl/WJbrdL"><b>NSError</b></a> if the parsing fails.
 * @return The root object of the object hierarchy that represents the data (either an
 * <a href="https://goo.gl/q3tY5n"><b>NSArray</b></a> or an
 * <a href="https://goo.gl/0kFoNp"><b>NSDictionary</b></a>), or <code>nil</code> if the parsing
 * failed.
 */
+ (nullable id)parseJSON:(NSString *)json error:(NSError **)error;

/**
 * Writes an object hierarchy of data to a JSON string.
 *
 * @param object The root object of the object hierarchy to encode. This must be either an
 * <a href="https://goo.gl/q3tY5n"><b>NSArray</b></a> or an
 * <a href="https://goo.gl/0kFoNp"><b>NSDictionary</b></a>.
 * @return An <a href="https://goo.gl/5dXzU6"><b>NSString</b></a> containing the JSON encoding, or
 * <code>nil</code> if the data could not be encoded.
 */
+ (NSString *)writeJSON:(id)object;

/**
 * Tests if two JSON strings are equivalent. This does a deep comparison of the JSON data in the
 * two strings, but ignores any differences in the ordering of keys within a JSON object. For
 * example, <code>{ "width":64, "height":32 }</code> is considered to be equivalent to
 * <code>{ "height":32, "width":64 }</code>.
 */
+ (BOOL)isJSONString:(NSString *)actual equivalentTo:(NSString *)expected;

/**
 * Tests if two JSON objects are equivalent. This does a deep comparison of the JSON data in the
 * two objects, but ignores any differences in the ordering of keys within a JSON object. For
 * example, <code>{ "width":64, "height":32 }</code> is considered to be equivalent to
 * <code>{ "height":32, "width":64 }</code>.
 */
+ (BOOL)isJSONObject:(id)actual equivalentTo:(id)expected;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKLaunchOptions.h
================================================
// Copyright 2014 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * Receiver application launch options. Changes to this object must be made before passing it to the
 * GCKCastContext.
 */
GCK_EXPORT
@interface GCKLaunchOptions : NSObject <NSCopying, NSSecureCoding>

/** The sender's language code as per RFC 5646. The default is the sender device's language. */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 * A flag indicating whether the receiver application should be relaunched if it is already
 * running. The default is <code>NO</code>.
 */
@property(nonatomic, assign) BOOL relaunchIfRunning;

/**
 * A flag indicating whether the sender application supports casting to an Android TV application.
 * Default value is <code>NO</code>.
 *
 * @since 4.4.7
 */
@property(nonatomic, assign) BOOL androidReceiverCompatible;

/** Initializes the object with default values. */
- (instancetype)init;

/**
 * Initializes the object with the sender device's language code and the specified relaunch
 * behavior.
 */
- (instancetype)initWithRelaunchIfRunning:(BOOL)relaunchIfRunning;

/**
 * Initializes the object with the specified language code and relaunch behavior.
 *
 * @param languageCode The language code as per RFC 5646.
 * @param relaunchIfRunning A flag indicating whether the receiver application should be relaunched
 * if it is already running.
 */
- (instancetype)initWithLanguageCode:(nullable NSString *)languageCode
                   relaunchIfRunning:(BOOL)relaunchIfRunning;

/**
 * Initializes the object with the sender device's language code, the specified relaunch
 * behavior and if the sender application supports Android TV application.
 *
 * @since 4.4.7
 */
- (instancetype)initWithRelaunchIfRunning:(BOOL)relaunchIfRunning
                androidReceiverCompatible:(BOOL)androidReceiverCompatible;

/**
 * Designated initializer. Initializes the object with the specified language code,
 * relaunch behavior and support for Android TV application.
 *
 * @param relaunchIfRunning A flag indicating whether the receiver application should be relaunched
 * @param languageCode The language code as per RFC 5646.
 * @param androidReceiverCompatible A flag indicating whether the sender application supports
 * Android application on the receiver side.
 *
 * @since 4.4.7
 */
- (instancetype)initWithRelaunchIfRunning:(BOOL)relaunchIfRunning
                             languageCode:(nullable NSString *)languageCode
                androidReceiverCompatible:(BOOL)androidReceiverCompatible;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKLogger.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKLoggerCommon.h>

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@protocol GCKLoggerDelegate;
@class GCKLoggerFilter;

NS_ASSUME_NONNULL_BEGIN

/**
 * A singleton object used for logging by the framework. If a delegate is assigned, the formatted
 * log messages are passed to the delegate. Otherwise, the messages are written using
 * <a href="https://goo.gl/EwUYP8"><b>NSLog()</b></a> in debug builds and are discarded otherwise.
 *
 * See GCKLoggerDelegate for the delegate protocol.
 */
GCK_EXPORT
@interface GCKLogger : NSObject

/** The delegate to pass log messages to. */
@property(nonatomic, weak, nullable) id<GCKLoggerDelegate> delegate;

/**
 * The filter to apply to log messages.
 *
 * @since 3.0
 */
@property(nonatomic, strong, nullable) GCKLoggerFilter *filter;

/**
 * Flag for enabling or disabling logging. On by default.
 *
 * @since 3.0
 */
@property(nonatomic, assign) BOOL loggingEnabled;

/**
 * Flag for enabling or disabling file logging. Off by default. If enabled, log messages are
 * written to a set of rotating files in the app's cache directory. The number and maximum size
 * of these files can be configured via other properties of this class.
 *
 * @since 3.1
 */
@property(nonatomic, assign) BOOL fileLoggingEnabled;

/**
 * Flag for enabling or disabling logging directly to the console (via NSLog). Off by default.
 *
 * @since 4.1
 */
@property(nonatomic, assign) BOOL consoleLoggingEnabled;

/**
 * The maximum size of a log file, in bytes. The minimum is 32 KiB. If the value is 0, the default
 * maximum size of 2 MiB will be used.
 *
 * @since 3.1
 */
@property(nonatomic, assign) NSUInteger maxLogFileSize;

/**
 * The maximum number of log files. The minimum is 2.
 *
 * @since 3.1
 */
@property(nonatomic, assign) NSUInteger maxLogFileCount;

/**
 * The minimum logging level that will be logged.
 *
 * @since 3.0
 * @deprecated Specify minimum logging level in GCKLoggerFilter.
 */
@property(nonatomic, assign) GCKLoggerLevel minimumLevel GCK_DEPRECATED("Use minimumLevel property of GCKLoggerFilter class");

/**
 * Returns the GCKLogger singleton instance.
 */
+ (GCKLogger *)sharedInstance;

@end

/**
 * The GCKLogger delegate protocol.
 */
GCK_EXPORT
@protocol GCKLoggerDelegate <NSObject>

@optional

/**
 * Called by the framework to log a message.
 *
 * @param message The log message.
 * @param function The calling function or method.
 * @param level The logging level.
 * @param location The source code location of the log statement.
 *
 * @since 4.0
 */
- (void)logMessage:(NSString *)message
           atLevel:(GCKLoggerLevel)level
      fromFunction:(NSString *)function
          location:(NSString *)location;

/**
 * Called by the framework to log a message.
 *
 * @param function The calling function, normally obtained from <code>__func__</code>.
 * @param message The log message.
 *
 * @deprecated Use GCKLoggerDelegate::logMessage:atLevel:fromFunction:location: instead.
 */
- (void)logMessage:(NSString *)message fromFunction:(NSString *)function
    GCK_DEPRECATED("Use -[GCKLoggerDelegate logMessage:atLevel:fromFunction:location:]");

@end

NS_ASSUME_NONNULL_END

/**
 * @macro GCKLog
 * @deprecated Equivalent to NSLog().
 */
#define GCKLog NSLog



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKLoggerCommon.h
================================================
// Copyright 2016 Google Inc.

/**
 * @file GCKLoggerCommon.h
 * GCKLoggerLevel enum.
 */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/**
 * @enum GCKLoggerLevel
 * Logging levels.
 *
 * @since 3.1
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKLoggerLevel) {
  /** No logging level (for backward compatibility). */
  GCKLoggerLevelNone = 0,
  /** Verbose messages. */
  GCKLoggerLevelVerbose = 1,
  /** Debug messages. */
  GCKLoggerLevelDebug = 2,
  /** Informational messages. */
  GCKLoggerLevelInfo = 3,
  /** Warning messages. */
  GCKLoggerLevelWarning = 4,
  /** Error messages. */
  GCKLoggerLevelError = 5,
  /** Assertion failure messages. */
  GCKLoggerLevelAssert = 6
};



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKLoggerFilter.h
================================================
// Copyright 2016 Google Inc.

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKLoggerCommon.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class for filtering log messages that are produced using GCKLogger.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKLoggerFilter : NSObject

/**
 * A flag indicating whether the filter is exclusive (<code>YES</code>) or inclusive
 * (<code>NO</code>). By default filters are inclusive, that is, they accept all log messages that
 * match the filter.
 *
 * @deprecated No longer implemented; value is ignored.
 */
@property(nonatomic, assign) BOOL exclusive GCK_DEPRECATED("Not supported");

/**
 * The minimum logging level that will be logged from this filter.
 *
 * @since 3.2
 */
@property(nonatomic, assign) GCKLoggerLevel minimumLevel;

/**
 * Constructs a new GCKLoggerFilter with empty criteria.
 */
- (instancetype)init;

/**
 * Sets the minimum logging level that will be passed by the filter for the set of matching classes.
 * Glob patterns are supported for the class names.
 *
 * @param minimumLevel The minimum logging level for these classes. May be GCKLoggerLevelVerbose.
 * to include all levels.
 * @param classNames A list of class names.
 *
 * @since 3.3
 */
- (void)setLoggingLevel:(GCKLoggerLevel)minimumLevel forClasses:(NSArray<NSString *> *)classNames;

/**
 * Sets the minimum logging level that will be passed by the filter for the set of matching function
 * names. Glob patterns are supported.
 *
 * @param minimumLevel The minimum logging level for these functions. May be GCKLoggerLevelVerbose
 * to include all levels.
 * @param functionNames A list of function names.
 *
 * @since 3.3
 */
- (void)setLoggingLevel:(GCKLoggerLevel)minimumLevel
           forFunctions:(NSArray<NSString *> *)functionNames;

/**
 * Adds a list of class names to be matched by the filter. A class name can be a simple name or the
 * name of an extension, for example, <code>@@"MyClass"</code> or
 * <code>@@"MyClass(MyExtension)"</code>. If an extension is not included in the name, all
 * extensions of the class will be included implicitly. Glob patterns are supported.
 *
 * @deprecated Use @ref setLoggingLevel:forClasses: instead.
 */
- (void)addClassNames:(NSArray<NSString *> *)classNames
    GCK_DEPRECATED("Use setLoggingLevel:forClasses: instead");

/**
 * Adds a list of class names to be matched by the filter, specifying a minimum logging level. A
 * class name can be a simple name or the name of an extension, for example,
 * <code>@@"MyClass"</code> or <code>@@"MyClass(MyExtension)"</code>. If an extension is
 * not included in the name, all extensions of the class will be included implicitly. Glob patterns
 * are supported.
 *
 * @deprecated Use @ref setLoggingLevel:forClasses: instead.
 *
 * @param classNames The class names.
 * @param minimumLogLevel The minimum level to log; may be GCKLoggerLevelVerbose to log all levels.
 *
 * @since 3.2
 */
- (void)addClassNames:(NSArray<NSString *> *)classNames
      minimumLogLevel:(GCKLoggerLevel)minimumLogLevel
    GCK_DEPRECATED("Use setLoggingLevel:forClasses: instead");

/**
 * Adds a list of non-member function names to be matched by the filter. Glob patterns are
 * supported.
 *
 * @deprecated Use @ref setLoggingLevel:forFunctions: instead.
 */
- (void)addFunctionNames:(NSArray<NSString *> *)functionNames
    GCK_DEPRECATED("Use setLoggingLevel:forFunctions: instead");

/**
 * Adds a list of non-member function names to be matched by the filter, specifying a minimum
 * logging level. Glob patterns are supported.
 *
 * @deprecated Use @ref setLoggingLevel:forFunctions: instead.
 *
 * @param functionNames The function names.
 * @param minimumLogLevel The minimum level to log; may be GCKLoggerLevelVerbose to log all levels.
 *
 * @since 3.2
 */
- (void)addFunctionNames:(NSArray<NSString *> *)functionNames
         minimumLogLevel:(GCKLoggerLevel)minimumLogLevel
    GCK_DEPRECATED("Use setLoggingLevel:forFunctions: instead");

/**
 * Adds a list of regular expression patterns for matching the text of the log messages.
 */
- (void)addMessagePatterns:(NSArray<NSString *> *)messagePatterns;

/**
 * Adds a list of regular expression patterns for matching the text of the log messages with
 * optional case-insensitivity.
 *
 * @deprecated Use @ref addMessagePatterns: with inline (?-i) or (?i) instead.
 *
 */
- (void)addMessagePatterns:(NSArray<NSString *> *)messagePatterns
           caseInsensitive:(BOOL)caseInsensitive
  GCK_DEPRECATED("Use addMessagePatterns: with inline (?-i) or (?i) instead");

/**
 * Resets the filter; removing all match criteria.
 */
- (void)reset;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMediaCommon.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/**
 * @file GCKMediaCommon.h
 * GCKMediaResumeState and GCKMediaRepeatMode enums.
 */

/**
 * @enum GCKMediaResumeState
 * Enum defining the media control channel resume state.
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKMediaResumeState) {
  /** A resume state indicating that the player state should be left unchanged. */
  GCKMediaResumeStateUnchanged = 0,

  /**
   * A resume state indicating that the player should be playing, regardless of its current
   * state.
   */
  GCKMediaResumeStatePlay = 1,

  /**
   * A resume state indicating that the player should be paused, regardless of its current
   * state.
   */
  GCKMediaResumeStatePause = 2,
};

/**
 * @deprecated Renamed to GCKMediaResumeState.
 */
typedef GCKMediaResumeState GCKMediaControlChannelResumeState
    GCK_DEPRECATED("Use equivalent enum GCKMediaResumeState");

/**
 * Alias for GCKMediaResumeStateUnchanged
 * @deprecated Use GCKMediaResumeStateUnchanged instead.
 */
#define GCKMediaControlChannelResumeStateUnchanged GCKMediaResumeStateUnchanged

/**
 * Alias for GCKMediaResumeStatePlay
 * @deprecated Use GCKMediaResumeStatePlay instead.
 */
#define GCKMediaControlChannelResumeStatePlay GCKMediaResumeStatePlay

/**
 * Alias for GCKMediaResumeStatePause
 * @deprecated Use GCKMediaResumeStatePause instead.
 */
#define GCKMediaControlChannelResumeStatePause GCKMediaResumeStatePause

/**
 * @enum GCKMediaRepeatMode
 * Enum defining the media control channel queue playback repeat modes.
 */
typedef NS_ENUM(NSInteger, GCKMediaRepeatMode) {
  /** A repeat mode indicating that the repeat mode should be left unchanged. */
  GCKMediaRepeatModeUnchanged = 0,

  /** A repeat mode indicating no repeat. */
  GCKMediaRepeatModeOff = 1,

  /** A repeat mode indicating that a single queue item should be played repeatedly. */
  GCKMediaRepeatModeSingle = 2,

  /** A repeat mode indicating that the entire queue should be played repeatedly. */
  GCKMediaRepeatModeAll = 3,

  /**
   * A repeat mode indicating that the entire queue should be played repeatedly. The order of the
   * items will be randomly shuffled once the last item in the queue finishes. The queue will
   * continue to play starting from the first item of the shuffled items.
   */
  GCKMediaRepeatModeAllAndShuffle = 4,
};

/**
 * @var kGCKInvalidTimeInterval
 * A constant indicating an invalid time interval. May be passed to methods which accept optional
 * stream positions or time durations.
 */
GCK_EXTERN const NSTimeInterval kGCKInvalidTimeInterval;

/**
 * Tests if the given time interval value is kGCKInvalidTimeInterval.
 *
 * @since 4.0
 */
GCK_EXTERN BOOL GCKIsValidTimeInterval(NSTimeInterval timeInterval);



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMediaInformation.h
================================================
// Copyright 2013 Google Inc.

#import <Foundation/Foundation.h>
#import <GoogleCast/GCKAdBreakClipInfo.h>
#import <GoogleCast/GCKAdBreakInfo.h>
#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKHLSSegmentFormat.h>
#import <GoogleCast/GCKHLSVideoSegmentFormat.h>

/**
 * @file GCKMediaInformation.h
 * GCKMediaStreamType enum.
 */

@class GCKMediaMetadata;
@class GCKMediaTextTrackStyle;
@class GCKMediaTrack;

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKMediaStreamType
 * Enum defining the media stream type.
 */
typedef NS_ENUM(NSInteger, GCKMediaStreamType) {
  /** A stream type of "none". */
  GCKMediaStreamTypeNone = 0,
  /** A buffered stream type. */
  GCKMediaStreamTypeBuffered = 1,
  /** A live stream type. */
  GCKMediaStreamTypeLive = 2,
  /** An unknown stream type. */
  GCKMediaStreamTypeUnknown = 99,
};

/**
 * A class that aggregates information about a media item.
 */
GCK_EXPORT
@interface GCKMediaInformation : NSObject <NSCopying, NSSecureCoding>

/**
 * The content ID for this stream.
 */
@property(nonatomic, copy, readonly, nullable) NSString *contentID;

/**
 * The URL of the content to be played.
 *
 * @since 4.3.4
 */
@property(nonatomic, copy, readonly, nullable) NSURL *contentURL;

/**
 * The stream type.
 */
@property(nonatomic, readonly) GCKMediaStreamType streamType;

/**
 * The content (MIME) type.
 */
@property(nonatomic, copy, readonly) NSString *contentType;

/**
 * The media item metadata.
 */
@property(nonatomic, readonly, nullable) GCKMediaMetadata *metadata;

/**
 * The list of ad breaks in this content.
 */
@property(nonatomic, copy, readonly, nullable) NSArray<GCKAdBreakInfo *> *adBreaks;

/**
 * The list of ad break clips in this content.
 *
 * @since 3.3
 */
@property(nonatomic, copy, readonly, nullable) NSArray<GCKAdBreakClipInfo *> *adBreakClips;

/**
 * The length of the stream, in seconds, or <code>INFINITY</code> if it is a live stream.
 */
@property(nonatomic, readonly) NSTimeInterval streamDuration;

/**
 * The media tracks for this stream.
 */
@property(nonatomic, copy, readonly, nullable) NSArray<GCKMediaTrack *> *mediaTracks;

/**
 * The text track style for this stream.
 */
@property(nonatomic, copy, readonly, nullable) GCKMediaTextTrackStyle *textTrackStyle;

/**
 * The deep link for the media as used by Google Assistant, if any.
 *
 * @since 4.0
 */
@property(nonatomic, copy, readonly, nullable) NSString *entity;

/**
 * The VMAP request configuration if any. See more here:
 * <a href="https://www.iab.com/guidelines/digital-video-ad-serving-template-vast-4-0/">
 * Digital Video Ad Serving Template 4.0</a>.
 * If this is non-nil, all other ads related fields will be ignored.
 *
 * @since 4.3.4
 */
@property(nonatomic, readonly, nullable) GCKVASTAdsRequest *VMAP;

/**
 * The epoch time, in seconds, of a live stream's start time.
 * For live streams that have a known start time, e.g. a live TV show or sport game, it would be the
 * epoch time that the event started. Otherwise, it will be start time of the live seekable range
 * when the streaming started.
 *
 * @since 4.4.1
 */
@property(nonatomic, readonly) NSTimeInterval startAbsoluteTime;

/**
 * The format of the HLS audio segment.
 *
 * @since 4.6.0
 */
@property(nonatomic, readonly) GCKHLSSegmentFormat hlsSegmentFormat;

/**
 * The format of the HLS video segment.
 *
 * @since 4.6.0
 */
@property(nonatomic, readonly) GCKHLSVideoSegmentFormat hlsVideoSegmentFormat;

/**
 * The custom data, if any.
 */
@property(nonatomic, readonly, nullable) id customData;

/**
 * Deprecated. Use GCKMediaInformationBuilder to initialize GCKMediaInformation objects.
 *
 * @param contentID The content ID.
 * @param streamType The stream type.
 * @param contentType The content (MIME) type.
 * @param metadata The media item metadata.
 * @param adBreaks The list of ad breaks in this content.
 * @param adBreakClips The list of ad break clips in this content.
 * @param streamDuration The stream duration.
 * @param mediaTracks The media tracks, if any, otherwise <code>nil</code>.
 * @param textTrackStyle The text track style, if any, otherwise <code>nil</code>.
 * @param customData The custom application-specific data. Must either be an object that can be
 * serialized to JSON using <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or
 * <code>nil</code>.
 *
 * @since 4.3
 */
- (instancetype)initWithContentID:(NSString *)contentID
                       streamType:(GCKMediaStreamType)streamType
                      contentType:(NSString *)contentType
                         metadata:(nullable GCKMediaMetadata *)metadata
                         adBreaks:(nullable NSArray<GCKAdBreakInfo *> *)adBreaks
                     adBreakClips:(nullable NSArray<GCKAdBreakClipInfo *> *)adBreakClips
                   streamDuration:(NSTimeInterval)streamDuration
                      mediaTracks:(nullable NSArray<GCKMediaTrack *> *)mediaTracks
                   textTrackStyle:(nullable GCKMediaTextTrackStyle *)textTrackStyle
                       customData:(nullable id)customData
    GCK_DEPRECATED("Use GCKMediaInformationBuilder to initialize GCKMediaInformation objects.");

/**
 * Deprecated. Use GCKMediaInformationBuilder to initialize GCKMediaInformation objects.
 *
 * @param contentID The content ID.
 * @param streamType The stream type.
 * @param contentType The content (MIME) type.
 * @param metadata The media item metadata.
 * @param streamDuration The stream duration.
 * @param mediaTracks The media tracks, if any, otherwise <code>nil</code>.
 * @param textTrackStyle The text track style, if any, otherwise <code>nil</code>.
 * @param customData The custom application-specific data. Must either be an object that can be
 * serialized to JSON using <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or
 * <code>nil</code>.
 */
- (instancetype)initWithContentID:(NSString *)contentID
                       streamType:(GCKMediaStreamType)streamType
                      contentType:(NSString *)contentType
                         metadata:(nullable GCKMediaMetadata *)metadata
                   streamDuration:(NSTimeInterval)streamDuration
                      mediaTracks:(nullable NSArray<GCKMediaTrack *> *)mediaTracks
                   textTrackStyle:(nullable GCKMediaTextTrackStyle *)textTrackStyle
                       customData:(nullable id)customData
    GCK_DEPRECATED("Use GCKMediaInformationBuilder to initialize GCKMediaInformation objects.");

/**
 * Searches for a media track with the given track ID.
 *
 * @param trackID The media track ID.
 * @return The matching GCKMediaTrack object, or <code>nil</code> if there is no media track
 * with the given ID.
 */
- (nullable GCKMediaTrack *)mediaTrackWithID:(NSInteger)trackID;

@end

/**
 * A builder object for constructing new or derived GCKMediaInformation instances. The builder may
 * be used to derive a GCKMediaInformation from an existing one:
 *
 * @code
 * GCKMediaInformationBuilder *builder =
 *     [[GCKMediaInformationBuilder alloc] initWithMediaInformation:originalMediaInfo];
 * builder.contentID = ...; // Change the content ID.
 * builder.streamDuration = 100; // Change the stream duration.
 * GCKMediaInformation *derivedMediaInfo = [builder build];
 * @endcode
 *
 * It can also be used to construct a new GCKMediaInformation from scratch:
 *
 * @code
 * GCKMediaInformationBuilder *builder =
 *     [[GCKMediaInformationBuilder alloc] initWithContentURL:...];
 * builder.contentType = ...;
 * builder.streamType = ...;
 * builder.metadata = ...;
 * // Set all other desired propreties...
 * GCKMediaInformation *newMediaInfo = [builder build];
 * @endcode
 *
 * @since 4.0
 */
GCK_EXPORT
@interface GCKMediaInformationBuilder : NSObject

/**
 * The content ID for this stream.
 * @deprecated Use contentURL and entity instead.
 */
@property(nonatomic, copy, nullable) NSString *contentID;

/**
 * The URL of the content to be played.
 *
 * @since 4.3.4
 */
@property(nonatomic, copy, nullable) NSURL *contentURL;

/**
 * The stream type. Defaults to GCKMediaStreamTypeBuffered.
 */
@property(nonatomic, assign) GCKMediaStreamType streamType;

/**
 * The content (MIME) type.
 */
@property(nonatomic, copy, nullable) NSString *contentType;

/**
 * The media item metadata.
 */
@property(nonatomic, nullable) GCKMediaMetadata *metadata;

/**
 * The list of ad breaks in this content.
 */
@property(nonatomic, copy, nullable) NSArray<GCKAdBreakInfo *> *adBreaks;

/**
 * The list of ad break clips in this content.
 */
@property(nonatomic, copy, nullable) NSArray<GCKAdBreakClipInfo *> *adBreakClips;

/**
 * The length of the stream, in seconds, or <code>INFINITY</code> if it is a live stream. Defaults
 * to 0.
 */
@property(nonatomic, assign) NSTimeInterval streamDuration;

/**
 * The media tracks for this stream.
 */
@property(nonatomic, copy, nullable) NSArray<GCKMediaTrack *> *mediaTracks;

/**
 * The text track style for this stream.
 */
@property(nonatomic, copy, nullable) GCKMediaTextTrackStyle *textTrackStyle;

/**
 * The deep link for the media as used by Google Assistant, if any.
 */
@property(nonatomic, copy, nullable) NSString *entity;

/**
 * The VMAP request configuration if any. See more here:
 * <a href="https://www.iab.com/guidelines/digital-video-ad-serving-template-vast-4-0/">
 * Digital Video Ad Serving Template 4.0</a>.
 * If this is non-nil, all other ads related fields will be ignored.
 *
 * @since 4.3.4
 */
@property(nonatomic, nullable) GCKVASTAdsRequest *VMAP;

/**
 * The start time of the stream, in seconds in epoch time, or <code>kGCKInvalidTimeInterval</code>
 * if it is not available. Defaults to <code>kGCKInvalidTimeInterval</code>.
 *
 * @since 4.4.1
 */
@property(nonatomic) NSTimeInterval startAbsoluteTime;

/**
 * The format of the HLS audio segment.
 *
 * @since 4.6.0
 */
@property(nonatomic) GCKHLSSegmentFormat hlsSegmentFormat;

/**
 * The format of the HLS video segment.
 *
 * @since 4.6.0
 */
@property(nonatomic) GCKHLSVideoSegmentFormat hlsVideoSegmentFormat;

/**
 * The custom data, if any.
 */
@property(nonatomic, nullable) id customData;

/**
 * Constructs a new GCKMediaInformationBuilder with the given required attributes, and all other
 * attributes initialized to default values.
 * @param contentURL The URL of the content to be played.
 *
 * @since 4.3.4
 */
- (instancetype)initWithContentURL:(NSURL *)contentURL;

/**
 * Constructs a new GCKMediaInformationBuilder with the given required attributes, and all other
 * attributes initialized to default values.
 */
- (instancetype)initWithEntity:(NSString *)entity;

/**
 * Constructs a new GCKMediaInformationBuilder with attributes copied from the given
 * GCKMediaInformation instance.
 *
 * @param mediaInfo The instance to copy.
 */
- (instancetype)initWithMediaInformation:(GCKMediaInformation *)mediaInfo;

/**
 * Constructs a new GCKMediaInformationBuilder with the given required attributes, and all other
 * attributes initialized to default values.
 * @deprecated Use initWithContentURL: or initWithEntity: instead.
 */
- (instancetype)initWithContentID:(NSString *)contentID
    GCK_DEPRECATED("Use initWithContentURL: or initWithEntity:");

/**
 * Constructs a new GCKMediaInformationBuilder with the given required attributes, and all other
 * attributes initialized to default values.
 * @deprecated Use initWithContentURL: or initWithEntity: instead.
 */
- (instancetype)initWithContentID:(NSString *)contentID
                           entity:(NSString *)entity
    GCK_DEPRECATED("Use initWithContentURL: or initWithEntity:");

/**
 * Builds a GCKMediaInformation using the builder's current attributes.
 *
 * @return The new GCKMediaInformation instance.
 */
- (GCKMediaInformation *)build;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMediaLiveSeekableRange.h
================================================
#import <Foundation/Foundation.h>
#import <GoogleCast/GCKDefines.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class that aggregates information about seekable range of a media stream.
 *
 * @since 4.4.1
 */
GCK_EXPORT
@interface GCKMediaLiveSeekableRange : NSObject <NSCopying, NSSecureCoding>

/**
 * The start time of seekable range, which ranges from 0 to @c endTime if available.
 */
@property(nonatomic, readonly) NSTimeInterval startTime;

/**
 * The end time of seekable range, which ranges from 0 to end of duration if available.
 */
@property(nonatomic, readonly) NSTimeInterval endTime;

/**
 * A flag indicating whether the current seek range is a fixed-length, moving window or a expanding
 * range.
 */
@property(nonatomic, readonly) BOOL isMovingWindow;

/**
 * A flag indicating whether the current live stream is done. It's updated to YES when live stream
 * finishes.
 */
@property(nonatomic, readonly) BOOL isLiveDone;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMediaLoadOptions.h
================================================
// Copyright 2017 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A constant indicating credentials that have been received from the cloud.
 *
 * @since 4.1.1
 */
GCK_EXTERN NSString *const kGCKCredentialsTypeCloud;

/**
 * Options for loading media with GCKRemoteMediaClient.
 *
 * @since 4.0
 */
GCK_EXPORT
@interface GCKMediaLoadOptions : NSObject <NSCopying, NSSecureCoding>

/**
 * Designated initializer. Initializes a GCKMediaLoadOptions with default values for all properties.
 */
- (instancetype)init;

/**
 * Whether playback should start immediately. The default value is <code>YES</code>.
 */
@property(nonatomic, assign) BOOL autoplay;

/**
 * The initial playback position. The default value is @ref kGCKInvalidTimeInterval, which indicates
 * a default playback position.
 */
@property(nonatomic, assign) NSTimeInterval playPosition;

/**
 * The playback rate. The default value is <code>1</code>.
 */
@property(nonatomic, assign) float playbackRate;

/**
 * An array of integers specifying the active tracks. The default value is <code>nil</code>.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *activeTrackIDs;

/**
 * Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 */
@property(nonatomic, strong, nullable) id customData;

/**
 * The user credentials for the media item being loaded.
 *
 * @since 4.1.1
 */
@property(nonatomic, copy, nullable) NSString *credentials;

/**
 * The type of user credentials specified in #GCKMediaLoadOptions::credentials.
 *
 * @since 4.1.1
 */
@property(nonatomic, copy, nullable) NSString *credentialsType;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMediaLoadRequestData.h
================================================
#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

@class GCKMediaInformation;
@class GCKMediaQueueData;

/**
 * Media load request data. This class is used by load media commands in @c GCKRemoteMediaClient for
 * specifying how a receiver application should load media.
 *
 * To load a single item, the item to load should be specified in @c mediaInformation.
 * To load a non-cloud queue, the queue information should be specified in @c queueData. Optionally,
 * the information for the first item to play can be specified in @c mediaInformation.
 * If the queue is a cloud queue, @c items in @queueData can be @c nil or empty, but @c entity needs
 * to be specified, so that the receiver app can fetch the queue from the cloud using @c entity.
 * If neither @c mediaInformation nor @c queueData is specified, load requests will fail without
 * sending to receiver applications.
 *
 * @since 4.4.1
 */
GCK_EXPORT
@interface GCKMediaLoadRequestData : NSObject <NSCopying, NSSecureCoding>

/**
 * The media item to load.
 */
@property(nonatomic, copy, readonly, nullable) GCKMediaInformation *mediaInformation;

/**
 * The metadata of media item or queue.
 */
@property(nonatomic, copy, readonly, nullable) GCKMediaQueueData *queueData;

/**
 * The flag that indicates whether playback starts immediately after loaded. The default value is
 * <code>@(YES)</code>.
 *
 * When loading a queue by specifying the queue items in @c queueData, this value overrides the @c
 * autoplay of the first @ref GCKMediaQueueItem to be loaded in @c queueData. Only when this field
 * is @c nil, the @c autoplay property of individual @ref GCKMediaQueueItem in @c queueData will
 * take effect.
 *
 * When loading a single item by specifying the @c mediaInformation, this field specifies whether
 * the playback should start upon load. If @c nil, playback will not start immediately.
 */
@property(nonatomic, copy, readonly, nullable) NSNumber *autoplay;

/**
 * The initial playback position.
 * The default value is @ref kGCKInvalidTimeInterval, which indicates a default playback position.
 * If playing Video-On-Demand streams, it starts from 0; if playing live streams, it starts from
 * live edge.
 */
@property(nonatomic, assign, readonly) NSTimeInterval startTime;

/**
 * The playback rate. The default value is <code>1</code>.
 */
@property(nonatomic, assign, readonly) float playbackRate;

/**
 * An array of integers specifying the active tracks. The default value is <code>nil</code>.
 */
@property(nonatomic, strong, readonly, nullable) NSArray<NSNumber *> *activeTrackIDs;

/**
 * Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 */
@property(nonatomic, strong, readonly, nullable) id customData;

/**
 * The user credentials for the media item being loaded.
 */
@property(nonatomic, copy, readonly, nullable) NSString *credentials;

/**
 * The type of user credentials specified in #GCKMediaLoadRequestData::credentials.
 */
@property(nonatomic, copy, readonly, nullable) NSString *credentialsType;

/**
 * The alternate Android TV credentials for the media item being loaded.
 *
 * If set, these credentials will override the value set in #GCKMediaLoadRequestData::credentials if
 * the receiver is an Android TV app. On the receiver side, these credentials can be accessed from
 * @link MediaLoadRequestData#getCredentials @endlink.
 *
 * @since 4.7.0
 */
@property(nonatomic, copy, readonly, nullable) NSString *atvCredentials;

/**
 * The type of Android TV credentials specified in #GCKMediaLoadRequestData::atvCredentials.
 *
 * If set, this credentials type will override the value set in
 * #GCKMediaLoadRequestData::credentialsType if the receiver is an Android TV app. On the receiver
 * side, these credentials can be accessed from @link MediaLoadRequestData#getCredentialsType
 * @endlink.
 *
 * @since 4.7.0
 */
@property(nonatomic, copy, readonly, nullable) NSString *atvCredentialsType;

@end

/**
 * A builder object for constructing new or derived @c GCKMediaLoadRequestData instances. The
 * builder may be used to derive @c GCKMediaLoadRequestData from an existing one.
 *
 * @since 4.4.1
 */
GCK_EXPORT
@interface GCKMediaLoadRequestDataBuilder : NSObject

/**
 * The media item to load.
 */
@property(nonatomic, copy, nullable) GCKMediaInformation *mediaInformation;

/**
 * The metadata of media item or queue.
 */
@property(nonatomic, copy, nullable) GCKMediaQueueData *queueData;

/**
 * The flag to indicate whether playback should start immediately. The default value is
 * <code>@(YES)</code>. If this is @c nil, the @autoplay property of @ref GCKMediaQueueItem in @c
 * queueData will take effect. If queueData is @c nil either, playback will not start immediately.
 */
@property(nonatomic, copy, nullable) NSNumber *autoplay;

/**
 * The initial position to start playback.
 * The default value is @ref kGCKInvalidTimeInterval, which indicates a default playback position.
 * If playing Video-On-Demand streams, it starts from 0; if playing live streams, it starts from
 * live edge.
 */
@property(nonatomic, assign) NSTimeInterval startTime;

/**
 * The playback rate. The default value is <code>1</code>.
 */
@property(nonatomic, assign) float playbackRate;

/**
 * An array of integers specifying the active tracks. The default value is <code>nil</code>.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *activeTrackIDs;

/**
 * Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 */
@property(nonatomic, strong, nullable) id customData;

/**
 * The user credentials for the media item being loaded.
 */
@property(nonatomic, copy, nullable) NSString *credentials;

/**
 * The type of user credentials specified in #GCKMediaLoadRequestData::credentials.
 */
@property(nonatomic, copy, nullable) NSString *credentialsType;

/**
 * The alternate Android TV credentials for the media item being loaded.
 *
 * If set, these credentials will override the value set in #GCKMediaLoadRequestData::credentials if
 * the receiver is an Android TV app. On the receiver side, these credentials can be accessed from
 * @link MediaLoadRequestData#getCredentials @endlink.
 *
 * @since 4.7.0
 */
@property(nonatomic, copy, nullable) NSString *atvCredentials;

/**
 * The type of Android TV credentials specified in #GCKMediaLoadRequestData::atvCredentials.
 *
 * If set, this credentials type will override the value set in
 * #GCKMediaLoadRequestData::credentialsType if the receiver is an Android TV app. On the receiver
 * side, these credentials can be accessed from @link MediaLoadRequestData#getCredentialsType
 * @endlink.
 *
 * @since 4.7.0
 */
@property(nonatomic, copy, nullable) NSString *atvCredentialsType;

/**
 * Initializes a @c GCKMediaLoadRequestData with default values for all properties.
 */
- (instancetype)init;

/**
 * Initializes a @c GCKMediaLoadRequestData with a given @c GCKMediaLoadRequestData object.
 */
- (instancetype)initWithMediaLoadRequestData:(GCKMediaLoadRequestData *)requestData;

/**
 * Builds a @c GCKMediaLoadRequestData using the builder's current attributes.
 *
 * @return The new @c GCKMediaLoadRequestData instance.
 */
- (GCKMediaLoadRequestData *)build;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMediaMetadata.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKImage;

/**
 * @file GCKMediaMetadata.h
 * GCKMediaMetadataType enum.
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKMediaMetadataType
 * Enum defining the media metadata types.
 */
typedef NS_ENUM(NSInteger, GCKMediaMetadataType) {
  /**  A media type representing generic media content. */
  GCKMediaMetadataTypeGeneric = 0,
  /** A media type representing a movie. */
  GCKMediaMetadataTypeMovie = 1,
  /** A media type representing an TV show. */
  GCKMediaMetadataTypeTVShow = 2,
  /** A media type representing a music track. */
  GCKMediaMetadataTypeMusicTrack = 3,
  /** A media type representing a photo. */
  GCKMediaMetadataTypePhoto = 4,
  /** A media type representing an audio book. */
  GCKMediaMetadataTypeAudioBookChapter = 5,
  /** The smallest media type value that can be assigned for application-defined media types. */
  GCKMediaMetadataTypeUser = 100,
};

/**
 * String key: Creation date.
 *
 * The value is the date and/or time at which the media was created, in ISO-8601 format.
 * For example, this could be the date and time at which a photograph was taken or a piece of
 * music was recorded.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyCreationDate;

/**
 * String key: Release date.
 *
 * The value is the date and/or time at which the media was released, in ISO-8601 format.
 * For example, this could be the date that a movie or music album was released.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyReleaseDate;
/**
 * String key: Broadcast date.
 *
 * The value is the date and/or time at which the media was first broadcast, in ISO-8601 format.
 * For example, this could be the date that a TV show episode was first aired.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyBroadcastDate;

/**
 * String key: Title.
 *
 * The title of the media. For example, this could be the title of a song, movie, or TV show
 * episode. This value is suitable for display purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyTitle;

/**
 * String key: Subtitle.
 *
 * The subtitle of the media. This value is suitable for display purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeySubtitle;

/**
 * String key: Artist.
 *
 * The name of the artist who created the media. For example, this could be the name of a
 * musician, performer, or photographer. This value is suitable for display purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyArtist;

/**
 * String key: Album artist.
 *
 * The name of the artist who produced an album. For example, in compilation albums such as DJ
 * mixes, the album artist is not necessarily the same as the artist(s) of the individual songs
 * on the album. This value is suitable for display purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyAlbumArtist;

/**
 * String key: Album title.
 *
 * The title of the album that a music track belongs to. This value is suitable for display
 * purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyAlbumTitle;

/**
 * String key: Composer.
 *
 * The name of the composer of a music track. This value is suitable for display purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyComposer;

/**
 * Integer key: Disc number.
 *
 * The disc number (counting from 1) that a music track belongs to in a multi-disc album.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyDiscNumber;

/**
 * Integer key: Track number.
 *
 * The track number of a music track on an album disc. Typically track numbers are counted
 * starting from 1, however this value may be 0 if it is a "hidden track" at the beginning of
 * an album.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyTrackNumber;

/**
 * Integer key: Season number.
 *
 * The season number that a TV show episode belongs to. Typically season numbers are counted
 * starting from 1, however this value may be 0 if it is a "pilot" episode that predates the
 * official start of a TV series.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeySeasonNumber;

/**
 * Integer key: Episode number.
 *
 * The number of an episode in a given season of a TV show. Typically episode numbers are
 * counted starting from 1, however this value may be 0 if it is a "pilot" episode that is not
 * considered to be an official episode of the first season.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyEpisodeNumber;

/**
 * String key: Series title.
 *
 * The name of a series. For example, this could be the name of a TV show or series of related
 * music albums. This value is suitable for display purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeySeriesTitle;

/**
 * String key: Studio.
 *
 * The name of a recording studio that produced a piece of media. For example, this could be
 * the name of a movie studio or music label. This value is suitable for display purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyStudio;

/**
 * Integer key: Width.
 *
 * The width of a piece of media, in pixels. This would typically be used for providing the
 * dimensions of a photograph.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyWidth;

/**
 * Integer key: Height.
 *
 * The height of a piece of media, in pixels. This would typically be used for providing the
 * dimensions of a photograph.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyHeight;

/**
 * String key: Location name.
 *
 * The name of a location where a piece of media was created. For example, this could be the
 * location of a photograph or the principal filming location of a movie. This value is
 * suitable for display purposes.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyLocationName;

/**
 * Double key: Location latitude.
 *
 * The latitude component of the geographical location where a piece of media was created.
 * For example, this could be the location of a photograph or the principal filming location of
 * a movie.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyLocationLatitude;

/**
 * Double key: Location longitude.
 *
 * The longitude component of the geographical location where a piece of media was created.
 * For example, this could be the location of a photograph or the principal filming location of
 * a movie.
 *
 * @memberof GCKMediaMetadata
 */
GCK_EXTERN NSString *const kGCKMetadataKeyLocationLongitude;

/**
 * String key: Book title.
 *
 * The title of an audio book.
 *
 * @memberof GCKMediaMetadata
 *
 * @since 4.3.5
 */
GCK_EXTERN NSString *const kGCKMetadataKeyBookTitle;

/**
 * Integer key: Chapter number.
 *
 * The number of a chapter in an audio book.
 *
 * @memberof GCKMediaMetadata
 *
 * @since 4.3.5
 */
GCK_EXTERN NSString *const kGCKMetadataKeyChapterNumber;

/**
 * String key: Chapter title
 *
 * The title of a chapter in a audio book.
 *
 * @memberof GCKMediaMetadata
 *
 * @since 4.3.5
 */
GCK_EXTERN NSString *const kGCKMetadataKeyChapterTitle;

/**
 * Double key: Section Duration
 *
 * The section duration in seconds. Used for queue metadata. For example, this could be a duration
 * of one TV show in a queue, or a chapter duration of an audio book, or a program of a long live
 * stream.
 *
 * @memberof GCKMediaMetadata
 *
 * @since 4.4.1
 */
GCK_EXTERN NSString *const kGCKMetadataKeySectionDuration;

/**
 * Double key: Section Start Time in Media.
 *
 * The offset of section start time from the start of the media item in seconds. Used for queue
 * metadata.
 *
 * @memberof GCKMediaMetadata
 *
 * @since 4.4.1
 */
GCK_EXTERN NSString *const kGCKMetadataKeySectionStartTimeInMedia;

/**
 * Double key: Section Absolute Start Time.
 *
 * The absolute time of section start, in epoch time in seconds. Used for queue metadata.
 *
 * @memberof GCKMediaMetadata
 *
 * @since 4.4.1
 */
GCK_EXTERN NSString *const kGCKMetadataKeySectionStartAbsoluteTime;

/**
 * Double key: Section Start Time in Container.
 *
 * The offset of section start time within the full container. Used for queue metadata.
 *
 * @memberof GCKMediaMetadata
 *
 * @since 4.4.1
 */
GCK_EXTERN NSString *const kGCKMetadataKeySectionStartTimeInContainer;

/**
 * Double key: Queue Item ID.
 *
 * The id of the queue item that includes the section start time. Used for queue metadata.
 *
 * @memberof GCKMediaMetadata
 *
 * @since 4.4.1
 */
GCK_EXTERN NSString *const kGCKMetadataKeyQueueItemID;

/**
 * A container for media metadata. Metadata has a media type, an optional list of images, and a
 * collection of metadata fields. Keys for common metadata fields are predefined as constants, but
 * the application is free to define and use additional fields of its own.
 *
 * The values of the predefined fields have predefined types. For example, a track number is
 * an <code>NSInteger</code> and a creation date is an
 * <a href="https://goo.gl/5dXzU6"><b>NSString</b></a> containing an ISO-8601 representation of a
 * date and time. Attempting to store a value of an incorrect type in a field will raise an
 * <a href="https://goo.gl/xvv9VM"><b>NSInvalidArgumentException</b></a>.
 *
 * Note that the Cast protocol limits which metadata fields can be used for a given media type.
 * When a MediaMetadata object is serialized to JSON for delivery to a Cast receiver, any
 * predefined fields which are not supported for a given media type will not be included in the
 * serialized form, but any application-defined fields will always be included.
 * The complete list of predefined fields is as follows:
 *
 * <table>
 *   <tr>
 *     <th>Field</th>
 *     <th>Value Type</th>
 *     <th>Valid Metadata Types</th>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyCreationDate</td>
 *     <td><a href="https://goo.gl/LWeYFJ"><b>NSDate</b></a></td>
 *     <td>@ref GCKMediaMetadataTypePhoto</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyReleaseDate</td>
 *     <td><a href="https://goo.gl/LWeYFJ"><b>NSDate</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeGeneric, @ref GCKMediaMetadataTypeMovie,
 *         @ref GCKMediaMetadataTypeTVShow, @ref GCKMediaMetadataTypeMusicTrack</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyBroadcastDate</td>
 *     <td><a href="https://goo.gl/LWeYFJ"><b>NSDate</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeTVShow</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyTitle</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeGeneric, @ref GCKMediaMetadataTypeMovie,
 *         @ref GCKMediaMetadataTypeTVShow, @ref GCKMediaMetadataTypeMusicTrack,
 *         @ref GCKMediaMetadataTypePhoto</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeySubtitle</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeGeneric, @ref GCKMediaMetadataTypeMovie</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyArtist</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeGeneric, @ref GCKMediaMetadataTypeMusicTrack,
 *         @ref GCKMediaMetadataTypePhoto</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyAlbumArtist</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeMusicTrack</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyAlbumTitle</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeMusicTrack</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyComposer</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeMusicTrack</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyDiscNumber</td>
 *     <td><a href="https://goo.gl/hQFeav"><b>NSInteger</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeMusicTrack</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyTrackNumber</td>
 *     <td><a href="https://goo.gl/hQFeav"><b>NSInteger</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeMusicTrack</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeySeasonNumber</td>
 *     <td><a href="https://goo.gl/hQFeav"><b>NSInteger</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeTVShow</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyEpisodeNumber</td>
 *     <td><a href="https://goo.gl/hQFeav"><b>NSInteger</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeTVShow</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeySeriesTitle</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeTVShow</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyStudio</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypeMovie</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyWidth</td>
 *     <td><a href="https://goo.gl/hQFeav"><b>NSInteger</b></a></td>
 *     <td>@ref GCKMediaMetadataTypePhoto</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyHeight</td>
 *     <td><a href="https://goo.gl/hQFeav"><b>NSInteger</b></a></td>
 *     <td>@ref GCKMediaMetadataTypePhoto</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyLocationName</td>
 *     <td><a href="https://goo.gl/5dXzU6"><b>NSString</b></a></td>
 *     <td>@ref GCKMediaMetadataTypePhoto</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyLocationLatitude</td>
 *     <td><b>double</b></td>
 *     <td>@ref GCKMediaMetadataTypePhoto</td>
 *   </tr>
 *   <tr>
 *     <td>@ref kGCKMetadataKeyLocationLongitude</td>
 *     <td><b>double</b></td>
 *     <td>@ref GCKMediaMetadataTypePhoto</td>
 *   </tr>
 * </table>
 */
GCK_EXPORT
@interface GCKMediaMetadata : NSObject <NSCopying, NSSecureCoding>

/**
 * The metadata type.
 */
@property(nonatomic, assign, readonly) GCKMediaMetadataType metadataType;

/**
 * Initializes a new, empty, MediaMetadata with the given media type.
 * Designated initializer.
 *
 * @param metadataType The media type; one of the @ref GCKMediaMetadataType constants, or a
 * value greater than or equal to @ref GCKMediaMetadataTypeUser for custom media types.
 */
- (instancetype)initWithMetadataType:(GCKMediaMetadataType)metadataType;

/**
 * Initialize with the generic metadata type.
 */
- (instancetype)init;

/**
 * The metadata type.
 */
- (GCKMediaMetadataType)metadataType;

/**
 * Gets the list of images.
 */
- (NSArray *)images;

/**
 * Removes all the current images.
 */
- (void)removeAllMediaImages;

/**
 * Adds an image to the list of images.
 *
 * @param image The image to add.
 */
- (void)addImage:(GCKImage *)image;

/**
 * Tests if the object contains a field with the given key.
 *
 * @param key The key.
 * @return <code>YES</code> if the field exists, <code>NO</code> otherwise.
 */
- (BOOL)containsKey:(NSString *)key;

/**
 * Returns a set of keys for all fields that are present in the object.
 */
- (NSArray<NSString *> *)allKeys;

/**
 * Reads the value of a field.
 *
 * @param key The key for the field.
 * @return The value of the field, or <code>nil</code> if the field has not been set.
 */
- (nullable id)objectForKey:(NSString *)key;

/**
 * Stores a value in a string field.
 *
 * @param value The new value for the field.
 * @param key The key for the field.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not a string
 * field.
 */
- (void)setString:(NSString *)value forKey:(NSString *)key;

/**
 * Reads the value of a string field.
 *
 * @param key The key for the field.
 * @return The value of the field, or <code>nil</code> if the field has not been set.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not a string
 * field.
 */
- (nullable NSString *)stringForKey:(NSString *)key;

/**
 * Stores a value in an integer field.
 *
 * @param value The new value for the field.
 * @param key The key for the field.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not an integer
 * field.
 */
- (void)setInteger:(NSInteger)value forKey:(NSString *)key;

/**
 * Reads the value of an integer field.
 *
 * @param key The key for the field.
 * @return The value of the field, or 0 if the field has not been set.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not an integer
 * field.
 */
- (NSInteger)integerForKey:(NSString *)key;

/**
 * Reads the value of an integer field.
 *
 * @param key The key for the field.
 * @param defaultValue The value to return if the field has not been set.
 * @return The value of the field, or the given default value if the field has not been set.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not an integer
 * field.
 */
- (NSInteger)integerForKey:(NSString *)key defaultValue:(NSInteger)defaultValue;

/**
 * Stores a value in a <b>double</b> field.
 *
 * @param value The new value for the field.
 * @param key The key for the field.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not a
 * <b>double</b> field.
 */
- (void)setDouble:(double)value forKey:(NSString *)key;

/**
 * Reads the value of a <b>double</b> field.
 *
 * @param key The key for the field.
 * @return The value of the field, or 0 if the field has not been set.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not a
 * <b>double</b> field.
 */
- (double)doubleForKey:(NSString *)key;

/**
 * Reads the value of a <b>double</b> field.
 *
 * @param defaultValue The value to return if the field has not been set.
 * @param key The key for the field.
 * @return The value of the field, or the given default value if the field has not been set.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not a
 * <b>double</b> field.
 */
- (double)doubleForKey:(NSString *)key defaultValue:(double)defaultValue;

/**
 * Stores a value in a date field as a restricted ISO-8601 representation of the date.
 *
 * @param date The new value for the field.
 * @param key The key for the field.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not a date
 * field.
 */
- (void)setDate:(NSDate *)date forKey:(NSString *)key;

/**
 * Reads the value of a date field from the restricted ISO-8601 representation of the date.
 *
 * @param key The field name.
 * @return The date, or <code>nil</code> if this field has not been set.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not a date
 * field.
 */
- (nullable NSDate *)dateForKey:(NSString *)key;

/**
 * Reads the value of a date field, as a string.
 *
 * @param key The field name.
 * @return The date as a string containing the restricted ISO-8601 representation of the date, or
 * <code>nil</code> if this field has not been set.
 * @throw NSInvalidArgumentException if the key refers to a predefined field which is not a date
 * field.
 */
- (nullable NSString *)dateAsStringForKey:(NSString *)key;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMediaQueue.h
================================================
#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaQueueItem.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

@protocol GCKMediaQueueDelegate;
@class GCKRemoteMediaClient;
/**
 * A data model representation of a media queue of arbitrary length. This class can be used as the
 * basis for an implementation of a UITableViewDataSource for driving a media queue UI.
 *
 * GCKMediaQueue listens for GCKSessionManager events and automatically attaches itself to the
 * GCKRemoteMediaClient when a Cast session is started. It listens for queue change notifications
 * from the GCKRemoteMediaClient and updates its internal data model accordingly. Likewise, it uses
 * the GCKRemoteMediaClient to fetch queue information on demand.
 *
 * The model maintains a list of queue item IDs for the entire queue; it automatically fetches this
 * list whenever it attaches to a Cast session. It also maintains an LRU cache (of configurable
 * size) of GCKMediaQueueItems, keyed by the queue item ID.
 *
 * The method GCKMediaQueue::itemAtIndex: is used to fetch a queue item at a given index. If the
 * GCKMediaQueueItem is not currently in the cache, an asynchronous request is made to fetch that
 * item from the receiver, and the delegate is eventually notified when the requested items are
 * received.
 *
 * If multiple calls to this method are made in a very short amount of time, the requested item IDs
 * are batched internally to reduce the number of network requests made. Because there is an upper
 * limit to how many queue items can be fetched from the receiver at a time, GCKMediaQueue keeps a
 * rolling window of the last N item IDs to be fetched. Therefore if a very large number of items
 * is requested in a short amount of time, only the last N items will actually be fetched. This
 * behavior allows for the efficient management of a very long queue in the app's UI which may be
 * quickly and/or frequently scrolled through by a user.
 *
 * GCKMediaQueue does not provide any methods for directly modifying the queue, because any such
 * change involves an asynchronous network request to the receiver (via methods on
 * GCKRemoteMediaClient), which can potentially fail with an error. GCKMediaQueue must ensure a
 * consistent representation of the queue as it exists on the receiver, so making local changes to
 * the data model which are not yet committed on the receiver could result in incorrect UI
 * behavior.
 *
 * See GCKMediaQueueDelegate for the delegate protocol.
 *
 * @since 4.3.4
 */
GCK_EXPORT
@interface GCKMediaQueue : NSObject

/** The number of items currently in the queue. */
@property(nonatomic, assign, readonly) NSUInteger itemCount;
/** The cache size. */
@property(nonatomic, assign, readonly) NSUInteger cacheSize;
/** The number of queue items that are currently in the cache. */
@property(nonatomic, assign, readonly) NSUInteger cachedItemCount;

- (instancetype)init NS_UNAVAILABLE;

/** Initializes a new GCKMediaQueue with the default cache size and default max fetch count. */
- (instancetype)initWithRemoteMediaClient:(GCKRemoteMediaClient *)remoteMediaClient;

/**
 * Initializes a new GCKMediaQueue with the given cache size and default max fetch count.
 *
 * @param cacheSize The cache size. Must be nonzero.
 */
- (instancetype)initWithRemoteMediaClient:(GCKRemoteMediaClient *)remoteMediaClient
                                cacheSize:(NSUInteger)cacheSize;

/**
 * Initializes a new GCKMediaQueue with the given cache size and given max fetch count.
 *
 * @param cacheSize The cache size. Must be nonzero.
 * @param maxFetchCount The maxiumum fetch count with minimum being 1.
 */

- (instancetype)initWithRemoteMediaClient:(GCKRemoteMediaClient *)remoteMediaClient
                                cacheSize:(NSUInteger)cacheSize
                            maxFetchCount:(NSUInteger)maxFetchCount NS_DESIGNATED_INITIALIZER;

/**
 * Adds a delegate to this object's list of delegates.
 *
 * @param delegate The delegate to add. The delegate will be retained until @ref removeDelegate: is
 *     called.
 */
- (void)addDelegate:(id<GCKMediaQueueDelegate>)delegate;

/**
 * Removes a delegate from this object's list of delegates.
 *
 * @param delegate The delegate to remove.
 */
- (void)removeDelegate:(id<GCKMediaQueueDelegate>)delegate;

/**
 * Returns the media queue item at the given index in the queue, or arranges to have the item
 * fetched from the receiver if it is not currently in the cache.
 *
 * @param index The index of the item to fetch.
 * @return The item at the given index, or <code>nil</code> if the item is not currently in the
 * cache, but will be fetched asynchronously.
 */
- (nullable GCKMediaQueueItem *)itemAtIndex:(NSUInteger)index;

/**
 * Returns the media queue item at the given index in the queue, or optionally arranges to have the
 * item fetched from the receiver if it is not currently in the cache.
 *
 * @param index The index of the item to fetch.
 * @param fetch Whether the item should be fetched from the receiver if it is not currently in the
 * cache.
 * @return The item at the given index, or <code>nil</code> if the item is not currently in the
 * cache.
 */
- (nullable GCKMediaQueueItem *)itemAtIndex:(NSUInteger)index fetchIfNeeded:(BOOL)fetch;

/**
 * Returns the item ID of the item at the given index in the queue.
 *
 * @return The item ID at the given index, or kGCKMediaQueueInvalidItemID if the index is invalid.
 */
- (GCKMediaQueueItemID)itemIDAtIndex:(NSUInteger)index;

/**
 * Looks up the index of a queue item in the queue.
 *
 * @param itemID The queue item ID.
 * @return The index (that is, the cardinal position) of the item within the queue, or NSNotFound
 * if there is no such item in the queue.
 */
- (NSInteger)indexOfItemWithID:(GCKMediaQueueItemID)itemID;

/**
 * Reloads the queue. The cache will be flushed and the item ID list will be re-fetched from the
 * receiver.
 */
- (void)reload;

/**
 * Clears the queue, removing all elements and flushing the cache.
 */
- (void)clear;

@end

/**
 * The delegate protocol for receiving asynchronous notifications from a GCKMediaQueue.
 *
 * @since 4.3.4
 */
GCK_EXPORT
@protocol GCKMediaQueueDelegate <NSObject>

@optional

/**
 * Called when one or more changes are about to be made to the queue.
 *
 * @param queue The queue.
 */
- (void)mediaQueueWillChange:(GCKMediaQueue *)queue;

/**
 * Called when the queue has been entirely reloaded. Any previously accessed queue items should be
 * considered invalid.
 *
 * @param queue The queue.
 */
- (void)mediaQueueDidReloadItems:(GCKMediaQueue *)queue;

/**
 * Called when a contiguous range of queue items ahve been inserted into the queue.
 *
 * @param queue The queue.
 * @param range The range indicating the starting index and count of items inserted.
 */
- (void)mediaQueue:(GCKMediaQueue *)queue didInsertItemsInRange:(NSRange)range;

/**
 * Called when one or more queue items have been updated in the queue. This includes the case where
 * previously accessed but unavailable items have been retrieved and placed in the cache, and the
 * case where previously cached items have been flushed from the cache.
 *
 * @param queue The queue.
 * @param indexes The ordered list of indexes of the items that have been updated.
 */
- (void)mediaQueue:(GCKMediaQueue *)queue didUpdateItemsAtIndexes:(NSArray<NSNumber *> *)indexes;

/**
 * Called when one or more queue items have been removed from the queue.
 *
 * @param queue The queue.
 * @param indexes The ordered list of indexes of the items that have been removed.
 */
- (void)mediaQueue:(GCKMediaQueue *)queue didRemoveItemsAtIndexes:(NSArray<NSNumber *> *)indexes;

/**
 * Called after one or more queue changes have been made to the queue.
 */
- (void)mediaQueueDidChange:(GCKMediaQueue *)queue;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMediaQueueContainerMetadata.h
================================================
#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaCommon.h>

#import <Foundation/Foundation.h>

@class GCKImage;
@class GCKMediaMetadata;

/**
 * @file GCKMediaQueueContainerMetadata.h
 * GCKMediaQueueContainerType enum.
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKMediaQueueContainerType
 * Enum defining the media queue metadata types.
 *
 * @since 4.4.1
 */
typedef NS_ENUM(NSInteger, GCKMediaQueueContainerType) {
  /**  A media type representing generic media content. */
  GCKMediaQueueContainerTypeGeneric = 0,
  /** A media type representing an audio book. */
  GCKMediaQueueContainerTypeAudioBook = 1,
};

/**
 * Additional metadata for the media queue container.
 *
 * @since 4.4.1
 */
GCK_EXPORT
@interface GCKMediaQueueContainerMetadata : NSObject <NSCopying, NSSecureCoding>

/**
 * The type of metadata.
 */
@property(nonatomic, readonly) GCKMediaQueueContainerType containerType;

/**
 * The container title. It can be audiobook title, Live TV Channel name, album name or playlist
 * name, etc.
 */
@property(nonatomic, copy, readonly, nullable) NSString *title;

/**
 * The metadata of each sections that a media stream contains.
 */
@property(nonatomic, copy, readonly) NSArray<GCKMediaMetadata *> *sections;

/**
 * The total playback time for the container.
 */
@property(nonatomic, readonly) NSTimeInterval containerDuration;

/**
 * Images associated with the queue. By default the first image is used when displaying queue
 * information. Used for audio book image, a TV Channel logo, album cover, etc.
 */
@property(nonatomic, copy, readonly) NSArray<GCKImage *> *containerImages;

/**
 * The author names. Used for audio book.
 */
@property(nonatomic, copy, readonly) NSArray<NSString *> *authors;

/**
 * The audiobook narrator names. Used for audio book.
 */
@property(nonatomic, copy, readonly) NSArray<NSString *> *narrators;

/**
 * The book publisher. Used for audio book.
 */
@property(nonatomic, copy, readonly) NSString *publisher;

/**
 * The book release date in ISO-8601 format. Used for audio book.
 *
 * @since 4.4.1
 */
@property(nonatomic, copy, readonly) NSString *releaseDate;

- (instancetype)init NS_UNAVAILABLE;

@end  // GCKMediaQueueContainerMetadata

/**
 * A builder object for constructing new or derived @c GCKMediaQueueContainerMetadata instances. The
 * builder may be used to derive @c GCKMediaQueueContainerMetadata from an existing one.
 *
 * @since 4.4.1
 */
GCK_EXPORT
@interface GCKMediaQueueContainerMetadataBuilder : NSObject

/**
 * The type of metadata.
 */
@property(nonatomic) GCKMediaQueueContainerType containerType;

/**
 * The container title. It can be audiobook title, Live TV Channel name, album name or playlist
 * name, etc.
 */
@property(nonatomic, copy, nullable) NSString *title;

/**
 * The metadata of each sections that a media stream contains.
 */
@property(nonatomic, copy) NSArray<GCKMediaMetadata *> *sections;

/**
 * The total playback time for the container.
 */
@property(nonatomic) NSTimeInterval containerDuration;

/**
 * Images associated with the queue. By default the first image is used when displaying queue
 * information. Used for audio book image, a TV Channel logo, album cover, etc.
 */
@property(nonatomic, copy) NSArray<GCKImage *> *containerImages;

/**
 * The author names. Used for audio book.
 */
@property(nonatomic, copy) NSArray<NSString *> *authors;

/**
 * The audiobook narrator names. Used for audio book.
 */
@property(nonatomic, copy) NSArray<NSString *> *narrators;

/**
 * The book publisher. Used for audio book.
 */
@property(nonatomic, copy) NSString *publisher;

/**
 * The book release date in ISO-8601 format. Used for audio book.
 */
@property(nonatomic, copy) NSString *releaseDate;

/**
 * Constructs a new @c GCKMediaQueueContainerMetadata with the given required attributes, and all
 * other attributes initialized to default values.
 */
- (instancetype)initWithContainerType:(GCKMediaQueueContainerType)containerType;

/**
 * Constructs a new @c GCKMediaQueueContainerMetadata with the given @c
 * GCKMediaQueueContainerMetadata instance.
 */
- (instancetype)initWithContainerMetadata:(GCKMediaQueueContainerMetadata *)containerMetadata;

- (instancetype)init NS_UNAVAILABLE;

/**
 * Builds a @c GCKMediaQueueContainerMetadata using the builder's current attributes.
 *
 * @return The new @c GCKMediaQueueContainerMetadata instance.
 */
- (GCKMediaQueueContainerMetadata *)build;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMediaQueueData.h
================================================
#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaCommon.h>

#import <Foundation/Foundation.h>

@class GCKImage;
@class GCKMediaQueueItem;
@class GCKMediaMetadata;
@class GCKMediaQueueContainerMetadata;

/**
 * @file GCKMediaQueueData.h
 * GCKMediaQueueType enum.
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKMediaQueueType
 * Enum defining the media queue metadata types.
 *
 * @since 4.4.1
 */
typedef NS_ENUM(NSInteger, GCKMediaQueueType) {
  GCKMediaQueueTypeGeneric = 0,
  /** A media type representing an album. */
  GCKMediaQueueTypeAlbum = 1,
  /** A media type representing an audio playlist. */
  GCKMediaQueueTypePlaylist = 2,
  /** A media type representing an audio book. */
  GCKMediaQueueTypeAudioBook = 3,
  /** A media type representing a radio station. */
  GCKMediaQueueTypeRadioStation = 4,
  /** A media type representing a podcast series. */
  GCKMediaQueueTypePodcastSeries = 5,
  /** A media type representing a TV series. */
  GCKMediaQueueTypeTVSeries = 6,
  /** A media type representing a video playlist. */
  GCKMediaQueueTypeVideoPlayList = 7,
  /** A media type representing a live TV. */
  GCKMediaQueueTypeLiveTV = 8,
  /** A media type representing a movie. */
  GCKMediaQueueTypeMovie = 9,
};

/**
 * A class that holds the information of the playing queue or media container.
 *
 * @since 4.4.1
 */
GCK_EXPORT
@interface GCKMediaQueueData : NSObject <NSCopying, NSSecureCoding>

/**
 * The queue type.
 */
@property(nonatomic, readonly) GCKMediaQueueType queueType;

/**
 * The queue id.
 */
@property(nonatomic, copy, readonly, nullable) NSString *queueID;

/**
 * The display name for queue.
 */
@property(nonatomic, copy, readonly, nullable) NSString *name;

/**
 * The deep link for the media as used by Google Assistant, if any.
 */
@property(nonatomic, copy, readonly, nullable) NSString *entity;

/**
 * The repeat mode of queue.
 */
@property(nonatomic, readonly) GCKMediaRepeatMode repeatMode;

/**
 * The container metadata.
 */
@property(nonatomic, copy, readonly, nullable) GCKMediaQueueContainerMetadata *containerMetadata;

/**
 * The index of the item to start playing with. Only for load request.
 */
@property(nonatomic, readonly) NSUInteger startIndex;

/**
 * The playback start time, in seconds. Only for load request.
 */
@property(nonatomic, readonly) NSTimeInterval startTime;

/**
 * The queueItems. Only for load requests.
 */
@property(nonatomic, copy, readonly, nullable) NSArray<GCKMediaQueueItem *> *items;

- (instancetype)init NS_UNAVAILABLE;

@end  // GCKMediaQueueData

/**
 * A builder object for constructing new or derived @c GCKMediaQueueData instances. The builder may
 * be used to derive @c GCKMediaQueueData from an existing one.
 *
 * @since 4.4.1
 */
GCK_EXPORT
@interface GCKMediaQueueDataBuilder : NSObject

/**
 * The queue type.
 */
@property(nonatomic) GCKMediaQueueType queueType;

/**
 * The queue id.
 */
@property(nonatomic, copy, nullable) NSString *queueID;

/**
 * The display name for queue.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 * The deep link for the media as used by Google Assistant, if any.
 */
@property(nonatomic, copy, nullable) NSString *entity;

/**
 * The repeat mode of queue.
 */
@property(nonatomic) GCKMediaRepeatMode repeatMode;

/**
 * The container metadata.
 */
@property(nonatomic, copy, nullable) GCKMediaQueueContainerMetadata *containerMetadata;

/**
 * The index of the item to start playing with. Only for load request.
 */
@property(nonatomic) NSUInteger startIndex;

/**
 * The playback start time, in seconds. Only for load request.
 * If not set, the receiver will set the start time depending on the stream type.
 * For non-live streams: loaded from 0.
 * For live streams: loaded from the most recent position.
 */
@property(nonatomic) NSTimeInterval startTime;

/**
 * The queueItems. Only for load requests.
 */
@property(nonatomic, copy, nullable) NSArray<GCKMediaQueueItem *> *items;

/**
 * Constructs a new @c GCKMediaQueueData with the given required attributes, and all other
 * attributes initialized to default values.
 */
- (instancetype)initWithQueueType:(GCKMediaQueueType)queueType;

/**
 * Constructs a new @c GCKMediaQueueData with the given @c GCKMediaQueueData instance.
 */
- (instancetype)initWithQueueData:(GCKMediaQueueData *)queueData;

- (instancetype)init NS_UNAVAILABLE;

/**
 * Builds a @c GCKMediaQueueData using the builder's current attributes.
 *
 * @return The new @c GCKMediaQueueData instance.
 */
- (GCKMediaQueueData *)build;

@end  // GCKMediaQueueDataBuilder

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMediaQueueItem.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaCommon.h>

#import <Foundation/Foundation.h>

/**
 * @file GCKMediaQueueItem.h
 */

@class GCKMediaInformation;
@class GCKMediaQueueItemBuilder;

/**
 * A media queue item ID.
 *
 * @since 4.1
 */
typedef NSUInteger GCKMediaQueueItemID;

NS_ASSUME_NONNULL_BEGIN

/**
 * @var kGCKMediaQueueInvalidItemID
 * An invalid queue item ID.
 */
GCK_EXTERN const GCKMediaQueueItemID kGCKMediaQueueInvalidItemID;

/**
 * A class representing a media queue item. Instances of this object are immutable.
 *
 * This class is used in two-way communication between a sender application and a receiver
 * application. The sender constructs them to load or insert a list of media items on the receiver
 * application. The @ref GCKMediaStatus from the receiver also contains the list of items
 * represented as instances of this class.
 *
 * Once loaded, the receiver will assign a unique item ID to each GCKMediaQueueItem, even if the
 * same media gets loaded multiple times.
 */
GCK_EXPORT
@interface GCKMediaQueueItem : NSObject <NSCopying>

/** The media information associated with this item. */
@property(nonatomic, strong, readonly) GCKMediaInformation *mediaInformation;

/** The item ID, or @ref kGCKMediaQueueInvalidItemID if one has not yet been assigned. */
@property(nonatomic, assign, readonly) GCKMediaQueueItemID itemID;

/**
 * Whether the item should automatically start playback when it becomes the current item in the
 * queue. If <code>NO</code>, the queue will pause when it reaches this item. The default value is
 * <code>YES</code>.
 * When using this item to load a media queue in @ref GCKMediaLoadRequestData, this property in the
 * first item only takes effect if @c autoplay in @ref GCKMediaLoadRequestData is nil.
 */
@property(nonatomic, assign, readonly) BOOL autoplay;

/**
 * The start time of the item, in seconds. The default value is @ref kGCKInvalidTimeInterval,
 * indicating that no start time has been set.
 */
@property(nonatomic, assign, readonly) NSTimeInterval startTime;

/**
 * The playback duration for the item, in seconds, or <code>INFINITY</code> if the stream's actual
 * duration should be used.
 */
@property(nonatomic, assign, readonly) NSTimeInterval playbackDuration;

/**
 * How long before the previous item ends, in seconds, before the receiver should start
 * preloading this item. The default value is @ref kGCKInvalidTimeInterval, indicating that no
 * preload time has been set.
 */
@property(nonatomic, assign, readonly) NSTimeInterval preloadTime;

/** The active track IDs for this item. */
@property(nonatomic, strong, readonly) NSArray<NSNumber *> *activeTrackIDs;

/** The custom data associated with this item, if any. */
@property(nonatomic, strong, readonly) id customData;

/**
 * Constructs a new GCKMediaQueueItem with the given attributes. See the documentation of the
 * corresponding properties for more information.
 *
 * @param mediaInformation The media information for the item.
 * @param autoplay The autoplay state for this item.
 * @param startTime The start time of the item, in seconds. May be
 * @ref kGCKInvalidTimeInterval if this item refers to a live stream or if the default start time
 * should be used.
 * @param preloadTime The preload time for the item, in seconds. May be @ref kGCKInvalidTimeInterval
 * to indicate no preload time.
 * @param activeTrackIDs The active track IDs for the item. May be <code>nil</code>.
 * @param customData Any custom data to associate with the item. May be <code>nil</code>.
 */
- (instancetype)initWithMediaInformation:(GCKMediaInformation *)mediaInformation
                                autoplay:(BOOL)autoplay
                               startTime:(NSTimeInterval)startTime
                             preloadTime:(NSTimeInterval)preloadTime
                          activeTrackIDs:(nullable NSArray<NSNumber *> *)activeTrackIDs
                              customData:(nullable id)customData;

/**
 * Designated initializer. Constructs a new GCKMediaQueueItem with the given attributes. See the
 * documentation of the corresponding properties for more information.
 *
 * @param mediaInformation The media information for the item.
 * @param autoplay The autoplay state for this item.
 * @param startTime The start time of the item, in seconds. May be @ref kGCKInvalidTimeInterval if
 * this item refers to a live stream or if the default start time should be used.
 * @param playbackDuration The playback duration of the item, in seconds. May be
 * @ref kGCKInvalidTimeInterval to indicate no preload time.
 * @param preloadTime The preload time for the item, in seconds.
 * @param activeTrackIDs The active track IDs for the item. May be <code>nil</code>.
 * @param customData Any custom data to associate with the item. May be <code>nil</code>.
 */
- (instancetype)initWithMediaInformation:(GCKMediaInformation *)mediaInformation
                                autoplay:(BOOL)autoplay
                               startTime:(NSTimeInterval)startTime
                        playbackDuration:(NSTimeInterval)playbackDuration
                             preloadTime:(NSTimeInterval)preloadTime
                          activeTrackIDs:(nullable NSArray<NSNumber *> *)activeTrackIDs
                              customData:(nullable id)customData
    /*NS_DESIGNATED_INITIALIZER*/;

/**
 * Clears (unassigns) the item ID. Should be called in order to reuse an existing instance, for
 * example, to add it back to a queue.
 */
- (void)clearItemID;

/**
 * Returns a copy of this GCKMediaQueueItem that has been modified by the given block.
 *
 * @param block A block that receives a GCKMediaQueueItemBuilder which can be used to modify
 * attributes of the copy. It is not necessary to call the builder's GCKMediaQueueItemBuilder::build
 * method within the block, as this method will do that automatically when the block completes.
 * @return A modified copy of this item.
 */
- (instancetype)mediaQueueItemModifiedWithBlock:(void (^)(GCKMediaQueueItemBuilder *builder))block;

@end

/**
 * A builder object for constructing new or derived GCKMediaQueueItem instances. The builder may be
 * used to derive a GCKMediaQueueItem from an existing one:
 *
 * @code
 * GCKMediaQueueItemBuilder *builder =
 *     [[GCKMediaQueueItemBuilder alloc] initWithMediaQueueItem:originalItem];
 * builder.startTime = 10; // Change the start time.
 * builder.autoplay = NO; // Change the autoplay flag.
 * GCKMediaQueueItem *derivedItem = [builder build];
 * @endcode
 *
 * It can also be used to construct a new GCKMediaQueueItem from scratch:
 *
 * @code
 * GCKMediaQueueItemBuilder *builder = [[GCKMediaQueueItemBuilder alloc] init];
 * builder.mediaInformation = ...;
 * builder.autoplay = ...;
 * // Set all other desired propreties...
 * GCKMediaQueueItem *newItem = [builder build];
 * @endcode
 */
GCK_EXPORT
@interface GCKMediaQueueItemBuilder : NSObject

/** The media information associated with this item. */
@property(nonatomic, copy, nullable) GCKMediaInformation *mediaInformation;

/**
 * Whether the item should automatically start playback when it becomes the current item in the
 * queue. If <code>NO</code>, the queue will pause when it reaches this item. The default value is
 * <code>YES</code>.
 */
@property(nonatomic, assign) BOOL autoplay;

/**
 * The start time of the item, in seconds. The default value is @ref kGCKInvalidTimeInterval,
 * indicating that a start time does not apply (for example, for a live stream) or that the default
 * start time should be used.
 */
@property(nonatomic, assign) NSTimeInterval startTime;

/**
 * The playback duration for the item, in seconds, or <code>INFINITY</code> if the stream's actual
 * duration should be used.
 */
@property(nonatomic, assign) NSTimeInterval playbackDuration;

/**
 * How long before the previous item ends, in seconds, before the receiver should start preloading
 * this item. The default value is @ref kGCKInvalidTimeInterval, indicating no preload time.
 */
@property(nonatomic, assign) NSTimeInterval preloadTime;

/** The active track IDs for this item. */
@property(nonatomic, copy, nullable) NSArray<NSNumber *> *activeTrackIDs;

/** The custom data associated with this item, if any. */
@property(nonatomic, copy, nullable) id customData;

/**
 * Constructs a new GCKMediaQueueItemBuilder with attributes initialized to default values.
 */
- (instancetype)init;

/**
 * Constructs a new GCKMediaQueueItemBuilder with attributes copied from the given
 * GCKMediaQueueItem, including the item ID.
 *
 * @param item The item to copy.
 */
- (instancetype)initWithMediaQueueItem:(nullable GCKMediaQueueItem *)item;

/**
 * Builds a GCKMediaQueueItem using the builder's current attributes.
 */
- (GCKMediaQueueItem *)build;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMediaQueueLoadOptions.h
================================================
// Copyright 2017 Google Inc.

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaCommon.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * Options for loading media queue items with GCKRemoteMediaClient.
 *
 * @since 4.3
 */
GCK_EXPORT
@interface GCKMediaQueueLoadOptions : NSObject <NSCopying, NSSecureCoding>

/**
 * Designated initializer. Initializes a GCKMediaLoadOptions with default values for all properties.
 */
- (instancetype)init;

/**
 * The index of the item in the queue items array that should be played first.
 */
@property(nonatomic, assign) NSUInteger startIndex;

/**
 * The initial playback position for the first item in the queue items array when it is first
 * played, relative to the beginning of the stream. This value is ignored when the same item is
 * played again, for example when the queue repeats, or the item is later jumped to. In those
 * cases the item's startTime is used.
 */
@property(nonatomic, assign) NSTimeInterval playPosition;

/**
 * The repeat mode for playing the queue.
 */
@property(nonatomic, assign) GCKMediaRepeatMode repeatMode;

/**
 * Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 */
@property(nonatomic, strong, nullable) id customData;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMediaRequestItem.h
================================================

// Copyright 2017 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

#import <GoogleCast/GCKHLSSegmentFormat.h>

/**
 * @file GCKMediaRequestItem.h
 * GCKStreamingProtocolType enum.
 */

NS_ASSUME_NONNULL_BEGIN

/** Media streaming protocol types. */
typedef NS_ENUM(NSInteger, GCKStreamingProtocolType) {
  /** Unknown streaming protocol. CAF receivers won't precache if protocol is unknown. */
  GCKStreamingProtocolTypeUnknown = 0,
  /** MPEG DASH protocol. CAF receivers will precache DASH contents only if MPL is used. */
  GCKStreamingProtocolTypeMPEGDASH = 1,
  /** HLS protocol. */
  GCKStreamingProtocolTypeHLS = 2,
  /** Smooth Streaming protocol. */
  GCKStreamingProtocolTypeSmoothStreaming = 3,
};

/**
 * A class representing a request item sent to Cast receivers. It can be used for precaching media
 * contents.
 *
 * @since 4.0
 */
GCK_EXPORT
@interface GCKMediaRequestItem : NSObject <NSCopying, NSSecureCoding>

/**
 * Helper to convert from <code>GCKHLSSegmentFormat</code> to <code>NSString</code>
 *
 * @since 4.1
 */
+ (NSString *)mapHLSSegmentFormatToString:(GCKHLSSegmentFormat)hlsSegmentFormat
    GCK_DEPRECATED("Use GCKHLSSegment::mapHLSSegmentFormatToString.");

/**
 * Helper to convert from <code>NSString</code> to <code>GCKHLSSegmentFormat</code>
 *
 * @since 4.1
 */
+ (GCKHLSSegmentFormat)mapHLSSegmentFormatStringToEnum:(NSString *)hlsSegmentFormatString
    GCK_DEPRECATED("Use GCKHLSSegment::mapHLSSegmentFormatStringToEnum.");

/**
 * Designated initializer. Initializes a GCKMediaRequestItem with URL, protocol type, initial time,
 * and HLS segment type.
 */
- (instancetype)initWithURL:(NSURL *)url
               protocolType:(GCKStreamingProtocolType)protocolType
                initialTime:(NSTimeInterval)initialTime
           hlsSegmentFormat:(GCKHLSSegmentFormat)hlsSegmentFormat;

/**
 * Convenience initializer. Initializes a GCKMediaRequestItem with URL and protocol type and use
 * default values for other properties.
 */
- (instancetype)initWithURL:(NSURL *)url protocolType:(GCKStreamingProtocolType)protocolType;

/**
 * The URL of media content.
 */
@property(nonatomic, strong) NSURL *mediaURL;

/**
 * The media streaming protocol.
 */
@property(nonatomic, assign) GCKStreamingProtocolType protocolType;

/**
 * The initial time of media to precache. The default is 0.0.
 */
@property(nonatomic, assign) NSTimeInterval initialTime;

/**
 * The HLS segment format. It's required if protocolType == GCKStreamingProtocolTypeHLS. The default
 * is GCKHLSSegmentFormatUndefined.
 */
@property(nonatomic, assign) GCKHLSSegmentFormat hlsSegmentFormat;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMediaSeekOptions.h
================================================
// Copyright 2017 Google Inc.

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaCommon.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * Options for seeking within media with GCKRemoteMediaClient.
 *
 * @since 4.0
 */
GCK_EXPORT
@interface GCKMediaSeekOptions : NSObject <NSCopying, NSSecureCoding>

/**
 * Designated initializer. Initializes a GCKMediaSeekOptions with default values for all properties.
 */
- (instancetype)init;

/**
 * The time interval by which to seek. The default value is <code>0</code>.
 */
@property(nonatomic, assign) NSTimeInterval interval;

/**
 * Whether the time interval is relative to the current stream position (<code>YES</code>) or to the
 * beginning of the stream (<code>NO</code>). The default value is <code>NO</code>, indicating an
 * absolute seek position.
 */
@property(nonatomic, assign) BOOL relative;

/**
 * The action to take after the seek operation has finished. The default value is
 * GCKMediaResumeStateUnchanged.
 */
@property(nonatomic, assign) GCKMediaResumeState resumeState;

/**
 * Whether seek to end of stream or live.
 *
 * @since 4.4.1
 */
@property(nonatomic, assign) BOOL seekToInfinite;

/**
 * Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 */
@property(nonatomic, strong, nullable) id customData;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMediaStatus.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKAdBreakStatus.h>
#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaCommon.h>

#import <Foundation/Foundation.h>

@class GCKMediaInformation;
@class GCKMediaQueueData;
@class GCKMediaQueueItem;
@class GCKMediaLiveSeekableRange;
@class GCKVideoInfo;

/**
 * @file GCKMediaStatus.h
 * GCKMediaPlayerState and GCKMediaPlayerIdleReason enums.
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * A flag (bitmask) indicating that a media item can be paused.
 *
 * @memberof GCKMediaStatus
 */
GCK_EXTERN const NSInteger kGCKMediaCommandPause;

/**
 * A flag (bitmask) indicating that a media item supports seeking.
 *
 * @memberof GCKMediaStatus
 */
GCK_EXTERN const NSInteger kGCKMediaCommandSeek;

/**
 * A flag (bitmask) indicating that a media item's audio volume can be changed.
 *
 * @memberof GCKMediaStatus
 */
GCK_EXTERN const NSInteger kGCKMediaCommandSetVolume;

/**
 * A flag (bitmask) indicating that a media item's audio can be muted.
 *
 * @memberof GCKMediaStatus
 */
GCK_EXTERN const NSInteger kGCKMediaCommandToggleMute;

/**
 * A flag (bitmask) indicating that a media item supports skipping forward.
 *
 * @memberof GCKMediaStatus
 */
GCK_EXTERN const NSInteger kGCKMediaCommandSkipForward;

/**
 * A flag (bitmask) indicating that a media item supports skipping backward.
 *
 * @memberof GCKMediaStatus
 */
GCK_EXTERN const NSInteger kGCKMediaCommandSkipBackward;

/**
 * A flag (bitmask) indicating that a media item supports moving to the next item in the queue.
 *
 * @memberof GCKMediaStatus
 */
GCK_EXTERN const NSInteger kGCKMediaCommandQueueNext;

/**
 * A flag (bitmask) indicating that a media item supports moving to the previous item in the
 * queue.
 *
 * @memberof GCKMediaStatus
 */
GCK_EXTERN const NSInteger kGCKMediaCommandQueuePrevious;

/**
 * A flag (bitmask) indicating that a media item supports shuffling.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandQueueShuffle;

/**
 * A flag (bitmask) indicating that a media item supports ad skipping.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandSkipAd;

/**
 * A flag (bitmask) indicating that a media item's queue supports indefinite repetition.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandQueueRepeatAll;

/**
 * A flag (bitmask) indicating that a media item supports indefinite repetition.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandQueueRepeatOne;

/**
 * A flag (bitmask) indicating that a media item and its queue support indefinite repetition.
 * queued items.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandQueueRepeat;

/**
 * A flag (bitmask) indicating that a media item's tracks are editable.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandEditTracks;

/**
 * A flag (bitmask) indicating that a media item's playback rate is configurable.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandSetPlaybackRate;

/**
 * A flag (bitmask) indicating that a media item can be liked by a user.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandLike;

/**
 * A flag (bitmask) indicating that a media item can be disliked by a user.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandDislike;

/**
 * A flag (bitmask) indicating that a media item's creator can be followed by a user.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandFollow;

/**
 * A flag (bitmask) indicating that a media item's creator can be unfollowed by a user.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandUnfollow;

/**
 * A flag (bitmask) indicating that a media item supports stream transfer.
 *
 * @memberof GCKMediaStatus
 * @since 4.4.5
 */
GCK_EXTERN const NSInteger kGCKMediaCommandStreamTransfer;

/**
 * @enum GCKMediaPlayerState
 * Media player states.
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKMediaPlayerState) {
  /** Constant indicating unknown player state. */
  GCKMediaPlayerStateUnknown = 0,
  /** Constant indicating that the media player is idle. */
  GCKMediaPlayerStateIdle = 1,
  /** Constant indicating that the media player is playing. */
  GCKMediaPlayerStatePlaying = 2,
  /** Constant indicating that the media player is paused. */
  GCKMediaPlayerStatePaused = 3,
  /** Constant indicating that the media player is buffering. */
  GCKMediaPlayerStateBuffering = 4,
  /** Constant indicating that the media player is loading media. */
  GCKMediaPlayerStateLoading = 5,
};

/**
 * @enum GCKMediaPlayerIdleReason
 * Media player idle reasons.
 */
typedef NS_ENUM(NSInteger, GCKMediaPlayerIdleReason) {
  /** Constant indicating that the player currently has no idle reason. */
  GCKMediaPlayerIdleReasonNone = 0,

  /** Constant indicating that the player is idle because playback has finished. */
  GCKMediaPlayerIdleReasonFinished = 1,

  /**
   * Constant indicating that the player is idle because playback has been cancelled in
   * response to a STOP command.
   */
  GCKMediaPlayerIdleReasonCancelled = 2,

  /**
   * Constant indicating that the player is idle because playback has been interrupted by
   * a LOAD command.
   */
  GCKMediaPlayerIdleReasonInterrupted = 3,

  /** Constant indicating that the player is idle because a playback error has occurred. */
  GCKMediaPlayerIdleReasonError = 4,
};

/**
 * A class that holds status information about some media.
 */
GCK_EXPORT
@interface GCKMediaStatus : NSObject <NSCopying>

/**
 * The current media session ID, if any; otherwise 0.
 */
@property(nonatomic, assign, readonly) NSInteger mediaSessionID;

/**
 * The current player state.
 */
@property(nonatomic, assign, readonly) GCKMediaPlayerState playerState;

/**
 * Indicates whether the receiver is currently playing an ad.
 *
 * @deprecated Use @ref adBreakStatus instead.
 */
@property(nonatomic, assign, readonly) BOOL playingAd;

/**
 * The current idle reason. This value is only meaningful if the player state is
 * GCKMediaPlayerStateIdle.
 */
@property(nonatomic, assign, readonly) GCKMediaPlayerIdleReason idleReason;

/**
 * Gets the current stream playback rate. This will be negative if the stream is seeking
 * backwards, 0 if the stream is paused, 1 if the stream is playing normally, and some other
 * positive value if the stream is seeking forwards.
 */
@property(nonatomic, assign, readonly) float playbackRate;

/**
 * The GCKMediaInformation for this item.
 */
@property(nonatomic, strong, readonly, nullable) GCKMediaInformation *mediaInformation;

/**
 * The current stream position, as an NSTimeInterval from the start of the stream.
 */
@property(nonatomic, assign, readonly) NSTimeInterval streamPosition;

/**
 * The stream's volume.
 */
@property(nonatomic, assign, readonly) float volume;

/**
 * The stream's mute state.
 */
@property(nonatomic, assign, readonly) BOOL isMuted;

/**
 * The current queue repeat mode.
 */
@property(nonatomic, assign, readonly) GCKMediaRepeatMode queueRepeatMode;

/**
 * The ID of the current queue item, if any.
 */
@property(nonatomic, assign, readonly) NSUInteger currentItemID;

/**
 * Whether there is a current item in the queue.
 */
@property(nonatomic, assign, readonly) BOOL queueHasCurrentItem;

/**
 * The current queue item, if any.
 */
@property(nonatomic, weak, readonly, nullable) GCKMediaQueueItem *currentQueueItem;

/**
 * Checks if there is an item after the currently playing item in the queue.
 */
@property(nonatomic, assign, readonly) BOOL queueHasNextItem;

/**
 * The next queue item, if any.
 */
@property(nonatomic, weak, readonly, nullable) GCKMediaQueueItem *nextQueueItem;

/**
 * Whether there is an item before the currently playing item in the queue.
 */
@property(nonatomic, assign, readonly) BOOL queueHasPreviousItem;

/**
 * Whether there is an item being preloaded in the queue.
 */
@property(nonatomic, assign, readonly) BOOL queueHasLoadingItem;

/**
 * The ID of the item that is currently preloaded, if any.
 */
@property(nonatomic, assign, readonly) NSUInteger preloadedItemID;

/**
 * The ID of the item that is currently loading, if any.
 */
@property(nonatomic, assign, readonly) NSUInteger loadingItemID;

/**
 * The list of active track IDs.
 */
@property(nonatomic, strong, readonly, nullable) NSArray<NSNumber *> *activeTrackIDs;

/**
 * The video information, if any.
 *
 * @since 3.3
 */
@property(nonatomic, strong, readonly, nullable) GCKVideoInfo *videoInfo;

/**
 * Any custom data that is associated with the media status.
 */
@property(nonatomic, strong, readonly, nullable) id customData;

/**
 * The current ad playback status.
 *
 * @since 3.3
 */
@property(nonatomic, strong, readonly, nullable) GCKAdBreakStatus *adBreakStatus;

/**
 * The seekable range of a stream.
 *
 * @since 4.4.1
 */
@property(nonatomic, readonly, nullable) GCKMediaLiveSeekableRange *liveSeekableRange;

/**
 * The media queue's metadata.
 *
 * @since 4.4.1
 */
@property(nonatomic, readonly, nullable) GCKMediaQueueData *queueData;

/**
 * Designated initializer.
 *
 * @param mediaSessionID The media session ID.
 * @param mediaInformation The media information.
 */
- (instancetype)initWithSessionID:(NSInteger)mediaSessionID
                 mediaInformation:(nullable GCKMediaInformation *)mediaInformation;

/**
 * Checks if the stream supports a given control command.
 */
- (BOOL)isMediaCommandSupported:(NSInteger)command;

/**
 * Returns the number of items in the playback queue.
 */
@property(nonatomic, assign, readonly) NSUInteger queueItemCount;

/**
 * Returns the item at the specified index in the playback queue.
 */
- (nullable GCKMediaQueueItem *)queueItemAtIndex:(NSUInteger)index;

/**
 * Returns the item with the given item ID in the playback queue.
 */
- (nullable GCKMediaQueueItem *)queueItemWithItemID:(NSUInteger)itemID;

/**
 * Returns the index of the item with the given item ID in the playback queue, or -1 if there is
 * no such item in the queue.
 */
- (NSInteger)queueIndexForItemID:(NSUInteger)itemID;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMediaTextTrackStyle.h
================================================
// Copyright 2014 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <CoreGraphics/CoreGraphics.h>
#import <Foundation/Foundation.h>

@class GCKColor;

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKMediaTextTrackStyleEdgeType
 * Closed caption text edge types (font effects).
 */
typedef NS_ENUM(NSInteger, GCKMediaTextTrackStyleEdgeType) {
  /** Unknown edge type. */
  GCKMediaTextTrackStyleEdgeTypeUnknown = -1,
  /** None. */
  GCKMediaTextTrackStyleEdgeTypeNone = 0,
  /** Outline. */
  GCKMediaTextTrackStyleEdgeTypeOutline = 1,
  /** Drop shadow. */
  GCKMediaTextTrackStyleEdgeTypeDropShadow = 2,
  /** Raised. */
  GCKMediaTextTrackStyleEdgeTypeRaised = 3,
  /** Depressed. */
  GCKMediaTextTrackStyleEdgeTypeDepressed = 4,
};

/**
 * @enum GCKMediaTextTrackStyleWindowType
 * Closed caption window types.
 */
typedef NS_ENUM(NSInteger, GCKMediaTextTrackStyleWindowType) {
  /** Unknown window type. */
  GCKMediaTextTrackStyleWindowTypeUnknown = -1,
  /** None. */
  GCKMediaTextTrackStyleWindowTypeNone = 0,
  /** Normal. */
  GCKMediaTextTrackStyleWindowTypeNormal = 1,
  /** Rounded corners. */
  GCKMediaTextTrackStyleWindowTypeRoundedCorners = 2,
};

/**
 * @enum GCKMediaTextTrackStyleFontGenericFamily
 * Closed caption text generic font families.
 */
typedef NS_ENUM(NSInteger, GCKMediaTextTrackStyleFontGenericFamily) {
  /** Unknown font family. */
  GCKMediaTextTrackStyleFontGenericFamilyUnknown = -1,
  /** None. */
  GCKMediaTextTrackStyleFontGenericFamilyNone = 0,
  /** Sans serif. */
  GCKMediaTextTrackStyleFontGenericFamilySansSerif = 1,
  /** Monospaced sans serif. */
  GCKMediaTextTrackStyleFontGenericFamilyMonospacedSansSerif = 2,
  /** Serif. */
  GCKMediaTextTrackStyleFontGenericFamilySerif = 3,
  /** Monospaced serif. */
  GCKMediaTextTrackStyleFontGenericFamilyMonospacedSerif = 4,
  /** Casual. */
  GCKMediaTextTrackStyleFontGenericFamilyCasual = 5,
  /** Cursive. */
  GCKMediaTextTrackStyleFontGenericFamilyCursive = 6,
  /** Small Capitals. */
  GCKMediaTextTrackStyleFontGenericFamilySmallCapitals = 7,
};

/**
 * @enum GCKMediaTextTrackStyleFontStyle
 * Closed caption text font styles.
 */
typedef NS_ENUM(NSInteger, GCKMediaTextTrackStyleFontStyle) {
  /** Unknown font style. */
  GCKMediaTextTrackStyleFontStyleUnknown = -1,
  /** Normal. */
  GCKMediaTextTrackStyleFontStyleNormal = 0,
  /** Bold. */
  GCKMediaTextTrackStyleFontStyleBold = 1,
  /** Italic. */
  GCKMediaTextTrackStyleFontStyleItalic = 2,
  /** Bold italic. */
  GCKMediaTextTrackStyleFontStyleBoldItalic = 3,
};

/**
 * A class representing a style for a text media track.
 */
GCK_EXPORT
@interface GCKMediaTextTrackStyle : NSObject <NSCopying, NSSecureCoding>

/**
 * Designated initializer. All properties are mutable and so can be supplied after construction.
 */
- (instancetype)init;

/**
 * Creates an instance with default values based on the system's closed captioning settings. This
 * method will return nil on systems older than iOS 7.
 */
+ (instancetype)createDefault;

/** The font scaling factor for the text. */
@property(nonatomic, assign) CGFloat fontScale;

/** The foreground color. */
@property(nonatomic, copy, nullable) GCKColor *foregroundColor;

/** The background color. */
@property(nonatomic, copy, nullable) GCKColor *backgroundColor;

/** The edge type. */
@property(nonatomic, assign) GCKMediaTextTrackStyleEdgeType edgeType;

/** The edge color. */
@property(nonatomic, copy, nullable) GCKColor *edgeColor;

/** The window type. <i>Some receiver devices may not support this attribute.</i> */
@property(nonatomic, assign) GCKMediaTextTrackStyleWindowType windowType;

/** The window color. <i>Some receiver devices may not support this attribute.</i> */
@property(nonatomic, copy, nullable) GCKColor *windowColor;

/**
 * Rounded corner radius absolute value in pixels.
 * <i>Some receiver devices may not support this attribute.</i>
 */
@property(nonatomic, assign) CGFloat windowRoundedCornerRadius;

/** The font family; if the font is not available, the generic font family will be used. **/
@property(nonatomic, copy, nullable) NSString *fontFamily;

/** The generic font family. */
@property(nonatomic, assign) GCKMediaTextTrackStyleFontGenericFamily fontGenericFamily;

/** The font style. */
@property(nonatomic, assign) GCKMediaTextTrackStyleFontStyle fontStyle;

/** The custom data, if any. */
@property(nonatomic, strong, nullable) id customData;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMediaTrack.h
================================================
// Copyright 2014 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/**
 * @file GCKMediaTrack.h
 * GCKMediaTrackType and GCKMediaTextTrackSubtype enums.
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKMediaTrackType
 * Media track types.
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKMediaTrackType) {
  /** Unknown track type. */
  GCKMediaTrackTypeUnknown = 0,
  /** Text. */
  GCKMediaTrackTypeText = 1,
  /** Audio. */
  GCKMediaTrackTypeAudio = 2,
  /** Video. */
  GCKMediaTrackTypeVideo = 3,
};

/**
 * @enum GCKMediaTextTrackSubtype
 * Media text track subtypes.
 */
typedef NS_ENUM(NSInteger, GCKMediaTextTrackSubtype) {
  /** Unknown text track subtype. */
  GCKMediaTextTrackSubtypeUnknown = 0,
  /** Subtitles. */
  GCKMediaTextTrackSubtypeSubtitles = 1,
  /** Captions. */
  GCKMediaTextTrackSubtypeCaptions = 3,
  /** Descriptions. */
  GCKMediaTextTrackSubtypeDescriptions = 4,
  /** Chapters. */
  GCKMediaTextTrackSubtypeChapters = 5,
  /** Metadata. */
  GCKMediaTextTrackSubtypeMetadata = 6,
};

/**
 * A class representing a media track. Instances of this object are immutable.
 */
GCK_EXPORT
@interface GCKMediaTrack : NSObject <NSCopying, NSSecureCoding>

/**
 * Designated initializer. Constructs a new GCKMediaTrack with the given property values.
 * Can return a <code>nil</code> value.
 */
- (nullable instancetype)initWithIdentifier:(NSInteger)identifier
                          contentIdentifier:(nullable NSString *)contentIdentifier
                                contentType:(NSString *)contentType
                                       type:(GCKMediaTrackType)type
                                textSubtype:(GCKMediaTextTrackSubtype)textSubtype
                                       name:(nullable NSString *)name
                               languageCode:(nullable NSString *)languageCode
                                 customData:(nullable id)customData;

/** The track's unique numeric identifier. */
@property(nonatomic, assign, readonly) NSInteger identifier;

/** The track's content identifier, which may be <code>nil</code>. */
@property(nonatomic, copy, readonly, nullable) NSString *contentIdentifier;

/** The track's content (MIME) type. */
@property(nonatomic, copy, readonly) NSString *contentType;

/** The track's type. */
@property(nonatomic, assign, readonly) GCKMediaTrackType type;

/** The text track's subtype; applies only to text tracks. */
@property(nonatomic, assign, readonly) GCKMediaTextTrackSubtype textSubtype;

/** The track's name, which may be <code>nil</code>. */
@property(nonatomic, copy, readonly, nullable) NSString *name;

/** The track's RFC 1766 language code, which may be <code>nil</code>. */
@property(nonatomic, copy, readonly, nullable) NSString *languageCode;

/**
 * The custom data, if any. Must either be an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 */
@property(nonatomic, strong, readonly, nullable) id customData;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMultizoneDevice.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDynamicDevice.h>

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A member device of a multizone group.
 *
 * @since 3.1
 */
GCK_EXPORT
@interface GCKMultizoneDevice : GCKDynamicDevice <NSCopying, NSSecureCoding>

/** The device volume level. */
@property(nonatomic, assign, readonly) float volumeLevel;

/** Whether the device is muted. */
@property(nonatomic, assign, readonly) BOOL muted;

- (instancetype)init NS_UNAVAILABLE;

@end  // GCKMultizoneDevice

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKMultizoneStatus.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKMultizoneDevice;

NS_ASSUME_NONNULL_BEGIN

/**
 * The status of a multizone group.
 *
 * @since 3.1
 */
GCK_EXPORT
@interface GCKMultizoneStatus : NSObject <NSCopying, NSSecureCoding>

/** The member devices of the multizone group. */
@property(nonatomic, copy, readonly) NSArray<GCKMultizoneDevice *> *devices;

/** Initializes the object with the given JSON data. */
- (instancetype)initWithJSONObject:(id)JSONObject
    GCK_DEPRECATED("GCKMultizoneStatus should only be initialized internally.");

/** Initializes the object with the given list of member devices. */
- (instancetype)initWithDevices:(NSArray<GCKMultizoneDevice *> *)devices
    GCK_DEPRECATED("GCKMultizoneStatus should only be initialized internally.");

- (instancetype)init NS_UNAVAILABLE;

@end  // GCKMultizoneStatus

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKNetworkAddress.h
================================================
// Copyright (c) 2018 Google Inc. All rights reserved.

#import <Foundation/Foundation.h>
#import <GoogleCast/GCKDefines.h>

/**
 * @enum GCKNetworkAddressType
 *
 * Network address types.
 *
 * @ingroup Networking
 */
typedef NS_CLOSED_ENUM(NSInteger, GCKNetworkAddressType) {
  /** Unknown address type. */
  GCKNetworkAddressTypeUnknown = 0,
  /** IPv4 address. */
  GCKNetworkAddressTypeIPv4 = 1,
  /** IPv6 address. */
  GCKNetworkAddressTypeIPv6 = 2,
  /** IPC (UNIX domain) address. */
  GCKNetworkAddressTypeIPC = 3,
};

NS_ASSUME_NONNULL_BEGIN

/**
 * An object that represents a network IP address. This object is immutable.
 *
 * @ingroup Networking
 *
 * @since 4.2
 */
GCK_EXPORT
@interface GCKNetworkAddress : NSObject <NSCopying, NSSecureCoding>

/** The address type. */
@property(nonatomic, assign, readonly) GCKNetworkAddressType type;
/** The IP address. */
@property(nonatomic, copy, readonly, nullable) NSString *ipAddress;
/**
 * The network address as an NSData containing the appropriate address structure
 * (e.g., struct in_addr or struct in6_addr). For the address type IPC, this field is a UTF8
 * encoding.
 */
@property(nonatomic, copy, readonly, nullable) NSData *addressData;

/** Using the default initializer is not allowed. */
- (instancetype)init NS_UNAVAILABLE;

/**
 * Constructs a GCKNetworkAddress with the given address type and IP address.
 *
 * @param type The address type.
 * @param ipAddress The IP address, in textual form. May be <code>nil</code> to indicate the
 *     wildcard ("any") address.
 */
- (instancetype)initWithType:(GCKNetworkAddressType)type ipAddress:(nullable NSString *)ipAddress;

/**
 * Constructs a GCKNetworkAddress with the given address type and raw address.
 *
 * @param type The address type.
 * @param addressData An NSData object containing the appropriate address structure (e.g.,
 *     struct in_addr or struct in6_addr). For the GCKNNetworkAddressTypeIPC, the data is expected
 * to be a UTF8 encoding.
 */
- (instancetype)initWithType:(GCKNetworkAddressType)type addressData:(nullable NSData *)addressData;

/**
 * Constructs a wildcard address of the given type.
 */
+ (GCKNetworkAddress *)wildcardAddressOfType:(GCKNetworkAddressType)type;

/**
 * Constructs a loopback address of the given type.
 */
+ (GCKNetworkAddress *)loopbackAddressOfType:(GCKNetworkAddressType)type;

/**
 * Constructs an IPv4 broadcast address.
 */
+ (GCKNetworkAddress *)IPv4BroadcastAddress;

/**
 * Constructs an IPv4 address.
 */
+ (GCKNetworkAddress *)addressWithIPv4Address:(NSString *)ipAddress;

/**
 * Constructs an IPv6 address.
 */
+ (GCKNetworkAddress *)addressWithIPv6Address:(NSString *)ipAddress;

/**
 * Constructs an IPC address.
 */
+ (GCKNetworkAddress *)addressWithIPCPath:(NSString *)path;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKOpenURLOptions.h
================================================
// Copyright 2017 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * An object representing options that can be passed to a Cast-enabled application via a deep-link
 * URL. The source app encodes the Cast-specific options (including the unique ID of the
 * device to cast to, and optionally the session ID of a specific Cast session to join) in a query
 * parameter of the application URL using #asURLQueryItem, and then opens the URL using
 * UIApplication's <code>-[openURL:options:completionHandler:]</code> method. The target app
 * extracts the  Cast-specific options from the URL it receives in its UIApplicationDelegate's
 * <code>-[application:openURL:options:]</code> method by calling
 * GCKOpenURLOptions::openURLOptionsFromURL:.
 * It then starts or joins a Cast session by passing these options to
 * GCKSessionManager::startSessionWithOpenURLOptions:sessionOptions:.
 *
 * @since 4.0
 */
GCK_EXPORT
@interface GCKOpenURLOptions : NSObject<NSCopying, NSSecureCoding>

/**
 * The unique ID of the device to connect to. Required.
 */
@property(nonatomic, copy, nullable) NSString *deviceUniqueID;

/**
 * The friendly name of the device to connect to. Optional. This value is not used by the GoogleCast
 * framework, but may be of interest to the receiving application.
 */
@property(nonatomic, copy, nullable) NSString *deviceFriendlyName;

/**
 * The session ID of the Cast session to join. Optional. A value of <code>nil</code> indicates that
 * any currently active session should be joined, or if there is none, that a new one should be
 * created.
 */
@property(nonatomic, copy, nullable) NSString *sessionID;

/**
 * Extracts the Cast-specific options from the specified URL.
 *
 * @return The extracted options, or <code>nil</code> if the URL did not contain any Cast-specific
 * options.
 */
+ (nullable GCKOpenURLOptions *)openURLOptionsFromURL:(NSURL *)url;

/**
 * Converts the options into a URL query item.
 *
 * @return The options as an NSURLQueryItem.
 */
- (NSURLQueryItem *)asURLQueryItem;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKRemoteMediaClient+Protected.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKRemoteMediaClient.h>

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * Methods to be called by GCKRemoteMediaClient subclasses only.
 *
 * @since 3.3
 */
@interface GCKRemoteMediaClient (Protected)

/**
 * To be called by subclasses whenever a media session begins, namely, right after new media has
 * been successfully loaded on the remote player.
 */
- (void)notifyDidStartMediaSession;

/**
 * To be called by subclasses whenever the mediaStatus object of the client changes.
 */
- (void)notifyDidUpdateMediaStatus;

/**
 * To be called by subclasses whenever the media queue managed by the client changes.
 */
- (void)notifyDidUpdateQueue;

/**
 * To be called by subclasses whenever the @ref GCKMediaStatus::preloadedItemID of the client's
 * GCKMediaStatus changes.
 */
- (void)notifyDidUpdatePreloadStatus;

/**
 * To be called by subclasses whenever the metadata changes.
 */
- (void)notifyDidUpdateMetadata;

/**
 * To be called by subclasses whenever the list of media queue item IDs is received.
 *
 * @param itemIDs The list of queue item IDs.
 *
 * @since 4.1
 */
- (void)notifyDidReceiveQueueItemIDs:(NSArray<NSNumber *> *)itemIDs;

/**
 * To be called by subclasses whenever a contiguous sequence of queue items has been inserted
 * into the queue.
 *
 * @param itemIDs The list of queue item IDs identifying the items that were inserted.
 * @param beforeItemID The ID of the queue item in front of which the new items were inserted, or
 * kGCKInvalidQueueItemID if the items were appended to the end of the queue.
 *
 * @since 4.1
 */
- (void)notifyDidInsertQueueItemsWithIDs:(NSArray<NSNumber *> *)itemIDs
                        beforeItemWithID:(GCKMediaQueueItemID)beforeItemID;

/**
 * To be called by subclasses whenever existing queue items have been updated in the queue.
 *
 * @param itemIDs The list of queue item IDs identifying the items that were updated.
 *
 * @since 4.1
 */
- (void)notifyDidUpdateQueueItemsWithIDs:(NSArray<NSNumber *> *)itemIDs;

/**
 * To be called by subclasses whenever a contiguous sequence of queue items has been removed
 * from the queue.
 *
 * @param itemIDs The list of queue item IDs identifying the items that were removed.
 *
 * @since 4.1
 */
- (void)notifyDidRemoveQueueItemsWithIDs:(NSArray<NSNumber *> *)itemIDs;

/**
 * To be called by a subclass whenever queue items have been received.
 *
 * @param items The list of queue items.
 *
 * @since 4.1
 */
- (void)notifyDidReceiveQueueItems:(NSArray<GCKMediaQueueItem *> *)items;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKRemoteMediaClient.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaCommon.h>
#import <GoogleCast/GCKMediaInformation.h>
#import <GoogleCast/GCKMediaMetadata.h>
#import <GoogleCast/GCKMediaQueue.h>
#import <GoogleCast/GCKMediaQueueItem.h>
#import <GoogleCast/GCKMediaStatus.h>
#import <GoogleCast/GCKRequest.h>

#import <Foundation/Foundation.h>

@class GCKMediaLoadOptions;
@class GCKMediaLoadRequestData;
@class GCKMediaQueueLoadOptions;
@class GCKMediaSeekOptions;
@protocol GCKRemoteMediaClientListener;
@protocol GCKRemoteMediaClientAdInfoParserDelegate;

NS_ASSUME_NONNULL_BEGIN


/**
 * A class for controlling media playback on a Cast receiver. An instance of this object is
 * available as the property GCKSession::remoteMediaClient.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKRemoteMediaClient : NSObject

/** A flag that indicates whether this object is connected to a session. */
@property(nonatomic, assign, readonly) BOOL connected;

/** The current media status, as reported by the media control channel. */
@property(nonatomic, strong, readonly, nullable) GCKMediaStatus *mediaStatus;

/**
 * The media queue.
 *
 * @since 4.3.4
 */
@property(nonatomic, strong, readonly) GCKMediaQueue *mediaQueue;

/**
 * The amount of time that has passed since the last media status update was received. If a
 * media status has not been received yet this value will be NAN.
 */
@property(nonatomic, assign, readonly) NSTimeInterval timeSinceLastMediaStatusUpdate;

/**
 * A flag that indicates whether this client is playing a live stream.
 *
 * @since 4.4.1
 */
@property(nonatomic, readonly, getter=isPlayingLiveStream) BOOL playingLiveStream;

/**
 * Adds a listener to this object's list of listeners.
 *
 * The added listener is weakly held, and should be retained to avoid unexpected deallocation.
 *
 * @param listener The listener to add.
 */
- (void)addListener:(id<GCKRemoteMediaClientListener>)listener;

/**
 * Removes a listener from this object's list of listeners.
 *
 * @param listener The listener to remove.
 */
- (void)removeListener:(id<GCKRemoteMediaClientListener>)listener;

/**
 * A delegate capable of extracting ad break information from the custom data in a GCKMediaStatus
 * object.
 *
 * @deprecated Use GCKAdBreakStatus instead.
 */
@property(nonatomic, weak) id<GCKRemoteMediaClientAdInfoParserDelegate> adInfoParserDelegate;

/**
 * Loads and starts playback of a media item or a queue of media items with a request data.
 *
 * @param requestData Describes the media load request.
 * @return The GCKRequest object for tracking this request.
 *
 * @since 4.4.1
 */
- (GCKRequest *)loadMediaWithLoadRequestData:(GCKMediaLoadRequestData *)requestData;

/**
 * Loads and starts playback of a new media item with default options.
 *
 * It is recommended to use @ref loadMediaWithLoadRequestData: instead, which is an advanced
 * load command supporting loading a single item or a queue with additional options.
 *
 * @param mediaInfo Describes the media item to load.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)loadMedia:(GCKMediaInformation *)mediaInfo;

/**
 * Loads and starts playback of a new media item with the specified options.
 *
 * It is recommended to use @ref loadMediaWithLoadRequestData:  instead, which is an advanced
 * load command supporting loading a single item or a queue with additional options.
 *
 * @param mediaInfo Describes the media item to load.
 * @param options The load options for this request.
 * @return The GCKRequest object for tracking this request.
 *
 * @since 4.0
 */
- (GCKRequest *)loadMedia:(GCKMediaInformation *)mediaInfo
              withOptions:(GCKMediaLoadOptions *)options;

/**
 * Loads and optionally starts playback of a new media item.
 *
 * @param mediaInfo Describes the media item to load.
 * @param autoplay Whether playback should start immediately.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use loadMediaWithLoadRequestData:.
 */
- (GCKRequest *)loadMedia:(GCKMediaInformation *)mediaInfo
                 autoplay:(BOOL)autoplay GCK_DEPRECATED("Use loadMediaWithLoadRequestData:");

/**
 * Loads and optionally starts playback of a new media item.
 *
 * @param mediaInfo Describes the media item to load.
 * @param autoplay Whether playback should start immediately.
 * @param playPosition The initial playback position.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use loadMediaWithLoadRequestData:.
 */
- (GCKRequest *)loadMedia:(GCKMediaInformation *)mediaInfo
                 autoplay:(BOOL)autoplay
             playPosition:(NSTimeInterval)playPosition
    GCK_DEPRECATED("Use loadMediaWithLoadRequestData:");

/**
 * Loads and optionally starts playback of a new media item.
 *
 * @param mediaInfo Describes the media item to load.
 * @param autoplay Whether playback should start immediately.
 * @param playPosition The initial playback position.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use loadMediaWithLoadRequestData:.
 */
- (GCKRequest *)loadMedia:(GCKMediaInformation *)mediaInfo
                 autoplay:(BOOL)autoplay
             playPosition:(NSTimeInterval)playPosition
               customData:(nullable id)customData
    GCK_DEPRECATED("Use loadMediaWithLoadRequestData:");

/**
 * Loads and optionally starts playback of a new media item.
 *
 * @param mediaInfo Describes the media item to load.
 * @param autoplay Whether playback should start immediately.
 * @param playPosition The initial playback position.
 * @param activeTrackIDs An array of integers specifying the active tracks.
 * May be <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use loadMediaWithLoadRequestData:.
 */
- (GCKRequest *)loadMedia:(GCKMediaInformation *)mediaInfo
                 autoplay:(BOOL)autoplay
             playPosition:(NSTimeInterval)playPosition
           activeTrackIDs:(nullable NSArray<NSNumber *> *)activeTrackIDs
    GCK_DEPRECATED("Use loadMediaWithLoadRequestData:");

/**
 * Loads and optionally starts playback of a new media item.
 *
 * @param mediaInfo Describes the media item to load.
 * @param autoplay Whether playback should start immediately.
 * @param playPosition The initial playback position.
 * @param activeTrackIDs An array of integers specifying the active tracks.
 * May be <code>nil</code>.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use loadMediaWithLoadRequestData:.
 */
- (GCKRequest *)loadMedia:(GCKMediaInformation *)mediaInfo
                 autoplay:(BOOL)autoplay
             playPosition:(NSTimeInterval)playPosition
           activeTrackIDs:(nullable NSArray<NSNumber *> *)activeTrackIDs
               customData:(nullable id)customData
    GCK_DEPRECATED("Use loadMediaWithLoadRequestData:");

/**
 * Sets the playback rate for the current media session.
 *
 * @param playbackRate The new playback rate.
 * @return The GCKRequest object for tracking this request.
 * @since 4.0
 */
- (GCKRequest *)setPlaybackRate:(float)playbackRate;

/**
 * Sets the playback rate for the current media session.
 *
 * @param playbackRate The new playback rate, which must be between
 * GCKMediaLoadOptions::kGCKMediaMinPlaybackRate and GCKMediaLoadOptions::kGCKMediaMaxPlaybackRate.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 * @since 4.0
 */
- (GCKRequest *)setPlaybackRate:(float)playbackRate customData:(nullable id)customData;

/**
 * Sets the active tracks. The request will fail if there is no current media status.
 *
 * @param activeTrackIDs An array of integers specifying the active tracks. May be empty or
 * <code>nil</code> to disable any currently active tracks.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)setActiveTrackIDs:(nullable NSArray<NSNumber *> *)activeTrackIDs;

/**
 * Sets the text track style. The request will fail if there is no current media status.
 *
 * @param textTrackStyle The text track style. The style will not be changed if this is
 * <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)setTextTrackStyle:(nullable GCKMediaTextTrackStyle *)textTrackStyle;

/**
 * Pauses playback of the current media item. The request will fail if there is no current media
 * status.
 *
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)pause;

/**
 * Pauses playback of the current media item. The request will fail if there is no current media
 * status.
 *
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)pauseWithCustomData:(nullable id)customData;

/**
 * Stops playback of the current media item. If a queue is currently loaded, it will be removed. The
 * request will fail if there is no current media status.
 *
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)stop;

/**
 * Stops playback of the current media item. If a queue is currently loaded, it will be removed. The
 * request will fail if there is no current media status.
 *
 *
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)stopWithCustomData:(nullable id)customData;

/**
 * Begins (or resumes) playback of the current media item. Playback always begins at the
 * beginning of the stream. The request will fail if there is no current media status.
 *
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)play;

/**
 * Begins (or resumes) playback of the current media item. Playback always begins at the
 * beginning of the stream. The request will fail if there is no current media status.
 *
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)playWithCustomData:(nullable id)customData;

/**
 * Sends a request to skip the playing ad.
 * @return The GCKRequest object for tracking this request.
 *
 * @since 4.3
 */
- (GCKRequest *)skipAd;

/**
 * Seeks to a new position within the current media item. The request will fail if there is no
 * current media status.
 *
 * @param options The seek options for the request.
 * @return The GCKRequest object for tracking this request.
 * @since 4.0
 */
- (GCKRequest *)seekWithOptions:(GCKMediaSeekOptions *)options;

/**
 * Seeks to a new position within the current media item. The request will fail if there is no
 * current media status.
 *
 * @param position The new position from the beginning of the stream.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use seekWithOptions:.
 */
- (GCKRequest *)seekToTimeInterval:(NSTimeInterval)position
    GCK_DEPRECATED("Use seekWithOptions:");

/**
 * Seeks to a new position within the current media item. The request will fail if there is no
 * current media status.
 *
 * @param position The new position interval from the beginning of the stream.
 * @param resumeState The action to take after the seek operation has finished.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use seekWithOptions:.
 */
- (GCKRequest *)seekToTimeInterval:(NSTimeInterval)position
                       resumeState:(GCKMediaResumeState)resumeState
    GCK_DEPRECATED("Use seekWithOptions:");

/**
 * Seeks to a new position within the current media item. The request will fail if there is no
 * current media status.
 *
 * @param position The new position from the beginning of the stream.
 * @param resumeState The action to take after the seek operation has finished.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use seekWithOptions:.
 */
- (GCKRequest *)seekToTimeInterval:(NSTimeInterval)position
                       resumeState:(GCKMediaResumeState)resumeState
                        customData:(nullable id)customData GCK_DEPRECATED("Use seekWithOptions:");

/**
 * Requests the list of item IDs for the queue. The results are passed to the delegate callback
 * GCKRemoteMediaClientDelegate::remoteMediaClient:didReceiveQueueItemIDs:.
 *
 * @return The GCKRequest object for tracking this request.
 *
 * @since 4.1
 */
- (GCKRequest *)queueFetchItemIDs;

/**
 * Requests complete information for the queue items with the given item IDs. The results are
 * passed to the delegate callback
 * GCKRemoteMediaClientDelegate::remoteMediaClient:didReceiveQueueItems:.
 *
 * @return The GCKRequest object for tracking this request.
 *
 * @since 4.1
 */
- (GCKRequest *)queueFetchItemsForIDs:(NSArray<NSNumber *> *)queueItemIDs;

/**
 * Loads and optionally starts playback of a new queue of media items.
 *
 * @param queueItems An array of GCKMediaQueueItem instances to load. Must not be <code>nil</code>
 * or empty.
 * @param startIndex The index of the item in the items array that should be played first.
 * @param repeatMode The repeat mode for playing the queue.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use loadMediaWithLoadRequestData:.
 */
- (GCKRequest *)queueLoadItems:(NSArray<GCKMediaQueueItem *> *)queueItems
                    startIndex:(NSUInteger)startIndex
                    repeatMode:(GCKMediaRepeatMode)repeatMode
    GCK_DEPRECATED("Use loadMediaWithLoadRequestData:");

/**
 * Loads and optionally starts playback of a new queue of media items.
 *
 * @param queueItems An array of GCKMediaQueueItem instances to load. Must not be <code>nil</code>
 * or empty.
 * @param startIndex The index of the item in the items array that should be played first.
 * @param repeatMode The repeat mode for playing the queue.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use loadMediaWithLoadRequestData:.
 */
- (GCKRequest *)queueLoadItems:(NSArray<GCKMediaQueueItem *> *)queueItems
                    startIndex:(NSUInteger)startIndex
                    repeatMode:(GCKMediaRepeatMode)repeatMode
                    customData:(nullable id)customData
    GCK_DEPRECATED("Use loadMediaWithLoadRequestData:");

/**
 * Loads and optionally starts playback of a new queue of media items.
 *
 * @param queueItems An array of GCKMediaQueueItem instances to load. Must not be <code>nil</code>
 * or empty.
 * @param startIndex The index of the item in the items array that should be played first.
 * @param playPosition The initial playback position for the item when it is first played,
 * relative to the beginning of the stream. This value is ignored when the same item is played
 * again, for example when the queue repeats, or the item is later jumped to. In those cases the
 * item's startTime is used.
 * @param repeatMode The repeat mode for playing the queue.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 * @deprecated Use loadMediaWithLoadRequestData:.
 */
- (GCKRequest *)queueLoadItems:(NSArray<GCKMediaQueueItem *> *)queueItems
                    startIndex:(NSUInteger)startIndex
                  playPosition:(NSTimeInterval)playPosition
                    repeatMode:(GCKMediaRepeatMode)repeatMode
                    customData:(nullable id)customData
    GCK_DEPRECATED("Use loadMediaWithLoadRequestData:");

/**
 * Loads and optionally starts playback of a new queue of media items.
 *
 * It is recommended to use @ref loadMediaWithLoadRequestData:  instead, which is an advanced
 * load command supporting loading a single item or a queue with additional options.
 *
 * @param queueItems An array of GCKMediaQueueItem instances to load. Must not be <code>nil</code>
 * or empty.
 * @param options The load options used to load the queue items, as defined by
 *   GCKMediaQueueLoadOptions
 *
 * @since 4.3.1
 */
- (GCKRequest *)queueLoadItems:(NSArray<GCKMediaQueueItem *> *)queueItems
                   withOptions:(GCKMediaQueueLoadOptions *)options;

/**
 * Inserts a list of new media items into the queue.
 *
 * @param queueItems An array of GCKMediaQueueItem instances to insert. Must not be <code>nil</code>
 * or empty.
 * @param beforeItemID The ID of the item that will be located immediately after the inserted list.
 * If the value is @ref kGCKMediaQueueInvalidItemID, the inserted list will be appended to the end
 * of the queue.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueInsertItems:(NSArray<GCKMediaQueueItem *> *)queueItems
                beforeItemWithID:(NSUInteger)beforeItemID;

/**
 * Inserts a list of new media items into the queue.
 *
 * @param queueItems An array of GCKMediaQueueItem instances to insert. Must not be <code>nil</code>
 * or empty.
 * @param beforeItemID ID of the item that will be located immediately after the inserted list. If
 * the value is @ref kGCKMediaQueueInvalidItemID, the inserted list will be appended to the end of
 * the queue.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueInsertItems:(NSArray<GCKMediaQueueItem *> *)queueItems
                beforeItemWithID:(NSUInteger)beforeItemID
                      customData:(nullable id)customData;

/**
 * A convenience method that inserts a single item into the queue.
 *
 * @param item The item to insert.
 * @param beforeItemID The ID of the item that will be located immediately after the inserted item.
 * If the value is @ref kGCKMediaQueueInvalidItemID, or does not refer to any item currently in the
 * queue, the inserted item will be appended to the end of the queue.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueInsertItem:(GCKMediaQueueItem *)item beforeItemWithID:(NSUInteger)beforeItemID;

/**
 * A convenience method that inserts a single item into the queue and makes it the current item.
 *
 * @param item The item to insert.
 * @param beforeItemID The ID of the item that will be located immediately after the inserted item.
 * If the value is @ref kGCKMediaQueueInvalidItemID, or does not refer to any item currently in the
 * queue, the inserted item will be appended to the end of the queue.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueInsertAndPlayItem:(GCKMediaQueueItem *)item
                      beforeItemWithID:(NSUInteger)beforeItemID;

/**
 * A convenience method that inserts a single item into the queue and makes it the current item.
 *
 * @param item The item to insert.
 * @param beforeItemID The ID of the item that will be located immediately after the inserted item.
 * If the value is @ref kGCKMediaQueueInvalidItemID, or does not refer to any item currently in the
 * queue, the inserted item will be appended to the end of the queue.
 * @param playPosition The initial playback position for the item when it is first played,
 * relative to the beginning of the stream. This value is ignored when the same item is played
 * again, for example when the queue repeats, or the item is later jumped to. In those cases the
 * item's startTime is used.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueInsertAndPlayItem:(GCKMediaQueueItem *)item
                      beforeItemWithID:(NSUInteger)beforeItemID
                          playPosition:(NSTimeInterval)playPosition
                            customData:(nullable id)customData;

/**
 * Updates the queue.
 *
 * @param queueItems The list of updated items.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueUpdateItems:(NSArray<GCKMediaQueueItem *> *)queueItems;

/**
 * Updates the queue.
 *
 * @param queueItems The list of updated items.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueUpdateItems:(NSArray<GCKMediaQueueItem *> *)queueItems
                      customData:(nullable id)customData;

/**
 * Removes a list of media items from the queue. If the queue becomes empty as a result, the current
 * media session will be terminated.
 *
 * @param itemIDs An array of media item IDs identifying the items to remove. Must not be
 * <code>nil</code> or empty.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueRemoveItemsWithIDs:(NSArray<NSNumber *> *)itemIDs;

/**
 * Removes a list of media items from the queue. If the queue becomes empty as a result, the current
 * media session will be terminated.
 *
 * @param itemIDs An array of media item IDs identifying the items to remove. Must not be
 * <code>nil</code> or empty.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueRemoveItemsWithIDs:(NSArray<NSNumber *> *)itemIDs
                             customData:(nullable id)customData;

/**
 * A convenience method that removes a single item from the queue.
 *
 * @param itemID The ID of the item to remove.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueRemoveItemWithID:(NSUInteger)itemID;

/**
 * Reorders a list of media items in the queue.
 *
 * @param queueItemIDs An array of media item IDs identifying the items to reorder. Must not be
 * <code>nil</code> or empty.
 * @param beforeItemID ID of the item that will be located immediately after the reordered list. If
 * the value is @ref kGCKMediaQueueInvalidItemID, or does not refer to any item currently in the
 * queue, the reordered list will be appended at the end of the queue.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueReorderItemsWithIDs:(NSArray<NSNumber *> *)queueItemIDs
                  insertBeforeItemWithID:(NSUInteger)beforeItemID;

/**
 * Reorder a list of media items in the queue.
 *
 * @param queueItemIDs An array of media item IDs identifying the items to reorder. Must not be
 * <code>nil</code> or empty.
 * @param beforeItemID The ID of the item that will be located immediately after the reordered list.
 * If the value is @ref kGCKMediaQueueInvalidItemID, or does not refer to any item currently in the
 * queue, the reordered list will be moved to the end of the queue.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueReorderItemsWithIDs:(NSArray<NSNumber *> *)queueItemIDs
                  insertBeforeItemWithID:(NSUInteger)beforeItemID
                              customData:(nullable id)customData;

/**
 * A convenience method that moves a single item in the queue.
 *
 * @param itemID The ID of the item to move.
 * @param beforeItemID The ID of the item that will be located immediately after the reordered list.
 * If the value is @ref kGCKMediaQueueInvalidItemID, or does not refer to any item currently in the
 * queue, the item will be moved to the end of the queue.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueMoveItemWithID:(NSUInteger)itemID beforeItemWithID:(NSUInteger)beforeItemID;

/**
 * Jumps to the item with the specified ID in the queue.
 *
 * @param itemID The ID of the item to jump to.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueJumpToItemWithID:(NSUInteger)itemID;

/**
 * Jumps to the item with the specified ID in the queue.
 *
 * @param itemID The ID of the item to jump to.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueJumpToItemWithID:(NSUInteger)itemID customData:(nullable id)customData;

/**
 * Jumps to the item with the specified ID in the queue.
 *
 * @param itemID The ID of the item to jump to.
 * @param playPosition The initial playback position for the item when it is first played,
 * relative to the beginning of the stream. This value is ignored when the same item is played
 * again, for example when the queue repeats, or the item is later jumped to. In those cases the
 * item's startTime is used.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueJumpToItemWithID:(NSUInteger)itemID
                         playPosition:(NSTimeInterval)playPosition
                           customData:(nullable id)customData;

/**
 * Moves to the next item in the queue.
 *
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueNextItem;

/**
 * Moves to the previous item in the queue.
 *
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queuePreviousItem;

/**
 * Sets the queue repeat mode.
 *
 * @param repeatMode The new repeat mode.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)queueSetRepeatMode:(GCKMediaRepeatMode)repeatMode;

/**
 * Sets the stream volume. The request will fail if there is no current media session.
 *
 * @param volume The new volume, in the range [0.0 - 1.0].
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)setStreamVolume:(float)volume;

/**
 * Sets the stream volume. The request will fail if there is no current media session.
 *
 * @param volume The new volume, in the range [0.0 - 1.0].
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)setStreamVolume:(float)volume customData:(nullable id)customData;

/**
 * Sets whether the stream is muted. The request will fail if there is no current media session.
 *
 * @param muted Whether the stream should be muted or unmuted.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)setStreamMuted:(BOOL)muted;

/**
 * Sets whether the stream is muted. The request will fail if there is no current media session.
 *
 * @param muted Whether the stream should be muted or unmuted.
 * @param customData Custom application-specific data to pass along with the request. Must either be
 * an object that can be serialized to JSON using
 * <a href="https://goo.gl/0vd4Q2"><b>NSJSONSerialization</b></a>, or <code>nil</code>.
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)setStreamMuted:(BOOL)muted customData:(nullable id)customData;

/**
 * Requests updated media status information from the receiver.
 *
 * @return The GCKRequest object for tracking this request.
 */
- (GCKRequest *)requestStatus;

/**
 * Returns the approximate stream position as calculated from the last received stream information
 * and the elapsed wall-time since that update. Returns 0 if the channel is not connected or if no
 * media is currently loaded.
 */
- (NSTimeInterval)approximateStreamPosition;

/**
 * Returns the approximate start position of seekable range as calculated from the last received
 * stream information and the elapsed wall-time since that update. Returns 0 if the channel is not
 * connected or if no media is currently loaded. Returns @c kGCKInvalidTimeInterval if the stream is
 * not live stream or there is no seekable range.
 *
 * @since 4.4.1
 */
- (NSTimeInterval)approximateLiveSeekableRangeStart;

/**
 * Returns the approximate end position of seekable range as calculated from the last received
 * stream information and the elapsed wall-time since that update. Returns 0 if the channel is not
 * connected or if no media is currently loaded. Returns @c kGCKInvalidTimeInterval if the stream is
 * not live stream or there is no seekable range.
 *
 * @since 4.4.1
 */
- (NSTimeInterval)approximateLiveSeekableRangeEnd;

@end  // GCKRemoteMediaClient

/**
 * The GCKRemoteMediaClient listener protocol.
 *
 * @since 3.0
 */
GCK_EXPORT
@protocol GCKRemoteMediaClientListener <NSObject>

@optional

/**
 * Called when a new media session has started on the receiver.
 *
 * @param client The client.
 * @param sessionID The ID of the new session.
 */
- (void)remoteMediaClient:(GCKRemoteMediaClient *)client
    didStartMediaSessionWithID:(NSInteger)sessionID;

/**
 * Called when updated media status has been received from the receiver.
 *
 * @param client The client.
 * @param mediaStatus The updated media status. The status can also be accessed as a property of
 * the player.
 */
- (void)remoteMediaClient:(GCKRemoteMediaClient *)client
     didUpdateMediaStatus:(nullable GCKMediaStatus *)mediaStatus;

/**
 * Called when updated media metadata has been received from the receiver.
 *
 * @param client The client.
 * @param mediaMetadata The updated media metadata. The metadata can also be accessed through the
 * GCKRemoteMediaClient::mediaStatus property.
 */
- (void)remoteMediaClient:(GCKRemoteMediaClient *)client
    didUpdateMediaMetadata:(nullable GCKMediaMetadata *)mediaMetadata;

/**
 * Called when the media playback queue has been updated on the receiver.
 *
 * @param client The client.
 */
- (void)remoteMediaClientDidUpdateQueue:(GCKRemoteMediaClient *)client;

/**
 * Called when the media preload status has been updated on the receiver.
 *
 * @param client The client.
 */
- (void)remoteMediaClientDidUpdatePreloadStatus:(GCKRemoteMediaClient *)client;

/**
 * Called when the list of media queue item IDs has been received.
 *
 * @param client The client.
 * @param queueItemIDs The list of media queue item IDs.
 *
 * @since 4.1
 */
- (void)remoteMediaClient:(GCKRemoteMediaClient *)client
    didReceiveQueueItemIDs:(NSArray<NSNumber *> *)queueItemIDs;

/**
 * Called when a contiguous sequence of items has been inserted into the media queue.
 *
 * @param client The client.
 * @param queueItemIDs The item IDs of the inserted items.
 * @param beforeItemID The item ID of the item in front of which the new items have been inserted.
 * If the value is kGCKMediaQueueInvalidItemID, it indicates that the items were appended at the
 * end of the queue.
 *
 * @since 4.1
 */
- (void)remoteMediaClient:(GCKRemoteMediaClient *)client
    didInsertQueueItemsWithIDs:(NSArray<NSNumber *> *)queueItemIDs
              beforeItemWithID:(GCKMediaQueueItemID)beforeItemID;

/**
 * Called when existing items has been updated in the media queue.
 *
 * @param client The client.
 * @param queueItemIDs The item IDs of the updated items.
 *
 * @since 4.1
 */
- (void)remoteMediaClient:(GCKRemoteMediaClient *)client
    didUpdateQueueItemsWithIDs:(NSArray<NSNumber *> *)queueItemIDs;

/**
 * Called when a contiguous sequence of items has been removed from the media queue.
 *
 * @param client The client.
 * @param queueItemIDs The item IDs of the removed items.
 *
 * @since 4.1
 */
- (void)remoteMediaClient:(GCKRemoteMediaClient *)client
    didRemoveQueueItemsWithIDs:(NSArray<NSNumber *> *)queueItemIDs;

/**
 * Called when detailed information has been received for one or more items in the queue.
 *
 * @param client The client.
 * @param queueItems The queue items.
 *
 * @since 4.1
 */
- (void)remoteMediaClient:(GCKRemoteMediaClient *)client
     didReceiveQueueItems:(NSArray<GCKMediaQueueItem *> *)queueItems;

@end

/**
 * The delegate protocol for parsing ad break information from a media status.
 *
 * @deprecated
 */
@protocol GCKRemoteMediaClientAdInfoParserDelegate <NSObject>
@optional

/**
 * Allows the delegate to determine whether the receiver is playing an ad or not, based on the
 * current media status.
 * @param client The client.
 * @param mediaStatus The current media status.
 * @return YES if the receiver is currently playing an ad, NO otherwise.
 */
- (BOOL)remoteMediaClient:(GCKRemoteMediaClient *)client
    shouldSetPlayingAdInMediaStatus:(GCKMediaStatus *)mediaStatus;

/**
 * Allows the delegate to determine the list of ad breaks in the current content.
 * @param client The client.
 * @param mediaStatus The current media status.
 * @return An array of GCKAdBreakInfo objects representing the ad breaks for this content, or nil
 * if there are no ad breaks.
 */
- (nullable NSArray<GCKAdBreakInfo *> *)remoteMediaClient:(GCKRemoteMediaClient *)client
                           shouldSetAdBreaksInMediaStatus:(GCKMediaStatus *)mediaStatus;

@end // GCKRemoteMediaClientListener

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKRequest.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKError;
@protocol GCKRequestDelegate;

typedef NSInteger GCKRequestID;

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKRequestAbortReason
 * Enum defining the reasons that could cause a request to be aborted.
 *
 * @since 3.0
 */
typedef NS_ENUM(NSInteger, GCKRequestAbortReason) {
  /** The request was aborted because a similar and overridding request was initiated. */
  GCKRequestAbortReasonReplaced = 1,
  /** The request was aborted after a call to @ref cancel on this request */
  GCKRequestAbortReasonCancelled = 2,
};

/**
 * An object for tracking an asynchronous request.
 *
 * See GCKRequestDelegate for the delegate protocol.
 *
 * @since 3.0
*/
GCK_EXPORT
@interface GCKRequest : NSObject

/**
 * The delegate for receiving notifications about the status of the request.
 */
@property(nonatomic, weak, nullable) id<GCKRequestDelegate> delegate;

/**
 * The unique ID assigned to this request.
 */
@property(nonatomic, assign, readonly) GCKRequestID requestID;

/**
 * The error that caused the request to fail, if any, otherwise <code>nil</code>.
 */
@property(nonatomic, copy, readonly, nullable) GCKError *error;

/**
 * A flag indicating whether the request is currently in progress.
 */
@property(nonatomic, assign, readonly) BOOL inProgress;

/**
 * A flag indicating whether this is an external request--that is, one created by the application
 * rather than by the framework itself.
 *
 * @since 3.4
 */
@property(nonatomic, assign, readonly) BOOL external;

/**
 * Cancels the request. Canceling a request does not guarantee that the request will not complete
 * on the receiver; it simply causes the sender to stop tracking the request.
 */
- (void)cancel;

/**
 * Constructs a GCKRequest object for use by the calling application. Request objects created using
 * this factory method can be managed by the application using the methods GCKRequest::complete,
 * GCKRequest::failWithError:, and GCKRequest::abortWithReason:.
 *
 * @since 3.4
 */
+ (GCKRequest *)applicationRequest;

/**
 * Completes the request and notifies the delegate accordingly. This method may only be called on
 * GCKRequest objects that have been constructed by the application using the
 * GCKRequest::applicationRequest factory method. Calling this method on a GCKRequest object that
 * was created by the framework itself will raise an exception.
 *
 * @since 3.4
 */
- (void)complete;

/**
 * Fails the request with an error and notifies the delegate accordingly. This method may only be
 * called on GCKRequest objects that have been constructed by the application using the
 * GCKRequest::requestWithID: factory method. Calling this method on a GCKRequest object that was
 * created by the framework itself will raise an exception.
 *
 * @param error The error describing the failure.
 *
 * @since 3.4
 */
- (void)failWithError:(GCKError *)error;

/**
 * Aborts the request with a reason and notifies the delegate accordingly. This method may only be
 * called on GCKRequest objects that have been constructed by the application using the
 * GCKRequest::requestWithID: factory method. Calling this method on a GCKRequest object that was
 * created by the framework itself will raise an exception.
 *
 * @param reason The reason for the abort.
 *
 * @since 3.4
 */
- (void)abortWithReason:(GCKRequestAbortReason)reason;

@end

/**
 * The GCKRequest delegate protocol.
 *
 * @since 3.0
 */
GCK_EXPORT
@protocol GCKRequestDelegate <NSObject>

@optional

/**
 * Called when the request has successfully completed.
 *
 * @param request The request.
 */
- (void)requestDidComplete:(GCKRequest *)request;

/**
 * Called when the request has failed.
 *
 * @param request The request.
 * @param error The error describing the failure.
 */
- (void)request:(GCKRequest *)request didFailWithError:(GCKError *)error;

/**
 * Called when the request is no longer being tracked. It does not guarantee that the request has
 * succeed or failed.
 *
 * @param request The request.
 * @param abortReason The reason why the request is no longer being tracked.
 */
- (void)request:(GCKRequest *)request didAbortWithReason:(GCKRequestAbortReason)abortReason;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKSenderApplicationInfo.h
================================================
// Copyright 2013 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/**
 * @file GCKSenderApplicationInfo.h
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKSenderApplicationInfoPlatform
 * Sender application platforms.
 */
typedef NS_ENUM(NSInteger, GCKSenderApplicationInfoPlatform) {
  /** Android. */
  GCKSenderApplicationInfoPlatformAndroid = 1,
  /** iOS. */
  GCKSenderApplicationInfoPlatformiOS = 2,
  /** Chrome. */
  GCKSenderApplicationInfoPlatformChrome = 3,
  /** Mac OS X. Reserved for future use. */
  GCKSenderApplicationInfoPlatformOSX = 4,
};

/**
 * Information about a sender application.
 */
GCK_EXPORT
@interface GCKSenderApplicationInfo : NSObject <NSCopying>

/** The sender application's platform. */
@property(nonatomic, assign, readonly) GCKSenderApplicationInfoPlatform platform;

/** The sender application's unique identifier (app ID). */
@property(nonatomic, copy, readonly, nullable) NSString *appIdentifier;

/** The sender application's launch URL (URL scheme). */
@property(nonatomic, strong, readonly, nullable) NSURL *launchURL;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKSession+Protected.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKSession.h>

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/**
 * @file GCKSession+Protected.h
 * GCKSessionEndAction and GCKSessionState enums.
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKSessionEndAction
 * Enum defining the action to take when ending a Cast session.
 * @since 4.0
 */
typedef NS_ENUM(NSInteger, GCKSessionEndAction) {
  /** Explicitly leaves the session on the receiver. */
  GCKSessionEndActionLeave = 1,
  /** Disconnects from the session without explicitity leaving it. */
  GCKSessionEndActionDisconnect = 2,
  /** Stops the currently Casting application on the receiver and then ends the session. */
  GCKSessionEndActionStopCasting = 3
};

/**
 * Methods to be overridden and called by GCKSession subclasses only.
 *
 * @since 3.0
 */
@interface GCKSession (Protected)

/**
 * Starts the session. This is an asynchronous operation. Must be overridden by subclasses.
 */
- (void)start;

/**
 * Ends the session with the specified action.  This is an asynchronous operation. Must be
 * overridden by subclasses.
 *
 * @param action The action to take when ending the session; see GCKSessionEndAction for more
 * details.
 */
- (void)endWithAction:(GCKSessionEndAction)action;

/**
 * Called by subclasses to notify the framework that the session has been started.
 *
 * @param sessionID The session's unique ID.
 */
- (void)notifyDidStartWithSessionID:(NSString *)sessionID;

/**
 * Called by subclasses to notify the framework that the session has failed to start.
 *
 * @param error The error that occurred.
 */
- (void)notifyDidFailToStartWithError:(GCKError *)error;

/**
 * Called by subclasses to notify the framework that the session has ended.
 *
 * @param error The error that caused the session to end, if any. Should be <code>nil</code> if the
 * session was ended intentionally.
 * @param willTryToResume Whether the session will try to resume itself automatically.
 */
- (void)notifyDidEndWithError:(nullable NSError *)error willTryToResume:(BOOL)willTryToResume;

/**
 * Called by subclasses to notify the framework that updated device volume and mute state has been
 * received from the device.
 *
 * @param volume The device's current volume. Must be in the range [0, 1.0];
 * @param muted The device's current mute state.
 */
- (void)notifyDidReceiveDeviceVolume:(float)volume muted:(BOOL)muted;

/**
 * Called by subclasses to notify the framework that updated status has been received from the
 * device.
 *
 * @param statusText The new status.
 */
- (void)notifyDidReceiveDeviceStatus:(nullable NSString *)statusText;

/**
 * Deprecated, do not use - implemented as a no-op.
 *
 * @deprecated Do not call.
 */
- (void)notifyDidSuspendWithReason:(GCKConnectionSuspendReason)reason GCK_DEPRECATED("Do not call");

/**
 * Deprecated, do not use - implemented as a no-op.
 *
 * @deprecated Do not call.
 */
- (void)notifyDidResume GCK_DEPRECATED("Do not call");

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKSession.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKSessionTraits.h>

#import <GoogleCast/GCKCommon.h>
#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKDevice.h>
#import <GoogleCast/GCKMediaMetadata.h>
#import <GoogleCast/GCKRemoteMediaClient.h>
#import <GoogleCast/GCKSessionOptions.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * An abstract base class representing a session with a receiver device. Subclasses must implement
 * the @ref start and @ref endWithAction: methods, and must call the appropriate notifier methods
 * (for example, @ref notifyDidStartWithSessionID:) to indicate corresponding changes in the session
 * state. Subclasses may also implement @ref setDeviceVolume:, @ref setDeviceMuted: and
 * @ref remoteMediaClient if the device supports such operations.
 *
 * A session is created and controlled using the session methods in GCKSessionManager, which uses
 * the appropriate GCKDeviceProvider to create the session, and then delegates session requests to
 * that GCKSession object.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKSession : NSObject

/** The device that this session is associated with. */
@property(nonatomic, strong, readonly) GCKDevice *device;

/** The current session ID, if any. */
@property(nonatomic, copy, readonly, nullable) NSString *sessionID;

/**
 * The session options, if any.
 *
 * @since 4.0
 */
@property(nonatomic, strong, readonly, nullable) GCKSessionOptions *sessionOptions;

/** The current session connection state. */
@property(nonatomic, assign, readonly) GCKConnectionState connectionState;

/**
 * A flag indicating whether the session is currently suspended.
 *
 * @deprecated GCKSession no longer supports being in suspended state. If needed, move this
 * functionality to a subclass.
 */
@property(nonatomic, assign, readonly) BOOL suspended GCK_DEPRECATED(
    "GCKSession no longer supports being in a suspended state. If needed, move this functionality "
    "to a subclass.");

/** The current device status text. */
@property(nonatomic, copy, readonly, nullable) NSString *deviceStatusText;

/** The session traits. */
@property(nonatomic, copy, readonly, nullable) GCKSessionTraits *traits;

/** The current device volume, in the range [0.0, 1.0]. */
@property(nonatomic, assign, readonly) float currentDeviceVolume;

/** The current device mute state. */
@property(nonatomic, assign, readonly) BOOL currentDeviceMuted;

/**
 * The GCKRemoteMediaClient object that can be used to control media playback in this session. It is
 * <code>nil</code> before the session has started, or if the session does not support the
 * GCKRemoteMediaClient API. Subclasses which provide a GCKRemoteMediaClient interface must override
 * the getter method.
 */
@property(nonatomic, strong, readonly, nullable) GCKRemoteMediaClient *remoteMediaClient;

/**
 * The current media metadata, if any. Will be <code>nil</code> if the session does not support the
 * media namespace or if no media is currently loaded on the receiver.
 */
@property(nonatomic, strong, readonly, nullable) GCKMediaMetadata *mediaMetadata;

/**
 * Initializes a new session object for the given device, with default options.
 *
 * @param device The device.
 * @param traits The session traits.
 * @param sessionID The session ID of an existing session, if this object will be used to resume a
 * session; otherwise <code>nil</code> if it will be used to start a new session.
 */
- (instancetype)initWithDevice:(GCKDevice *)device
                        traits:(nullable GCKSessionTraits *)traits
                     sessionID:(nullable NSString *)sessionID;

/**
 * Initializes a new session object for the given device.
 *
 * @param device The device.
 * @param traits The session traits.
 * @param sessionID The session ID of an existing session, if this object will be used to resume a
 * session; otherwise <code>nil</code> if it will be used to start a new session.
 * @param sessionOptions The session options, if any; otherwise <code>nil</code>.
 *
 * @since 4.0
 */
- (instancetype)initWithDevice:(GCKDevice *)device
                        traits:(nullable GCKSessionTraits *)traits
                     sessionID:(nullable NSString *)sessionID
                sessionOptions:(nullable GCKSessionOptions *)sessionOptions;

/**
 * Sets the device's volume. This is an asynchronous operation. The default implementation is a
 * no-op that fails the request with a GCKErrorCodeUnsupportedFeature error.
 *
 * @param volume The new volume.
 * @return A GCKRequest object for tracking the request.
 * @since 3.4; in previous framework versions, this method returned <code>void</code>.
 */
- (GCKRequest *)setDeviceVolume:(float)volume;

/**
 * Sets the device's mute state. This is an asynchronous operation. The default implementation is a
 * no-op that fails the request with a GCKErrorCodeUnsupportedFeature error.
 *
 * @param muted The new mute state.
 * @return A GCKRequest object for tracking the request.
 * @since 3.4; in previous framework versions, this method returned <code>void</code>.
 */
- (GCKRequest *)setDeviceMuted:(BOOL)muted;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKSessionManager.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKCommon.h>
#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKSessionOptions.h>

#import <Foundation/Foundation.h>

@class GCKCastSession;
@class GCKDevice;
@class GCKOpenURLOptions;
@class GCKSession;
@class GCKMultizoneDevice;
@protocol GCKSessionManagerListener;

NS_ASSUME_NONNULL_BEGIN

GCK_EXTERN NSString *const kGCKKeyConnectionState;

/**
 * A class that manages sessions. The method @ref startSessionWithDevice: is used to
 * create a new session with a given GCKDevice. The session manager uses the GCKDeviceProvider
 * for that device type to construct a new GCKSession object, to which it then delegates all
 * session requests.
 *
 * GCKSessionManager handles the automatic resumption of suspended sessions (that is, resuming
 * sessions that were ended when the application went to the background, or in the event that
 * the application crashed or was forcibly terminated by the user). When the application resumes or
 * restarts, the session manager will wait for a short time for the device provider of the suspended
 * session's device to discover that device again, and if it does, it will attempt to reconnect to
 * that device and re-establish the session automatically.
 *
 * If the application has created a GCKUICastButton without providing a target and selector, then a
 * user tap on the button will display the default Cast dialog and it will automatically start
 * and stop sessions based on user selection or disconnection of a device.
 * If however the application is providing its own device selection/control dialog UI, then it
 * should use the GCKSessionManager directly to create and control sessions.
 *
 * Whether or not the application uses the GCKSessionManager to control sessions, it can attach a
 * GCKSessionManagerListener to be notified of session events, and can also use KVO to monitor the
 * #connectionState property to track the current session lifecycle state.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKSessionManager : NSObject

/** The current session, if any. */
@property(nonatomic, strong, readonly, nullable) GCKSession *currentSession;

/** The current Cast session, if any. */
@property(nonatomic, strong, readonly, nullable) GCKCastSession *currentCastSession;

/** The current session connection state. */
@property(nonatomic, assign, readonly) GCKConnectionState connectionState;

/**
 * Default initializer is not available.
 */
- (instancetype)init NS_UNAVAILABLE;

/**
 * Starts a new session with the given device, using the default session options that were
 * registered for the device category, if any. This is an asynchronous operation.
 *
 * @param device The device to use for this session.
 * @return <code>YES</code> if the operation has been started successfully, <code>NO</code> if
 * there is a session currently established or if the operation could not be started.
 */
- (BOOL)startSessionWithDevice:(GCKDevice *)device;

/**
 * Starts a new session with the given device and options. This is an asynchronous operation.
 *
 * @param device The device to use for this session.
 * @param options The options for this session, if any. May be <code>nil</code>.
 * @return <code>YES</code> if the operation has been started successfully, <code>NO</code> if
 * there is a session currently established or if the operation could not be started.
 *
 * @since 4.0
 */
- (BOOL)startSessionWithDevice:(GCKDevice *)device
                sessionOptions:(nullable GCKSessionOptions *)options;

/**
 * Attempts to join or start a session with options that were supplied to the
 * UIApplicationDelegate::application:openURL:options: method. Typically this is a request to
 * join an existing Cast session on a particular device that was initiated by another app.
 *
 * @param openURLOptions The options that were extracted from the URL.
 * @param sessionOptions The options for this session, if any. May be <code>nil</code>.
 * @return <code>YES</code> if the operation has been started successfully, <code>NO</code> if
 * there is a session currently established, or the openURL options do not contain the required
 * Cast options.
 *
 * @since 4.0
 */
- (BOOL)startSessionWithOpenURLOptions:(GCKOpenURLOptions *)openURLOptions
                        sessionOptions:(nullable GCKSessionOptions *)sessionOptions;

/**
 * Suspends the current session. This is an asynchronous operation.
 *
 * @param reason The reason for the suspension.
 * @return <code>YES</code> if the operation has been started successfully, <code>NO</code> if
 * there is no session currently established or if the operation could not be started.
 */
- (BOOL)suspendSessionWithReason:(GCKConnectionSuspendReason)reason;

/**
 * Ends the current session. This is an asynchronous operation.
 *
 * @return <code>YES</code> if the operation has been started successfully, <code>NO</code> if
 * there is no session currently established or if the operation could not be started.
 */
- (BOOL)endSession;

/**
 * Ends the current session and stops casting if one sender device is connected; otherwise,
 * optionally stops casting if multiple sender devices are connected.
 *
 * Use the <code>stopCasting</code> parameter to indicate whether casting on the receiver should stop
 * when the session ends. This parameter only applies when multiple sender devices are connected. For
 * example, the same app is open on multiple sender devices and each sender device has an active Cast
 * session with the same receiver device.
 * *   If you set <code>stopCasting</code> to <code>YES</code>, the receiver app stops casting when
 *     multiple devices are connected.
 * *   If <code>stopCasting</code> is <code>NO</code> and other devices have an active session,
 *     the receiver keeps playing.
 * *   If only one sender device is connected, the receiver app stops casting the media and ignores
 *     the <code>stopCasting</code> value, even if it's set to <code>NO</code>.
 *
 * @param stopCasting Whether casting on the receiver should stop when the session ends. Only used
 * when multiple sender devices are connected.
 *
 * @return <code>YES</code> if the operation to end the session started successfully, <code>NO</code>
 * if there is no session currently established or if the operation could not be started.
 */
- (BOOL)endSessionAndStopCasting:(BOOL)stopCasting;

/**
 * Tests if a session is currently being managed by this session manager, and it is currently
 * connected. This will be <code>YES</code> if the session state is
 * @ref GCKConnectionStateConnected.
 */
- (BOOL)hasConnectedSession;

/**
 * Tests if a Cast session is currently being managed by this session manager, and it is currently
 * connected. This will be <code>YES</code> if the session state is @ref GCKConnectionStateConnected
 * and the session is a Cast session.
 */
- (BOOL)hasConnectedCastSession;

/**
 * Sets the default session options for the given device category.The session options are passed to
 * the GCKDeviceProvider::createSessionForDevice:sessionID:sessionOptions: method when the user
 * selects a device from the Cast dialog.  For Cast sessions, the session options can specify which
 * receiver application to launch.
 *
 * @param sessionOptions The session options. May be <code>nil</code> to remove any previously set
 * options.
 * @param category The device category.
 *
 * @since 4.0
 */
- (void)setDefaultSessionOptions:(nullable GCKSessionOptions *)sessionOptions
               forDeviceCategory:(NSString *)category;

/**
 * Gets the default session options for a given device category.
 * @param category The device category.
 * @return The default session options, or <code>nil</code> if none.
 *
 * @since 4.0
 */
- (nullable GCKSessionOptions *)defaultSessionOptionsForDeviceCategory:(NSString *)category;

/**
 * Adds a listener for receiving notifications.
 *
 * The added listener is weakly held, and should be retained to avoid unexpected deallocation.
 *
 * @param listener The listener to add.
 */
- (void)addListener:(id<GCKSessionManagerListener>)listener;

/**
 * Removes a listener that was previously added with @ref addListener:.
 *
 * @param listener The listener to remove.
 */
- (void)removeListener:(id<GCKSessionManagerListener>)listener;

@end  // GCKSessionManager

/**
 * The GCKSessionManager listener protocol. The protocol's methods are all optional. All of the
 * notification methods come in two varieties: one that is invoked for any session type, and one
 * that is invoked specifically for Cast sessions.
 *
 * Listeners are invoked in the order that they were registered. GCKSessionManagerListener instances
 * which are registered by components of the framework itself (such as GCKUIMediaController), will
 * always be invoked <i>after</i> those that are registered by the application for the callbacks
 * GCKSessionManagerListener::sessionManager:willStartSession:,
 * GCKSessionManagerListener::sessionManager:willStartCastSession:,
 * GCKSessionManagerListener::sessionManager:willResumeSession:, and
 * GCKSessionManagerListener::sessionManager:willResumeCastSession:; and <i>before</i> those
 * that are registered by the application for all of the remaining callbacks.
 *
 * @since 3.0
 */
GCK_EXPORT
@protocol GCKSessionManagerListener <NSObject>

@optional

/**
 * Called when a session is about to be started.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager willStartSession:(GCKSession *)session;

/**
 * Called when a session has been successfully started.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager didStartSession:(GCKSession *)session;

/**
 * Called when a Cast session is about to be started.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    willStartCastSession:(GCKCastSession *)session;

/**
 * Called when a Cast session has been successfully started.
 *
 * @param sessionManager The session manager.
 * @param session The Cast session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    didStartCastSession:(GCKCastSession *)session;

/**
 * Called when a session is about to be ended, either by request or due to an error.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager willEndSession:(GCKSession *)session;

/**
 * Called when a session has ended, either by request or due to an error.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 * @param error The error, if any; otherwise nil.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
         didEndSession:(GCKSession *)session
             withError:(nullable NSError *)error;

/**
 * Called when a Cast session is about to be ended, either by request or due to an error.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    willEndCastSession:(GCKCastSession *)session;

/**
 * Called when a Cast session has ended, either by request or due to an error.
 *
 * @param sessionManager The session manager.
 * @param session The Cast session.
 * @param error The error, if any; otherwise nil.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
     didEndCastSession:(GCKCastSession *)session
             withError:(nullable NSError *)error;

/**
 * Called when a session has failed to start.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 * @param error The error.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    didFailToStartSession:(GCKSession *)session
                withError:(NSError *)error;

/**
 * Called when a Cast session has failed to start.
 *
 * @param sessionManager The session manager.
 * @param session The Cast session.
 * @param error The error.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    didFailToStartCastSession:(GCKCastSession *)session
                    withError:(NSError *)error;

/**
 * Called when a session has been suspended.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 * @param reason The reason for the suspension.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
     didSuspendSession:(GCKSession *)session
            withReason:(GCKConnectionSuspendReason)reason;

/**
 * Called when a Cast session has been suspended.
 *
 * @param sessionManager The session manager.
 * @param session The Cast session.
 * @param reason The reason for the suspension.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    didSuspendCastSession:(GCKCastSession *)session
               withReason:(GCKConnectionSuspendReason)reason;

/**
 * Called when a session is about to be resumed.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager willResumeSession:(GCKSession *)session;

/**
 * Called when a session has been successfully resumed.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager didResumeSession:(GCKSession *)session;

/**
 * Called when a Cast session is about to be resumed.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    willResumeCastSession:(GCKCastSession *)session;

/**
 * Called when a Cast session has been successfully resumed.
 *
 * @param sessionManager The session manager.
 * @param session The Cast session.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    didResumeCastSession:(GCKCastSession *)session;

/**
 * Called when the device associated with this session has changed in some way (for example, the
 * friendly name has changed).
 *
 * @param sessionManager The session manager.
 * @param session The Cast session.
 * @param device The updated device object.
 *
 * @since 3.2
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
               session:(GCKSession *)session
       didUpdateDevice:(GCKDevice *)device;

/**
 * Called when updated device volume and mute state for a session have been received.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 * @param volume The current volume, in the range [0.0, 1.0].
 * @param muted The current mute state.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
                   session:(GCKSession *)session
    didReceiveDeviceVolume:(float)volume
                     muted:(BOOL)muted;
/**
 * Called when updated device volume and mute state for a Cast session have been received.
 *
 * @param sessionManager The session manager.
 * @param session The Cast session.
 * @param volume The current volume, in the range [0.0, 1.0].
 * @param muted The current mute state.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
               castSession:(GCKCastSession *)session
    didReceiveDeviceVolume:(float)volume
                     muted:(BOOL)muted;

/**
 * Called when updated device status for a session has been received.
 *
 * @param sessionManager The session manager.
 * @param session The session.
 * @param statusText The new device status text.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
                   session:(GCKSession *)session
    didReceiveDeviceStatus:(nullable NSString *)statusText;

/**
 * Called when updated device status for a Cast session has been received.
 *
 * @param sessionManager The session manager.
 * @param session The Cast session.
 * @param statusText The new device status text.
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
               castSession:(GCKCastSession *)session
    didReceiveDeviceStatus:(nullable NSString *)statusText;

/**
 * Called when the default session options have been changed for a given device category.
 *
 * @param sessionManager The session manager.
 * @param category The device category.
 *
 * @since 4.0
 */
- (void)sessionManager:(GCKSessionManager *)sessionManager
    didUpdateDefaultSessionOptionsForDeviceCategory:(NSString *)category;

@end  // GCKSessionManagerListener

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKSessionOptions.h
================================================
// Copyright 2016 Google Inc.

#import <GoogleCast/GCKCommon.h>
#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/**
 * A dictionary for specifying session options.
 *
 * @since 4.0
 */
typedef NSDictionary<NSString *, NSObject<NSCoding> *> GCKSessionOptions;



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKSessionTraits.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * An object describing the traits and capabilities of a session.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKSessionTraits : NSObject <NSCopying, NSSecureCoding>

/**
 * The minimum volume value. Must be non-negative and less than or equal to the maximum volume.
 */
@property(nonatomic, assign, readonly) float minimumVolume;

/**
 * The maximum volume value. Must be non-negative and greater than or equal to the minimum volume.
 */
@property(nonatomic, assign, readonly) float maximumVolume;

/**
 * The volume increment for up/down volume adjustments. May be 0 to indicate fixed volume. Must
 * be non-negative and less than or equal to the difference between the maximum volume and minimum
 * volume.
 */
@property(nonatomic, assign, readonly) float volumeIncrement;

/**
 * Whether the audio can be muted.
 */
@property(nonatomic, assign, readonly) BOOL supportsMuting;

/**
 * Designated initializer.
 */
- (instancetype)initWithMinimumVolume:(float)minimumVolume
                        maximumVolume:(float)maximumVolume
                      volumeIncrement:(float)volumeIncrement
                       supportsMuting:(BOOL)supportsMuting NS_DESIGNATED_INITIALIZER;

/**
 * Convenience initializer. Sets the volume range to [0.0, 1.0], the volume increment to 0.05 (5%),
 * and the supportsMuting flag to <code>YES</code>.
 */
- (instancetype)init;

/**
 * Whether this is a fixed volume device.
 */
- (BOOL)isFixedVolume;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIButton.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKUIMultistateButton.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A subclass of <a href="https://goo.gl/VK61wU"><b>UIButton</b></a> that supports custom
 * application states. These states are ORed onto the value of the button's <b>state</b> property to
 * provide additional, application-specific states. Images can be assigned to these custom states,
 * for example:
 * @code
 * [button setImage:[UIImage imageNamed:@"myCustomStateImage"]
 *                             forState:(UIControlStateNormal | kMyControlStateCustom)];
 * @endcode
 * Application state values must only use the bits that are set in the
 * <a href="https://goo.gl/tZWsqZ"><b>UIControlStateApplication</b></a> bitmask.
 *
 * @deprecated Use GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXPORT GCK_DEPRECATED("Use GCKUIMultistateButton")
@interface GCKUIButton : GCKUIMultistateButton

/**
 * The button's application state. This state is ORed onto the button's existing state.
 */
@property(nonatomic, assign) UIControlState applicationState;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUICastButton.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKCommon.h>
#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

@protocol GCKUICastButtonDelegate;

/**
 * A subclass of <a href="https://goo.gl/VK61wU"><b>UIButton</b></a> that implements a "Cast"
 * button.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKUICastButton : UIButton

/**
 * A flag that indicates whether a touch event on this button will trigger the display of the
 * Cast dialog that is provided by the framework. By default this property is set to
 * <code>YES</code>. If an application wishes to handle touch events itself, it should set the
 * property to <code>NO</code> and register an appropriate target and action for the touch event.
 * This property cannot be set to NO if @c delegate is set to non-nil value.
 *
 * @deprecated Use GCKUICastButtonDelegate methods to respond to user actions on the cast button.
 */
@property(nonatomic, assign) BOOL triggersDefaultCastDialog GCK_DEPRECATED(
    "Use the GCKUICastButtonDelegate methods to respond to the actions on the cast button.");

/**
 * Set the delegate to respond to the user actions performed on the @c GCKUICastButton. Delegate
 * should not be set to non-nil value if the deprecated property @c triggersDefaultCastDialog
 * is set to NO.
 *
 * @since 4.6.0
 */
@property(nonatomic, weak) id<GCKUICastButtonDelegate> delegate;

/**
 * Constructs a new GCKUICastButton using the given decoder.
 */
- (instancetype)initWithCoder:(NSCoder *)decoder;

/**
 * Constructs a new GCKUICastButton with the given frame.
 */
- (instancetype)initWithFrame:(CGRect)frame;

/**
 * Sets the icons for the active, inactive, and animated states of the button. The supplied images
 * should all be single-color with a transparent background. The color of the images is not
 * significant, as the button's tint color (<code>tintColor</code> property) determines the color
 * that they are rendered in.
 */
- (void)setInactiveIcon:(UIImage *)inactiveIcon
             activeIcon:(UIImage *)activeIcon
         animationIcons:(NSArray<UIImage *> *)animationIcons;

/**
 * Sets the accessibility label for the cast states of the button.
 * This is the recommended way to set accessibility label for the button.
 * Label set by setAccessibilityLabel: is applied to all cast states.
 */
- (void)setAccessibilityLabel:(NSString *)label
                 forCastState:(GCKCastState)state;

@end

/**
 * Use the methods of this protocol to present custom dialog in response to user action.
 *
 * @since 4.6.0
 */
@protocol GCKUICastButtonDelegate <NSObject>

@optional

/**
 * Tells the delegate that the cast button is tapped by the user for the first time on iOS14 or
 * above and cast devices discovery has not started in the current or previous app sessions.
 * Implement this method to present the custom dialog. If not implmemented, the default dialog is
 * presented.
 *
 * @param castButton Instance of @c GCKUICastButton tapped.
 */
- (void)castButtonDidTapToPresentLocalNetworkAccessPermissionDialog:(GCKUICastButton *)castButton;

/**
 * Tells the delegate that the cast button is tapped by the user after the discovery has been
 * initiated in current or previous app session. Implement this method to present the custom dialog
 * as per the cast state. Observe GCKCastContext::castState to update the dialog dynamically as per
 * changes in the cast state. If not implmemented, the default dialog is presented.
 *
 * @param castButton Instance of @c GCKUICastButton tapped.
 * @param castState Cast state when the cast button is tapped.
 */
- (void)castButtonDidTap:(GCKUICastButton *)castButton
    toPresentDialogForCastState:(GCKCastState)castState;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUICastContainerViewController.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

@class GCKUIMiniMediaControlsViewController;
@class GCKUINextUpViewController;

NS_ASSUME_NONNULL_BEGIN

/**
 * A view controller which wraps another View Controller and adds a media playback notification
 * area below that controller. The notification can display a "now playing" item
 * that displays a thumbnail, title, and subtitle for the current media item, a stream progress bar,
 * and a play/pause toggle button. The controller shows and hides this item as appropriate
 * based on the current media playback state on the receiver.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKUICastContainerViewController : UIViewController

/** The view controller to be embedded as the content area of this view controller. */
@property(nonatomic, strong, readonly, nullable) UIViewController *contentViewController;

/** The "now playing" view controller. */
@property(nonatomic, strong, readonly, nullable)
    GCKUIMiniMediaControlsViewController *miniMediaControlsViewController;

/**
 * A flag indicating whether the "now playing" item should be enabled. If enabled, the item will
 * be displayed automatically whenever there is media content loaded or playing on the receiver.
 * The default value is <code>NO</code>.
 */
@property(nonatomic, assign) BOOL miniMediaControlsItemEnabled;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIDeviceVolumeController.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

/**
 * @file GCKUIDeviceVolumeController.h
 */

@class GCKUIMultistateButton;

NS_ASSUME_NONNULL_BEGIN

/**
 * @var GCKUIControlStateMuteOff
 * Custom <a href="https://goo.gl/tZWsqZ"><b>UIControlState</b></a> for the mute toggle button;
 * corresponds to "mute off".
 *
 * @deprecated Use GCKUIButtonStateMuteOff with GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXTERN GCK_DEPRECATED("Use GCKUIButtonStateMuteOff with GCKUIMultistateButton.")
const UIControlState GCKUIControlStateMuteOff;

/**
 * @var GCKUIButtonStateMuteOff
 * GCKUIMultistateButton state for the mute toggle button; corresponds to "mute off".
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStateMuteOff;

/**
 * @var GCKUIControlStateMuteOn
 * Custom <a href="https://goo.gl/tZWsqZ"><b>UIControlState</b></a> for the mute toggle button;
 * corresponds to "mute on".
 *
 * @deprecated Use GCKUIButtonStateMuteOn with GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXTERN GCK_DEPRECATED("Use GCKUIButtonStateMuteOn with GCKUIMultistateButton.")
const UIControlState GCKUIControlStateMuteOn;

/**
 * @var GCKUIButtonStateMuteOn
 * GCKUIMultistateButton state for the mute toggle button; corresponds to "mute on".
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStateMuteOn;

/**
 * A controller for UI views that are used to control or display the volume and mute state of a Cast
 * receiver. The calling application registers its volume-related UI controls with the controller by
 * setting the appropriate properties. The controller then responds to touch events on the controls
 * by issuing the appropriate volume commands to the receiver, and updates the controls based on
 * status information received from the receiver. The controller automatically enables and disables
 * the UI controls as appropriate for the current session and receiver state.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKUIDeviceVolumeController : NSObject

/**
 * A "volume up" button. When the button is tapped, the receiver's volume is increased by the
 * volume increment. The button will be disabled if there is no session currently active or if the
 * current session does not support volume adjustment.
 */
@property(nonatomic, weak, nullable) UIButton *volumeUpButton;

/**
 * A "volume down" button. When the button is tapped, the receiver's volume is decreased by the
 * volume increment. The button will be disabled if there is no session currently active or if the
 * current session does not support volume adjustment.
 */
@property(nonatomic, weak, nullable) UIButton *volumeDownButton;

/**
 * A slider for displaying and changing the current receiver volume. When the slider's value is
 * changed by the user, the volume is updated on the receiver. When a receiver status is received
 * that indicates a change in the receiver's volume, the slider value is updated accordingly. The
 * slider will be disabled if there is no session currently active or if the current session does
 * not support volume adjustment.
 */
@property(nonatomic, weak, nullable) UISlider *volumeSlider;

/**
 * A switch for toggling the receiver's mute state. When the switch is toggled, the mute state is
 * updated on the receiver. When a receiver status is received that indicates a change in the
 * receiver's mute state, the switch is updated accordingly. The switch will be disabled if there is
 * no session currently active  or if the current session does not support muting.
 */
@property(nonatomic, weak, nullable) UISwitch *muteSwitch;

/**
 * A toggle button for muting/unmuting the receiver. The caller should set appropriate "muted" and
 * "unmuted" icons for the button's @ref GCKUIButtonStateMuteOn and @ref GCKUIButtonStateMuteOff
 * states, respectively. The button's state is automatically updated to reflect the current mute
 * state on the receiver. When the button is tapped, the mute state is updated on the receiver. The
 * button will be disabled if there is no session currently active or if the current session does
 * not support volume muting.
 */
@property(nonatomic, weak, nullable) GCKUIMultistateButton *muteToggleButton;

/**
 * Designated initializer.
 */
- (instancetype)init;

/**
 * A convenience method for changing the receiver's volume.  Delegates to the currently active
 * GCKSession object.
 *
 * @param volume The new volume. Must be a value in the range [0.0, 1.0].
 */
- (void)setVolume:(float)volume;

/**
 * A convenience method for changing the receiver's mute state.  Delegates to the currently active
 * GCKSession object.
 *
 * @param muted The new mute state.
 */
- (void)setMuted:(BOOL)muted;

/**
 * A convenience method for increasing the receiver's volume by the volume increment. Delegates to
 * the currently active GCKSession object.
 */
- (void)volumeUp;

/**
 * A convenience method for decreasing the receiver's volume by the volume increment. Delegates to
 * the currently active GCKSession object.
 */
- (void)volumeDown;

/**
 * A convenience method for toggling the mute state. Delegates to the currently active GCKSession
 * object.
 */
- (void)toggleMuted;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIExpandedMediaControlsViewController.h
================================================
// Copyright 2016 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKUIMediaButtonBarProtocol.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A view controller which implements the expanded controls fullscreen view.
 *
 * @since 3.1
 */
GCK_EXPORT
@interface GCKUIExpandedMediaControlsViewController : UIViewController <GCKUIMediaButtonBarProtocol>

/**
 * Whether stream position controls (including the stream position slider, the stream position
 * label, the stream duration label, and the stream progress view) should be hidden for live
 * content. The default value is <code>NO</code>.
 *
 * @since 4.0
 */
@property(nonatomic, assign) BOOL hideStreamPositionControlsForLiveContent;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIImageCache.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A protocol that defines a means of retrieving and caching images. A default implementation is
 * used internally by the framework to cache media artwork that is displayed in the user interface.
 * The application can provide a custom implementation by setting the GCKCastContext::imageCache
 * property.
 *
 * @since 3.0
 */
GCK_EXPORT
@protocol GCKUIImageCache <NSObject>

/**
 * Fetches the image at the given URL, and returns a scaled version of the image. This is an
 * asynchronous operation.
 *
 * @param imageURL The URL of the image.
 * @param completion A block to invoke once the image has been retrieved. The image should be passed
 * to the block. If there was an error retrieving the image, <code>nil</code> should be passed
 * instead. The block should only be invoked on the main thread.
 */
- (void)fetchImageForURL:(NSURL *)imageURL
              completion:(void (^)(UIImage *_Nullable))completion;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIImageHints.h
================================================
// Copyright 2016 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

/**
 * @file GCKUIImageHints.h
 * GCKMediaMetadataImageType enum
 */

#import <GoogleCast/GCKDefines.h>

#import <CoreGraphics/CoreGraphics.h>
#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * @enum GCKMediaMetadataImageType
 * Enum defining a media metadata image type.
 *
 * @since 3.0
 */
typedef NS_ENUM(NSInteger, GCKMediaMetadataImageType) {
  /** An image used by a custom view provided by the application. */
  GCKMediaMetadataImageTypeCustom = 0,
  /** An image used in the Cast dialog, which appears when tapping the Cast button. */
  GCKMediaMetadataImageTypeCastDialog = 1,
  /** An image used in the mini media controller. */
  GCKMediaMetadataImageTypeMiniController = 2,
  /** An image displayed as a background, poster, or fullscreen image. */
  GCKMediaMetadataImageTypeBackground = 3,
};

/**
 * An object that provides hints to a GCKUIImagePicker about the type and size of an image to be
 * selected for display in the UI.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKUIImageHints : NSObject <NSCopying, NSSecureCoding>

/**
 * The image type.
 */
@property(nonatomic, assign, readonly) GCKMediaMetadataImageType imageType;

/**
 * The size at which the image will be displayed.
 */
@property(nonatomic, assign, readonly) CGSize imageSize;

/**
 * Optional custom data that can be used to identify the image. It must be key-value coding
 * compliant.
 */
@property(nonatomic, copy, readonly, nullable) NSObject<NSSecureCoding> *customData;

/**
 * Convenience initializer. Sets the custom data to <code>nil</code>.
 *
 * @param imageType The image type.
 * @param imageSize The image size.
 */
- (instancetype)initWithImageType:(GCKMediaMetadataImageType)imageType imageSize:(CGSize)imageSize;

/**
 * Designated initializer.
 *
 * @param imageType The image type.
 * @param imageSize The image size.
 * @param customData The arbitrary custom data that can be used by a custom GCKUIImagePicker to
 * select an image.
 */
- (instancetype)initWithImageType:(GCKMediaMetadataImageType)imageType
                        imageSize:(CGSize)imageSize
                       customData:(nullable NSObject<NSSecureCoding> *)customData;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIImagePicker.h
================================================
// Copyright 2016 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

@class GCKImage;
@class GCKMediaMetadata;
@class GCKUIImageHints;

NS_ASSUME_NONNULL_BEGIN

/**
 * An object used for selecting an image for a given purpose from a GCKMediaMetadata object.
 * A default implementation is used internally by the framework which always selects the first
 * image from the metadata for all uses. The application can provide a custom implementation by
 * setting the GCKCastContext::imagePicker property.
 *
 * @since 3.0
 */
GCK_EXPORT
@protocol GCKUIImagePicker <NSObject>

/**
 * Returns an image of the specified type from the media metadata.
 *
 * @param imageHints The hints about how to pick the image.
 * @param metadata The media metadata to pick from.
 * @return The selected image, or <code>nil</code> if there is no appropriate image for the
 * requested type.
 */
- (nullable GCKImage *)getImageWithHints:(GCKUIImageHints *)imageHints
                            fromMetadata:(const GCKMediaMetadata *)metadata;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIMediaButtonBarProtocol.h
================================================
// Copyright 2016 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

/**
 * @file GCKUIMediaButtonBarProtocol.h
 */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * Media control button types.
 *
 * @since 3.1
 */
typedef NS_ENUM(NSInteger, GCKUIMediaButtonType) {
  /**
   * No button, results in empty space at a button position.
   */
  GCKUIMediaButtonTypeNone,
  /**
   * A default button that toggles between play and pause states.
   */
  GCKUIMediaButtonTypePlayPauseToggle,
  /**
   * A default "next" button. When tapped, playback moves to the next media item in the queue. It
   * becomes disabled if there is no next media item in the queue.
   */
  GCKUIMediaButtonTypeSkipNext,
  /**
   * A default "previous" button. When tapped, playback moves to the previous media item in the
   * queue. It becomes disabled if there is no previous media item in the queue.
   */
  GCKUIMediaButtonTypeSkipPrevious,
  /**
   * A default "rewind 30 seconds" button. When tapped, playback skips 30 seconds back in the
   * currently playing media item.
   */
  GCKUIMediaButtonTypeRewind30Seconds,
  /**
   * A default "forward 30 seconds" button. When tapped, playback skips 30 seconds forward in the
   * currently playing media item.
   */
  GCKUIMediaButtonTypeForward30Seconds,
  /**
   * A default "mute toggle" button. When tapped, the receiver's mute state is toggled.
   */
  GCKUIMediaButtonTypeMuteToggle,
  /**
   * A default "closed captions" button. When the button is tapped, the media tracks selection UI is
   * displayed to the user.
   */
  GCKUIMediaButtonTypeClosedCaptions,
  /**
   * A default "stop" button. Whe the button is tapped, playback of the current media item is
   * terminated on the receiver.
   */
  GCKUIMediaButtonTypeStop,

  /**
   * A button created and managed by the client.
   */
  GCKUIMediaButtonTypeCustom,
};

/**
 * The GCKUIMediaButtonBarProtocol delegate protocol.
 *
 * @since 3.1
 */
@protocol GCKUIMediaButtonBarProtocol <NSObject>

/**
 * The maximum number of buttons that can be customized by the receiver.
 * @return Number of buttons.
 */
- (NSUInteger)buttonCount;

/**
* Sets the button type for the button at position <code>index</code>.
*
* @param buttonType The type of the button. If the type is
* @ref GCKUIMediaButtonTypeCustom, a
*     <a href="https://goo.gl/VK61wU"><b>UIButton</b></a> instance should be
*     passed for the same index using @ref setCustomButton:atIndex:. Otherwise a default
*     button is created and presented in that position.
* @param index The position in which the button should be presented. 0 is the left-most position.
* Indices should be smaller than the value returned by @ref buttonCount.
*/
- (void)setButtonType:(GCKUIMediaButtonType)buttonType atIndex:(NSUInteger)index;

/**
 * Returns the current type of button at a given position.
 *
 * @param index The button's position, where 0 is the left-most position.
 * @return The type of the button at the selected position.
 */
- (GCKUIMediaButtonType)buttonTypeAtIndex:(NSUInteger)index;

/**
 * Sets the instance of <a href="https://goo.gl/VK61wU"><b>UIButton</b></a> that should be presented
 * at a given button position.
 *
 * @param customButton The button instance to be presented in the control bar.
 * @param index The position in which the button should be presented. 0 is the left-most position.
 * Indices should be smaller than the value returned by @ref buttonCount.
 */
- (void)setCustomButton:(nullable UIButton *)customButton atIndex:(NSUInteger)index;

/**
 * Returns a reference to the custom button at a given position.
 *
 * @param index The button's position, where 0 is the right-most position.
 * @return A reference to the button at the selected position, or <code>nil</code> if there is no
 * custom button at that position, or the position is invalid.
 */
- (nullable UIButton *)customButtonAtIndex:(NSUInteger)index;

@end

NS_ASSUME_NONNULL_END

/* @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIMediaController.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKMediaStatus.h>
#import <GoogleCast/GCKRemoteMediaClient.h>
#import <GoogleCast/GCKSession.h>
#import <GoogleCast/GCKUIButton.h>
#import <GoogleCast/GCKUIImageHints.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

/**
 * @file GCKUIMediaController.h
 */

NS_ASSUME_NONNULL_BEGIN

/**
 * @var GCKUIControlStateRepeatOff
 * Custom <a href="https://goo.gl/tZWsqZ"><b>UIControlState</b></a> for the repeat mode button.
 * Corresponds to @ref GCKMediaRepeatModeOff.
 *
 * @deprecated Use GCKUIButtonStateRepeatOff with GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXTERN GCK_DEPRECATED("Use GCKUIButtonStateRepeatOff with GCKUIMultistateButton.")
const UIControlState GCKUIControlStateRepeatOff;

/**
 * @var GCKUIButtonStateRepeatOff
 * GCKUIMultistateButton state for the repeat mode button. Corresponds to
 * @ref GCKMediaRepeatModeOff.
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStateRepeatOff;

/**
 * @var GCKUIControlStateRepeatAll
 * Custom <a href="https://goo.gl/tZWsqZ"><b>UIControlState</b></a> for the repeat mode button.
 * Corresponds to @ref GCKMediaRepeatModeAll.
 *
 * @deprecated Use GCKUIButtonStateRepeatAll with GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXTERN GCK_DEPRECATED("Use GCKUIButtonStateRepeatAll with GCKUIMultistateButton.")
const UIControlState GCKUIControlStateRepeatAll;

/**
 * @var GCKUIButtonStateRepeatAll
 * GCKUIMultistateButton state for the repeat mode button. Corresponds to
 * @ref GCKMediaRepeatModeAll.
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStateRepeatAll;

/**
 * @var GCKUIControlStateRepeatSingle
 * Custom <a href="https://goo.gl/tZWsqZ"><b>UIControlState</b></a> for the repeat mode button.
 * Corresponds to @ref GCKMediaRepeatModeSingle.
 *
 * @deprecated Use GCKUIButtonStateRepeatSingle with GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXTERN GCK_DEPRECATED("Use GCKUIButtonStateRepeatSingle with GCKUIMultistateButton.")
const UIControlState GCKUIControlStateRepeatSingle;

/**
 * @var GCKUIButtonStateRepeatSingle
 * GCKUIMultistateButton state for the repeat mode button. Corresponds to
 * @ref GCKMediaRepeatModeSingle.
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStateRepeatSingle;

/**
 * @var GCKUIControlStateShuffle
 * Custom <a href="https://goo.gl/tZWsqZ"><b>UIControlState</b></a> for the repeat mode button.
 * Corresponds to @ref GCKMediaRepeatModeAllAndShuffle.
 *
 * @deprecated Use GCKUIButtonStateShuffle with GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXTERN GCK_DEPRECATED("Use GCKUIButtonStateShuffle with GCKUIMultistateButton.")
const UIControlState GCKUIControlStateShuffle;

/**
 * @var GCKUIButtonStateShuffle
 * GCKUIMultistateButton state for the repeat mode button. Corresponds to
 * @ref GCKMediaRepeatModeAllAndShuffle.
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStateShuffle;

/**
 * @var GCKUIControlStatePlay
 * Custom <a href="https://goo.gl/tZWsqZ"><b>UIControlState</b></a> for the play/pause toggle
 * button. Indicates media is playing.
 *
 * @deprecated Use GCKUIButtonStatePlay with GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXTERN GCK_DEPRECATED("Use GCKUIButtonStatePlay with GCKUIMultistateButton.")
const UIControlState GCKUIControlStatePlay;

/**
 * @var GCKUIButtonStatePlay
 * GCKUIMultistateButton state for the play/pause toggle button. Indicates media is playing.
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStatePlay;

/**
 * @var GCKUIControlStatePause
 * Custom <a href="https://goo.gl/tZWsqZ"><b>UIControlState</b></a> for the play/pause toggle
 * button. Indicates media is paused.
 *
 * @deprecated Use GCKUIButtonStatePause with GCKUIMultistateButton.
 * @since 3.0
 */
GCK_EXTERN GCK_DEPRECATED("Use GCKUIButtonStatePause with GCKUIMultistateButton.")
const UIControlState GCKUIControlStatePause;

/**
 * @var GCKUIButtonStatePause
 * GCKUIMultistateButton state for the play/pause toggle button. Indicates media is paused.
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStatePause;

/**
 * @var GCKUIButtonStatePlayLive
 * Custom GCKUIMultistateButton state for the play/pause toggle button. Indicates media is playing
 * and is live.
 *
 * @since 4.0
 */
GCK_EXTERN const NSUInteger GCKUIButtonStatePlayLive;

/**
 * A block for formatting an arbitrary object as an
 * <a href="https://goo.gl/5dXzU6"><b>NSString</b></a>.
 *
 * @since 3.0
 */
typedef NSString *_Nonnull (^GCKUIValueFormatter)(const id value);

@protocol GCKUIMediaControllerDelegate;
@class GCKUIPlaybackRateController;
@class GCKUIPlayPauseToggleController;
@class GCKUIStreamPositionController;

/**
 * A controller for UI views that are used to control or display the status of media playback on
 * a Cast receiver. The calling application registers its media-related UI controls with the
 * controller by setting the appropriate properties. The controller then responds to touch events
 * on the controls by issuing the appropriate media commands to the receiver, and updates the
 * controls based on status information and media metadata received from the receiver. The
 * controller automatically enables and disables the UI controls as appropriate for the current
 * session and media player state. It additionally disables all of the controls while a request is
 * in progress.
 *
 * See GCKUIMediaControllerDelegate for the delegate protocol.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKUIMediaController : NSObject

/**
 * The delegate for receiving notificatiosn from the GCKUIMediaController.
 */
@property(nonatomic, weak, nullable) id<GCKUIMediaControllerDelegate> delegate;

/**
 * The session that is associated with this controller.
 */
@property(nonatomic, strong, readonly, nullable) GCKSession *session;

/**
 * Whether there is media currently loaded (or loading) on the receiver. If no Cast session is
 * active, this will be <code>NO</code>.
 */
@property(nonatomic, assign, readonly) BOOL mediaLoaded;

/**
 * Whether there is a current item in the queue.
 */
@property(nonatomic, assign, readonly) BOOL hasCurrentQueueItem;

/**
 * Whether there is an item being preloaded in the queue.
 */
@property(nonatomic, assign, readonly) BOOL hasLoadingQueueItem;

/**
 * The latest known media player state. If no Cast session is active, this will be player state
 * just before the last session ended. If there was no prior session, this will be
 * @ref GCKMediaPlayerStateUnknown.
 */
@property(nonatomic, assign, readonly) GCKMediaPlayerState lastKnownPlayerState;

/**
 * The latest known media stream position. If no Cast session is active, this will be the stream
 * position of the media just before the last session ended. If there was no prior session, this
 * will be @ref kGCKInvalidTimeInterval.
 */
@property(nonatomic, assign, readonly) NSTimeInterval lastKnownStreamPosition;

/**
 * A "play" button. When the button is tapped, playback of the currently loaded media is started or
 * resumed on the receiver. The button will be disabled if playback is already in progress, or if
 * there is no media currently loaded, or if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIButton *playButton;

/**
 * A "pause" button. When the button is tapped, playback of the currently loaded media is paused on
 * the receiver. The button will be disabled if the currently loaded media does not support pausing,
 * or if playback is not currently in progress, or if there is no media currently loaded, or if
 * there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIButton *pauseButton;

/**
 * A "play/pause" toggle button. The caller should set appropriate icons for the button's
 * @ref GCKUIButtonStatePlay, @ref GCKUIButtonStatePlayLive, and @ref GCKUIButtonStatePause button
 * states, namely, a "pause" icon for the play state, a "stop" icon for the play-live state, and a
 * "play" icon for the pause state. The button state is automatically updated to reflect the current
 * playback state on the receiver. When the button is tapped, playback of the currently loaded media
 * is paused or resumed on the receiver. The button will be disabled if the currently loaded media
 * does not support pausing, or if playback is not currently in progress or paused, or if there is
 * no media currently loaded, or if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) GCKUIMultistateButton *playPauseToggleButton;

/**
 * A "play/pause" toggle controller. Used as a stand-in for a custom, application-supplied
 * play/pause toggle UI. See GCKUIPlayPauseToggleController for details.
 *
 * @since 3.4
 */
@property(nonatomic, strong, nullable)
    GCKUIPlayPauseToggleController *playPauseToggleController;

/**
 * A "stop" button. When the button is tapped, playback of the currently loaded media is stopped on
 * the receiver. The button will be disabled if there is no media currently loaded, or if there is
 * no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIButton *stopButton;

/**
 * A button for seeking 30 seconds forward in the currently playing media item. The button will be
 * disabled if there is no media
 * currently loaded, or if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIButton *forward30SecondsButton;

/**
 * A button for seeking 30 seconds back in the currently playing media item. The button will be
 * disabled if there is no media currently loaded, or if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIButton *rewind30SecondsButton;

/**
 * A button for pausing queue playback once the current item finishes playing.
 */
@property(nonatomic, weak, nullable) UIButton *pauseQueueButton;

/**
 * A "next" button. When the button is tapped, playback moves to the next media item in the queue.
 * The button will be disabled if the operation is not supported, or if there is no media currently
 * loaded, or if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIButton *nextButton;

/**
 * A "previous" button. When the button is tapped, playback moves to the previous media item in the
 * queue. The button will be disabled if the operation is not supported, or if there is no media
 * currently loaded, or if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIButton *previousButton;

/**
 * A button for cycling through the available queue repeat modes. (See @ref GCKMediaRepeatMode.) The
 * caller should set appropriate icons for the button's @ref GCKUIButtonStateRepeatOff,
 * @ref GCKUIButtonStateRepeatSingle, @ref GCKUIButtonStateRepeatAll, and
 * @ref GCKUIButtonStateShuffle button states. The button state is automatically updated to reflect
 * the current queue repeat mode on the receiver. Tapping on the button cycles to the next repeat
 * mode, in the order:
 *
 * @ref GCKMediaRepeatModeOff &rarr; @ref GCKMediaRepeatModeAll &rarr;
 * @ref GCKMediaRepeatModeSingle &rarr; @ref GCKMediaRepeatModeAllAndShuffle
 *
 * The button will be disabled if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) GCKUIMultistateButton *repeatModeButton;

/**
 * A slider for displaying and changing the current stream position. When the slider's value is
 * changed by the user, the stream position of the currently loaded media is updated on the
 * receiver. While playback of media is in progress on the receiver, the slider's value is updated
 * in realtime to reflect the current stream position. The slider will be disabled if the currently
 * loaded media does not support seeking, or if there is no media currently loaded, or if there is
 * no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UISlider *streamPositionSlider;

/**
 * A view for displaying the current stream progress. While playback of media is in progress on the
 * receiver, the views's value is updated in realtime to reflect the current stream position. The
 * view will be disabled if the currently loaded media is a live stream, or if there is no media
 * currently loaded, or if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIProgressView *streamProgressView;

/**
 * A label for displaying the current stream position, in minutes and seconds. If there is no media
 * currently loaded, or if there is no Cast session currently active, the label displays a localized
 * form of "--:--".
 */
@property(nonatomic, weak, nullable) UILabel *streamPositionLabel;

/**
 * A label for displaying the current stream duration, in minutes and seconds. If the currently
 * loaded media does not have a duration (for example, if it is a live stream), or if there is no
 * media currently loaded, or if there is no Cast session currently active, the label displays a
 * localized form of "--:--".
 */
@property(nonatomic, weak, nullable) UILabel *streamDurationLabel;

/**
 * A label for displaying the remaining stream time (the duration minus the position), in minutes
 * and seconds. If the currently loaded media does not have a duration (for example, if it is a live
 * stream), or if there is no media currently loaded, or if there is no Cast session currently
 * active, the label displays a localized form of "--:--".
 */
@property(nonatomic, weak, nullable) UILabel *streamTimeRemainingLabel;

/**
 * A stream posdition controller. Used as a stand-in for a custom, application-supplied
 * stream position and/or seek UI. See GCKUIStreamPositionController for details.
 *
 * @since 3.4
 */
@property(nonatomic, strong, nullable)
    GCKUIStreamPositionController *streamPositionController;

/**
 * A stream playback rate controller. See GCKUIPlaybackRateController for details.
 *
 * @since 4.0
 */
@property(nonatomic, strong, nullable)
    GCKUIPlaybackRateController *playbackRateController;

/**
 * Whether remaining stream time will be displayed as a negative value, for example, "-1:23:45". By
 * default this property is set to <code>YES</code>.
 */
@property(nonatomic, assign) BOOL displayTimeRemainingAsNegativeValue;

/**
 * Whether stream position controls (including the stream position slider, the stream position
 * label, the stream duration label, and the stream progress view) should be hidden for live
 * content. The default value is <code>NO</code>.
 *
 * @since 4.0
 */
@property(nonatomic, assign) BOOL hideStreamPositionControlsForLiveContent;

/**
 * A button for selecting audio tracks and/or closed captions or subtitles. When the button is
 * tapped, the media tracks selection UI is displayed to the user. The button will be disabled if
 * the currently loaded media does not have any selectable media tracks, or if there is no media
 * currently loaded, or if there is no Cast session currently active.
 */
@property(nonatomic, weak, nullable) UIButton *tracksButton;

/**
 * A label for displaying a subtitle for the currently loaded media. If there is no subtitle field
 * explicitly set in the metadata, the label will display the most appropriate metadata field based
 * on the media type, for example the studio name for a movie or the artist name for a music track.
 */
@property(nonatomic, weak, nullable) UILabel *smartSubtitleLabel;

/**
 * An activity indicator view for indicating that the media is in a loading state.
 */
@property(nonatomic, weak, nullable) UIActivityIndicatorView *mediaLoadingIndicator;

/**
 * A label for displaying the amount of time left until the ad can be skipped.
 *
 * @since 4.3
 */
@property(nonatomic, weak, nullable) UILabel *skipAdLabel;

/**
 * A button for skipping the current ad.
 *
 * @since 4.3
 */
@property(nonatomic, weak, nullable) UIButton *skipAdButton;

/**
 * Initializes an instance.
 */
- (instancetype)init;

/**
 * Binds a <a href="https://goo.gl/POkr7n"><b>UILabel</b></a> to a metadata key. The view will
 * display the current value of the corresponding metadata field.
 *
 * See GCKMediaMetadata for a list of predefined metadata keys.
 *
 * @param label The <a href="https://goo.gl/POkr7n"><b>UILabel</b></a> that will display the value.
 * @param key The metadata key.
 */
- (void)bindLabel:(UILabel *)label toMetadataKey:(NSString *)key;

/**
 * Binds a <a href="https://goo.gl/POkr7n"><b>UILabel</b></a> to a metadata key. The view will
 * display the current value of the corresponding metadata field.
 *
 * See GCKMediaMetadata for a list of predefined metadata keys.
 *
 * @param label The <a href="https://goo.gl/POkr7n"><b>UILabel</b></a> that will display the value.
 * @param key The metadata key.
 * @param formatter A block that will produce the desired string representation of the value.
 */
- (void)bindLabel:(UILabel *)label
    toMetadataKey:(NSString *)key
    withFormatter:(GCKUIValueFormatter)formatter;

/**
 * Binds a <a href="https://goo.gl/ncWBFi"><b>UITextView</b></a> to a metadata key. The view will
 * display the current value of the corresponding metadata field.
 *
 * See GCKMediaMetadata for a list of predefined metadata keys.
 *
 * @param textView The <a href="https://goo.gl/ncWBFi"><b>UITextView</b></a> that will display the
 * value.
 * @param key The metadata key.
 */
- (void)bindTextView:(UITextView *)textView toMetadataKey:(NSString *)key;

/**
 * Binds a <a href="https://goo.gl/ncWBFi"><b>UITextView</b></a> to a metadata key. The view will
 * display the current value of the corresponding metadata field.
 *
 * See GCKMediaMetadata for a list of predefined metadata keys.
 *
 * @param textView The <a href="https://goo.gl/ncWBFi"><b>UITextView</b></a> that will display the
 * value.
 * @param key The metadata key.
 * @param formatter A block that will produce the desired string representation of the value.
 */
- (void)bindTextView:(UITextView *)textView
       toMetadataKey:(NSString *)key
       withFormatter:(GCKUIValueFormatter)formatter;

/**
 * Binds a <a href="https://goo.gl/8Eb8FS"><b>UIImageView</b></a> to a GCKUIImageHints instance.
 * The currently installed GCKUIImagePicker will be used to select an image from the metadata for
 * the view.
 *
 * @param imageView The <a href="https://goo.gl/8Eb8FS"><b>UIImageView</b></a> that will display the
 * selected image.
 * @param imageHints The image hints.
 */
- (void)bindImageView:(UIImageView *)imageView toImageHints:(GCKUIImageHints *)imageHints;

/**
 * Binds a @c UIControl to rewind playback of the current item by the passed value as seconds.
 * The view will be updated based on @c GCKCastSession state, the remote playback state and whether
 * it is a livestream. A target is also added to the @c UIControl to capture @c
 * UIControlEventTouchUpInside event. Do not add target of this type on the @c UIControl. To capture
 * the event use the @c GCKUIMediaControllerDelegate methods instead.
 *
 * @param control The UI element that the user interacts with. Typically this would be an instance
 * of @c UIButton.
 * @param rewindSeconds The number of seconds to rewind the media.
 */
- (void)bindControlView:(UIControl *)control toRewindForTime:(NSTimeInterval)rewindSeconds;

/**
 * Binds a @c UIControl to forward playback of the current item by the passed value as seconds.
 * The view will be updated based on @c GCKCastSession state, the remote playback state and whether
 * it is a livestream. A target is also added to the @c UIControl to capture @c
 * UIControlEventTouchUpInside event. Do not add target of this type on the @c UIControl. To capture
 * the event use the @c GCKUIMediaControllerDelegate methods instead.
 *
 * @param control The UI element that the user interacts with. Typically this would be an instance
 * of @c UIButton.
 * @param forwardSeconds The number of seconds to skip the media.
 */
- (void)bindControlView:(UIControl *)control toForwardForTime:(NSTimeInterval)forwardSeconds;

/**
 * Unbinds the specified view.
 *
 * @param view The view to unbind.
 */
- (void)unbindView:(UIView *)view;

/**
 * Unbinds all bound views.
 */
- (void)unbindAllViews;

/**
 * Changes the repeat mode for the queue to the next mode in the cycle:
 *
 * @ref GCKMediaRepeatModeOff &rarr; @ref GCKMediaRepeatModeAll &rarr;
 * @ref GCKMediaRepeatModeSingle &rarr; @ref GCKMediaRepeatModeAllAndShuffle
 *
 * @return The new repeat mode.
 */
- (GCKMediaRepeatMode)cycleRepeatMode;

/**
 * A convenience method for displaying the media track selection UI.
 */
- (void)selectTracks;

/**
 * Sends and monitors the skip ad request.
 *
 * @since 4.3
 */
- (void)skipAd;

@end

/**
 * The GCKUIMediaController delegate protocol.
 *
 * @since 3.0
 */
@protocol GCKUIMediaControllerDelegate <NSObject>

@optional

/**
 * Called when the remote media player state has changed.
 *
 * @param mediaController The GCKUIMediaController instance.
 * @param playerState The new player state.
 * @param streamPosition The last known stream position at the time of the player state change.
 */
- (void)mediaController:(GCKUIMediaController *)mediaController
    didUpdatePlayerState:(GCKMediaPlayerState)playerState
      lastStreamPosition:(NSTimeInterval)streamPosition;

/**
 * Called when preloading has started for an upcoming media queue item.
 *
 * @param mediaController The GCKUIMediaController instance.
 * @param itemID The ID of the item that is being preloaded, or @ref kGCKMediaQueueInvalidItemID
 * if none.
 */
- (void)mediaController:(GCKUIMediaController *)mediaController
    didBeginPreloadForItemID:(NSUInteger)itemID;

/**
 * Called when new media status has been received from the receiver, and after the
 * GCKUIMediaController has finished processing the updated status.
 *
 * @param mediaController The GCKUIMediaController instance.
 * @param mediaStatus The new media status.
 */
- (void)mediaController:(GCKUIMediaController *)mediaController
    didUpdateMediaStatus:(GCKMediaStatus *)mediaStatus;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIMediaTrackSelectionViewController.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

@class GCKMediaInformation;
@protocol GCKUIMediaTrackSelectionViewControllerDelegate;

NS_ASSUME_NONNULL_BEGIN

/**
 * A view controller that displays a list of the available text and audio tracks for a given media
 * item.
 *
 * See GCKUIMediaTrackSelectionViewControllerDelegate for the delegate protocol.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKUIMediaTrackSelectionViewController : UITabBarController

/**
 * The delegate that receives selection notifications from the controller.
 */
@property(nonatomic, weak, nullable)
    id<GCKUIMediaTrackSelectionViewControllerDelegate> selectionDelegate;

/**
 * The media information from which the list of available media tracks will be obtained.
 */
@property(nonatomic, strong, nullable) GCKMediaInformation *mediaInfo;

/**
 * The list of currently selected media track IDs.
 */
@property(nonatomic, copy, nullable) NSArray<NSNumber *> *selectedTrackIDs;

@end

/**
 * The GCKUIDeviceConnectionViewController delegate protocol.
 *
 * @since 3.0
 */
@protocol GCKUIMediaTrackSelectionViewControllerDelegate <NSObject>

/**
 * Called when the user has made a media track selection. The list may contain at most one
 * audio track ID and one text track ID. The absence of an audio track ID indicates that the
 * default audio track is selected, and the absence of a text track ID indicates that no text
 * track is selected.
 */
- (void)didSelectMediaTracks:(NSArray<NSNumber *> *)mediaTrackIDs;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIMiniMediaControlsViewController.h
================================================
// Copyright 2016 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKUIMediaButtonBarProtocol.h>

#import <Foundation/Foundation.h>

/**
 * @file GCKUIMiniMediaControlsViewController.h
 */

@protocol GCKUIMiniMediaControlsViewControllerDelegate;

NS_ASSUME_NONNULL_BEGIN

/**
 * A view controller which implements the "now playing" control bar. In its default configuration,
 * it displays a thumbnail, title, and subtitle for the current media item, a stream progress bar,
 * and a play/pause toggle button.
 *
 * See GCKUIMiniMediaControlsViewControllerDelegate for the delegate protocol.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKUIMiniMediaControlsViewController : UIViewController <GCKUIMediaButtonBarProtocol>

/**
 * The view controller's delgate, typically a full-screen view controller in charge of presenting
 * and hiding this control bar when appropriate.
 */
@property(nonatomic, weak, nullable)
    id<GCKUIMiniMediaControlsViewControllerDelegate> delegate;

/**
 * Whether the thumbnail image should be displayed or not. By default this property is set to
 * <code>YES</code>.
 */
@property(nonatomic, assign) BOOL thumbnailEnabled;

/**
 * Indicates the display state of the control bar. When <code>YES</code>, there is media being
 * casted which can be controlled by the control bar, and it can be made visible. When
 * <code>NO</code>, the control bar should be hidden.
 */
@property(nonatomic, assign, readonly) BOOL active;

/** The minimal (and preferred) height at which this view should be presented. */
@property(nonatomic, assign, readonly) CGFloat minHeight;

@end

/**
 * The GCKUIMiniMediaControlsViewController delegate protocol.
 *
 * @since 3.0
 */
@protocol GCKUIMiniMediaControlsViewControllerDelegate <NSObject>

/**
 * Notifies about a change in the active state of the control bar.
 *
 * @param miniMediaControlsViewController The now playing view controller instance.
 * @param shouldAppear If <code>YES</code>, the control bar can be displayed. If <code>NO</code>,
 *     the control bar should be hidden.
 */

- (void)miniMediaControlsViewController:
            (GCKUIMiniMediaControlsViewController *)miniMediaControlsViewController
                           shouldAppear:(BOOL)shouldAppear;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIMultistateButton.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A subclass of <a href="https://goo.gl/VK61wU"><b>UIButton</b></a> that supports multiple states.
 * Assign an image to each state with the GCKUIMultistateButton::setImage:forButtonState: method.
 *
 * @since 4.0
 */
GCK_EXPORT
@interface GCKUIMultistateButton : UIButton

/**
 * The button's application state.
 */
@property(nonatomic, assign) NSUInteger buttonState;

/**
 * Sets the image to display for a given button state.
 *
 * @param image The image.
 * @param buttonState The button state.
 */
- (void)setImage:(UIImage *)image forButtonState:(NSUInteger)buttonState;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIPlaybackRateController.h
================================================
// Copyright 2017 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class that can be used to implement a custom stream playback rate UI.
 * The application may either subclass this class and override the
 * GCKUIPlaybackRateController::playbackRate and GCKUIPlaybackRateController::inputEnabled
 * setters, or use KVO to listen for changes to these properties, and update its playback rate
 * and/or playback rate UI control(s) accordingly.
 *
 * @since 4.0
 */
GCK_EXPORT
@interface GCKUIPlaybackRateController : NSObject

/** Designated initializer. */
- (instancetype)init;

/**
 * The current stream playback rate from the GCKRemoteMediaClient. The GCKUIMediaController writes
 * this property whenever the playback rate changes. The GCKUIMediaController observes the property
 * (unless it is in the process of writing it) and if it changes, it issues the appropriate media
 * command with the GCKRemoteMediaClient to change the playback rate.
 */
@property(nonatomic, assign) float playbackRate;

/**
 * The GCKUIMediaController writes this property to enable or disable the UI control(s) managed by
 * this controller. Media-related UI controls are temporarily disabled while a media command is
 * in-flight.
 */
@property(nonatomic, assign) BOOL inputEnabled;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIPlayPauseToggleController.h
================================================
// Copyright 2017 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

/**
 * @file GCKUIPlayPauseToggleController.h
 * GCKUIPlayPauseState enum.
 */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

/**
 * @enum GCKUIPlayPauseState
 *
 * The play/pause state for a GCKUIPlayPauseToggleController.
 */
typedef NS_ENUM(NSInteger, GCKUIPlayPauseState) {
  GCKUIPlayPauseStateNone = 0,
  GCKUIPlayPauseStatePlay = 1,
  GCKUIPlayPauseStatePause = 2
};

NS_ASSUME_NONNULL_BEGIN

/**
 * A class that can be used to implement a custom play/pause toggle UI, in situations where a
 * GCKUIMultistateButton will not suffice. The application may either subclass this class and
 * override the  GCKUIPlayPauseToggleController::playPauseState and
 * GCKUIPlayPauseToggleController::inputEnabled setters, or use KVO to listen for changes to these
 * properties, and update its play/pause UI control(s) accordingly.
 *
 * @since 3.4
 */
GCK_EXPORT
@interface GCKUIPlayPauseToggleController : NSObject

/** Designated initializer. */
- (instancetype)init;

/**
 * The current play/pause state of the GCKRemoteMediaClient. The GCKUIMediaController writes this
 * property whenever the receiver's play/pause state changes. It observes the property (unless it is
 * in the process of writing it) and if it changes, it issues the appropriate media command with
 * the GCKRemoteMediaClient to change the receiver's player state accordingly.
 */
@property(nonatomic, assign) GCKUIPlayPauseState playPauseState;

/**
 * The GCKUIMediaController writes this property to enable or disable the UI control(s) managed by
 * this controller. Media-related UI controls are temporarily disabled while a media command is
 * in-flight.
 */
@property(nonatomic, assign) BOOL inputEnabled;

@end

NS_ASSUME_NONNULL_END

/** @endcond */




================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIStreamPositionController.h
================================================
// Copyright 2017 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class that can be used to implement a custom stream position and/or seek UI, in situations
 * where ordinary <a href="https://goo.gl/H71tKD"><b>UISlider</b></a>,
 * <a href="https://goo.gl/LoRoAx"><b>UIProgressView</b></a>, and
 * <a href="https://goo.gl/POkr7n"><b>UILabel</b></a> controls will not suffice.
 * The application may either subclass this class and override the
 * GCKUIStreamPositionController::streamPosition, GCKUIStreamPositionController::streamDuration,
 * and GCKUIStreamPositionController::inputEnabled
 * setters, or use KVO to listen for changes to these properties, and update its stream position
 * and/or seek UI control(s) accordingly.
 *
 * @since 3.4
 */
GCK_EXPORT
@interface GCKUIStreamPositionController : NSObject

/** Designated initializer. */
- (instancetype)init;

/**
 * The current stream position from the GCKRemoteMediaClient. The GCKUIMediaController writes this
 * property whenever the stream position changes; while the stream is advancing, the property will
 * be updated once per second. The GCKUIMediaController observes the property (unless it is
 * in the process of writing it) and if it changes, it issues the appropriate media command with
 * the GCKRemoteMediaPlayer to seek to the new stream position. Note that updating this value on
 * an unseekable stream will have no effect.
 */
@property(nonatomic, assign) NSTimeInterval streamPosition;

/**
 * The current stream duration from the GCKRemoteMediaClient. The GCKUIMediaController writes this
 * property whenever the stream duration changes. If the stream does not have a known duration
 * (because it is a live stream, for example), then the value written will be @ref
 * kGCKInvalidTimeInterval. It is not meaningful for the application to change this value.
 */
@property(nonatomic, assign) NSTimeInterval streamDuration;

/**
 * The GCKUIMediaController writes this property to enable or disable the UI control(s) managed by
 * this controller. Media-related UI controls are temporarily disabled while a media command is
 * in-flight.
 */
@property(nonatomic, assign) BOOL inputEnabled;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIStyle.h
================================================
// Copyright 2016 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKUIStyleAttributes.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 *
 * @since 3.3
 */
GCK_EXPORT
@interface GCKUIStyle : NSObject

/**
 * Returns the GCKUIStyle singleton instance.
 */
+ (GCKUIStyle *)sharedInstance;

/**
 * Forces a refresh of all currently visible views, so that any changes to the styling will
 * take effect immediately.
 */
- (void)applyStyle;

/**
 * The root of the styling attributes tree.
 */
@property(nonatomic, strong, readonly) GCKUIStyleAttributesCastViews *castViews;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIStyleAttributes.h
================================================
// Copyright 2016 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class for controlling the style (colors, fonts, icons) of the default views of the framework.
 *
 * @since 3.3
 */
GCK_EXPORT
@interface GCKUIStyleAttributes : NSObject

/**
 * An image that will be used in "closed captions" buttons in the framework's default views.
 */
@property(nonatomic) UIImage *closedCaptionsImage;
/**
 * An image that will be used in "forward 30 seconds" buttons in the frameworks default views.
 */
@property(nonatomic) UIImage *forward30SecondsImage;
/**
 * An image that will be used in "rewind 30 seconds" buttons in the framework's default views.
 */
@property(nonatomic) UIImage *rewind30SecondsImage;
/**
 * An image that will be used to indicate that a slider is a volume slider in the framework's
 * default views.
 */
@property(nonatomic) UIImage *volumeImage;
/**
 * An image that will be used in the "mute toggle" button in the framework's default views.
 * This is the image that will be displayed while the receiver is muted.
 */
@property(nonatomic) UIImage *muteOffImage;
/**
 * An image that will be used in the "mute toggle" button in the framework's default views. This is
 * the image that will be displayed while the receiver is not muted.
 */
@property(nonatomic) UIImage *muteOnImage;
/**
 * An image that will be used in the "play/pause toggle" button in the framework's default views.
 * This is the image that will be displayed while the receiver is playing.
 */
@property(nonatomic) UIImage *pauseImage;
/**
 * An image that will be used in the "play/pause toggle" button in the framework's default views.
 * This is the image that will be displayed while the receiver is paused.
 */
@property(nonatomic) UIImage *playImage;
/**
 * An image that will be used in "forward 30 seconds" buttons in the framework's default views.
 */
@property(nonatomic) UIImage *skipNextImage;
/**
 * An image that will be used in "forward 30 seconds" buttons in the framework's default views.
 */
@property(nonatomic) UIImage *skipPreviousImage;
/**
 * An image that will be used in the track selector, to select the audio track chooser view.
 */
@property(nonatomic) UIImage *audioTrackImage;
/**
 * An image that will be used in the track selector, to select the subtitle track chooser view.
 */
@property(nonatomic) UIImage *subtitlesTrackImage;
/**
 * An image that will be used in "stop" buttons in the framework's default views.
 */
@property(nonatomic) UIImage *stopImage;
/**
 * The UIFont to be used in labels of buttons in the framework's default views.
 */
@property(nonatomic) UIFont *buttonTextFont;
/**
 * The color to be used in labels of buttons in the framework's default views.
 *
 * @since 3.4
 */
@property(nonatomic) UIColor *buttonTextColor;
/**
 * The shadow color to be used in labels of buttons in the framework's default views.
 */
@property(nonatomic) UIColor *buttonTextShadowColor;
/**
 * The offset for the shadow for labels of buttons in the framework's default views.
 */
@property(nonatomic, assign) CGSize buttonTextShadowOffset;
/**
 * The UIFont to be used in labels of type "body" in the framework's default views.
 */
@property(nonatomic) UIFont *bodyTextFont;
/**
 * The UIFont to be used in labels of type "heading" in the framework's default views.
 */
@property(nonatomic) UIFont *headingTextFont;
/**
 * The font to be used in labels of type "caption" in the framework's default views.
 */
@property(nonatomic) UIFont *captionTextFont;
/**
 * The color to be used in labels of type "body" in the framework's default views.
 */
@property(nonatomic) UIColor *bodyTextColor;
/**
 * The shadow color to be used in labels of type "body" in the framework's default views.
 */
@property(nonatomic) UIColor *bodyTextShadowColor;
/**
 * The color to be used in labels of type "heading" in the framework's default views.
 */
@property(nonatomic) UIColor *headingTextColor;
/**
 * The shadow color to be used in labels of type "heading" in the framework's default views.
 */
@property(nonatomic) UIColor *headingTextShadowColor;
/**
 * The color to be used in labels of type "caption" in the framework's default views.
 */
@property(nonatomic) UIColor *captionTextColor;
/**
 * The shadow color to be used in labels of type "caption" in the framework's default views.
 */
@property(nonatomic) UIColor *captionTextShadowColor;
/**
 * The background color to be used on the framework's default views.
 */
@property(nonatomic) UIColor *backgroundColor;
/**
 * The color to use as tint color on all buttons and icons on the framework's default views.
 */
@property(nonatomic) UIColor *iconTintColor;
/**
 * The offset for the shadow for labels of type "body" in the framework's default views.
 */
@property(nonatomic, assign) CGSize bodyTextShadowOffset;
/**
 * The offset for the shadow for labels of type "caption" in the framework's default views.
 */
@property(nonatomic, assign) CGSize captionTextShadowOffset;
/**
 * The offset for the shadow for labels of type "heading" in the framework's default views.
 */
@property(nonatomic, assign) CGSize headingTextShadowOffset;

/**
 * The color used for the unseekable progress tracks on the slider views.
 *
 * @since 4.4.1
 */
@property(nonatomic) UIColor *sliderUnseekableProgressColor;

/**
 * The color used for the seekable progress track, and thumb on the slider views.
 *
 * @since 4.4.1
 */
@property(nonatomic) UIColor *sliderProgressColor;

/**
 * The color used for the seekable and unplayed progress track on the slider views.
 *
 * @since 4.4.1
 */
@property(nonatomic) UIColor *sliderSecondaryProgressColor;

/**
 * The background color of the tooltip label of the slider thumb.
 *
 * @since 4.4.1
 */
@property(nonatomic) UIColor *sliderTooltipBackgroundColor;

/**
 * The color used for the marker of live indicator.
 *
 * @since 4.4.1
 */
@property(nonatomic) UIColor *liveIndicatorColor;

/**
 * The UIViewContentMode of the ad image on the expanded view controller wrapped in a NSNumber.
 *
 * @since 4.4.1
 */
@property(nonatomic) NSNumber *adImageContentMode;

/**
 * The UIViewContentMode of the background image on the expanded view controller wrapped in a
 * NSNumber.
 *
 * @since 4.4.1
 */
@property(nonatomic) NSNumber *backgroundImageContentMode;

/**
 * The color used to draw the circular ad marker on the seek bar in the played segment of the
 * slider. Default is Yellow.
 *
 * @since 4.6.0
 */
@property(nonatomic) UIColor *playedAdMarkerFillColor;

/**
 * The color used to draw the circular ad marker on the seek bar in the un-played segment of the
 * slider. Default is Yellow.
 *
 * @since 4.6.0
 */
@property(nonatomic) UIColor *unplayedAdMarkerFillColor;

/**
 * The color to be used as thumb tint color of volume slider.
 *
 * @since 4.8.0
 */
@property(nonatomic) UIColor *volumeSliderThumbTintColor;

/**
 * The color to be used as minimum track tint color of volume slider.
 *
 * @since 4.8.0
 */
@property(nonatomic) UIColor *volumeSliderMinimumTrackTintColor;

/**
 * The color to be used as maximum track tint color of volume slider.
 *
 * @since 4.8.0
 */
@property(nonatomic) UIColor *volumeSliderMaximumTrackTintColor;

@end

/**
 * The style attributes for the view group representing the navigation bar of device controller.
 * Can be accessed as castViews.deviceController.connectionController.navigation.
 *
 * @since 4.3.5
 */
GCK_EXPORT
@interface GCKUIStyleAttributesConnectionNavigation : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing the toolbar of device controller.
 * Can be accessed as castViews.deviceController.connectionController.toolbar.
 *
 * @since 4.3.5
 */
GCK_EXPORT
@interface GCKUIStyleAttributesConnectionToolbar : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing the initial instructions overlay.
 * Can be accessed as castViews.instructions.
 */
GCK_EXPORT
@interface GCKUIStyleAttributesInstructions : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing the guest-mode pairing dialog.
 * Can be accessed as castViews.deviceControl.guestModePairingDialog
 *
 * @deprecated Guest mode feature has been removed. Using this API will have no affect on the
 * functionality.
 */
GCK_EXPORT
__deprecated_msg("No-op API. This will be removed in a later release.")
    @interface GCKUIStyleAttributesGuestModePairingDialog : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing the media track selector.
 * Can be accessed as castViews.mediaControl.trackSelector
 */
GCK_EXPORT
@interface GCKUIStyleAttributesTrackSelector : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing the mini controller.
 * Can be accessed as castViews.mediaControl.miniController
 */
GCK_EXPORT
@interface GCKUIStyleAttributesMiniController : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing the expanded controller.
 * Can be accessed as castViews.mediaControl.expandedController
 */
GCK_EXPORT
@interface GCKUIStyleAttributesExpandedController : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing the device chooser.
 * Can be accessed as castViews.deviceControl.deviceChooser
 */
GCK_EXPORT
@interface GCKUIStyleAttributesDeviceChooser : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing the connection controller.
 * Can be accessed as castViews.deviceControl.connectionController
 */
GCK_EXPORT
@interface GCKUIStyleAttributesConnectionController : GCKUIStyleAttributes

/**
 * The style attributes for the navigation bar of the device connection controller.
 *
 * @since 4.3.5
 */
@property(readonly, nonatomic) GCKUIStyleAttributesConnectionNavigation *navigation;

/**
 * The style attributes for the toolbar of the device connection controller.
 *
 * @since 4.3.5
 */
@property(readonly, nonatomic) GCKUIStyleAttributesConnectionToolbar *toolbar;

@end

/**
 * The style attributes for the view group representing no devices available controller.
 * Can be accessed as castViews.deviceControl.noDevicesAvailableController
 *
 * @since 4.6.0
 */
GCK_EXPORT
@interface GCKUIStyleAttributesNoDevicesAvailableController : GCKUIStyleAttributes
@end

/**
 * The style attributes for the view group representing all the media control views.
 * Can be accessed as castViews.mediaControl
 */
GCK_EXPORT
@interface GCKUIStyleAttributesMediaControl : GCKUIStyleAttributes

/** The style attributes for the expanded controller. */
@property(readonly, nonatomic) GCKUIStyleAttributesExpandedController *expandedController;

/** The style attributes for the mini controller. */
@property(readonly, nonatomic) GCKUIStyleAttributesMiniController *miniController;

/** The style attributes for the media track selector. */
@property(readonly, nonatomic) GCKUIStyleAttributesTrackSelector *trackSelector;

@end

/**
 * The style attributes for the view group representing all the device control views.
 * Can be accessed as castViews.deviceControl
 */
GCK_EXPORT
@interface GCKUIStyleAttributesDeviceControl : GCKUIStyleAttributes

/** The style attributes for the device chooser. */
@property(readonly, nonatomic) GCKUIStyleAttributesDeviceChooser *deviceChooser;

/** The style attributes for the device connection controller. */
@property(readonly, nonatomic) GCKUIStyleAttributesConnectionController *connectionController;

/**
 * The style attributes for the no devices available controller.
 *
 * @since 4.6.0
 */
@property(readonly, nonatomic)
    GCKUIStyleAttributesNoDevicesAvailableController *noDevicesAvailableController;

/**
 * The style attributes for the Guest Mode pairing dialog.
 *
 * @deprecated Guest mode feature has been removed. Using this API will have no affect on the
 * functionality.
 */
@property(readonly, nonatomic) GCKUIStyleAttributesGuestModePairingDialog *guestModePairingDialog
    __attribute((deprecated("No-op API. This will be removed in a later release.")));

@end

/**
 * The style attributes for the root view group.
 * Can be accessed as castViews
 */
GCK_EXPORT
@interface GCKUIStyleAttributesCastViews : GCKUIStyleAttributes

/** The style attributes for device control UI elements. */
@property(readonly, nonatomic) GCKUIStyleAttributesDeviceControl *deviceControl;

/** The style attributes for media control UI elements. */
@property(readonly, nonatomic) GCKUIStyleAttributesMediaControl *mediaControl;

/** The style attributes for instructional UI elements. */
@property(readonly, nonatomic) GCKUIStyleAttributesInstructions *instructions;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKUIUtils.h
================================================
// Copyright 2015 Google Inc.

/** @cond ENABLE_FEATURE_GUI */

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * User interface utility methods.
 *
 * @since 3.0
 */
GCK_EXPORT
@interface GCKUIUtils : NSObject

/**
 * Returns the currently active view controller, by navigating through the view controller
 * hierarchy beginning with the root view controller.
 */
+ (nullable UIViewController *)currentViewController;

/** Formats a time interval in MM:SS or H:MM:SS format. */
+ (NSString *)timeIntervalAsString:(NSTimeInterval)timeInterval;

/**
 * Formats a local time based on the current locale.
 *
 * @since 4.3.4
 */
+ (NSString *)localTimeAsString:(NSTimeInterval)localTime;

@end

NS_ASSUME_NONNULL_END

/** @endcond */



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKVastAdsRequest.h
================================================
#import <Foundation/Foundation.h>

#import <GoogleCast/GCKDefines.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A class representing a VAST request for an ad break clip.
 *
 * @since 4.1
 */
GCK_EXPORT
@interface GCKVASTAdsRequest : NSObject <NSCopying, NSSecureCoding>

/**
 * A URL for the VAST file.
 *
 * @since 4.1
 */
@property(nonatomic, readonly, nullable) NSURL *adTagUrl;

/**
 * A string specifying a VAST document to be used as the ads response
 * instead of making a request via an ad tag url. This can be useful for
 * debugging and other situations where a VAST response is already
 * available. If the adsResponse is non-nil, the adTagURL will be ignored by the receiver.
 *
 * @since 4.1
 */
@property(nonatomic, readonly, nullable) NSString *adsResponse;

/**
 * Initializes a GCKVASTAdsRequest object. Needs an adTagURL or an adsResponse.
 * @param adTagURL The ad tag URL for the request.
 * @param adsResponse The ads response for the request. If this is non-nil, adTagURL will be
 * ignored by the receiver.
 *
 * @since 4.3.4
 */
- (nullable instancetype)initWithAdTagURL:(nullable NSURL *)adTagURL
                              adsResponse:(nullable NSString *)adsResponse
    NS_DESIGNATED_INITIALIZER;

- (instancetype)init NS_UNAVAILABLE;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GCKVideoInfo.h
================================================
// Copyright 2016 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

/**
 * @enum GCKVideoInfoHDRType
 * An enum describing video HDR types.
 */
typedef NS_ENUM(NSInteger, GCKVideoInfoHDRType) {
  /** Unknown HDR type. */
  GCKVideoInfoHDRTypeUnknown = -1,
  /** Standard dynamic range. */
  GCKVideoInfoHDRTypeSDR = 0,
  /** Dolby Vision. */
  GCKVideoInfoHDRTypeDV = 1,
  /** High dynamic range. */
  GCKVideoInfoHDRTypeHDR = 2
};

NS_ASSUME_NONNULL_BEGIN

/**
 * A class representing video format details.
 *
 * @since 3.3
 */
GCK_EXPORT
@interface GCKVideoInfo : NSObject <NSCopying, NSSecureCoding>

/** The width of the video, in pixels. */
@property(nonatomic, assign, readonly) NSUInteger width;

/** The height of the video, in pixels. */
@property(nonatomic, assign, readonly) NSUInteger height;

/** The HDR type employed int the video, if any. */
@property(nonatomic, assign, readonly) GCKVideoInfoHDRType hdrType;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/GoogleCast.h
================================================
#import <GoogleCast/GCKAdBreakClipInfo.h>
#import <GoogleCast/GCKAdBreakInfo.h>
#import <GoogleCast/GCKAdBreakStatus.h>
#import <GoogleCast/GCKApplicationMetadata.h>
#import <GoogleCast/GCKCastChannel.h>
#import <GoogleCast/GCKCastContext.h>
#import <GoogleCast/GCKCastOptions.h>
#import <GoogleCast/GCKCastSession.h>
#import <GoogleCast/GCKColor.h>
#import <GoogleCast/GCKCommon.h>
#import <GoogleCast/GCKCredentialsData.h>
#import <GoogleCast/GCKDefines.h>
#import <GoogleCast/GCKDevice.h>
#import <GoogleCast/GCKDeviceProvider+Protected.h>
#import <GoogleCast/GCKDeviceProvider.h>
#import <GoogleCast/GCKDiscoveryCriteria.h>
#import <GoogleCast/GCKDiscoveryManager.h>
#import <GoogleCast/GCKDynamicDevice.h>
#import <GoogleCast/GCKError.h>
#import <GoogleCast/GCKGenericChannel.h>
#import <GoogleCast/GCKHLSSegmentFormat.h>
#import <GoogleCast/GCKHLSVideoSegmentFormat.h>
#import <GoogleCast/GCKImage.h>
#import <GoogleCast/GCKJSONUtils.h>
#import <GoogleCast/GCKLaunchOptions.h>
#import <GoogleCast/GCKLogger.h>
#import <GoogleCast/GCKLoggerCommon.h>
#import <GoogleCast/GCKLoggerFilter.h>
#import <GoogleCast/GCKMediaCommon.h>
#import <GoogleCast/GCKMediaInformation.h>
#import <GoogleCast/GCKMediaLiveSeekableRange.h>
#import <GoogleCast/GCKMediaLoadOptions.h>
#import <GoogleCast/GCKMediaLoadRequestData.h>
#import <GoogleCast/GCKMediaMetadata.h>
#import <GoogleCast/GCKMediaQueue.h>
#import <GoogleCast/GCKMediaQueueContainerMetadata.h>
#import <GoogleCast/GCKMediaQueueData.h>
#import <GoogleCast/GCKMediaQueueItem.h>
#import <GoogleCast/GCKMediaQueueLoadOptions.h>
#import <GoogleCast/GCKMediaRequestItem.h>
#import <GoogleCast/GCKMediaSeekOptions.h>
#import <GoogleCast/GCKMediaStatus.h>
#import <GoogleCast/GCKMediaTextTrackStyle.h>
#import <GoogleCast/GCKMediaTrack.h>
#import <GoogleCast/GCKMultizoneDevice.h>
#import <GoogleCast/GCKMultizoneStatus.h>
#import <GoogleCast/GCKNetworkAddress.h>
#import <GoogleCast/GCKOpenURLOptions.h>
#import <GoogleCast/GCKRemoteMediaClient+Protected.h>
#import <GoogleCast/GCKRemoteMediaClient.h>
#import <GoogleCast/GCKRequest.h>
#import <GoogleCast/GCKSenderApplicationInfo.h>
#import <GoogleCast/GCKSession+Protected.h>
#import <GoogleCast/GCKSession.h>
#import <GoogleCast/GCKSessionManager.h>
#import <GoogleCast/GCKSessionOptions.h>
#import <GoogleCast/GCKSessionTraits.h>
#import <GoogleCast/GCKVastAdsRequest.h>
#import <GoogleCast/GCKVideoInfo.h>
#import <GoogleCast/NSDictionary+GCKAdditions.h>
#import <GoogleCast/NSMutableDictionary+GCKAdditions.h>
#import <GoogleCast/NSTimer+GCKAdditions.h>
#import <GoogleCast/GCKCastContext+UI.h>
#import <GoogleCast/GCKUIButton.h>
#import <GoogleCast/GCKUICastButton.h>
#import <GoogleCast/GCKUICastContainerViewController.h>
#import <GoogleCast/GCKUIDeviceVolumeController.h>
#import <GoogleCast/GCKUIExpandedMediaControlsViewController.h>
#import <GoogleCast/GCKUIImageCache.h>
#import <GoogleCast/GCKUIImageHints.h>
#import <GoogleCast/GCKUIImagePicker.h>
#import <GoogleCast/GCKUIMediaButtonBarProtocol.h>
#import <GoogleCast/GCKUIMediaController.h>
#import <GoogleCast/GCKUIMediaTrackSelectionViewController.h>
#import <GoogleCast/GCKUIMiniMediaControlsViewController.h>
#import <GoogleCast/GCKUIMultistateButton.h>
#import <GoogleCast/GCKUIPlayPauseToggleController.h>
#import <GoogleCast/GCKUIPlaybackRateController.h>
#import <GoogleCast/GCKUIStreamPositionController.h>
#import <GoogleCast/GCKUIStyle.h>
#import <GoogleCast/GCKUIStyleAttributes.h>
#import <GoogleCast/GCKUIUtils.h>



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/NSDictionary+GCKAdditions.h
================================================
// Copyright 2012 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A category that adds some convenience methods to
 * <a href="https://goo.gl/0kFoNp"><b>NSDictionary</b></a> for safely looking up values of various
 * types. These methods are particularly useful for getting and setting fields of JSON data
 * objects.
 */
@interface NSDictionary (GCKAdditions)

/**
 * Looks up an <a href="https://goo.gl/5dXzU6"><b>NSString</b></a> value for a key, with a given
 * fallback value.
 *
 * @param key The key.
 * @param defaultValue The default value to return if the key is not found or if its value is not
 * an <a href="https://goo.gl/5dXzU6"><b>NSString</b></a>.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/5dXzU6"><b>NSString</b></a>; otherwise the default value.
 */
- (nullable NSString *)gck_stringForKey:(NSString *)key
                       withDefaultValue:(nullable NSString *)defaultValue;

/**
 * Looks up an <a href="https://goo.gl/5dXzU6"><b>NSString</b></a> value for a key, with a fallback
 * value of <code>nil</code>.
 *
 * @param key The key.
 * @return The value of the key, if found it was found and was an
 * <a href="https://goo.gl/5dXzU6"><b>NSString</b></a>; otherwise <code>nil</code>.
 */
- (nullable NSString *)gck_stringForKey:(NSString *)key;

/**
 * Looks up an <a href="https://goo.gl/hQFeav"><b>NSInteger</b></a> value for a key, with a given
 * fallback value.
 *
 * @param key The key.
 * @param defaultValue The default value to return if the key is not found or if its value is not
 * an <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>; otherwise the default value.
 */
- (NSInteger)gck_integerForKey:(NSString *)key withDefaultValue:(NSInteger)defaultValue;

/**
 * Looks up an <a href="https://goo.gl/hQFeav"><b>NSUInteger</b></a> value for a key, with a given
 * fallback value.
 *
 * @param key The key.
 * @param defaultValue The default value to return if the key is not found or if its value is not
 * an <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>; otherwise the default value.
 */
- (NSUInteger)gck_uintegerForKey:(NSString *)key withDefaultValue:(NSUInteger)defaultValue;

/**
 * Looks up an <a href="https://goo.gl/hQFeav"><b>NSInteger</b></a> value for a key, with a fallback
 * value of <code>0</code>.
 *
 * @param key The key.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>; otherwise <code>0</code>.
 */
- (NSInteger)gck_integerForKey:(NSString *)key;

/**
 * Looks up an <a href="https://goo.gl/hQFeav"><b>NSUInteger</b></a> value for a key, with a
 * fallback value of <code>0</code>.
 *
 * @param key The key.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>; otherwise <code>0</code>.
 */
- (NSUInteger)gck_uintegerForKey:(NSString *)key;

/**
 * Looks up a <b>double</b> value for a key, with a given fallback value.
 *
 * @param key The key.
 * @param defaultValue The default value to return if the key is not found or if its value is not
 * an <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>; otherwise the default value.
 */
- (double)gck_doubleForKey:(NSString *)key withDefaultValue:(double)defaultValue;

/**
 * Looks up a <b>double</b> value for a key, with a fallback value of <code>0.0</code>.
 *
 * @param key The key.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>; otherwise <code>0.0</code>.
 */
- (double)gck_doubleForKey:(NSString *)key;

/**
 * Looks up a <b>BOOL</b> value for a key, with a given fallback value.
 *
 * @param key The key.
 * @param defaultValue The default value to return if the key is not found or if its value is not
 * an <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>; otherwise the default value.
 */
- (BOOL)gck_boolForKey:(NSString *)key withDefaultValue:(BOOL)defaultValue;

/**
 * Looks up a <b>BOOL</b> value for a key, with a fallback value of <code>NO</code>.
 *
 * @param key The key.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/gY6NGU"><b>NSNumber</b></a>; otherwise <code>NO</code>.
 */
- (BOOL)gck_boolForKey:(NSString *)key;

/**
 * Looks up an <a href="https://goo.gl/0kFoNp"><b>NSDictionary</b></a> value for a key, with a
 * fallback value of <code>nil</code>.
 *
 * @param key The key.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/0kFoNp"><b>NSDictionary</b></a>; otherwise <code>nil</code>.
 */
- (nullable NSDictionary *)gck_dictionaryForKey:(NSString *)key;

/**
 * Looks up an <a href="https://goo.gl/q3tY5n"><b>NSArray</b></a> value for a key, with a fallback
 * value of <code>nil</code>.
 *
 * @param key The key.
 * @return The value of the key, if it was found and was an
 * <a href="https://goo.gl/q3tY5n"><b>NSArray</b></a>; otherwise <code>nil</code>.
 */
- (nullable NSArray *)gck_arrayForKey:(NSString *)key;

/**
 * Looks up an <a href="https://goo.gl/CGrMHD"><b>NSURL</b></a> value for a key, with a fallback
 * value of <code>nil</code>.
 *
 * @param key The key.
 * @return The value of the key as an <a href="https://goo.gl/CGrMHD"><b>NSURL</b></a>, if it was
 * found and was an <a href="https://goo.gl/5dXzU6"><b>NSString</b></a>; otherwise <code>nil</code>.
 */
- (nullable NSURL *)gck_urlForKey:(NSString *)key;

@end

NS_ASSUME_NONNULL_END

// For backwards compatibility:
#ifndef GCKTypedValueLookup
#define GCKTypedValueLookup GCKAdditions
#endif



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/NSMutableDictionary+GCKAdditions.h
================================================
// Copyright 2012 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A category that adds some convenience methods to
 * <a href="https://goo.gl/ZtiYbw"><b>NSDictionary</b></a> for setting values of various types.
 * These methods are particularly useful for getting and setting fields of JSON data objects.
 */
@interface NSMutableDictionary (GCKAdditions)

/**
 * Sets an <a href="https://goo.gl/5dXzU6"><b>NSString</b></a> value for a key.
 *
 * @param value The value.
 * @param key The key.
 */
- (void)gck_setStringValue:(NSString *)value forKey:(NSString *)key;

/**
 * Sets an <a href="https://goo.gl/hQFeav"><b>NSInteger</b></a> value for a key.
 *
 * @param value The value.
 * @param key The key.
 */
- (void)gck_setIntegerValue:(NSInteger)value forKey:(NSString *)key;

/**
 * Sets an <a href="https://goo.gl/hQFeav"><b>NSUInteger</b></a> value for a key.
 *
 * @param value The value.
 * @param key The key.
 */
- (void)gck_setUIntegerValue:(NSUInteger)value forKey:(NSString *)key;

/**
 * Sets a <b>double</b> value for a key.
 *
 * @param value The value.
 * @param key The key.
 */
- (void)gck_setDoubleValue:(double)value forKey:(NSString *)key;

/**
 * Sets a <b>BOOL</b> value for a key.
 *
 * @param value The value.
 * @param key The key.
 */
- (void)gck_setBoolValue:(BOOL)value forKey:(NSString *)key;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Headers/NSTimer+GCKAdditions.h
================================================
// Copyright 2015 Google Inc.

#import <GoogleCast/GCKDefines.h>

#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

/**
 * A category on <a href="https://goo.gl/0wgZmj"><b>NSTimer</b></a> that adds some useful
 * enhancements.
 */
@interface NSTimer (GCKAdditions)

/**
 * Constructs an <a href="https://goo.gl/0wgZmj"><b>NSTimer</b></a> with a weak target. Avoids a
 * retain loop between the timer and its target. The timer will be automatically invalidated if the
 * target has been released when the timer fires.
 */
+ (NSTimer *)gck_scheduledTimerWithTimeInterval:(NSTimeInterval)interval
                                     weakTarget:(id)target
                                       selector:(SEL)selector
                                       userInfo:(nullable id)userInfo
                                        repeats:(BOOL)repeats;

@end

NS_ASSUME_NONNULL_END



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/am.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "ማንቂያ";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/ar.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "تنبيه";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/az.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Siqnal";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/be.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Увага";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/bg.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Сигнал";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/bn.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "বিজ্ঞপ্তি";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/bs.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Upozorenje";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/ca.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/cs.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Upozornění";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/cy.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Rhybudd";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/da.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Underretning";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/de.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Benachrichtigung";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/el.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Ειδοποίηση";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/en.lproj/MaterialDialogs.strings
================================================
/* Accessibility announcement when a dialog is displayed. */
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/en_AU.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/en_GB.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/en_IN.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/es.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/es_419.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/es_MX.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/et.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Teatis";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/eu.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/fa.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "هشدار";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/fi.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Ilmoitus";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/fil.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerto";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/fr.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerte";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/fr_CA.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerte";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/ga.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/gl.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/gu.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "અલર્ટ";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/he.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "התראה";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/hi.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "चेतावनी";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/hr.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Upozorenje";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/hu.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Értesítés";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/hy.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Ծանուցում";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/id.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Notifikasi";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/is.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Tilkynning";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/it.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Avviso";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/ja.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "通知";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/jv.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/ka.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "გაფრთხილება";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/kk.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Ескерту";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/km.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "ការជូនដំណឹង";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/kn.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "ಅಲರ್ಟ್";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/ko.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "알림";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/ky.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Эскертүү";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/lo.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "ການເຕືອນ";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/lt.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Įspėjimas";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/lv.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Brīdinājums";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/mk.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Предупредување";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/ml.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "അലേർട്ട്";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/mn.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Сэрэмжлүүлэг";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/mr.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "सूचना";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/ms.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Makluman";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/my.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "သတိပေးချက်";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/nb.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Varsel";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/ne.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "अलर्ट";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/nl.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Melding";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/pa.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "ਅਲਰਟ";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/pl.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/ps.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "خبرتیا";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/pt.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/pt_BR.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/pt_PT.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alerta";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/ro.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alertă";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/ru.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Оповещение";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/si.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "ඇඟවීම";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/sk.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Upozornenie";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/sl.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Opozorilo";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/so.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/sq.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Sinjalizim";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/sr.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Обавештење";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/sr_Latn.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Obaveštenje";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/sv.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Varning";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/sw.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Arifa";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/ta.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "விழிப்பூட்டல்";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/te.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "అలర్ట్";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/th.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "การแจ้งเตือน";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/tk.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Duýduryş";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/tr.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Uyarı";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/uk.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Сповіщення";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/ur.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "الرٹ";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/uz.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Ogohlantirish";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/vi.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Cảnh báo";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/yue_HK.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Alert";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/zh_CN.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "提醒";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/zh_HK.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "注意";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/zh_TW.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "快訊";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/MaterialDialogs.bundle/Resources/zu.lproj/MaterialDialogs.strings
================================================
"MaterialDialogsPresentedAccessibilityAnnouncement" = "Isexwayiso";



================================================
FILE: sources/GoogleCast.xcframework/ios-arm64_x86_64-simulator/GoogleCast.framework/Modules/module.modulemap
================================================
framework module GoogleCast {
  umbrella header "GoogleCast.h"
  

  export *
  module * { export * }
}



================================================
FILE: sources/IPTV/AppDelegate.swift
================================================
//
//  AppDelegate.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 19/11/2024.
//
#if os(iOS)
import GoogleCast

import Foundation

class AppDelegate: UIResponder, UIApplicationDelegate {
    let kReceiverAppID = kGCKDefaultMediaReceiverApplicationID
    let kDebugLoggingEnabled = true

    var window: UIWindow?

    func application(_: UIApplication, didFinishLaunchingWithOptions _: [UIApplication.LaunchOptionsKey: Any]? = nil) -> Bool {
        let criteria = GCKDiscoveryCriteria(applicationID: kReceiverAppID)
        let options = GCKCastOptions(discoveryCriteria: criteria)
        GCKCastContext.setSharedInstanceWith(options)
        // Enable logger.
        GCKLogger.sharedInstance().delegate = self
        return true
    }
}

extension AppDelegate: GCKLoggerDelegate {
    // MARK: - GCKLoggerDelegate

    func logMessage(
        _ message: String,
        at _: GCKLoggerLevel,
        fromFunction function: String,
        location _: String
    ) {
        if kDebugLoggingEnabled {
            print(function + " - " + message)
        }
    }
}
#endif



================================================
FILE: sources/IPTV/ContentView.swift
================================================
//
//  ContentView.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 10/11/2024.
//

import IPTVComponents
import IPTVModels
import Realm
import SwiftUI

struct ContentView: View {
  @AppStorage("status") private var status: String = ""

  var body: some View {
    if $status.wrappedValue != "" {
      TabView {
        Tab("Live", systemImage: "tv") {
          LiveView(kindMedia: .live)
        }
        Tab("VOD", systemImage: "film") {
          VodView(kindMedia: .vod)
        }
        Tab("Séries", systemImage: "square.stack") {
          SeriesView(kindMedia: .series)
        }
        Tab("Search", systemImage: "magnifyingglass") {
          SearchView()
        }
        Tab("Settings", systemImage: "gear") {
          SettingsView()
            .background {
              HeroHeaderView(belowFold: true)
            }
            .navigationViewStyle(StackNavigationViewStyle())
        }
      }
      .background {
        HeroHeaderView(belowFold: true)
      }
    } else {
      SettingsView()
        .background {
          HeroHeaderView(belowFold: true)
        }
        .navigationViewStyle(StackNavigationViewStyle())
    }
  }
}

#Preview {
  ContentView()
}



================================================
FILE: sources/IPTV/Info.plist
================================================
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>NSAllowsArbitraryLoads</key>
	<true/>
	<key>NSAppTransportSecurity</key>
	<dict>
		<key>NSAllowsArbitraryLoads</key>
		<true/>
	</dict>
	<key>NSBonjourServices</key>
	<array>
		<string>_googlecast._tcp</string>
		<string>_ABCD1234._googlecast._tcp</string>
		<string>_CC1AD845._googlecast._tcp</string>
	</array>
    <key>UIRequiresFullScreen</key>
    <true/>
</dict>
</plist>



================================================
FILE: sources/IPTV/IPTVApp.swift
================================================
//
//  IPTVApp.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 10/11/2024.
//

import SwiftUI

@main
struct IPTVApp: App {
#if os(iOS)
  @UIApplicationDelegateAdaptor(AppDelegate.self) var delegate
#endif

  var body: some Scene {
    WindowGroup {
      ContentView()
    }
  }
}



================================================
FILE: sources/IPTV/IPTVDebug.entitlements
================================================
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict/>
</plist>



================================================
FILE: sources/IPTV/Assets.xcassets/Contents.json
================================================
{
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}



================================================
FILE: sources/IPTV/Assets.xcassets/AccentColor.colorset/Contents.json
================================================
{
  "colors" : [
    {
      "color" : {
        "color-space" : "srgb",
        "components" : {
          "alpha" : "1.000",
          "blue" : "0x33",
          "green" : "0x33",
          "red" : "0x33"
        }
      },
      "idiom" : "universal"
    }
  ],
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}



================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/Contents.json
================================================
{
  "assets" : [
    {
      "filename" : "App Icon - App Store.imagestack",
      "idiom" : "tv",
      "role" : "primary-app-icon",
      "size" : "1280x768"
    },
    {
      "filename" : "App Icon.imagestack",
      "idiom" : "tv",
      "role" : "primary-app-icon",
      "size" : "400x240"
    },
    {
      "filename" : "Top Shelf Image Wide.imageset",
      "idiom" : "tv",
      "role" : "top-shelf-image-wide",
      "size" : "2320x720"
    },
    {
      "filename" : "Top Shelf Image.imageset",
      "idiom" : "tv",
      "role" : "top-shelf-image",
      "size" : "1920x720"
    }
  ],
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}



================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/App Icon - App Store.imagestack/Contents.json
================================================
{
  "layers" : [
    {
      "filename" : "Front.imagestacklayer"
    },
    {
      "filename" : "Middle.imagestacklayer"
    },
    {
      "filename" : "Back.imagestacklayer"
    }
  ],
  "info" : {
    "version" : 1,
    "author" : "xcode"
  }
}


================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/App Icon - App Store.imagestack/Back.imagestacklayer/Contents.json
================================================
{
  "info" : {
    "version" : 1,
    "author" : "xcode"
  }
}


================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/App Icon - App Store.imagestack/Back.imagestacklayer/Content.imageset/Contents.json
================================================
{
  "images" : [
    {
      "filename" : "icontvos.jpg",
      "idiom" : "tv"
    }
  ],
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}



================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/App Icon - App Store.imagestack/Front.imagestacklayer/Contents.json
================================================
{
  "info" : {
    "version" : 1,
    "author" : "xcode"
  }
}


================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/App Icon - App Store.imagestack/Front.imagestacklayer/Content.imageset/Contents.json
================================================
{
  "images" : [
    {
      "filename" : "icontvos.jpg",
      "idiom" : "tv"
    }
  ],
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}



================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/App Icon - App Store.imagestack/Middle.imagestacklayer/Contents.json
================================================
{
  "info" : {
    "version" : 1,
    "author" : "xcode"
  }
}


================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/App Icon - App Store.imagestack/Middle.imagestacklayer/Content.imageset/Contents.json
================================================
{
  "images" : [
    {
      "filename" : "icontvos.jpg",
      "idiom" : "tv"
    }
  ],
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}



================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/App Icon.imagestack/Contents.json
================================================
{
  "layers" : [
    {
      "filename" : "Front.imagestacklayer"
    },
    {
      "filename" : "Middle.imagestacklayer"
    },
    {
      "filename" : "Back.imagestacklayer"
    }
  ],
  "info" : {
    "version" : 1,
    "author" : "xcode"
  }
}


================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/App Icon.imagestack/Back.imagestacklayer/Contents.json
================================================
{
  "info" : {
    "version" : 1,
    "author" : "xcode"
  }
}


================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/App Icon.imagestack/Back.imagestacklayer/Content.imageset/Contents.json
================================================
{
  "images" : [
    {
      "filename" : "icontvos3.jpg",
      "idiom" : "tv",
      "scale" : "1x"
    },
    {
      "filename" : "icontvos2.jpg",
      "idiom" : "tv",
      "scale" : "2x"
    }
  ],
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}



================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/App Icon.imagestack/Front.imagestacklayer/Contents.json
================================================
{
  "info" : {
    "version" : 1,
    "author" : "xcode"
  }
}


================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/App Icon.imagestack/Front.imagestacklayer/Content.imageset/Contents.json
================================================
{
  "images" : [
    {
      "filename" : "icontvos3.jpg",
      "idiom" : "tv",
      "scale" : "1x"
    },
    {
      "filename" : "icontvos2.jpg",
      "idiom" : "tv",
      "scale" : "2x"
    }
  ],
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}



================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/App Icon.imagestack/Middle.imagestacklayer/Contents.json
================================================
{
  "info" : {
    "version" : 1,
    "author" : "xcode"
  }
}


================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/App Icon.imagestack/Middle.imagestacklayer/Content.imageset/Contents.json
================================================
{
  "images" : [
    {
      "filename" : "icontvos3.jpg",
      "idiom" : "tv",
      "scale" : "1x"
    },
    {
      "filename" : "icontvos2.jpg",
      "idiom" : "tv",
      "scale" : "2x"
    }
  ],
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}



================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/Top Shelf Image Wide.imageset/Contents.json
================================================
{
  "images" : [
    {
      "filename" : "icontvos7.jpg",
      "idiom" : "tv",
      "scale" : "1x"
    },
    {
      "filename" : "icontvos6.jpg",
      "idiom" : "tv",
      "scale" : "2x"
    },
    {
      "filename" : "icontvos7 1.jpg",
      "idiom" : "tv-marketing",
      "scale" : "1x"
    },
    {
      "filename" : "icontvos6 1.jpg",
      "idiom" : "tv-marketing",
      "scale" : "2x"
    }
  ],
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}



================================================
FILE: sources/IPTV/Assets.xcassets/App Icon & Top Shelf Image.brandassets/Top Shelf Image.imageset/Contents.json
================================================
{
  "images" : [
    {
      "filename" : "icontvos5 1.jpg",
      "idiom" : "tv",
      "scale" : "1x"
    },
    {
      "filename" : "icontvos4 1.jpg",
      "idiom" : "tv",
      "scale" : "2x"
    },
    {
      "filename" : "icontvos5.jpg",
      "idiom" : "tv-marketing",
      "scale" : "1x"
    },
    {
      "filename" : "icontvos4.jpg",
      "idiom" : "tv-marketing",
      "scale" : "2x"
    }
  ],
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}



================================================
FILE: sources/IPTV/Assets.xcassets/AppIcon.appiconset/Contents.json
================================================
{
  "images" : [
    {
      "filename" : "IPTV_icon.jpg",
      "idiom" : "universal",
      "platform" : "ios",
      "size" : "1024x1024"
    },
    {
      "appearances" : [
        {
          "appearance" : "luminosity",
          "value" : "dark"
        }
      ],
      "filename" : "IPTV_icon 1.jpg",
      "idiom" : "universal",
      "platform" : "ios",
      "size" : "1024x1024"
    },
    {
      "appearances" : [
        {
          "appearance" : "luminosity",
          "value" : "tinted"
        }
      ],
      "filename" : "IPTV_icon 2.jpg",
      "idiom" : "universal",
      "platform" : "ios",
      "size" : "1024x1024"
    }
  ],
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}



================================================
FILE: sources/IPTV/Assets.xcassets/beach_landscape.imageset/Contents.json
================================================
{
  "images" : [
    {
      "filename" : "beach_landscape.png",
      "idiom" : "universal"
    }
  ],
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}



================================================
FILE: sources/IPTV/Assets.xcassets/beach_portrait.imageset/Contents.json
================================================
{
  "images" : [
    {
      "filename" : "beach_portrait.png",
      "idiom" : "universal"
    }
  ],
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}



================================================
FILE: sources/IPTV/Assets.xcassets/yucca_portrait.imageset/Contents.json
================================================
{
  "images" : [
    {
      "filename" : "yucca_portrait.png",
      "idiom" : "universal",
      "scale" : "1x"
    },
    {
      "idiom" : "universal",
      "scale" : "2x"
    },
    {
      "idiom" : "universal",
      "scale" : "3x"
    }
  ],
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}



================================================
FILE: sources/IPTV/AsyncImage/AsyncImage.swift
================================================
//
//  AsyncImage.swift
//
//
//  Created by Tarik ALAOUI on 11/05/2022.
//

import SwiftUI

public struct AsyncImage<Content: View, Placeholder: View>: View {
  @Environment(\.redactionReasons) private var redactionReasons

  @StateObject private var loader: ImageLoader
  private let placeholder: Placeholder
  private let content: (Image) -> Content
  private let url: URL

  public init(
    url: URL,
    @ViewBuilder placeholder: () -> Placeholder,
    @ViewBuilder content: @escaping (Image) -> Content
  ) {
    self.url = url
    self.placeholder = placeholder()
    self.content = content
    _loader = StateObject(
      wrappedValue: ImageLoader(
        cache: TemporaryFileImageCache.shared
      )
    )
  }

  public init(url: URL, @ViewBuilder placeholder: () -> Placeholder) where Content == Image {
    self.url = url
    self.placeholder = placeholder()
    self.content = { $0 }
    _loader = StateObject(
      wrappedValue: ImageLoader(
        cache: TemporaryFileImageCache.shared
      )
    )
  }

  public var body: some View {
    Group {
      if isRedacted {
        Rectangle().fill(Color.black).opacity(0.2)
      } else {
        if let image = loader.image {
          content(Image(uiImage: image))
        } else {
          placeholder
        }
      }
    }
    .onChange(of: url, initial: false) {
      Task(priority: .utility) {
        await loader.load(url)
      }
    }
    .task {
      await loader.load(url)
    }
  }

  private var isRedacted: Bool {
    redactionReasons.contains(.placeholder)
  }
}

// swiftlint:disable force_unwrapping
struct AsyncImage_Previews: PreviewProvider {
  static var previews: some View {
    Group {
      AsyncImage(
        url: URL(string: "https://alaoui.me/assets/images/profile-img.jpg")!,
        placeholder: {
          Text("Placeholder")
        },
        content: { image in
          image
            .resizable()
            .scaledToFill()
        }
      )
      .frame(width: 400, height: 200)
      .clipped()
    }
  }
}



================================================
FILE: sources/IPTV/AsyncImage/ImageCache.swift
================================================
//
//  ImageCache.swift
//
//
//  Created by Tarik ALAOUI on 11/05/2022.
//

import UIKit

public protocol ImageCache {
  subscript(_: URL) -> UIImage? { get set }
}

public class TemporaryImageCache: ImageCache {
  @MainActor static let shared = TemporaryImageCache()

  private let cache: NSCache<NSURL, UIImage> = {
    let cache = NSCache<NSURL, UIImage>()
    cache.countLimit = 1500 // 100 items
    cache.totalCostLimit = 1024 * 1024 * 300 // 100 MB
    return cache
  }()

  public subscript(_ key: URL) -> UIImage? {
    get { cache.object(forKey: key as NSURL) }
    set {
      guard let newValue else {
        cache.removeObject(forKey: key as NSURL)
        return
      }
      cache.setObject(newValue, forKey: key as NSURL)
    }
  }
}

public class TemporaryFileImageCache: ImageCache {
  @MainActor static let shared = TemporaryFileImageCache()

  private let fileManager: FileManager
  private let cacheDirectory: URL
  private let maxCacheSize: UInt64 = 200 * 1024 * 1024 // 100 MB

  init() {
    self.fileManager = FileManager.default

    // Créer un dossier temporaire spécifique pour le cache des images
    let tempDirectory = fileManager.temporaryDirectory
    self.cacheDirectory = tempDirectory.appendingPathComponent(
      "ImageCache",
      isDirectory: true
    )

    // Créer le dossier si nécessaire
    if !fileManager.fileExists(atPath: cacheDirectory.path) {
      do {
        try fileManager.createDirectory(
          at: cacheDirectory,
          withIntermediateDirectories: true,
          attributes: nil
        )
      } catch {
        print(
          "Erreur lors de la création du dossier ImageCache : \(error)"
        )
      }
    }
  }

  public subscript(_ key: URL) -> UIImage? {
    get {
      let fileURL = cacheDirectory.appendingPathComponent(
        key.lastPathComponent
      )
      guard fileManager.fileExists(atPath: fileURL.path) else {
        return nil
      }

      do {
        let data = try Data(contentsOf: fileURL)
        return UIImage(data: data)
      } catch {
        print("Erreur lors de la lecture du fichier cache : \(error)")
        return nil
      }
    }
    set {
      let fileURL = cacheDirectory.appendingPathComponent(
        key.lastPathComponent
      )

      // Supprimer l'image si la valeur est `nil`
      if newValue == nil {
        do {
          try fileManager.removeItem(at: fileURL)
        } catch {
          print(
            "Erreur lors de la suppression du fichier cache : \(error)"
          )
        }
        return
      }

      // Sauvegarder l'image dans le cache
      guard let data = newValue?.pngData() else { return }
      do {
        try data.write(to: fileURL, options: .atomic)
        enforceCacheSizeLimit()
      } catch {
        print("Erreur lors de l'écriture du fichier cache : \(error)")
      }
    }
  }

  /// Supprime les fichiers les plus anciens si la taille totale du cache dépasse la limite définie
  private func enforceCacheSizeLimit() {
    do {
      let contents = try fileManager.contentsOfDirectory(
        at: cacheDirectory,
        includingPropertiesForKeys: [
          .contentModificationDateKey, .fileSizeKey,
        ],
        options: []
      )

      // Calculer la taille totale du cache
      var totalSize: UInt64 = 0
      var fileAttributes: [(url: URL, size: UInt64, date: Date)] = []

      for fileURL in contents {
        let attributes = try fileManager.attributesOfItem(
          atPath: fileURL.path
        )
        let fileSize = attributes[.size] as? UInt64 ?? 0
        let modificationDate =
          attributes[.modificationDate] as? Date ?? Date()

        totalSize += fileSize
        fileAttributes.append(
          (url: fileURL, size: fileSize, date: modificationDate)
        )
      }

      // Si la taille totale dépasse la limite, supprimer les fichiers les plus anciens
      if totalSize > maxCacheSize {
        let sortedFiles = fileAttributes.sorted(by: {
          $0.date < $1.date
        })
        for file in sortedFiles {
          try fileManager.removeItem(at: file.url)
          totalSize -= file.size
          if totalSize <= maxCacheSize {
            break
          }
        }
      }
    } catch {
      print(
        "Erreur lors de l'enforcement de la limite de taille du cache : \(error)"
      )
    }
  }

  func clearCache() {
    do {
      let contents = try fileManager.contentsOfDirectory(
        at: cacheDirectory,
        includingPropertiesForKeys: nil,
        options: []
      )
      for fileURL in contents {
        try fileManager.removeItem(at: fileURL)
      }
    } catch {
      print(
        "Erreur lors de la suppression des fichiers du cache : \(error)"
      )
    }
  }
}



================================================
FILE: sources/IPTV/AsyncImage/ImageLoader.swift
================================================
//
//  ImageLoader.swift
//
//
//  Created by Tarik ALAOUI on 11/05/2022.
//

import Combine
import IPTVComponents
import UIKit

class ImageLoader: ObservableObject {
  // MARK: - Contants

  private enum Constants {
    static let httpStatusCodeRangeAvailability = (200 ..< 300)
  }

  @Published var image: UIImage?
  private var cache: ImageCache?

  init(cache: ImageCache? = nil) {
    self.cache = cache
  }

  func load(_ url: URL) async {
    if let image = cache?[url] {
      await update(image: image)
      return
    }

    await withCheckedContinuation { continuation in
      APIManager.shared.fetchData(from: url) { result in
        switch result {
        case let .success(data):
          if let image = UIImage(data: data) {
            self.cache(url, image: image)
            Task { await self.update(image: image) }
          } else {
            Task { await self.update(image: nil) }
          }
        case .failure:
          Task { await self.update(image: nil) }
        }
        continuation.resume()
      }
    }
  }

  @MainActor
  private func update(image: UIImage?) async {
    self.image = image
  }

  private func cache(_ url: URL, image: UIImage?) {
    image.map { cache?[url] = $0 }
  }
}



================================================
FILE: sources/IPTV/Configs/AppConfig.swift
================================================
//
//  AppConfig.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 25/06/2025.
//
import Foundation

enum AppConfig {
  // MARK: - Public config keys
  
  static var tmpdbApiKey: String {
    string(for: "TMDB_API_KEY")
  }
  
  static var apiHost: String {
    string(for: "API_HOST")
  }

  static var apiPassword: String {
    string(for: "API_PASSWORD")
  }

  static var apiLogin: String {
    string(for: "API_LOGIN")
  }

  // MARK: - Helper Methods
  
  private static func string(for key: String) -> String {
    guard let str = Bundle.main.infoDictionary?[key] as? String else { return "" }
    return str
  }
}



================================================
FILE: sources/IPTV/Configs/default.xcconfig
================================================
//
//  dev.xcconfig
//  IPTV
//
//  Created by Tarik ALAOUI on 25/06/2025.
//

XCC_VERSION_NAME = 1.0.0
IS_DEV = 0
TMDB_API_KEY = ""
API_HOST = ""
API_PASSWORD = ""
API_LOGIN = ""



================================================
FILE: sources/IPTV/Extensions/Array+extension.swift
================================================
//
//  Array+extension.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//
import Foundation
import IPTVModels

extension [IPTVModels.Stream] {
  func sortedByDateDescending() -> [IPTVModels.Stream] {
    sorted { $0.added > $1.added }
  }
}

extension [Series] {
  func sortedByDateDescending() -> [Series] {
    sorted { $0.lastModified > $1.lastModified }
  }
}

extension Array where Element: Hashable {
  func unique() -> [Element] {
    return Array(Set(self))
  }
}



================================================
FILE: sources/IPTV/Extensions/CachedSeries+url.swift
================================================
//
//  CachedSeries+url.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 24/06/2025.
//
import Foundation
import IPTVModels

public extension CachedSeries {
  func streamURL() -> String {
    return "\(APIManager.shared.serieURL)/\(id).mkv"
  }

  func getTmdbImage() async -> String? {
    guard tmdb.count > 0 else { return nil }
    guard let tmdbId = NumberFormatter().number(from: tmdb)?.intValue,
          let medias = try? await TMDBAPIManager.shared.fetchImages(forMediaID: tmdbId, isMovie: false) else { return cover }

    guard let firstImage = medias.posters.first?.filePath else { return cover }
    return "https://image.tmdb.org/t/p/original\(firstImage)"
  }
}



================================================
FILE: sources/IPTV/Extensions/CachedStream+url.swift
================================================
//
//  CachedStream+url.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 25/06/2025.
//
import Foundation
import IPTVModels

public extension CachedStream {
  func getTmdbImage() async -> String? {
    guard streamType == "movie" else { return streamIcon }

    guard let tmdb,
          let tmdbId = NumberFormatter().number(from: tmdb)?.intValue,
          let medias = try? await TMDBAPIManager.shared.fetchImages(forMediaID: tmdbId, isMovie: streamType == "movie") else { return streamIcon }

    guard let firstImage = medias.posters.first?.filePath else { return streamIcon }
    return "https://image.tmdb.org/t/p/original\(firstImage)"
  }

  func streamURL() -> String {
    switch kindMedia {
    case .live:
      return "\(APIManager.shared.liveURL)/\(id)"
    case .vod:
      return "\(APIManager.shared.vodURL)/\(id).\(containerExtension)"
    case .series:
      return "\(APIManager.shared.serieURL)/\(id).\(containerExtension)"
    default:
      return "get_live_categories"
    }
  }
}



================================================
FILE: sources/IPTV/Extensions/Episode+url.swift
================================================
//
//  Episode+url.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 24/06/2025.
//
import IPTVModels

public extension Episode {
  func streamURL() -> String {
    return "\(APIManager.shared.serieURL)/\(id).\(containerExtension ?? "mkv")"
  }
}



================================================
FILE: sources/IPTV/Extensions/FavoryEntity+url.swift
================================================
//
//  FavoryEntity+url.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 24/06/2025.
//
import IPTVModels

public extension FavoriEntity {
  func streamURL() -> String {
    switch kindMedia {
    case .live:
      return "\(APIManager.shared.liveURL)/\(id)"
    case .vod:
      return "\(APIManager.shared.vodURL)/\(id).mkv"
    case .series:
      return "\(APIManager.shared.serieURL)/\(id).mkv"
    default:
      return "get_live_categories"
    }
  }
}



================================================
FILE: sources/IPTV/Extensions/UIView+resize.swift
================================================
//
//  UIView+resize.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 05/02/2025.
//
import SwiftUI
import UIKit

extension UIView {
  /// attaches all sides of the receiver to its parent view
  func coverWholeSuperview(margin: CGFloat = 0.0) {
    let view = superview
    layoutAttachTop(to: view, margin: margin)
    layoutAttachBottom(to: view, margin: margin)
    layoutAttachLeading(to: view, margin: margin)
    layoutAttachTrailing(to: view, margin: margin)
  }

  /// attaches the top of the current view to the given view's top if it's a superview of the current view
  /// or to it's bottom if it's not (assuming this is then a sibling view).
  @discardableResult
  func layoutAttachTop(to: UIView? = nil, margin: CGFloat = 0.0) -> NSLayoutConstraint {
    let view: UIView? = to ?? superview
    let isSuperview = view == superview
    let constraint = NSLayoutConstraint(
      item: self,
      attribute: .top,
      relatedBy: .equal,
      toItem: view,
      attribute: isSuperview ? .top : .bottom,
      multiplier: 1.0,
      constant: margin
    )
    superview?.addConstraint(constraint)

    return constraint
  }

  /// attaches the bottom of the current view to the given view
  @discardableResult
  func layoutAttachBottom(to: UIView? = nil, margin: CGFloat = 0.0, priority: UILayoutPriority? = nil) -> NSLayoutConstraint {
    let view: UIView? = to ?? superview
    let isSuperview = (view == superview) || false
    let constraint = NSLayoutConstraint(
      item: self,
      attribute: .bottom,
      relatedBy: .equal,
      toItem: view,
      attribute: isSuperview ? .bottom : .top,
      multiplier: 1.0,
      constant: -margin
    )
    if let priority {
      constraint.priority = priority
    }
    superview?.addConstraint(constraint)

    return constraint
  }

  /// attaches the leading edge of the current view to the given view
  @discardableResult
  func layoutAttachLeading(to: UIView? = nil, margin: CGFloat = 0.0) -> NSLayoutConstraint {
    let view: UIView? = to ?? superview
    let isSuperview = (view == superview) || false
    let constraint = NSLayoutConstraint(
      item: self,
      attribute: .leading,
      relatedBy: .equal,
      toItem: view,
      attribute: isSuperview ? .leading : .trailing,
      multiplier: 1.0,
      constant: margin
    )
    superview?.addConstraint(constraint)

    return constraint
  }

  /// attaches the trailing edge of the current view to the given view
  @discardableResult
  func layoutAttachTrailing(to: UIView? = nil, margin: CGFloat = 0.0, priority: UILayoutPriority? = nil) -> NSLayoutConstraint {
    let view: UIView? = to ?? superview
    let isSuperview = (view == superview) || false
    let constraint = NSLayoutConstraint(
      item: self,
      attribute: .trailing,
      relatedBy: .equal,
      toItem: view,
      attribute: isSuperview ? .trailing : .leading,
      multiplier: 1.0,
      constant: -margin
    )
    if let priority {
      constraint.priority = priority
    }
    superview?.addConstraint(constraint)

    return constraint
  }

  // for anchoring View
  struct AnchoredConstraints {
    var top, leading, bottom, trailing, width, height, centerX, centerY: NSLayoutConstraint?
  }

  @discardableResult
  func constraints(
    top: NSLayoutYAxisAnchor? = nil,
    leading: NSLayoutXAxisAnchor? = nil,
    bottom: NSLayoutYAxisAnchor? = nil,
    trailing: NSLayoutXAxisAnchor? = nil,
    padding: UIEdgeInsets = .zero,
    size: CGSize = .zero,
    centerX: NSLayoutXAxisAnchor? = nil,
    centerY: NSLayoutYAxisAnchor? = nil,
    centerXOffset: CGFloat = 0,
    centerYOffset: CGFloat = 0
  ) -> AnchoredConstraints {
    translatesAutoresizingMaskIntoConstraints = false
    var anchoredConstraints = AnchoredConstraints()

    if let top {
      anchoredConstraints.top = topAnchor.constraint(equalTo: top, constant: padding.top)
    }

    if let leading {
      anchoredConstraints.leading = leadingAnchor.constraint(equalTo: leading, constant: padding.left)
    }

    if let bottom {
      anchoredConstraints.bottom = bottomAnchor.constraint(equalTo: bottom, constant: -padding.bottom)
    }

    if let trailing {
      anchoredConstraints.trailing = trailingAnchor.constraint(equalTo: trailing, constant: -padding.right)
    }

    if size.width != 0 {
      anchoredConstraints.width = widthAnchor.constraint(equalToConstant: size.width)
    }

    if size.height != 0 {
      anchoredConstraints.height = heightAnchor.constraint(equalToConstant: size.height)
    }

    if let centerX {
      anchoredConstraints.centerX = centerXAnchor.constraint(equalTo: centerX, constant: centerXOffset)
    }

    if let centerY {
      anchoredConstraints.centerY = centerYAnchor.constraint(equalTo: centerY, constant: centerYOffset)
    }

    [
      anchoredConstraints.top,
      anchoredConstraints.leading,
      anchoredConstraints.bottom,
      anchoredConstraints.trailing,
      anchoredConstraints.width,
      anchoredConstraints.height,
      anchoredConstraints.centerX,
      anchoredConstraints.centerY,
    ].forEach { $0?.isActive = true }

    return anchoredConstraints
  }
}



================================================
FILE: sources/IPTV/Extensions/URL.extension.swift
================================================
//
//  URL.extension.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 12/11/2024.
//
import Foundation

extension URLCache {
  static let imageCache = URLCache(memoryCapacity: 512_000_000, diskCapacity: 10_000_000_000)
}



================================================
FILE: sources/IPTV/Fonts/Font Awesome 5 Brands-Regular-400.otf
================================================
[Non-text file]


================================================
FILE: sources/IPTV/Fonts/Font Awesome 5 Free-Regular-400.otf
================================================
[Non-text file]


================================================
FILE: sources/IPTV/Fonts/Font Awesome 5 Free-Solid-900.otf
================================================
[Non-text file]


================================================
FILE: sources/IPTV/Player/VideoPlayerView.swift
================================================
//
//  VideoPlayerView.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 10/11/2024.
//

import AVKit
import IPTVModels
import SwiftUI

struct VideoPlayerView: UIViewControllerRepresentable {
  @State private var isPlaying: Bool = false
  let streamURL: URL
  let id: Int
  let kind: KindMedia

  @MainActor
  func makeUIViewController(context _: Context) -> UIViewController {
    let controller = VPlayerController()
    controller.setupPlayer(with: streamURL, id: id, kind: kind)
    controller.modalPresentationStyle = .fullScreen
    controller.additionalSafeAreaInsets = .zero
    return controller
  }

  func updateUIViewController(_: VPlayerController, context _: Context) {
  }

  func updateUIViewController(_: UIViewController, context _: Context) {
  }

  func makeUIView(context _: Context) -> UIView {
    let view = UIView(frame: .zero)
    view.translatesAutoresizingMaskIntoConstraints = false
    view.backgroundColor = .black
    view.coverWholeSuperview()
    return view
  }
}



================================================
FILE: sources/IPTV/Player/ViewPlayerContent.swift
================================================
//
//  ViewPlayerContent.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 10/11/2024.
//
import Foundation
import IPTVModels
import SwiftUI

struct ViewPlayerContent: View {
  @State private var isPlaying: Bool = false
  @State private var mediaURL: URL
  @State private var id: Int
  @State private var kind: KindMedia

  public init(mediaURL: URL, id: Int, kind: KindMedia) {
    self.mediaURL = mediaURL
    self.id = id
    self.kind = kind
  }

  var body: some View {
    ZStack(alignment: .bottom) {
      VideoPlayerView(streamURL: mediaURL, id: id, kind: kind)
        .frame(maxWidth: .infinity, maxHeight: .infinity)
        .ignoresSafeArea(edges: .all)
    }
    .frame(maxWidth: .infinity, maxHeight: .infinity)
    .ignoresSafeArea(edges: .all)
    .background(.black)
  }
}



================================================
FILE: sources/IPTV/Player/VPlayerController.swift
================================================
//
//  PlayerController.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 10/11/2024.
//

import UIKit
#if os(tvOS)
import TVVLCKit
#endif
#if os(iOS)
import GoogleCast
import MobileVLCKit
#endif

import FontAwesome
import IPTVModels

class VPlayerController: UIViewController, VLCMediaPlayerDelegate, ObservableObject {
  var mediaPlayer = VLCMediaPlayer()

  @Published var currentTimeString: String = "00:00"
  @Published var videoLength: Int32 = 100 // setting some positive value to avoid div by zero and NAN exceptions
  @Published var videoCurrentTime: Int32 = 0
  @Published var percentagePlayedSoFar: Float = 0.0
  @Published var videoLengthString: String = "--:--"

  // UI Elements
  private let playPauseButton = UIButton(type: .system)
  private let forwardButton = UIButton(type: .system)
  private let rewindButton = UIButton(type: .system)
  private let closeButton = UIButton(type: .system)
  private let audioTrackButton = UIButton(type: .system)
  private let subtitlesButton = UIButton(type: .system)

  private let progressLabel = UILabel()
  private let videoContainerView = UIView(frame: .zero) // Conteneur pour la vidéo
  private let controlsContainerView = UIView() // Conteneur pour la vidéo
  private let backGround = UIView()
#if os(iOS)
  private let castButton = GCKUICastButton()
  private var sessionManager: GCKSessionManager {
    GCKCastContext.sharedInstance().sessionManager
  }

  private var mediaInformation: GCKMediaInformation?
#endif

  private enum Constants {
    static let fontSize: CGFloat = 14
  }

  private var controlsVisible = true
  private var hideControlsTimer: Timer?

  private var playerTimeChangedNotification: NSObjectProtocol?
  private var playerStateChangedNotification: NSObjectProtocol?

  private var retryCount = 0
  private let maxRetries = 5

  override func viewDidLoad() {
    super.viewDidLoad()
    view.layoutMargins = .zero
    view.backgroundColor = .black
    DispatchQueue.main.async {
      self.setupBackground()
      self.setupPlayer()
      self.setupUI()
      self.setupActions()
      self.showControls()
      self.setupRemoteInteraction()
#if os(iOS)
      self.sessionManager.add(self)
#endif
    }
    playerStateChangedNotification = NotificationCenter.default.addObserver(
      forName: Notification.Name(rawValue: VLCMediaPlayerStateChanged),
      object: mediaPlayer,
      queue: nil,
      using: playerStateChanged
    )

    playerTimeChangedNotification = NotificationCenter.default.addObserver(forName: Notification.Name(rawValue: VLCMediaPlayerTimeChanged), object: mediaPlayer, queue: nil, using: playerTimeChanged)
  }

  func setupPlayer(with mediaURL: URL, id _: Int, kind _: KindMedia) {
    let media = VLCMedia(url: mediaURL)
    media.addOptions([
      "file-caching": "3000",
      "live-caching": "1000",
      "network-caching": "3000",
      "http-reconnect": "1",
      "rtsp-caching": "3000",

    ])
    print(mediaURL)
    DispatchQueue.main.async { [weak self] in
      self?.mediaPlayer.media = media
      self?.mediaPlayer.play()
      self?.mediaPlayer.perform(Selector(("setTextRendererFontSize:")), with: Constants.fontSize)
    }

    // setupMediaCast(mediaURL: mediaURL, id: id, kind: kind)
  }

  func mediaPlayerStateChanged(_: Notification) {
    DispatchQueue.main.async { [weak self] in
      guard let self else { return }

      switch mediaPlayer.state {
      case .stopped:
        print("Lecture arrêtée.")
      case .ended:
        print("Lecture terminée.")
      case .error:
        print("Erreur détectée, tentative de relance...")
        retryPlayback()
      default:
        break
      }
    }
  }

  private func retryPlayback() {
    guard retryCount < maxRetries else {
      print("Nombre maximum de tentatives atteint.")
      return
    }

    retryCount += 1
    guard let media = mediaPlayer.media else {
      print("Aucun média disponible pour relancer la lecture.")
      return
    }

    mediaPlayer.stop()
    DispatchQueue.main.asyncAfter(deadline: .now() + 2) { [weak self] in
      self?.mediaPlayer.media = media
      self?.mediaPlayer.play()
    }
  }

  override func viewWillDisappear(_: Bool) {
    unregisterObservers()
  }

  deinit {
    if mediaPlayer.isPlaying {
      mediaPlayer.stop()
      mediaPlayer.media = nil
      mediaPlayer.drawable = nil
    }
  }

  func playerStateChanged(_: Notification) {
    videoLength = mediaPlayer.media!.length.intValue
    videoLengthString = mediaPlayer.media!.length.stringValue
  }

  func playerTimeChanged(_: Notification) {
    currentTimeString = mediaPlayer.time.stringValue
    videoCurrentTime = mediaPlayer.time.intValue
    percentagePlayedSoFar = Float(videoCurrentTime) / Float(videoLength)

    DispatchQueue.main.async { [weak self] in
      self?.progressLabel.text = String(format: "%@ / %@", self?.currentTimeString ?? "00:00", self?.videoLengthString ?? "00:00")
    }
  }

  func unregisterObservers() {
    NotificationCenter.default.removeObserver(playerTimeChangedNotification as Any)
    NotificationCenter.default.removeObserver(playerStateChangedNotification as Any)
  }

  private func setupBackground() {
    view.addSubview(backGround)
    backGround.translatesAutoresizingMaskIntoConstraints = false
    backGround.backgroundColor = .black
    backGround.isUserInteractionEnabled = false
    NSLayoutConstraint.activate([
      backGround.leadingAnchor.constraint(equalTo: view.leadingAnchor),
      backGround.trailingAnchor.constraint(equalTo: view.trailingAnchor),
      backGround.topAnchor.constraint(equalTo: view.topAnchor),
      backGround.bottomAnchor.constraint(equalTo: view.bottomAnchor),
    ])
  }

  // MARK: - Player Setup

  private func setupPlayer() {
    videoContainerView.translatesAutoresizingMaskIntoConstraints = false

    view.addSubview(videoContainerView)
    controlsContainerView.backgroundColor = .black.withAlphaComponent(0.4)
    controlsContainerView.translatesAutoresizingMaskIntoConstraints = false
    view.addSubview(controlsContainerView)

    mediaPlayer.setDeinterlaceFilter(nil)
    mediaPlayer.drawable = videoContainerView
    mediaPlayer.delegate = self

    NSLayoutConstraint.activate([
      videoContainerView.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 0),
      videoContainerView.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: 0),
      videoContainerView.topAnchor.constraint(equalTo: view.topAnchor, constant: 0),
      videoContainerView.bottomAnchor.constraint(equalTo: view.bottomAnchor, constant: 0),
    ])
    videoContainerView.isUserInteractionEnabled = false
    videoContainerView.coverWholeSuperview()

    NSLayoutConstraint.activate([
      controlsContainerView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
      controlsContainerView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
      controlsContainerView.topAnchor.constraint(equalTo: view.topAnchor),
      controlsContainerView.bottomAnchor.constraint(equalTo: view.bottomAnchor),
    ])
    controlsContainerView.isUserInteractionEnabled = true
  }

#if os(iOS)
  private func setupMediaCast(mediaURL: URL, id: Int, kind _: KindMedia) {
    GCKCastContext.sharedInstance().presentDefaultExpandedMediaControls()

    var metadata = GCKMediaMetadata()
    metadata.setString("Big Buck Bunny (2008)", forKey: kGCKMetadataKeyTitle)
    metadata.setString(
      "Big Buck Bunny tells the story of a giant rabbit with a heart bigger than " +
        "himself. When one sunny day three rodents rudely harass him, something " +
        "snaps... and the rabbit ain't no bunny anymore! In the typical cartoon " +
        "tradition he prepares the nasty rodents a comical revenge.",
      forKey: kGCKMetadataKeySubtitle
    )
    metadata.addImage(GCKImage(
      url: URL(string: "https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/images/BigBuckBunny.jpg")!,
      width: 480,
      height: 360
    ))

    /* Loading media to cast by creating a media request */
    let mediaInfoBuilder = GCKMediaInformationBuilder(contentURL: mediaURL)
    mediaInfoBuilder.contentID = String(id)
    mediaInfoBuilder.streamType = GCKMediaStreamType.none
    // mediaInfoBuilder.contentType = "video/mp4"
    mediaInfoBuilder.metadata = metadata
    mediaInformation = mediaInfoBuilder.build()

    /* Configuring the media request */
    let mediaLoadRequestDataBuilder = GCKMediaLoadRequestDataBuilder()
    mediaLoadRequestDataBuilder.mediaInformation = mediaInformation

    if let request = sessionManager.currentSession?.remoteMediaClient?.loadMedia(with: mediaLoadRequestDataBuilder.build()) {
      request.delegate = self
    }
  }
#endif

  // MARK: - UI Setup

  private func setupUI() {
    closeButton.setImage(UIImage(systemName: "arrowshape.turn.up.backward.fill"), for: .normal)
    closeButton.alpha = 1
    closeButton.tintColor = .white

    playPauseButton.setImage(UIImage.fontAwesomeIcon(name: .pause, style: .solid, textColor: .white, size: CGSize(width: 32, height: 32)), for: .normal)
    playPauseButton.alpha = 1
    playPauseButton.tintColor = .white
    forwardButton.setImage(UIImage.fontAwesomeIcon(name: .forward, style: .solid, textColor: .white, size: CGSize(width: 32, height: 32)), for: .normal)
    forwardButton.setTitle("+ 30s", for: .normal)
    forwardButton.alpha = 1
    forwardButton.tintColor = .white
    rewindButton.setImage(UIImage.fontAwesomeIcon(name: .backward, style: .solid, textColor: .white, size: CGSize(width: 32, height: 32)), for: .normal)
    rewindButton.alpha = 1
    rewindButton.tintColor = .white
    rewindButton.setTitle("- 30s", for: .normal)
#if os(iOS)
    castButton.frame = CGRectMake(0, 0, 24, 24)
    castButton.tintColor = UIColor.gray
#endif
    progressLabel.textAlignment = .center
    progressLabel.text = String(format: "%@ / %@", currentTimeString, videoLengthString)
    progressLabel.font = UIFont.monospacedDigitSystemFont(ofSize: 18, weight: .medium)
    progressLabel.textColor = .white

    // Configure AudioTrackButton
    audioTrackButton.setImage(UIImage(systemName: "mouth.fill"), for: .normal)
    audioTrackButton.tintColor = .white

    // Configure SubtitlesButton
    subtitlesButton.setImage(UIImage(systemName: "globe.badge.chevron.backward"), for: .normal)
    subtitlesButton.tintColor = .white

    let spacer = UIView()

#if os(iOS)
    let stopStack = UIStackView(arrangedSubviews: [closeButton, spacer, castButton, audioTrackButton, subtitlesButton, progressLabel])
#endif
#if os(tvOS)
    let stopStack = UIStackView(arrangedSubviews: [closeButton, spacer, audioTrackButton, subtitlesButton, progressLabel])
#endif

    stopStack.axis = .horizontal
    stopStack.spacing = 30
    stopStack.alignment = .top
    stopStack.translatesAutoresizingMaskIntoConstraints = false

    controlsContainerView.addSubview(stopStack)

    NSLayoutConstraint.activate([
      stopStack.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 16),
      stopStack.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -16),
      stopStack.topAnchor.constraint(equalTo: view.topAnchor, constant: 32),
    ])

    let controlsStack = UIStackView(arrangedSubviews: [rewindButton, playPauseButton, forwardButton])
    controlsStack.axis = .horizontal
    controlsStack.spacing = 30
    controlsStack.alignment = .bottom
    controlsStack.translatesAutoresizingMaskIntoConstraints = false

    controlsContainerView.addSubview(controlsStack)

    // Contrainte de la stack
    NSLayoutConstraint.activate([
      controlsStack.centerXAnchor.constraint(equalTo: controlsContainerView.centerXAnchor),
      controlsStack.bottomAnchor.constraint(equalTo: controlsContainerView.safeAreaLayoutGuide.bottomAnchor, constant: -40),
    ])

    // Afficher les contrôles par défaut
    controlsContainerView.alpha = 1
    view.bringSubviewToFront(controlsContainerView)
  }

  @objc private func selectAudioTrack() {
    guard let audioTracks = mediaPlayer.audioTrackNames as? [String] else { return }

    // Present an action sheet to select an audio track
    let alert = UIAlertController(title: "Select Audio Track", message: nil, preferredStyle: .actionSheet)
    for (index, trackName) in audioTracks.enumerated() {
      alert.addAction(UIAlertAction(title: trackName, style: .default, handler: { _ in
        self.mediaPlayer.currentAudioTrackIndex = Int32(index + 1)
      }))
    }
    alert.addAction(UIAlertAction(title: "Cancel", style: .cancel))
    present(alert, animated: true)
  }

  @objc private func toggleSubtitles() {
    guard let subtitleTracks = mediaPlayer.videoSubTitlesNames as? [String] else { return }
    print(subtitleTracks)
    // Present an action sheet to enable/disable subtitles
    let alert = UIAlertController(title: "Subtitles", message: nil, preferredStyle: .actionSheet)
    alert.addAction(UIAlertAction(title: "Disable", style: .default, handler: { _ in
      self.mediaPlayer.currentVideoSubTitleIndex = -1
    }))
    for (index, trackName) in subtitleTracks.enumerated() {
      alert.addAction(UIAlertAction(title: trackName, style: .default, handler: { _ in
        self.mediaPlayer.currentVideoSubTitleIndex = Int32(index + 1)
      }))
    }
    alert.addAction(UIAlertAction(title: "Cancel", style: .cancel))
    present(alert, animated: true)
  }

  private func setupActions() {
    playPauseButton.addTarget(self, action: #selector(togglePlayPause), for: .primaryActionTriggered)
    forwardButton.addTarget(self, action: #selector(skipForward), for: .primaryActionTriggered)
    rewindButton.addTarget(self, action: #selector(skipBackward), for: .primaryActionTriggered)
    closeButton.addTarget(self, action: #selector(closeView), for: .primaryActionTriggered)
    audioTrackButton.addTarget(self, action: #selector(selectAudioTrack), for: .primaryActionTriggered)
    subtitlesButton.addTarget(self, action: #selector(toggleSubtitles), for: .primaryActionTriggered)
  }

  @objc
  private func closeView() {
    if mediaPlayer.isPlaying {
      mediaPlayer.stop()
    }
    dismiss(animated: true)
  }

  // MARK: - Show/Hide Controls

  private func showControls() {
    controlsVisible = true
    UIView.animate(withDuration: 0.3) {
      self.controlsContainerView.alpha = 1
      self.playPauseButton.alpha = 1
      self.forwardButton.alpha = 1
      self.rewindButton.alpha = 1

      if self.mediaPlayer.videoSubTitlesNames.isEmpty {
        self.subtitlesButton.alpha = 0
      } else {
        self.subtitlesButton.alpha = 1
      }
      if self.mediaPlayer.videoTrackNames.isEmpty {
        self.audioTrackButton.alpha = 0
      } else {
        self.audioTrackButton.alpha = 1
      }
    }
    resetHideControlsTimer()
  }

  private func hideControls() {
    controlsVisible = false
    UIView.animate(withDuration: 0.3) {
      self.controlsContainerView.alpha = 0
      self.playPauseButton.alpha = 0
      self.forwardButton.alpha = 0
      self.rewindButton.alpha = 0
    }
  }

  private func setupRemoteInteraction() {
#if os(iOS)
    // Gestion des interactions tactiles sur iOS/iPadOS
    let tapRecognizer = UITapGestureRecognizer(target: self, action: #selector(remoteInteraction))
    tapRecognizer.numberOfTapsRequired = 1
    tapRecognizer.cancelsTouchesInView = false
    videoContainerView.isUserInteractionEnabled = true
    videoContainerView.addGestureRecognizer(tapRecognizer)
#endif

#if os(tvOS)
    // Gestion des actions avec la télécommande sur tvOS
    let tapRecognizer = UITapGestureRecognizer(target: self, action: #selector(remoteInteraction))
    tapRecognizer.allowedPressTypes = [
      NSNumber(value: UIPress.PressType.select.rawValue),
      NSNumber(value: UIPress.PressType.playPause.rawValue),
    ]
    view.isUserInteractionEnabled = true
    view.addGestureRecognizer(tapRecognizer)
#endif
  }

  @objc private func remoteInteraction() {
    print("tap detected \(controlsVisible)")
    if !controlsVisible {
      showControls()
    } else {
      hideControls()
    }
  }

  // MARK: - Player Actions

  @objc private func togglePlayPause() {
    if mediaPlayer.isPlaying {
      mediaPlayer.pause()
      playPauseButton.setImage(UIImage.fontAwesomeIcon(name: .play, style: .solid, textColor: .white, size: CGSize(width: 32, height: 32)), for: .normal)
      playPauseButton.alpha = 1
      playPauseButton.tintColor = .white
    } else {
      mediaPlayer.play()
      playPauseButton.setImage(UIImage.fontAwesomeIcon(name: .pause, style: .solid, textColor: .white, size: CGSize(width: 32, height: 32)), for: .normal)
      playPauseButton.alpha = 1
      playPauseButton.tintColor = .white
    }
    resetHideControlsTimer()
  }

  @objc private func skipForward() {
    let currentTime = mediaPlayer.time.intValue
    guard let length = mediaPlayer.media?.length.intValue else { return }
    let newTime = min(currentTime + 30000, length) // Skip forward by 10 seconds
    mediaPlayer.time = VLCTime(int: newTime)
    resetHideControlsTimer()
  }

  @objc private func skipBackward() {
    let currentTime = mediaPlayer.time.intValue
    let newTime = max(currentTime - 30000, 0) // Skip backward by 10 seconds
    mediaPlayer.time = VLCTime(int: newTime)
    resetHideControlsTimer()
  }

  private func resetHideControlsTimer() {
    hideControlsTimer?.invalidate()
    hideControlsTimer = Timer.scheduledTimer(withTimeInterval: 5, repeats: false) { [weak self] _ in
      self?.hideControls()
    }
  }
}

#if os(iOS)
extension VPlayerController: GCKSessionManagerListener, GCKRemoteMediaClientListener, GCKRequestDelegate {
  // MARK: - GCKSessionManagerListener

  func sessionManager(_: GCKSessionManager, didStart session: GCKSession) {
    print("MediaViewController: sessionManager didStartSession \(session)")
    sessionManager.currentSession?.remoteMediaClient?.add(self)
  }

  func sessionManager(_: GCKSessionManager, didResumeSession session: GCKSession) {
    print("MediaViewController: sessionManager didResumeSession \(session)")
    sessionManager.currentSession?.remoteMediaClient?.add(self)
  }

  func sessionManager(_: GCKSessionManager, didEnd _: GCKSession, withError error: Error?) {
    print("session ended with error: \(String(describing: error))")
    let message = "The Casting session has ended.\n\(String(describing: error))"
    sessionManager.currentSession?.remoteMediaClient?.remove(self)
  }

  func sessionManager(_: GCKSessionManager, didFailToStartSessionWithError _: Error?) {
    sessionManager.currentSession?.remoteMediaClient?.remove(self)
  }

  func sessionManager(
    _: GCKSessionManager,
    didFailToResumeSession _: GCKSession,
    withError _: Error?
  ) {
    sessionManager.currentSession?.remoteMediaClient?.remove(self)
  }

  func remoteMediaClient(_: GCKRemoteMediaClient, didUpdate mediaStatus: GCKMediaStatus?) {
    if let mediaStatus {
      mediaInformation = mediaStatus.mediaInformation
    }
  }

  // MARK: - GCKRequestDelegate

  func requestDidComplete(_ request: GCKRequest) {
    print("request \(Int(request.requestID)) completed")
  }

  func request(_ request: GCKRequest, didFailWithError error: GCKError) {
    print("request \(Int(request.requestID)) failed with error \(error)")
  }
}
#endif



================================================
FILE: sources/IPTV/Preview Content/Preview Assets.xcassets/Contents.json
================================================
{
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}



================================================
FILE: sources/IPTV/Services/APIManager.swift
================================================
import Foundation
import IPTVInterfaces
import IPTVModels

class APIManager: APIManagerProtocol {
  static let shared = APIManager()

  private let operationQueue: OperationQueue
  private let userStandard = UserDefaults.standard

  private var apiHost: String {
    userStandard.string(forKey: "apiHost") ?? ""
  }

  private var apiPassword: String {
    userStandard.string(forKey: "apiPassword") ?? ""
  }

  private var apiLogin: String {
    userStandard.string(forKey: "apiLogin") ?? ""
  }

  public var baseURL: String {
    "\(apiHost)/player_api.php?username=\(apiLogin)&password=\(apiPassword)"
  }

  public var liveURL: String {
    "\(apiHost)/\(apiLogin)/\(apiPassword)"
  }

  public var vodURL: String {
    "\(apiHost)/movie/\(apiLogin)/\(apiPassword)"
  }

  public var serieURL: String {
    "\(apiHost)/series/\(apiLogin)/\(apiPassword)"
  }

  private let session: URLSession

  private init() {
    self.operationQueue = OperationQueue()
    operationQueue.maxConcurrentOperationCount = 4
    operationQueue.qualityOfService = .userInitiated

    let configuration = URLSessionConfiguration.default
    configuration.timeoutIntervalForRequest = 30
    self.session = URLSession(configuration: configuration)
  }

  func fetchCategories(from url: URL, completion: @escaping (Result<[IPTVModels.Category], Error>) -> Void) {
    let operation = BlockOperation {
      self.performRequest(url: url) { (result: Result<[IPTVModels.Category], Error>) in
        switch result {
        case let .success(categories):
          let keywords = ["[FR]", "|FR|", "[MA]", "[TN]", "|MA|", "|TN|", "TUNISIE", "TUNISA", "MOROCCO", "TUNISIA", "FRANCE", "FRENCH"]
          let filteredCategories = categories.filter { category in
            keywords.contains(where: { category.name.contains($0) })
          }
          completion(.success(filteredCategories))
        case let .failure(error):
          completion(.failure(error))
        }
      }
    }
    operationQueue.addOperation(operation)
  }

  func fetchStreams(for categoryAPI: String, completion: @escaping (Result<[IPTVModels.Stream], Error>) -> Void) {
    guard let url = URL(string: categoryAPI) else {
      completion(.failure(NSError(domain: "Invalid URL", code: -1, userInfo: nil)))
      return
    }

    let operation = BlockOperation {
      self.performRequest(url: url) { (result: Result<[IPTVModels.Stream], Error>) in
        switch result {
        case let .success(streams):
          let filteredStreams = streams.filter { stream in
            !stream.name.contains("#####")
          }
          completion(.success(filteredStreams))
        case let .failure(error):
          completion(.failure(error))
        }
      }
    }
    operationQueue.addOperation(operation)
  }

  func fetchSeries(for categoryAPI: String, completion: @escaping (Result<[Series], Error>) -> Void) {
    guard let url = URL(string: categoryAPI) else {
      completion(.failure(NSError(domain: "Invalid URL", code: -1, userInfo: nil)))
      return
    }

    let operation = BlockOperation {
      self.performRequest(url: url) { (result: Result<[Series], Error>) in
        switch result {
        case let .success(series):
          let filteredSeries = series.filter { serie in
            !serie.name.contains("#####")
          }
          completion(.success(filteredSeries))
        case let .failure(error):
          completion(.failure(error))
        }
      }
    }
    operationQueue.addOperation(operation)
  }

  func fetchSeriesDetails(from urlString: String, completion: @escaping (Result<SeriesDetail, Error>) -> Void) {
    guard let url = URL(string: urlString) else {
      completion(.failure(NSError(domain: "Invalid URL", code: -1, userInfo: nil)))
      return
    }

    let operation = BlockOperation {
      self.performRequest(url: url) { (result: Result<SeriesDetail, Error>) in
        switch result {
        case let .success(serieDetail):
          completion(.success(serieDetail))
        case let .failure(error):
          completion(.failure(error))
        }
      }
    }
    operationQueue.addOperation(operation)
  }

  func fetchInfoUser(from urlString: String, completion: @escaping (Result<InfoUserResponse, Error>) -> Void) {
    guard let url = URL(string: urlString) else {
      completion(.failure(NSError(domain: "Invalid URL", code: -1, userInfo: nil)))
      return
    }

    let operation = BlockOperation {
      self.performRequest(url: url) { (result: Result<InfoUserResponse, Error>) in
        switch result {
        case let .success(infoUser):
          completion(.success(infoUser))
        case let .failure(error):
          completion(.failure(error))
        }
      }
    }
    operationQueue.addOperation(operation)
  }

  func fetchData(from url: URL, completion: @escaping (Result<Data, Error>) -> Void) {
    let operation = BlockOperation {
      let task = self.session.dataTask(with: url) { data, response, error in
        if let error {
          completion(.failure(error))
          return
        }

        guard let response = response as? HTTPURLResponse,
              (200 ... 299).contains(response.statusCode)
        else {
          completion(.failure(NSError(domain: "Invalid Response", code: -1, userInfo: nil)))
          return
        }

        guard let data else {
          completion(.failure(NSError(domain: "No Data", code: -1, userInfo: nil)))
          return
        }

        completion(.success(data))
      }
      task.resume()
    }
    operationQueue.addOperation(operation)
  }

  private func performRequest<T: Decodable>(url: URL, completion: @escaping (Result<T, Error>) -> Void) {
    let task = session.dataTask(with: url) { data, _, error in
      if let error {
        completion(.failure(error))
        return
      }

      guard let data else {
        completion(.failure(NSError(domain: "No Data", code: -1, userInfo: nil)))
        return
      }

      do {
        let decoder = JSONDecoder()
        decoder.dateDecodingStrategy = .secondsSince1970
        let result = try decoder.decode(T.self, from: data)
        completion(.success(result))
      } catch {
        completion(.failure(error))
      }
    }
    task.resume()
  }
}



================================================
FILE: sources/IPTV/Services/CacheManager.swift
================================================
//
//  CacheManager.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 10/11/2024.
//

import Foundation
import IPTVInterfaces
import IPTVModels
import RealmSwift
import SwiftUI

class CacheManager: CacheManagerProtocol {
  static let shared = CacheManager()

  public init() {
    print(Realm.Configuration.defaultConfiguration.fileURL!)
  }

  @MainActor
  func cacheCategories(_ categories: [IPTVModels.Category], for section: String) async {
    let realm = try! await Realm()
    do {
      try realm.write {
        for category in categories {
          let categoryCached = CategoryEntity(
            id: category.id,
            name: category.name,
            parentId: category.parentId,
            section: section
          )

          realm.add(categoryCached, update: .modified)
        }
      }
    } catch {
      print("Erreur lors de la sauvegarde dans Realm: \(error)")
    }
  }

  func cacheStreams(_ streams: [IPTVModels.Stream], for section: String) {
    let realm = try! Realm()
    do {
      try realm.write {
        for stream in streams {
          let cachedStream = CachedStream(
            id: stream.id,
            name: stream.name,
            streamType: stream.streamType,
            streamIcon: stream.streamIcon,
            section: section,
            added: stream.added,
            categoryId: stream.categoryId,
            rating: stream.rating,
            desc: stream.description,
            tmdb: stream.tmdb?.value,
            year: stream.year,
            containerExtension: stream.containerExtension
          )
          realm.add(cachedStream, update: .modified)
        }
      }
    } catch {
      print("Erreur lors de la sauvegarde dans Realm: \(error)")
    }
  }

  func resetDatabase() {
    let realm = try! Realm()
    do {
      try realm.write {
        realm.deleteAll()
      }
    } catch {
      print("Erreur lors de la sauvegarde dans Realm: \(error)")
    }
  }

  func cacheSeries(_ series: [Series], for section: String) {
    let realm = try! Realm()
    do {
      try realm.write {
        for serie in series {
          let cachedSerie = CachedSeries(serie: serie, section: section)
          realm.add(cachedSerie, update: .modified)
        }
      }
    } catch {
      print("Erreur lors de la sauvegarde dans Realm: \(error)")
    }
  }

  // Récupère les catégories d'une section depuis la base de données
  func fetchCachedCategories(for section: String) -> [CategoryEntity] {
    // Utilisation de la requête SwiftData
    return fetchFilteredCategories(for: section)
  }

  // Récupère les catégories d'une section depuis la base de données
  func fetchCachedStream(for section: String, categoryId: String) -> [IPTVModels.Stream] {
    do {
      let realm = try Realm()
      let streams = realm.objects(CachedStream.self)
      let results = streams.where { $0.section == section && $0.categoryId == categoryId }

      return results.map {
        IPTVModels.Stream(
          id: $0.id,
          name: $0.name,
          streamType: $0.streamType,
          streamIcon: $0.streamIcon,
          categoryId: $0.categoryId,
          rating: $0.rating,
          description: $0.desc,
          tmdb: FlexibleString(from: $0.tmdb),
          added: $0.added,
          year: $0.year
        )
      }
    } catch {
      print("Erreur lors de la récupération des streams : \(error)")
      return []
    }
  }

  func fetchFilteredCategories(for section: String) -> [CategoryEntity] {
    do {
      let realm = try Realm()
      let categories = realm.objects(CategoryEntity.self)
      let results = categories.where { $0.section == section && ($0.name.contains("[FR]") || $0.name.contains("|FR|") || $0.name.contains("FRANCE")) }

      return results.map(\.self)
    } catch {
      print("Erreur lors de la récupération des catégories : \(error)")
      return []
    }
  }
}



================================================
FILE: sources/IPTV/Services/TMDBAPIManager.swift
================================================
//
//  TMDBAPIManager.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 11/11/2024.
//

import Foundation
import IPTVInterfaces
import IPTVModels

class TMDBAPIManager {
  static let shared = TMDBAPIManager()
  static let apiKey: String = AppConfig.tmpdbApiKey

  func fetchImages(forMediaID id: Int, isMovie: Bool) async throws -> TMDBResponse {
    let endpoint = isMovie
      ? "https://api.themoviedb.org/3/movie/\(id)/images"
      : "https://api.themoviedb.org/3/tv/\(id)/images"

    guard var urlComponents = URLComponents(string: endpoint) else {
      throw NSError(domain: "Invalid URL", code: -1, userInfo: nil)
    }

    urlComponents.queryItems = [
      URLQueryItem(name: "api_key", value: TMDBAPIManager.apiKey),
      URLQueryItem(name: "language", value: "fr-FR"),
      URLQueryItem(name: "include_image_language", value: "fr,null"),
    ]

    guard let url = urlComponents.url else {
      throw NSError(domain: "Invalid URL Components", code: -1, userInfo: nil)
    }

    let (data, _) = try await URLSession.shared.data(from: url)
    let images = try JSONDecoder().decode(TMDBResponse.self, from: data)
    return images
  }
}



================================================
FILE: sources/IPTV/UseCases/LiveUseCase.swift
================================================
//
//  LiveUseCase.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 23/12/2024.
//
import IPTVComponents
import IPTVInterfaces
import IPTVModels
import SwiftUI

final class LiveUseCase: ObservableObject {
  public var kindMedia: KindMedia

  @Published var showErrorAlert: Bool = false
  @Published var errorMessage: String = ""

  private var cacheManager: CacheManagerProtocol
  private var apiManager: APIManagerProtocol

  init(
    kindMedia: KindMedia,
    apiManager: APIManagerProtocol,
    cacheManager: CacheManagerProtocol
  ) {
    self.kindMedia = kindMedia
    self.apiManager = apiManager
    self.cacheManager = cacheManager
  }

  func loadCategories() async {
    do {
      let fetchedCategories = await fetchLiveCategories()
      await cacheManager.cacheCategories(fetchedCategories, for: kindMedia.rawValue)

      for category in fetchedCategories {
        let streams = try await loadStreams(for: category.id)

        await MainActor.run {
          cacheManager.cacheStreams(streams, for: kindMedia.rawValue)
        }
      }
    } catch {
      await MainActor.run {
        errorMessage = error.localizedDescription
        showErrorAlert = true
      }
    }
  }

  func fetchLiveCategories() async -> [IPTVModels.Category] {
    return await withCheckedContinuation { continuation in
      let liveURL = URL(string: "\(APIManager.shared.baseURL)&action=get_live_categories")!
      apiManager.fetchCategories(from: liveURL) { result in
        switch result {
        case let .success(categories):
          continuation.resume(returning: categories)
        case let .failure(error):
          print("Erreur API: \(error)")
          continuation.resume(returning: [])
        }
      }
    }
  }

  private func loadStreams(for categoryId: String) async throws -> [IPTVModels.Stream] {
    let apiURL = "\(APIManager.shared.baseURL)&action=get_live_streams&category_id=\(categoryId)"
    return try await withCheckedThrowingContinuation { continuation in
      apiManager.fetchStreams(for: apiURL) { result in
        switch result {
        case let .success(streams):
          continuation.resume(returning: streams)
        case let .failure(error):
          continuation.resume(throwing: error)
        }
      }
    }
  }
}



================================================
FILE: sources/IPTV/Views/LiveView.swift
================================================
//
//  LiveView.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 10/11/2024.
//

import IPTVComponents
import IPTVModels
import RealmSwift
import SwiftUI

public struct LiveView: View {
  @ObservedObject var useCase: LiveUseCase
  @State private var belowFold = false
  private var showcaseHeight: CGFloat = 800

  @State private var selectedCategory: String? = nil
  @State private var showPlayer: Bool = false
  @State private var selectedStreamURL: URL? = nil

  @State private var showErrorAlert: Bool = false
  @State private var errorMessage: String = ""

  public var kindMedia: KindMedia

  @ObservedResults(CategoryEntity.self, where: ({ $0.section == KindMedia.live.rawValue })) var categories

  public init(kindMedia: KindMedia) {
    self.kindMedia = kindMedia
    self.useCase = LiveUseCase(
      kindMedia: kindMedia,
      apiManager: APIManager.shared,
      cacheManager: CacheManager.shared
    )
  }

  public var body: some View {
    NavigationStack {
      ScrollView(.vertical) {
        LazyVStack(alignment: .trailing, spacing: 36) {
          HStack {
            Button("Rafraichir") {
              Task(priority: .background) {
                await useCase.loadCategories()
              }
            }
          }

          makeSectionFavori()

          ForEach(categories, id: \.id) { category in
            makeSection(for: category)
          }
          .frame(maxWidth: .infinity)

          if categories.count == 0 {
            VStack(alignment: .center) {
              Spacer()
              Text("Charger la liste des chaines !")
              Spacer()
            }
            .frame(height: 500)
            .frame(maxWidth: .infinity, alignment: .center)
          }
        }
        .padding(.horizontal)
      }
      .background(alignment: .top) {
        HeroHeaderView(belowFold: true)
      }
      .frame(maxHeight: .infinity, alignment: .top)
      .alert("Erreur", isPresented: $useCase.showErrorAlert) {
        Button("OK", role: .cancel) {
        }
      } message: {
        Text(errorMessage)
      }
      .fullScreenCover(isPresented: Binding(get: {
        showPlayer && selectedStreamURL != nil
      }, set: { showPlayer = $0 })) {
        GeometryReader { _ in
          ViewPlayerContent(mediaURL: selectedStreamURL!, id: currentID, kind: .live)
            .frame(maxWidth: .infinity, maxHeight: .infinity)
            .ignoresSafeArea()
        }
      }
    }
  }

  @State private var currentID: Int = 9999

  @ViewBuilder
  private func makeSectionFavori() -> some View {
    Section {
      FavoriLiveShelf(kindMedia: kindMedia) { stream in
        currentID = stream.id
        selectedStreamURL = URL(string: stream.streamURL())
        showPlayer = true
      }
    }
  }

  @ViewBuilder
  func makeSection(for category: CategoryEntity) -> some View {
    Section {
      LiveShelf(category: category, kindMedia: kindMedia) { stream in
        currentID = stream.id
        selectedStreamURL = URL(string: stream.streamURL())
        showPlayer = true
      }
    }
    .id(category.id)
  }
}



================================================
FILE: sources/IPTV/Views/SearchView.swift
================================================
//
//  SearchView.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 12/11/2024.
//

import IPTVComponents
import IPTVModels
import RealmSwift
import SwiftUI

let columns: [GridItem] = Array(repeating: .init(.flexible(), spacing: 40), count: 4)

struct SearchView: View {
  @State var searchTerm: String = ""
  @State var effectiveSearch: String = ""

  @ObservedResults(CachedStream.self) var streams: Results<CachedStream>
  @ObservedResults(CachedSeries.self) var series: Results<CachedSeries>

  @State private var searchTask: Task<Void, Never>?
  @State private var showPlayer: Bool = false
  @State private var selectedStreamURL: URL? = nil

  @State private var showSerieDetail: Bool = false
  @State private var selectedSerieId: Int? = nil

  var filteredVods: Results<CachedStream> {
    let searchWords = "*\(effectiveSearch.replacingOccurrences(of: " ", with: "*"))*"
    return streams.where {
      $0.section == KindMedia.vod.rawValue && $0.name.like(searchWords, caseInsensitive: true)
    }
  }

  var filteredLives: Results<CachedStream> {
    let searchWords = "*\(effectiveSearch.replacingOccurrences(of: " ", with: "*"))*"
    return streams.where {
      $0.section == KindMedia.live.rawValue && $0.name.like(searchWords, caseInsensitive: true)
    }
  }

  var filteredSeries: Results<CachedSeries> {
    let searchWords = "*\(effectiveSearch.replacingOccurrences(of: " ", with: "*"))*"
    return series.where {
      $0.section == KindMedia.series.rawValue && $0.name.like(searchWords, caseInsensitive: true)
    }
  }

  var body: some View {
    NavigationStack {
      ScrollView(.vertical) {
        LazyVStack(alignment: .trailing, spacing: 36) {
          if !filteredVods.isEmpty {
            MovieSearchShelf(streams: filteredVods, kindMedia: .vod) { stream in
              selectedStreamURL = URL(string: stream.streamURL())
              showPlayer = true
            }
          }

          if !filteredLives.isEmpty {
            LiveSearchShelf(streams: filteredLives, kindMedia: .live) { stream in
              currentID = Int(stream.id)
              selectedStreamURL = URL(string: stream.streamURL())
              showPlayer = true
            }
          }

          if !filteredSeries.isEmpty {
            SeriesSearchShelf(streams: filteredSeries, kindMedia: .series) { stream in
              currentID = Int(stream.id)
              selectedSerieId = stream.id
              showSerieDetail = true
            }
          }
        }
        .buttonStyle(.borderless)
      }
      .background {
        HeroHeaderView(belowFold: true)
      }
      .scrollClipDisabled()
      .searchable(text: $searchTerm)
      .searchSuggestions {
      }
      .fullScreenCover(isPresented: Binding(get: {
        showPlayer && selectedStreamURL != nil
      }, set: { showPlayer = $0 })) {
        if let streamURL = selectedStreamURL {
          ViewPlayerContent(mediaURL: streamURL, id: currentID, kind: .vod)
            .ignoresSafeArea()
        }
      }
      .navigationDestination(isPresented: Binding(get: {
        showSerieDetail && selectedSerieId != nil
      }, set: { showSerieDetail = $0 })) {
        if let selectedSerieId {
          SerieDetailView(streamId: selectedSerieId)
        }
      }
      .onChange(of: searchTerm) {
        handleSearchDebounced(for: $searchTerm.wrappedValue)
      }
    }
  }

  @State private var currentID: Int = 9999

  private func handleSearchDebounced(for text: String) {
    searchTask?.cancel()

    searchTask = Task {
      try? await Task.sleep(nanoseconds: 300 * 1_000_000) // 300ms
      guard !Task.isCancelled else { return }

      await searchContent(text)
    }
  }

  private func searchContent(_ text: String) async {
    guard !text.isEmpty, text.count >= 2 else {
      effectiveSearch = ""
      return
    }

    effectiveSearch = text
  }
}



================================================
FILE: sources/IPTV/Views/SerieDetailView.swift
================================================
//
//  SerieDetailView.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 14/11/2024.
//

import IPTVComponents
import IPTVModels
import RealmSwift
import SwiftUI

struct SerieDetailView: View {
  @Namespace var mainNamespace
  @State var showDescription = false
  @State var streamId: Int
  @State var serieDetail: SeriesDetail?
  @State var urlTmdbString: String?
  @State private var showPlayer: Bool = false
  @State private var selectedStreamURL: URL? = nil

  @ObservedResults(CachedSeries.self) var series

  var filteredSerie: CachedSeries? {
    series.where { $0.id == streamId }.first
  }

  private let ratio: CGFloat = 250 / 150
  private let column: Int = 6

  private func allEpisodes(_: String) -> [Episode] {
    guard let serieDetail, let values = serieDetail.episodes?.values else {
      return []
    }
    return values.flatMap { $0 }
  }

  private var allEpisodes: [Episode] {
    guard let serieDetail, let values = serieDetail.episodes?.values else {
      return []
    }
    return values.flatMap { $0 }
  }

  private func allEpisodes(for saison: Int) -> [Episode] {
    return allEpisodes.filter { $0.season == saison }
  }

  @State var allSeasons: [Int] = []

  var body: some View {
    NavigationStack {
      VStack(alignment: .leading) {
        if let filteredSerie {
          Text("\(String(describing: filteredSerie.name))")
            .font(.largeTitle)
            .bold()

          Spacer()
          GeometryReader { geometry in
            ScrollView(.vertical) {
              VStack(spacing: 12) {
                Text(filteredSerie.genre ?? "")
                  .font(.caption.bold())
                  .foregroundStyle(Color.white)
                  .frame(maxWidth: .infinity, alignment: .leading)

                HStack(alignment: .top, spacing: 30) {
                  VStack(spacing: 12) {
                    Button {
                    } label: {
                      Image(systemName: "heart")
                    }
                  }
                  .frame(width: geometry.frame(in: .global).width * 0.1)

                  Button {
                    showDescription = true
                  } label: {
                    Text(serieDetail?.info.plot ?? "")
                      .font(.callout)
                      .lineLimit(5)
                      .foregroundStyle(Color.white)
                  }
                  .buttonStyle(.plain)
                  .frame(width: geometry.frame(in: .global).width * 0.6)

                  VStack(spacing: 0) {
                    Text("Starring : ")
                      .foregroundStyle(Color.white)
                      + Text(filteredSerie.cast ?? "")
                      .foregroundStyle(Color.white)
                      + Text("\nDirector : ")
                      .foregroundStyle(Color.white)
                      + Text(filteredSerie.director ?? "")
                      .foregroundStyle(Color.white)
                  }
                }
                makeSeasons()
              }
              .padding(.top)
            }
          }
        } else {
          EmptyView()
        }
      }
      .padding(16)
      .background {
        if serieDetail != nil {
          // let backdropPaths = serieDetail.info.backdropPaths
          if let urlTmdbString, let urlBack = URL(string: urlTmdbString) {
            backgroundImage(urlBack: urlBack)
          } /* else if !backdropPaths.isEmpty,  let urlBack = URL(string: backdropPaths[0]) {
           backgroundImage(urlBack: urlBack)
           } */ else {
            HeroHeaderView(belowFold: true)
          }
        }
      }
      .sheet(isPresented: $showDescription) {
        VStack(alignment: .center) {
          Text(serieDetail?.info.plot ?? "")
            .font(.callout)
            .foregroundStyle(.black)
            .frame(maxWidth: 600)
            .background(.white)
        }
      }
      .fullScreenCover(isPresented: Binding(get: {
        showPlayer && selectedStreamURL != nil
      }, set: { showPlayer = $0 })) {
        if let streamURL = selectedStreamURL {
          ViewPlayerContent(mediaURL: streamURL, id: currentID, kind: .series)
            .ignoresSafeArea()
        }
      }
    }
    .onAppear {
      Task {
        await viewDidLoad()
      }
    }
  }

  private func viewDidLoad() async {
    serieDetail = try? await loadSerieDetail()
    if let stream = filteredSerie {
      urlTmdbString = await stream.getTmdbImage()
    }
    allSeasons = allEpisodes
      .compactMap(\.season)
      .unique()
      .sorted()
      .reversed()
  }

  @State private var currentID: Int = 9999

  @ViewBuilder
  private func makeSeasons() -> some View {
    if !allSeasons.isEmpty {
      ForEach(allSeasons, id: \.self) { season in
        Section {
          LazyVStack(spacing: 16) {
            LazyHStack {
              Text("SAISON \(season)")
                .lineLimit(4)
                .multilineTextAlignment(.center)
                .font(.system(size: 23, weight: .bold))
                .frame(maxWidth: .infinity, alignment: .leading)
            }
            .frame(maxWidth: .infinity, alignment: .leading)

            ScrollView(.horizontal) {
              LazyHStack(spacing: 16) {
                ForEach(allEpisodes(for: season), id: \.id) { episode in
                  customButton(episode)
                    .id("shelf_\(episode.season)_\(episode.episodeNum)")
                }
              }
            }
            .id("shelf_\(season)")
            .scrollClipDisabled()
            .buttonStyle(.borderless)
          }
        }
        .padding(.vertical, 48)
        .id("saison_\(season)")
      }
    }
  }

  @ViewBuilder
  private func customButton(_ episode: Episode) -> some View {
    CustomButton(action: {
      currentID = Int(episode.id) ?? 9999
      selectedStreamURL = URL(string: episode.streamURL())
      showPlayer = true
    }, longPressAction: {
    }) {
      VStack(alignment: .leading) {
        VStack(spacing: 16) {
          if let imageUrl = episode.info?.movieImage, let url = URL(string: imageUrl) {
            AsyncImage(url: url, placeholder: {
              Rectangle()
                .foregroundColor(.white.opacity(0.5))
                .opacity(0.2)
                .aspectRatio(contentMode: .fill)
                .frame(width: 250, height: 150)
            }, content: { image in
              image
                .resizable()
                .aspectRatio(contentMode: .fill)
                .frame(width: 250, height: 150)
            })
          } else {
            Image("beach_portrait", bundle: .main)
              .foregroundColor(.white.opacity(0.5))
              .opacity(0.2)
              .aspectRatio(contentMode: .fill)
              .frame(width: 250, height: 150)
          }
        }

        Text(episode.title.replacingOccurrences(of: filteredSerie?.name ?? "", with: ""))
          .lineLimit(2)
          .multilineTextAlignment(.center)
          .foregroundStyle(.white)
          .font(.system(size: 14))
          .frame(width: 250)
          .frame(maxHeight: 48)
          .padding(0)
          .background(Color.black.opacity(0.5))
      }
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 48)
    }
#if os(tvOS)
    .prefersDefaultFocus(in: mainNamespace)
#endif
    .id(episode.id)
  }

  @ViewBuilder
  private func placeholder() -> some View {
    Rectangle()
      .foregroundColor(.black)
      .opacity(0.2)
      .aspectRatio(ratio, contentMode: .fit)
      .containerRelativeFrame(.horizontal, count: column, spacing: 40)
  }

  @ViewBuilder private func backgroundImage(urlBack: URL) -> some View {
    AsyncImage(url: urlBack, placeholder: {
      Rectangle()
        .foregroundColor(.black)
        .frame(maxWidth: .infinity, maxHeight: .infinity)
        .ignoresSafeArea()
    }, content: { image in
      image
        .resizable()
        .aspectRatio(contentMode: .fill)
        .frame(alignment: .top)
        .overlay {
          Rectangle()
            .fill(.black)
            .mask {
              LinearGradient(
                stops: [
                  .init(color: .black, location: 0.2),
                  .init(color: .black, location: 0.3),
                  .init(color: .black, location: 0.4),
                  .init(color: .black.opacity(0.5), location: 0.5),
                  .init(color: .black.opacity(0.2), location: 0.6),
                  .init(color: .black.opacity(0), location: 1),
                ],
                startPoint: .bottom, endPoint: .top
              )
            }
        }
        .frame(maxWidth: .infinity, maxHeight: .infinity)
        .ignoresSafeArea()
    })
    .frame(maxWidth: .infinity, maxHeight: .infinity)
    .ignoresSafeArea()
  }

  private func loadSerieDetail() async throws -> SeriesDetail {
    let apiURL = "\(APIManager.shared.baseURL)&action=get_series_info&series_id=\(streamId)"
    return try await withCheckedThrowingContinuation { continuation in
      APIManager.shared.fetchSeriesDetails(from: apiURL) { result in
        switch result {
        case let .success(streams):
          continuation.resume(returning: streams)
        case let .failure(error):
          continuation.resume(throwing: error)
        }
      }
    }
  }
}



================================================
FILE: sources/IPTV/Views/SeriesView.swift
================================================
import IPTVComponents
import IPTVModels
import RealmSwift
import SwiftUI

public struct SeriesView: View {
  @State private var showPlayer: Bool = false
  @State private var selectedStreamURL: URL?
  @State private var streamSelected: Int?

  @State private var showErrorAlert: Bool = false
  @State private var errorMessage: String = ""

  @State var progress: Double = 0.0
  @State var isLoading: Bool = false

  private let kindMedia: KindMedia
  @ObservedResults(CategoryEntity.self, where: ({ $0.section == KindMedia.series.rawValue })) var categories

  public init(kindMedia: KindMedia) {
    self.kindMedia = kindMedia
  }

  public var body: some View {
    NavigationStack {
      ScrollView {
        LazyVStack(alignment: .trailing, spacing: 36) {
          HStack {
            refreshButton
              .padding(.bottom, 16)
              .disabled(isLoading)

            if isLoading {
              ProgressView()
                .progressViewStyle(.circular)
            }
          }
          makeSectionFavori()
          ForEach(categories, id: \.id) { category in
            makeSection(for: category)
          }
        }
        .padding(.horizontal)
      }
      .background {
        HeroHeaderView(belowFold: true)
      }
      .alert("Erreur", isPresented: $showErrorAlert) {
        Button("OK", role: .cancel) {
        }
      } message: {
        Text(errorMessage)
      }
      .navigationDestination(isPresented: $showPlayer, destination: {
        if let streamSelected {
          SerieDetailView(streamId: streamSelected)
        }
      })
    }
  }

  private var refreshButton: some View {
    Button("Rafraîchir") {
      isLoading = true
      Task.detached(priority: .background) {
        await loadCategories()
      }
    }
    .frame(maxWidth: .infinity, alignment: .trailing)
  }

  @ViewBuilder
  private func makeSectionFavori() -> some View {
    Section {
      FavoriSerieShelf(kindMedia: kindMedia) { stream in
        streamSelected = stream.id
        showPlayer = true
      }
    }
  }

  @ViewBuilder
  private func makeSection(for category: CategoryEntity) -> some View {
    Section {
      SerieShelf(category: category, kindMedia: kindMedia) { stream in
        streamSelected = stream.id
        showPlayer = true
      }
    }
  }

  private func loadCategories() async {
    do {
      let fetchedCategories = try await fetchCategories()

      await CacheManager.shared.cacheCategories(fetchedCategories, for: kindMedia.rawValue)

      for category in fetchedCategories {
        let series = try await loadSeries(for: category.id)

        await MainActor.run {
          CacheManager.shared.cacheSeries(series, for: kindMedia.rawValue)
        }
      }

      await MainActor.run {
        isLoading = false
      }
    } catch {
      await MainActor.run {
        errorMessage = error.localizedDescription
        showErrorAlert = true
        isLoading = false
      }
    }
  }

  private func fetchCategories() async throws -> [IPTVModels.Category] {
    let action = "get_series_categories"

    let liveURL = URL(string: "\(APIManager.shared.baseURL)&action=\(action)")!
    return try await withCheckedThrowingContinuation { continuation in
      APIManager.shared.fetchCategories(from: liveURL) { result in
        switch result {
        case let .success(categories):
          continuation.resume(returning: categories)
        case let .failure(error):
          continuation.resume(throwing: error)
        }
      }
    }
  }

  private func loadSeries(for categoryId: String) async throws -> [Series] {
    let action = "get_series"

    let apiURL = "\(APIManager.shared.baseURL)&action=\(action)&category_id=\(categoryId)"
    return try await withCheckedThrowingContinuation { continuation in
      APIManager.shared.fetchSeries(for: apiURL) { result in
        switch result {
        case let .success(streams):
          continuation.resume(returning: streams)
        case let .failure(error):
          continuation.resume(throwing: error)
        }
      }
    }
  }
}

#Preview {
  VodView(kindMedia: .vod)
}



================================================
FILE: sources/IPTV/Views/SettingsView.swift
================================================
//
//  SettingsView.swift
//  IPTV
//
//  Created by Tarik ALAOUI on 19/11/2024.
//

import RealmSwift
import SwiftUI

struct SettingsView: View {
  @AppStorage("apiLogin") private var apiLogin: String = AppConfig.apiLogin
  @AppStorage("apiPassword") private var apiPassword: String = AppConfig.apiPassword
  @AppStorage("apiHost") private var apiHost: String = AppConfig.apiHost
  @AppStorage("expDate") private var expDate: String = ""
  @AppStorage("status") private var status: String = ""

  @State private var showSavedMessage: Bool = false
  @State private var showErrorMessage: Bool = false
  @State private var errorMessage: String = ""

  var body: some View {
    NavigationView {
      GeometryReader { geometry in
        HStack {
          VStack(alignment: .center) {
            Image(systemName: "gear")
              .resizable()
              .aspectRatio(contentMode: .fit)
              .frame(width: 200, height: 200)
          }
          .frame(width: geometry.frame(in: .global).width / 2)

          Form {
            Section(header: Text("API Settings")) {
              TextField("Login", text: $apiLogin)
                .textContentType(.username)
                .autocapitalization(.none)
                .disableAutocorrection(true)

              SecureField("Mot de passe", text: $apiPassword)
                .textContentType(.password)
                .autocapitalization(.none)
                .disableAutocorrection(true)

              TextField("Host", text: $apiHost)
                .keyboardType(.URL)
                .autocapitalization(.none)
                .disableAutocorrection(true)

              Button(action: validateAndSaveSettings) {
                Text("Enregistrer")
                  .frame(maxWidth: .infinity)
                  .foregroundStyle(.black)
              }
              .buttonStyle(.plain)
              .tint(.black)

              Text("\($status.wrappedValue) - Expire le: \($expDate.wrappedValue)")
                .font(.callout)
                .foregroundStyle(.black)
            }
          }
          .frame(width: geometry.frame(in: .global).width / 2)
        }
      }
    }
    .alert(isPresented: $showSavedMessage) {
      Alert(
        title: Text("Réglages sauvegardés"),
        message: Text("Vos réglages API ont été enregistrés avec succès."),
        dismissButton: .default(Text("OK"))
      )
    }
    .alert(isPresented: $showErrorMessage) {
      Alert(
        title: Text("Erreur"),
        message: Text(errorMessage),
        dismissButton: .default(Text("OK"))
      )
    }
    .onAppear {
      UserDefaults.standard.set(AppConfig.apiHost, forKey: "apiHost")
      UserDefaults.standard.set(AppConfig.apiPassword, forKey: "apiPassword")
      UserDefaults.standard.set(AppConfig.apiLogin, forKey: "apiLogin")
      UserDefaults.standard.synchronize()
    }
    .navigationTitle("Réglages")
  }

  private func validateAndSaveSettings() {
    if apiLogin.isEmpty {
      errorMessage = "Le champ Login ne peut pas être vide."
      showErrorMessage = true
      return
    }

    if apiPassword.isEmpty {
      errorMessage = "Le champ Mot de passe ne peut pas être vide."
      showErrorMessage = true
      return
    }

    if apiHost.isEmpty {
      errorMessage = "Le champ Host ne peut pas être vide."
      showErrorMessage = true
      return
    }

    saveSettings()
  }

  private func saveSettings() {
    showSavedMessage = true
    APIManager.shared.fetchInfoUser(from: "\(APIManager.shared.baseURL)&action=get_infos") { result in
      switch result {
      case let .success(userInfo):
        print(userInfo)
        UserDefaults.standard.set(userInfo.userInfo.expDate.formatted(), forKey: "expDate")
        UserDefaults.standard.set(userInfo.userInfo.status, forKey: "status")
        UserDefaults.standard.synchronize()
      case let .failure(failure):
        print(failure)
      }
    }
  }
}



================================================
FILE: sources/IPTV/Views/VodView.swift
================================================
import IPTVComponents
import IPTVModels
import RealmSwift
import SwiftUI

public struct VodView: View {
  @State private var showPlayer: Bool = false
  @State private var selectedStreamURL: URL? = nil
  @State private var showErrorAlert: Bool = false
  @State private var errorMessage: String = ""

  @State var progress: Double = 0.0
  @State var isLoading: Bool = false

  private let kindMedia: KindMedia
  @ObservedResults(CategoryEntity.self, where: ({ $0.section == KindMedia.vod.rawValue })) var categories

  public init(kindMedia: KindMedia) {
    self.kindMedia = kindMedia
  }

  public var body: some View {
    NavigationStack {
      ScrollView {
        LazyVStack(alignment: .trailing, spacing: 36) {
          HStack {
            refreshButton
              .padding(.bottom, 16)
              .disabled(isLoading)

            if isLoading {
              ProgressView()
                .progressViewStyle(.circular)
            }
          }

          makeSectionFavori()

          ForEach(categories, id: \.id) { category in
            makeSection(for: category)
          }

          if categories.count == 0 {
            VStack(alignment: .center) {
              Spacer()
              Text("Charger la liste des chaines !")
              Spacer()
            }
            .frame(height: 500)
            .frame(maxWidth: .infinity, alignment: .center)
          }
        }
        .padding(.horizontal)
      }
      .background {
        HeroHeaderView(belowFold: true)
      }
      .alert("Erreur", isPresented: $showErrorAlert) {
        Button("OK", role: .cancel) {
        }
      } message: {
        Text(errorMessage)
      }
      .fullScreenCover(isPresented: Binding(get: {
        showPlayer && selectedStreamURL != nil
      }, set: { showPlayer = $0 })) {
        if let streamURL = selectedStreamURL {
          ViewPlayerContent(mediaURL: streamURL, id: currentID, kind: .vod)
            .ignoresSafeArea()
        }
      }
    }
  }

  @State private var currentID: Int = 9999

  @ViewBuilder
  private func makeSectionFavori() -> some View {
    Section {
      FavoriMovieShelf(kindMedia: kindMedia) { stream in
        currentID = stream.id
        selectedStreamURL = URL(string: stream.streamURL())
        showPlayer = true
      }
    }
  }

  @ViewBuilder
  private var refreshButton: some View {
    Button("Rafraîchir") {
      isLoading = true
      Task.detached(priority: .background) {
        await loadCategories()
      }
    }
    .frame(maxWidth: .infinity, alignment: .trailing)
  }

  @ViewBuilder
  private func makeSection(for category: CategoryEntity) -> some View {
    Section {
      MovieShelf(category: category, kindMedia: kindMedia) { stream in
        currentID = stream.id
        selectedStreamURL = URL(string: stream.streamURL())
        showPlayer = true
      }
    }
  }

  private func loadCategories() async {
    do {
      let fetchedCategories = try await fetchCategories()

      await CacheManager.shared.cacheCategories(fetchedCategories, for: kindMedia.rawValue)

      for category in fetchedCategories {
        let streams = try await loadStreams(for: category.id)

        await MainActor.run {
          CacheManager.shared.cacheStreams(streams, for: kindMedia.rawValue)
        }
      }

      await MainActor.run {
        isLoading = false
      }
    } catch {
      await MainActor.run {
        errorMessage = error.localizedDescription
        showErrorAlert = true
        isLoading = false
      }
    }
  }

  private func fetchCategories() async throws -> [IPTVModels.Category] {
    let liveURL = URL(string: "\(APIManager.shared.baseURL)&action=get_vod_categories")!
    return try await withCheckedThrowingContinuation { continuation in
      APIManager.shared.fetchCategories(from: liveURL) { result in
        switch result {
        case let .success(categories):
          continuation.resume(returning: categories)
        case let .failure(error):
          continuation.resume(throwing: error)
        }
      }
    }
  }

  private func loadStreams(for categoryId: String) async throws -> [IPTVModels.Stream] {
    let apiURL = "\(APIManager.shared.baseURL)&action=get_vod_streams&category_id=\(categoryId)"
    return try await withCheckedThrowingContinuation { continuation in
      APIManager.shared.fetchStreams(for: apiURL) { result in
        switch result {
        case let .success(streams):
          continuation.resume(returning: streams)
        case let .failure(error):
          continuation.resume(throwing: error)
        }
      }
    }
  }
}

#Preview {
  VodView(kindMedia: .vod)
}



================================================
FILE: sources/IPTV.xcodeproj/project.pbxproj
================================================
// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 77;
	objects = {

/* Begin PBXBuildFile section */
		9D2165D42CE67E66008747ED /* RealmSwift in Embed Frameworks */ = {isa = PBXBuildFile; productRef = 9D779F252CE583FA00F6771A /* RealmSwift */; settings = {ATTRIBUTES = (CodeSignOnCopy, ); }; };
		9D2166EC2CEBE6C3008747ED /* FontAwesome in Frameworks */ = {isa = PBXBuildFile; productRef = 9D2166EB2CEBE6C3008747ED /* FontAwesome */; };
		9D2166F12CEBECA5008747ED /* TVVLCKit.xcframework in Frameworks */ = {isa = PBXBuildFile; fileRef = 9D9B36D52CE2192300E79979 /* TVVLCKit.xcframework */; platformFilters = (tvos, ); };
		9D2166F22CEBECA5008747ED /* TVVLCKit.xcframework in Embed Frameworks */ = {isa = PBXBuildFile; fileRef = 9D9B36D52CE2192300E79979 /* TVVLCKit.xcframework */; platformFilters = (tvos, ); settings = {ATTRIBUTES = (CodeSignOnCopy, RemoveHeadersOnCopy, ); }; };
		9D2167202CEC00C2008747ED /* MobileVLCKit.xcframework in Frameworks */ = {isa = PBXBuildFile; fileRef = 9D2166E72CEBE2D1008747ED /* MobileVLCKit.xcframework */; platformFilter = ios; };
		9D2167212CEC00C2008747ED /* MobileVLCKit.xcframework in Embed Frameworks */ = {isa = PBXBuildFile; fileRef = 9D2166E72CEBE2D1008747ED /* MobileVLCKit.xcframework */; platformFilter = ios; settings = {ATTRIBUTES = (CodeSignOnCopy, RemoveHeadersOnCopy, ); }; };
		9D779F262CE583FA00F6771A /* RealmSwift in Frameworks */ = {isa = PBXBuildFile; productRef = 9D779F252CE583FA00F6771A /* RealmSwift */; };
		9D7867B82E0B096F00D68E99 /* IPTVComponents in Frameworks */ = {isa = PBXBuildFile; productRef = 9D7867B72E0B096F00D68E99 /* IPTVComponents */; };
		9D7867BA2E0B0C8300D68E99 /* IPTVModels in Frameworks */ = {isa = PBXBuildFile; productRef = 9D7867B92E0B0C8300D68E99 /* IPTVModels */; };
		9D9B36A72CE042FC00E79979 /* VideoToolbox.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 9D9B36A62CE042FC00E79979 /* VideoToolbox.framework */; };
		9D9B36A92CE0430600E79979 /* AudioToolbox.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 9D9B36A82CE0430600E79979 /* AudioToolbox.framework */; };
		9D9B36AB2CE0430C00E79979 /* AVFoundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 9D9B36AA2CE0430C00E79979 /* AVFoundation.framework */; };
		9D9B36AD2CE0430F00E79979 /* CFNetwork.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 9D9B36AC2CE0430F00E79979 /* CFNetwork.framework */; };
		9D9B36AF2CE0431500E79979 /* CoreFoundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 9D9B36AE2CE0431500E79979 /* CoreFoundation.framework */; };
		9D9B36B32CE0433400E79979 /* OpenGLES.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 9D9B36B22CE0433400E79979 /* OpenGLES.framework */; };
		9D9B36B62CE0433E00E79979 /* QuartzCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 9D9B36B52CE0433E00E79979 /* QuartzCore.framework */; };
		9D9B36B82CE0434200E79979 /* Security.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 9D9B36B72CE0434200E79979 /* Security.framework */; };
		9D9B36C72CE0456B00E79979 /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 9D9B36C62CE0456A00E79979 /* UIKit.framework */; };
		9D9B36ED2CE2490F00E79979 /* Alamofire in Frameworks */ = {isa = PBXBuildFile; productRef = 9D9B36EC2CE2490F00E79979 /* Alamofire */; };
		9D9B36FE2CE2D3AB00E79979 /* CachedAsyncImage in Frameworks */ = {isa = PBXBuildFile; productRef = 9D9B36FD2CE2D3AB00E79979 /* CachedAsyncImage */; };
		9DBFC2722CECC00300E2544E /* GoogleCast.xcframework in Frameworks */ = {isa = PBXBuildFile; fileRef = 9DBFC2702CECC00200E2544E /* GoogleCast.xcframework */; platformFilter = ios; };
		9DBFC2732CECC01300E2544E /* GoogleCast.xcframework in Embed Frameworks */ = {isa = PBXBuildFile; fileRef = 9DBFC2702CECC00200E2544E /* GoogleCast.xcframework */; platformFilter = ios; settings = {ATTRIBUTES = (CodeSignOnCopy, RemoveHeadersOnCopy, ); }; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		9D9B36D82CE2192300E79979 /* Embed Frameworks */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "";
			dstSubfolderSpec = 10;
			files = (
				9DBFC2732CECC01300E2544E /* GoogleCast.xcframework in Embed Frameworks */,
				9D2165D42CE67E66008747ED /* RealmSwift in Embed Frameworks */,
				9D2167212CEC00C2008747ED /* MobileVLCKit.xcframework in Embed Frameworks */,
				9D2166F22CEBECA5008747ED /* TVVLCKit.xcframework in Embed Frameworks */,
			);
			name = "Embed Frameworks";
			runOnlyForDeploymentPostprocessing = 0;
		};
		9DBFC3432CED6CD200E2544E /* Embed Foundation Extensions */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "";
			dstSubfolderSpec = 13;
			files = (
			);
			name = "Embed Foundation Extensions";
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		9D2166E72CEBE2D1008747ED /* MobileVLCKit.xcframework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.xcframework; name = MobileVLCKit.xcframework; path = Carthage/Build/MobileVLCKit.xcframework; sourceTree = "<group>"; };
		9D779F112CE572EF00F6771A /* libboringssl.tbd */ = {isa = PBXFileReference; lastKnownFileType = "sourcecode.text-based-dylib-definition"; name = libboringssl.tbd; path = usr/lib/libboringssl.tbd; sourceTree = SDKROOT; };
		9D9B36752CE02D8A00E79979 /* IPTV.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = IPTV.app; sourceTree = BUILT_PRODUCTS_DIR; };
		9D9B36A62CE042FC00E79979 /* VideoToolbox.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = VideoToolbox.framework; path = System/Library/Frameworks/VideoToolbox.framework; sourceTree = SDKROOT; };
		9D9B36A82CE0430600E79979 /* AudioToolbox.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = AudioToolbox.framework; path = System/Library/Frameworks/AudioToolbox.framework; sourceTree = SDKROOT; };
		9D9B36AA2CE0430C00E79979 /* AVFoundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = AVFoundation.framework; path = System/Library/Frameworks/AVFoundation.framework; sourceTree = SDKROOT; };
		9D9B36AC2CE0430F00E79979 /* CFNetwork.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CFNetwork.framework; path = System/Library/Frameworks/CFNetwork.framework; sourceTree = SDKROOT; };
		9D9B36AE2CE0431500E79979 /* CoreFoundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreFoundation.framework; path = System/Library/Frameworks/CoreFoundation.framework; sourceTree = SDKROOT; };
		9D9B36B02CE0431E00E79979 /* libbz2.tbd */ = {isa = PBXFileReference; lastKnownFileType = "sourcecode.text-based-dylib-definition"; name = libbz2.tbd; path = usr/lib/libbz2.tbd; sourceTree = SDKROOT; };
		9D9B36B12CE0432900E79979 /* libc.tbd */ = {isa = PBXFileReference; lastKnownFileType = "sourcecode.text-based-dylib-definition"; name = libc.tbd; path = usr/lib/libc.tbd; sourceTree = SDKROOT; };
		9D9B36B22CE0433400E79979 /* OpenGLES.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = OpenGLES.framework; path = System/Library/Frameworks/OpenGLES.framework; sourceTree = SDKROOT; };
		9D9B36B42CE0433800E79979 /* libxml2.tbd */ = {isa = PBXFileReference; lastKnownFileType = "sourcecode.text-based-dylib-definition"; name = libxml2.tbd; path = usr/lib/libxml2.tbd; sourceTree = SDKROOT; };
		9D9B36B52CE0433E00E79979 /* QuartzCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = QuartzCore.framework; path = System/Library/Frameworks/QuartzCore.framework; sourceTree = SDKROOT; };
		9D9B36B72CE0434200E79979 /* Security.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Security.framework; path = System/Library/Frameworks/Security.framework; sourceTree = SDKROOT; };
		9D9B36BD2CE0439100E79979 /* TVUIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = TVUIKit.framework; path = System/Library/Frameworks/TVUIKit.framework; sourceTree = SDKROOT; };
		9D9B36C42CE0454400E79979 /* libc++.tbd */ = {isa = PBXFileReference; lastKnownFileType = "sourcecode.text-based-dylib-definition"; name = "libc++.tbd"; path = "usr/lib/libc++.tbd"; sourceTree = SDKROOT; };
		9D9B36C52CE0454C00E79979 /* libiconv.tbd */ = {isa = PBXFileReference; lastKnownFileType = "sourcecode.text-based-dylib-definition"; name = libiconv.tbd; path = usr/lib/libiconv.tbd; sourceTree = SDKROOT; };
		9D9B36C62CE0456A00E79979 /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = System/Library/Frameworks/UIKit.framework; sourceTree = SDKROOT; };
		9D9B36D52CE2192300E79979 /* TVVLCKit.xcframework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.xcframework; name = TVVLCKit.xcframework; path = Carthage/Build/TVVLCKit.xcframework; sourceTree = "<group>"; };
		9DBFC2702CECC00200E2544E /* GoogleCast.xcframework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.xcframework; path = GoogleCast.xcframework; sourceTree = "<group>"; };
		9DBFC3352CED6CD100E2544E /* TVServices.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = TVServices.framework; path = System/Library/Frameworks/TVServices.framework; sourceTree = SDKROOT; };
/* End PBXFileReference section */

/* Begin PBXFileSystemSynchronizedBuildFileExceptionSet section */
		9D9B36A22CE0391800E79979 /* Exceptions for "IPTV" folder in "IPTV" target */ = {
			isa = PBXFileSystemSynchronizedBuildFileExceptionSet;
			membershipExceptions = (
				Info.plist,
				"Preview Content/Preview Assets.xcassets",
			);
			target = 9D9B36742CE02D8A00E79979 /* IPTV */;
		};
/* End PBXFileSystemSynchronizedBuildFileExceptionSet section */

/* Begin PBXFileSystemSynchronizedRootGroup section */
		9D9B36772CE02D8A00E79979 /* IPTV */ = {
			isa = PBXFileSystemSynchronizedRootGroup;
			exceptions = (
				9D9B36A22CE0391800E79979 /* Exceptions for "IPTV" folder in "IPTV" target */,
			);
			path = IPTV;
			sourceTree = "<group>";
		};
/* End PBXFileSystemSynchronizedRootGroup section */

/* Begin PBXFrameworksBuildPhase section */
		9D9B36722CE02D8A00E79979 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9D9B36AF2CE0431500E79979 /* CoreFoundation.framework in Frameworks */,
				9D779F262CE583FA00F6771A /* RealmSwift in Frameworks */,
				9D2166F12CEBECA5008747ED /* TVVLCKit.xcframework in Frameworks */,
				9D7867B82E0B096F00D68E99 /* IPTVComponents in Frameworks */,
				9D2166EC2CEBE6C3008747ED /* FontAwesome in Frameworks */,
				9D2167202CEC00C2008747ED /* MobileVLCKit.xcframework in Frameworks */,
				9DBFC2722CECC00300E2544E /* GoogleCast.xcframework in Frameworks */,
				9D9B36C72CE0456B00E79979 /* UIKit.framework in Frameworks */,
				9D9B36A72CE042FC00E79979 /* VideoToolbox.framework in Frameworks */,
				9D9B36B62CE0433E00E79979 /* QuartzCore.framework in Frameworks */,
				9D9B36A92CE0430600E79979 /* AudioToolbox.framework in Frameworks */,
				9D9B36AD2CE0430F00E79979 /* CFNetwork.framework in Frameworks */,
				9D9B36AB2CE0430C00E79979 /* AVFoundation.framework in Frameworks */,
				9D9B36ED2CE2490F00E79979 /* Alamofire in Frameworks */,
				9D9B36B82CE0434200E79979 /* Security.framework in Frameworks */,
				9D7867BA2E0B0C8300D68E99 /* IPTVModels in Frameworks */,
				9D9B36FE2CE2D3AB00E79979 /* CachedAsyncImage in Frameworks */,
				9D9B36B32CE0433400E79979 /* OpenGLES.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		9D9B366C2CE02D8A00E79979 = {
			isa = PBXGroup;
			children = (
				9D9B36772CE02D8A00E79979 /* IPTV */,
				9D9B36A52CE042FC00E79979 /* Frameworks */,
				9D9B36762CE02D8A00E79979 /* Products */,
			);
			sourceTree = "<group>";
		};
		9D9B36762CE02D8A00E79979 /* Products */ = {
			isa = PBXGroup;
			children = (
				9D9B36752CE02D8A00E79979 /* IPTV.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		9D9B36A52CE042FC00E79979 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				9DBFC2702CECC00200E2544E /* GoogleCast.xcframework */,
				9D2166E72CEBE2D1008747ED /* MobileVLCKit.xcframework */,
				9D779F112CE572EF00F6771A /* libboringssl.tbd */,
				9D9B36D52CE2192300E79979 /* TVVLCKit.xcframework */,
				9D9B36C62CE0456A00E79979 /* UIKit.framework */,
				9D9B36C52CE0454C00E79979 /* libiconv.tbd */,
				9D9B36C42CE0454400E79979 /* libc++.tbd */,
				9D9B36BD2CE0439100E79979 /* TVUIKit.framework */,
				9D9B36B72CE0434200E79979 /* Security.framework */,
				9D9B36B52CE0433E00E79979 /* QuartzCore.framework */,
				9D9B36B42CE0433800E79979 /* libxml2.tbd */,
				9D9B36B22CE0433400E79979 /* OpenGLES.framework */,
				9D9B36B12CE0432900E79979 /* libc.tbd */,
				9D9B36B02CE0431E00E79979 /* libbz2.tbd */,
				9D9B36AE2CE0431500E79979 /* CoreFoundation.framework */,
				9D9B36AC2CE0430F00E79979 /* CFNetwork.framework */,
				9D9B36AA2CE0430C00E79979 /* AVFoundation.framework */,
				9D9B36A82CE0430600E79979 /* AudioToolbox.framework */,
				9D9B36A62CE042FC00E79979 /* VideoToolbox.framework */,
				9DBFC3352CED6CD100E2544E /* TVServices.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		9D9B36742CE02D8A00E79979 /* IPTV */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 9D9B36852CE02D8B00E79979 /* Build configuration list for PBXNativeTarget "IPTV" */;
			buildPhases = (
				9D9B36712CE02D8A00E79979 /* Sources */,
				9D9B36722CE02D8A00E79979 /* Frameworks */,
				9D9B36732CE02D8A00E79979 /* Resources */,
				9D9B36D82CE2192300E79979 /* Embed Frameworks */,
				9DBFC3432CED6CD200E2544E /* Embed Foundation Extensions */,
			);
			buildRules = (
			);
			dependencies = (
			);
			fileSystemSynchronizedGroups = (
				9D9B36772CE02D8A00E79979 /* IPTV */,
			);
			name = IPTV;
			packageProductDependencies = (
				9D9B36EC2CE2490F00E79979 /* Alamofire */,
				9D9B36FD2CE2D3AB00E79979 /* CachedAsyncImage */,
				9D779F252CE583FA00F6771A /* RealmSwift */,
				9D2166EB2CEBE6C3008747ED /* FontAwesome */,
				9D7867B72E0B096F00D68E99 /* IPTVComponents */,
				9D7867B92E0B0C8300D68E99 /* IPTVModels */,
			);
			productName = IPTV;
			productReference = 9D9B36752CE02D8A00E79979 /* IPTV.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		9D9B366D2CE02D8A00E79979 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = 1;
				LastSwiftUpdateCheck = 1620;
				LastUpgradeCheck = 1640;
				TargetAttributes = {
					9D9B36742CE02D8A00E79979 = {
						CreatedOnToolsVersion = 16.1;
					};
				};
			};
			buildConfigurationList = 9D9B36702CE02D8A00E79979 /* Build configuration list for PBXProject "IPTV" */;
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 9D9B366C2CE02D8A00E79979;
			minimizedProjectReferenceProxies = 1;
			packageReferences = (
				9D9B36EB2CE2490F00E79979 /* XCRemoteSwiftPackageReference "Alamofire" */,
				9D9B36FC2CE2D3AB00E79979 /* XCRemoteSwiftPackageReference "swiftui-cached-async-image" */,
				9D779F222CE583FA00F6771A /* XCRemoteSwiftPackageReference "realm-swift" */,
				9D2166EA2CEBE6C3008747ED /* XCRemoteSwiftPackageReference "FontAwesome.swift" */,
				9D7867B22E0B07AA00D68E99 /* XCLocalSwiftPackageReference "Components" */,
			);
			preferredProjectObjectVersion = 77;
			productRefGroup = 9D9B36762CE02D8A00E79979 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				9D9B36742CE02D8A00E79979 /* IPTV */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		9D9B36732CE02D8A00E79979 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		9D9B36712CE02D8A00E79979 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		9D2166ED2CEBE906008747ED /* Debug-iOS */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReferenceAnchor = 9D9B36772CE02D8A00E79979 /* IPTV */;
			baseConfigurationReferenceRelativePath = Configs/dev.xcconfig;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DEVELOPMENT_TEAM = 4D3FPL7ALU;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				ENABLE_USER_SCRIPT_SANDBOXING = YES;
				GCC_C_LANGUAGE_STANDARD = gnu17;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				LOCALIZATION_PREFERS_STRING_CATALOGS = YES;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = appletvos;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "DEBUG $(inherited)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				TVOS_DEPLOYMENT_TARGET = 18.1;
			};
			name = "Debug-iOS";
		};
		9D2166EE2CEBE906008747ED /* Debug-iOS */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReferenceAnchor = 9D9B36772CE02D8A00E79979 /* IPTV */;
			baseConfigurationReferenceRelativePath = Configs/dev.xcconfig;
			buildSettings = {
				ALLOW_TARGET_PLATFORM_SPECIALIZATION = YES;
				ASSETCATALOG_COMPILER_ALTERNATE_APPICON_NAMES = "";
				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
				"ASSETCATALOG_COMPILER_APPICON_NAME[sdk=iphone*]" = AppIcon;
				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
				ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS = YES;
				ASSETCATALOG_COMPILER_SKIP_APP_STORE_DEPLOYMENT = YES;
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_ASSET_PATHS = "\"IPTV/Preview Content\"";
				ENABLE_PREVIEWS = YES;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_FILE = IPTV/Info.plist;
				INFOPLIST_KEY_CFBundleDisplayName = "";
				INFOPLIST_KEY_LSApplicationCategoryType = "public.app-category.video";
				INFOPLIST_KEY_NSLocalNetworkUsageDescription = "IPTV uses the local network to discover Cast-enabled devices on your WiFi\nnetwork.";
				INFOPLIST_KEY_UILaunchScreen_Generation = YES;
				INFOPLIST_KEY_UIRequiresFullScreen = YES;
				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPad = "UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
				INFOPLIST_KEY_UIUserInterfaceStyle = Automatic;
				IPHONEOS_DEPLOYMENT_TARGET = 18.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = "$(XCC_VERSION_NAME)";
				OTHER_LDFLAGS = "\"-ObjC -lc++\"";
				PRODUCT_BUNDLE_IDENTIFIER = fr.meublin.IPTV;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SUPPORTED_PLATFORMS = "appletvos appletvsimulator iphoneos iphonesimulator";
				SUPPORTS_MACCATALYST = NO;
				SUPPORTS_MAC_DESIGNED_FOR_IPHONE_IPAD = YES;
				SWIFT_EMIT_LOC_STRINGS = YES;
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "2,3,6";
				TVOS_DEPLOYMENT_TARGET = 18.0;
			};
			name = "Debug-iOS";
		};
		9D9B36832CE02D8B00E79979 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReferenceAnchor = 9D9B36772CE02D8A00E79979 /* IPTV */;
			baseConfigurationReferenceRelativePath = Configs/dev.xcconfig;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DEVELOPMENT_TEAM = 4D3FPL7ALU;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				ENABLE_USER_SCRIPT_SANDBOXING = YES;
				GCC_C_LANGUAGE_STANDARD = gnu17;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				LOCALIZATION_PREFERS_STRING_CATALOGS = YES;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = appletvos;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "DEBUG $(inherited)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				TVOS_DEPLOYMENT_TARGET = 18.1;
			};
			name = Debug;
		};
		9D9B36842CE02D8B00E79979 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReferenceAnchor = 9D9B36772CE02D8A00E79979 /* IPTV */;
			baseConfigurationReferenceRelativePath = Configs/default.xcconfig;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DEVELOPMENT_TEAM = 4D3FPL7ALU;
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_USER_SCRIPT_SANDBOXING = YES;
				GCC_C_LANGUAGE_STANDARD = gnu17;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				LOCALIZATION_PREFERS_STRING_CATALOGS = YES;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = appletvos;
				SWIFT_COMPILATION_MODE = wholemodule;
				TVOS_DEPLOYMENT_TARGET = 18.1;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		9D9B36862CE02D8B00E79979 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReferenceAnchor = 9D9B36772CE02D8A00E79979 /* IPTV */;
			baseConfigurationReferenceRelativePath = Configs/dev.xcconfig;
			buildSettings = {
				ALLOW_TARGET_PLATFORM_SPECIALIZATION = YES;
				ASSETCATALOG_COMPILER_ALTERNATE_APPICON_NAMES = "";
				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
				"ASSETCATALOG_COMPILER_APPICON_NAME[sdk=iphone*]" = AppIcon;
				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
				ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS = YES;
				ASSETCATALOG_COMPILER_SKIP_APP_STORE_DEPLOYMENT = YES;
				CODE_SIGN_ENTITLEMENTS = IPTV/IPTVDebug.entitlements;
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_ASSET_PATHS = "\"IPTV/Preview Content\"";
				ENABLE_PREVIEWS = YES;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_FILE = IPTV/Info.plist;
				INFOPLIST_KEY_CFBundleDisplayName = "";
				INFOPLIST_KEY_LSApplicationCategoryType = "public.app-category.video";
				INFOPLIST_KEY_NSLocalNetworkUsageDescription = "IPTV uses the local network to discover Cast-enabled devices on your WiFi\nnetwork.";
				INFOPLIST_KEY_UILaunchScreen_Generation = YES;
				INFOPLIST_KEY_UIRequiresFullScreen = YES;
				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPad = "UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
				INFOPLIST_KEY_UIUserInterfaceStyle = Automatic;
				IPHONEOS_DEPLOYMENT_TARGET = 18.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = "$(XCC_VERSION_NAME)";
				OTHER_LDFLAGS = "\"-ObjC -lc++\"";
				PRODUCT_BUNDLE_IDENTIFIER = fr.meublin.IPTV;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SUPPORTED_PLATFORMS = "appletvos appletvsimulator iphoneos iphonesimulator";
				SUPPORTS_MACCATALYST = NO;
				SUPPORTS_MAC_DESIGNED_FOR_IPHONE_IPAD = YES;
				SWIFT_EMIT_LOC_STRINGS = YES;
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "2,3,6";
				TVOS_DEPLOYMENT_TARGET = 18.0;
			};
			name = Debug;
		};
		9D9B36872CE02D8B00E79979 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReferenceAnchor = 9D9B36772CE02D8A00E79979 /* IPTV */;
			baseConfigurationReferenceRelativePath = Configs/default.xcconfig;
			buildSettings = {
				ALLOW_TARGET_PLATFORM_SPECIALIZATION = YES;
				ASSETCATALOG_COMPILER_ALTERNATE_APPICON_NAMES = "";
				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
				"ASSETCATALOG_COMPILER_APPICON_NAME[sdk=iphone*]" = AppIcon;
				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
				ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS = YES;
				ASSETCATALOG_COMPILER_SKIP_APP_STORE_DEPLOYMENT = YES;
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_ASSET_PATHS = "\"IPTV/Preview Content\"";
				ENABLE_PREVIEWS = YES;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_FILE = IPTV/Info.plist;
				INFOPLIST_KEY_CFBundleDisplayName = "";
				INFOPLIST_KEY_LSApplicationCategoryType = "public.app-category.video";
				INFOPLIST_KEY_NSLocalNetworkUsageDescription = "IPTV uses the local network to discover Cast-enabled devices on your WiFi\nnetwork.";
				INFOPLIST_KEY_UILaunchScreen_Generation = YES;
				INFOPLIST_KEY_UIRequiresFullScreen = YES;
				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPad = "UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
				INFOPLIST_KEY_UIUserInterfaceStyle = Automatic;
				IPHONEOS_DEPLOYMENT_TARGET = 18.0;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = "$(XCC_VERSION_NAME)";
				OTHER_LDFLAGS = "\"-ObjC -lc++\"";
				PRODUCT_BUNDLE_IDENTIFIER = fr.meublin.IPTV;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SUPPORTED_PLATFORMS = "appletvos appletvsimulator iphoneos iphonesimulator";
				SUPPORTS_MACCATALYST = NO;
				SUPPORTS_MAC_DESIGNED_FOR_IPHONE_IPAD = YES;
				SWIFT_EMIT_LOC_STRINGS = YES;
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "2,3,6";
				TVOS_DEPLOYMENT_TARGET = 18.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		9D9B36702CE02D8A00E79979 /* Build configuration list for PBXProject "IPTV" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				9D9B36832CE02D8B00E79979 /* Debug */,
				9D2166ED2CEBE906008747ED /* Debug-iOS */,
				9D9B36842CE02D8B00E79979 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		9D9B36852CE02D8B00E79979 /* Build configuration list for PBXNativeTarget "IPTV" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				9D9B36862CE02D8B00E79979 /* Debug */,
				9D2166EE2CEBE906008747ED /* Debug-iOS */,
				9D9B36872CE02D8B00E79979 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */

/* Begin XCLocalSwiftPackageReference section */
		9D7867B22E0B07AA00D68E99 /* XCLocalSwiftPackageReference "Components" */ = {
			isa = XCLocalSwiftPackageReference;
			relativePath = Components;
		};
/* End XCLocalSwiftPackageReference section */

/* Begin XCRemoteSwiftPackageReference section */
		9D2166EA2CEBE6C3008747ED /* XCRemoteSwiftPackageReference "FontAwesome.swift" */ = {
			isa = XCRemoteSwiftPackageReference;
			repositoryURL = "https://github.com/thii/FontAwesome.swift.git";
			requirement = {
				kind = exactVersion;
				version = 1.9.1;
			};
		};
		9D779F222CE583FA00F6771A /* XCRemoteSwiftPackageReference "realm-swift" */ = {
			isa = XCRemoteSwiftPackageReference;
			repositoryURL = "https://github.com/realm/realm-swift.git";
			requirement = {
				kind = exactVersion;
				version = 20.0.1;
			};
		};
		9D9B36EB2CE2490F00E79979 /* XCRemoteSwiftPackageReference "Alamofire" */ = {
			isa = XCRemoteSwiftPackageReference;
			repositoryURL = "https://github.com/Alamofire/Alamofire.git";
			requirement = {
				kind = exactVersion;
				version = 5.10.1;
			};
		};
		9D9B36FC2CE2D3AB00E79979 /* XCRemoteSwiftPackageReference "swiftui-cached-async-image" */ = {
			isa = XCRemoteSwiftPackageReference;
			repositoryURL = "https://github.com/lorenzofiamingo/swiftui-cached-async-image.git";
			requirement = {
				kind = exactVersion;
				version = 2.1.1;
			};
		};
/* End XCRemoteSwiftPackageReference section */

/* Begin XCSwiftPackageProductDependency section */
		9D2166EB2CEBE6C3008747ED /* FontAwesome */ = {
			isa = XCSwiftPackageProductDependency;
			package = 9D2166EA2CEBE6C3008747ED /* XCRemoteSwiftPackageReference "FontAwesome.swift" */;
			productName = FontAwesome;
		};
		9D779F252CE583FA00F6771A /* RealmSwift */ = {
			isa = XCSwiftPackageProductDependency;
			package = 9D779F222CE583FA00F6771A /* XCRemoteSwiftPackageReference "realm-swift" */;
			productName = RealmSwift;
		};
		9D7867B72E0B096F00D68E99 /* IPTVComponents */ = {
			isa = XCSwiftPackageProductDependency;
			package = 9D7867B22E0B07AA00D68E99 /* XCLocalSwiftPackageReference "Components" */;
			productName = IPTVComponents;
		};
		9D7867B92E0B0C8300D68E99 /* IPTVModels */ = {
			isa = XCSwiftPackageProductDependency;
			package = 9D7867B22E0B07AA00D68E99 /* XCLocalSwiftPackageReference "Components" */;
			productName = IPTVModels;
		};
		9D9B36EC2CE2490F00E79979 /* Alamofire */ = {
			isa = XCSwiftPackageProductDependency;
			package = 9D9B36EB2CE2490F00E79979 /* XCRemoteSwiftPackageReference "Alamofire" */;
			productName = Alamofire;
		};
		9D9B36FD2CE2D3AB00E79979 /* CachedAsyncImage */ = {
			isa = XCSwiftPackageProductDependency;
			package = 9D9B36FC2CE2D3AB00E79979 /* XCRemoteSwiftPackageReference "swiftui-cached-async-image" */;
			productName = CachedAsyncImage;
		};
/* End XCSwiftPackageProductDependency section */
	};
	rootObject = 9D9B366D2CE02D8A00E79979 /* Project object */;
}



================================================
FILE: sources/IPTV.xcodeproj/project.xcworkspace/contents.xcworkspacedata
================================================
<?xml version="1.0" encoding="UTF-8"?>
<Workspace
   version = "1.0">
   <FileRef
      location = "self:">
   </FileRef>
</Workspace>



================================================
FILE: sources/IPTV.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved
================================================
{
  "originHash" : "28a6bfedd14a1266cc2ef10ba021a09146c3ac28f96d8536f49f5dcf2a724424",
  "pins" : [
    {
      "identity" : "alamofire",
      "kind" : "remoteSourceControl",
      "location" : "https://github.com/Alamofire/Alamofire.git",
      "state" : {
        "revision" : "e16d3481f5ed35f0472cb93350085853d754913f",
        "version" : "5.10.1"
      }
    },
    {
      "identity" : "fontawesome.swift",
      "kind" : "remoteSourceControl",
      "location" : "https://github.com/thii/FontAwesome.swift.git",
      "state" : {
        "revision" : "07883a32d49dfc7bdedbeea115067b53dfbeeb43",
        "version" : "1.9.1"
      }
    },
    {
      "identity" : "realm-core",
      "kind" : "remoteSourceControl",
      "location" : "https://github.com/realm/realm-core.git",
      "state" : {
        "revision" : "15493076ad9fef22c16cc64cbfbf9e5b65c385f9",
        "version" : "20.1.0"
      }
    },
    {
      "identity" : "realm-swift",
      "kind" : "remoteSourceControl",
      "location" : "https://github.com/realm/realm-swift.git",
      "state" : {
        "revision" : "bae6c4be7df169fdb047d0ad63f902c1e2665e83",
        "version" : "20.0.1"
      }
    },
    {
      "identity" : "swiftui-cached-async-image",
      "kind" : "remoteSourceControl",
      "location" : "https://github.com/lorenzofiamingo/swiftui-cached-async-image.git",
      "state" : {
        "revision" : "467a3d17479887943ab917a379e62bbaff60ac8a",
        "version" : "2.1.1"
      }
    }
  ],
  "version" : 3
}



================================================
FILE: sources/IPTV.xcodeproj/xcshareddata/xcschemes/IPTV-iOS.xcscheme
================================================
<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1640"
   version = "1.7">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES"
      buildArchitectures = "Automatic">
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "9D9B36742CE02D8A00E79979"
               BuildableName = "IPTV.app"
               BlueprintName = "IPTV"
               ReferencedContainer = "container:IPTV.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES"
      shouldAutocreateTestPlan = "YES">
      <Testables>
         <TestableReference
            skipped = "NO"
            parallelizable = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "9D092DB72D195E3E0030391E"
               BuildableName = "IPTVTests.xctest"
               BlueprintName = "IPTVTests"
               ReferencedContainer = "container:IPTV.xcodeproj">
            </BuildableReference>
         </TestableReference>
      </Testables>
   </TestAction>
   <LaunchAction
      buildConfiguration = "Debug-iOS"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "9D9B36742CE02D8A00E79979"
            BuildableName = "IPTV.app"
            BlueprintName = "IPTV"
            ReferencedContainer = "container:IPTV.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Release"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "9D9B36742CE02D8A00E79979"
            BuildableName = "IPTV.app"
            BlueprintName = "IPTV"
            ReferencedContainer = "container:IPTV.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
   </ArchiveAction>
</Scheme>



================================================
FILE: sources/IPTV.xcodeproj/xcshareddata/xcschemes/IPTV-PROD.xcscheme
================================================
<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1640"
   version = "1.7">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES"
      buildArchitectures = "Automatic">
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "9D9B36742CE02D8A00E79979"
               BuildableName = "IPTV.app"
               BlueprintName = "IPTV"
               ReferencedContainer = "container:IPTV.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES"
      shouldAutocreateTestPlan = "YES">
      <Testables>
         <TestableReference
            skipped = "NO"
            parallelizable = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "9D092DB72D195E3E0030391E"
               BuildableName = "IPTVTests.xctest"
               BlueprintName = "IPTVTests"
               ReferencedContainer = "container:IPTV.xcodeproj">
            </BuildableReference>
         </TestableReference>
      </Testables>
   </TestAction>
   <LaunchAction
      buildConfiguration = "Release"
      selectedDebuggerIdentifier = ""
      selectedLauncherIdentifier = "Xcode.IDEFoundation.Launcher.PosixSpawn"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "9D9B36742CE02D8A00E79979"
            BuildableName = "IPTV.app"
            BlueprintName = "IPTV"
            ReferencedContainer = "container:IPTV.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Release"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "9D9B36742CE02D8A00E79979"
            BuildableName = "IPTV.app"
            BlueprintName = "IPTV"
            ReferencedContainer = "container:IPTV.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
   </ArchiveAction>
</Scheme>



================================================
FILE: sources/IPTV.xcodeproj/xcshareddata/xcschemes/IPTV-tvos.xcscheme
================================================
<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1640"
   version = "1.7">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES"
      buildArchitectures = "Automatic">
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "9D2166FA2CEBFF97008747ED"
               BuildableName = "IPTV-tvOS.app"
               BlueprintName = "IPTV-tvOS"
               ReferencedContainer = "container:IPTV.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES"
      shouldAutocreateTestPlan = "YES">
   </TestAction>
   <LaunchAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "9D2166FA2CEBFF97008747ED"
            BuildableName = "IPTV-tvOS.app"
            BlueprintName = "IPTV-tvOS"
            ReferencedContainer = "container:IPTV.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Release"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "9D2166FA2CEBFF97008747ED"
            BuildableName = "IPTV-tvOS.app"
            BlueprintName = "IPTV-tvOS"
            ReferencedContainer = "container:IPTV.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
   </ArchiveAction>
</Scheme>



================================================
FILE: sources/IPTV.xcodeproj/xcshareddata/xcschemes/IPTV.xcscheme
================================================
<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1640"
   version = "1.7">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES"
      buildArchitectures = "Automatic">
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "9D9B36742CE02D8A00E79979"
               BuildableName = "IPTV.app"
               BlueprintName = "IPTV"
               ReferencedContainer = "container:IPTV.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES"
      shouldAutocreateTestPlan = "YES">
      <Testables>
         <TestableReference
            skipped = "NO"
            parallelizable = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "9D092DB72D195E3E0030391E"
               BuildableName = "IPTVTests.xctest"
               BlueprintName = "IPTVTests"
               ReferencedContainer = "container:IPTV.xcodeproj">
            </BuildableReference>
         </TestableReference>
      </Testables>
   </TestAction>
   <LaunchAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "9D9B36742CE02D8A00E79979"
            BuildableName = "IPTV.app"
            BlueprintName = "IPTV"
            ReferencedContainer = "container:IPTV.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Release"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "9D9B36742CE02D8A00E79979"
            BuildableName = "IPTV.app"
            BlueprintName = "IPTV"
            ReferencedContainer = "container:IPTV.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
   </ArchiveAction>
</Scheme>



================================================
FILE: sources/IPTV.xcworkspace/contents.xcworkspacedata
================================================
<?xml version="1.0" encoding="UTF-8"?>
<Workspace
   version = "1.0">
   <FileRef
      location = "group:IPTV.xcodeproj">
   </FileRef>
</Workspace>



================================================
FILE: sources/IPTV.xcworkspace/xcshareddata/swiftpm/Package.resolved
================================================
{
  "originHash" : "28a6bfedd14a1266cc2ef10ba021a09146c3ac28f96d8536f49f5dcf2a724424",
  "pins" : [
    {
      "identity" : "alamofire",
      "kind" : "remoteSourceControl",
      "location" : "https://github.com/Alamofire/Alamofire.git",
      "state" : {
        "revision" : "e16d3481f5ed35f0472cb93350085853d754913f",
        "version" : "5.10.1"
      }
    },
    {
      "identity" : "fontawesome.swift",
      "kind" : "remoteSourceControl",
      "location" : "https://github.com/thii/FontAwesome.swift.git",
      "state" : {
        "revision" : "07883a32d49dfc7bdedbeea115067b53dfbeeb43",
        "version" : "1.9.1"
      }
    },
    {
      "identity" : "realm-core",
      "kind" : "remoteSourceControl",
      "location" : "https://github.com/realm/realm-core.git",
      "state" : {
        "revision" : "15493076ad9fef22c16cc64cbfbf9e5b65c385f9",
        "version" : "20.1.0"
      }
    },
    {
      "identity" : "realm-swift",
      "kind" : "remoteSourceControl",
      "location" : "https://github.com/realm/realm-swift.git",
      "state" : {
        "revision" : "bae6c4be7df169fdb047d0ad63f902c1e2665e83",
        "version" : "20.0.1"
      }
    },
    {
      "identity" : "swiftui-cached-async-image",
      "kind" : "remoteSourceControl",
      "location" : "https://github.com/lorenzofiamingo/swiftui-cached-async-image.git",
      "state" : {
        "revision" : "467a3d17479887943ab917a379e62bbaff60ac8a",
        "version" : "2.1.1"
      }
    }
  ],
  "version" : 3
}



================================================
FILE: sources/IPTVTestsTests/Generated/AutoMockableIPTV.generated.swift
================================================
// Generated using Sourcery 1.5.0 — https://github.com/krzysztofzablocki/Sourcery
// DO NOT EDIT

// swiftlint:disable all
// swiftlint:disable vertical_whitespace

import Foundation
#if os(iOS) || os(tvOS) || os(watchOS)
import SwiftUI
import XCTest
#elseif os(OSX)
import AppKit
#endif

@testable import IPTV

import Combine
private func objectDidNotCallAnyMethod(_ object: Any) -> Bool {
    let mirror = Mirror(reflecting: object)
    for case let (label?, value) in mirror.children where label.hasSuffix("CallsCount") {
        if let count = value as? Int, count > 0 {
            return false
        }
    }
    return true
}

private func objectDidNotCallAnyMethod(_ object: Any, except methodName: String) -> Bool {
    let mirror = Mirror(reflecting: object)
    for case let (label?, value) in mirror.children where label.hasSuffix("CallsCount") {
        let methodCallsCountName = methodName + "CallsCount"
        if let count = value as? Int, (label == methodCallsCountName && count == 0) || (label != methodCallsCountName && count > 0) { return false }
    }
    return true
}

private func calledStringMethods(in object: Any) -> [String] {
    var methods: [String] = []
    let mirror = Mirror(reflecting: object)
    for case let (label?, value) in mirror.children where label.hasSuffix("CallsCount") {
        let callsCount = (value as? Int) ?? 0
        if callsCount > 0 {
            let methodName = label.replacingOccurrences(of: "CallsCount", with: "")
            methods.append(methodName)
        }
    }
    return methods
}

private func objectDidNotCallAnyMethod(_ object: Any, except methodsNames: [String]) -> Bool {
    let calledStringsMethodsSet = Set(calledStringMethods(in: object))
    let methodsNamesSet = Set(methodsNames)
    return calledStringsMethodsSet.count == methodsNamesSet.count &&
        methodsNamesSet.isSubset(of: calledStringsMethodsSet)
}

class APIManagerProtocolMock {
    var baseURL: String {
        get { return underlyingBaseURL }
        set(value) { underlyingBaseURL = value }
    }

    var underlyingBaseURL: String!
    var liveURL: String {
        get { return underlyingLiveURL }
        set(value) { underlyingLiveURL = value }
    }

    var underlyingLiveURL: String!
    var vodURL: String {
        get { return underlyingVodURL }
        set(value) { underlyingVodURL = value }
    }

    var underlyingVodURL: String!
    var serieURL: String {
        get { return underlyingSerieURL }
        set(value) { underlyingSerieURL = value }
    }

    var underlyingSerieURL: String!

    // MARK: - fetchCategories

    lazy var fetchCategoriesFromCompletionExpectation: XCTestExpectation = .init(description: "fetchCategoriesFromCompletion")
    var fetchCategoriesFromCompletionCallsCount: Int = 0
    var fetchCategoriesFromCompletionCalledOnQueueLabel: String?
    var fetchCategoriesFromCompletionCalled: Bool {
        return fetchCategoriesFromCompletionCallsCount > 0
    }

    var fetchCategoriesFromCompletionCalledOnly: Bool {
        return objectDidNotCallAnyMethod(self, except: "fetchCategoriesFromCompletion")
    }

    var fetchCategoriesFromCompletionCalledOnlyAndOnce: Bool {
        return fetchCategoriesFromCompletionCalledOnly && fetchCategoriesFromCompletionCallsCount == 1
    }

    var fetchCategoriesFromCompletionReceivedArguments: (url: URL, completion: (Result<[Category], Error>) -> Void)?
    var fetchCategoriesFromCompletionClosure: ((URL, @escaping (Result<[Category], Error>) -> Void) -> Void)?

    // MARK: - fetchStreams

    lazy var fetchStreamsForCompletionExpectation: XCTestExpectation = .init(description: "fetchStreamsForCompletion")
    var fetchStreamsForCompletionCallsCount: Int = 0
    var fetchStreamsForCompletionCalledOnQueueLabel: String?
    var fetchStreamsForCompletionCalled: Bool {
        return fetchStreamsForCompletionCallsCount > 0
    }

    var fetchStreamsForCompletionCalledOnly: Bool {
        return objectDidNotCallAnyMethod(self, except: "fetchStreamsForCompletion")
    }

    var fetchStreamsForCompletionCalledOnlyAndOnce: Bool {
        return fetchStreamsForCompletionCalledOnly && fetchStreamsForCompletionCallsCount == 1
    }

    var fetchStreamsForCompletionReceivedArguments: (categoryAPI: String, completion: (Result<[Stream], Error>) -> Void)?
    var fetchStreamsForCompletionClosure: ((String, @escaping (Result<[Stream], Error>) -> Void) -> Void)?

    // MARK: - fetchSeries

    lazy var fetchSeriesForCompletionExpectation: XCTestExpectation = .init(description: "fetchSeriesForCompletion")
    var fetchSeriesForCompletionCallsCount: Int = 0
    var fetchSeriesForCompletionCalledOnQueueLabel: String?
    var fetchSeriesForCompletionCalled: Bool {
        return fetchSeriesForCompletionCallsCount > 0
    }

    var fetchSeriesForCompletionCalledOnly: Bool {
        return objectDidNotCallAnyMethod(self, except: "fetchSeriesForCompletion")
    }

    var fetchSeriesForCompletionCalledOnlyAndOnce: Bool {
        return fetchSeriesForCompletionCalledOnly && fetchSeriesForCompletionCallsCount == 1
    }

    var fetchSeriesForCompletionReceivedArguments: (categoryAPI: String, completion: (Result<[Series], Error>) -> Void)?
    var fetchSeriesForCompletionClosure: ((String, @escaping (Result<[Series], Error>) -> Void) -> Void)?

    // MARK: - fetchSeriesDetails

    lazy var fetchSeriesDetailsFromCompletionExpectation: XCTestExpectation = .init(description: "fetchSeriesDetailsFromCompletion")
    var fetchSeriesDetailsFromCompletionCallsCount: Int = 0
    var fetchSeriesDetailsFromCompletionCalledOnQueueLabel: String?
    var fetchSeriesDetailsFromCompletionCalled: Bool {
        return fetchSeriesDetailsFromCompletionCallsCount > 0
    }

    var fetchSeriesDetailsFromCompletionCalledOnly: Bool {
        return objectDidNotCallAnyMethod(self, except: "fetchSeriesDetailsFromCompletion")
    }

    var fetchSeriesDetailsFromCompletionCalledOnlyAndOnce: Bool {
        return fetchSeriesDetailsFromCompletionCalledOnly && fetchSeriesDetailsFromCompletionCallsCount == 1
    }

    var fetchSeriesDetailsFromCompletionReceivedArguments: (urlString: String, completion: (Result<SeriesDetail, Error>) -> Void)?
    var fetchSeriesDetailsFromCompletionClosure: ((String, @escaping (Result<SeriesDetail, Error>) -> Void) -> Void)?

    // MARK: - fetchInfoUser

    lazy var fetchInfoUserFromCompletionExpectation: XCTestExpectation = .init(description: "fetchInfoUserFromCompletion")
    var fetchInfoUserFromCompletionCallsCount: Int = 0
    var fetchInfoUserFromCompletionCalledOnQueueLabel: String?
    var fetchInfoUserFromCompletionCalled: Bool {
        return fetchInfoUserFromCompletionCallsCount > 0
    }

    var fetchInfoUserFromCompletionCalledOnly: Bool {
        return objectDidNotCallAnyMethod(self, except: "fetchInfoUserFromCompletion")
    }

    var fetchInfoUserFromCompletionCalledOnlyAndOnce: Bool {
        return fetchInfoUserFromCompletionCalledOnly && fetchInfoUserFromCompletionCallsCount == 1
    }

    var fetchInfoUserFromCompletionReceivedArguments: (urlString: String, completion: (Result<InfoUserResponse, Error>) -> Void)?
    var fetchInfoUserFromCompletionClosure: ((String, @escaping (Result<InfoUserResponse, Error>) -> Void) -> Void)?

    // MARK: - fetchData

    lazy var fetchDataFromCompletionExpectation: XCTestExpectation = .init(description: "fetchDataFromCompletion")
    var fetchDataFromCompletionCallsCount: Int = 0
    var fetchDataFromCompletionCalledOnQueueLabel: String?
    var fetchDataFromCompletionCalled: Bool {
        return fetchDataFromCompletionCallsCount > 0
    }

    var fetchDataFromCompletionCalledOnly: Bool {
        return objectDidNotCallAnyMethod(self, except: "fetchDataFromCompletion")
    }

    var fetchDataFromCompletionCalledOnlyAndOnce: Bool {
        return fetchDataFromCompletionCalledOnly && fetchDataFromCompletionCallsCount == 1
    }

    var fetchDataFromCompletionReceivedArguments: (url: URL, completion: (Result<Data, Error>) -> Void)?
    var fetchDataFromCompletionClosure: ((URL, @escaping (Result<Data, Error>) -> Void) -> Void)?

    enum MockedMethods: String {
        case fetchCategoriesFromCompletion
        case fetchStreamsForCompletion
        case fetchSeriesForCompletion
        case fetchSeriesDetailsFromCompletion
        case fetchInfoUserFromCompletion
        case fetchDataFromCompletion
    }

    // MARK: - calledOnlyMethods

    func calledOnlyMethods(_ methods: [MockedMethods]) -> Bool {
        objectDidNotCallAnyMethod(self, except: methods.map(\.rawValue))
    }

    // MARK: - noMethodCalled

    var noMethodCalled: Bool {
        return objectDidNotCallAnyMethod(self)
    }

    init(baseURL: String? = nil, liveURL: String? = nil, vodURL: String? = nil, serieURL: String? = nil) {
        self.underlyingBaseURL = baseURL
        self.underlyingLiveURL = liveURL
        self.underlyingVodURL = vodURL
        self.underlyingSerieURL = serieURL
    }
}

extension APIManagerProtocolMock: APIManagerProtocol {
    func fetchCategories(from url: URL, completion: @escaping (Result<[Category], Error>) -> Void) {
        defer {
            fetchCategoriesFromCompletionExpectation.fulfill()
        }
        fetchCategoriesFromCompletionCallsCount += 1
        fetchCategoriesFromCompletionCalledOnQueueLabel = String(cString: __dispatch_queue_get_label(nil))
        fetchCategoriesFromCompletionReceivedArguments = (url: url, completion: completion)
        fetchCategoriesFromCompletionClosure?(url, completion)
    }

    func fetchStreams(for categoryAPI: String, completion: @escaping (Result<[Stream], Error>) -> Void) {
        defer {
            fetchStreamsForCompletionExpectation.fulfill()
        }
        fetchStreamsForCompletionCallsCount += 1
        fetchStreamsForCompletionCalledOnQueueLabel = String(cString: __dispatch_queue_get_label(nil))
        fetchStreamsForCompletionReceivedArguments = (categoryAPI: categoryAPI, completion: completion)
        fetchStreamsForCompletionClosure?(categoryAPI, completion)
    }

    func fetchSeries(for categoryAPI: String, completion: @escaping (Result<[Series], Error>) -> Void) {
        defer {
            fetchSeriesForCompletionExpectation.fulfill()
        }
        fetchSeriesForCompletionCallsCount += 1
        fetchSeriesForCompletionCalledOnQueueLabel = String(cString: __dispatch_queue_get_label(nil))
        fetchSeriesForCompletionReceivedArguments = (categoryAPI: categoryAPI, completion: completion)
        fetchSeriesForCompletionClosure?(categoryAPI, completion)
    }

    func fetchSeriesDetails(from urlString: String, completion: @escaping (Result<SeriesDetail, Error>) -> Void) {
        defer {
            fetchSeriesDetailsFromCompletionExpectation.fulfill()
        }
        fetchSeriesDetailsFromCompletionCallsCount += 1
        fetchSeriesDetailsFromCompletionCalledOnQueueLabel = String(cString: __dispatch_queue_get_label(nil))
        fetchSeriesDetailsFromCompletionReceivedArguments = (urlString: urlString, completion: completion)
        fetchSeriesDetailsFromCompletionClosure?(urlString, completion)
    }

    func fetchInfoUser(from urlString: String, completion: @escaping (Result<InfoUserResponse, Error>) -> Void) {
        defer {
            fetchInfoUserFromCompletionExpectation.fulfill()
        }
        fetchInfoUserFromCompletionCallsCount += 1
        fetchInfoUserFromCompletionCalledOnQueueLabel = String(cString: __dispatch_queue_get_label(nil))
        fetchInfoUserFromCompletionReceivedArguments = (urlString: urlString, completion: completion)
        fetchInfoUserFromCompletionClosure?(urlString, completion)
    }

    func fetchData(from url: URL, completion: @escaping (Result<Data, Error>) -> Void) {
        defer {
            fetchDataFromCompletionExpectation.fulfill()
        }
        fetchDataFromCompletionCallsCount += 1
        fetchDataFromCompletionCalledOnQueueLabel = String(cString: __dispatch_queue_get_label(nil))
        fetchDataFromCompletionReceivedArguments = (url: url, completion: completion)
        fetchDataFromCompletionClosure?(url, completion)
    }
}

class CacheManagerProtocolMock {
    // MARK: - cacheCategories

    lazy var cacheCategoriesForExpectation: XCTestExpectation = .init(description: "cacheCategoriesFor")
    var cacheCategoriesForCallsCount: Int = 0
    var cacheCategoriesForCalledOnQueueLabel: String?
    var cacheCategoriesForCalled: Bool {
        return cacheCategoriesForCallsCount > 0
    }

    var cacheCategoriesForCalledOnly: Bool {
        return objectDidNotCallAnyMethod(self, except: "cacheCategoriesFor")
    }

    var cacheCategoriesForCalledOnlyAndOnce: Bool {
        return cacheCategoriesForCalledOnly && cacheCategoriesForCallsCount == 1
    }

    var cacheCategoriesForReceivedArguments: (categories: [Category], section: String)?
    var cacheCategoriesForClosure: (([Category], String) -> Void)?

    // MARK: - cacheStreams

    lazy var cacheStreamsForExpectation: XCTestExpectation = .init(description: "cacheStreamsFor")
    var cacheStreamsForCallsCount: Int = 0
    var cacheStreamsForCalledOnQueueLabel: String?
    var cacheStreamsForCalled: Bool {
        return cacheStreamsForCallsCount > 0
    }

    var cacheStreamsForCalledOnly: Bool {
        return objectDidNotCallAnyMethod(self, except: "cacheStreamsFor")
    }

    var cacheStreamsForCalledOnlyAndOnce: Bool {
        return cacheStreamsForCalledOnly && cacheStreamsForCallsCount == 1
    }

    var cacheStreamsForReceivedArguments: (streams: [Stream], section: String)?
    var cacheStreamsForClosure: (([Stream], String) -> Void)?

    // MARK: - cacheSeries

    lazy var cacheSeriesForExpectation: XCTestExpectation = .init(description: "cacheSeriesFor")
    var cacheSeriesForCallsCount: Int = 0
    var cacheSeriesForCalledOnQueueLabel: String?
    var cacheSeriesForCalled: Bool {
        return cacheSeriesForCallsCount > 0
    }

    var cacheSeriesForCalledOnly: Bool {
        return objectDidNotCallAnyMethod(self, except: "cacheSeriesFor")
    }

    var cacheSeriesForCalledOnlyAndOnce: Bool {
        return cacheSeriesForCalledOnly && cacheSeriesForCallsCount == 1
    }

    var cacheSeriesForReceivedArguments: (series: [Series], section: String)?
    var cacheSeriesForClosure: (([Series], String) -> Void)?

    // MARK: - fetchCachedCategories

    lazy var fetchCachedCategoriesForExpectation: XCTestExpectation = .init(description: "fetchCachedCategoriesFor")
    var fetchCachedCategoriesForCallsCount: Int = 0
    var fetchCachedCategoriesForCalledOnQueueLabel: String?
    var fetchCachedCategoriesForCalled: Bool {
        return fetchCachedCategoriesForCallsCount > 0
    }

    var fetchCachedCategoriesForCalledOnly: Bool {
        return objectDidNotCallAnyMethod(self, except: "fetchCachedCategoriesFor")
    }

    var fetchCachedCategoriesForCalledOnlyAndOnce: Bool {
        return fetchCachedCategoriesForCalledOnly && fetchCachedCategoriesForCallsCount == 1
    }

    var fetchCachedCategoriesForReceivedSection: String?
    var fetchCachedCategoriesForReturnValue: [CategoryEntity]!
    var fetchCachedCategoriesForClosure: ((String) -> [CategoryEntity])?

    // MARK: - fetchCachedStream

    lazy var fetchCachedStreamForCategoryIdExpectation: XCTestExpectation = .init(description: "fetchCachedStreamForCategoryId")
    var fetchCachedStreamForCategoryIdCallsCount: Int = 0
    var fetchCachedStreamForCategoryIdCalledOnQueueLabel: String?
    var fetchCachedStreamForCategoryIdCalled: Bool {
        return fetchCachedStreamForCategoryIdCallsCount > 0
    }

    var fetchCachedStreamForCategoryIdCalledOnly: Bool {
        return objectDidNotCallAnyMethod(self, except: "fetchCachedStreamForCategoryId")
    }

    var fetchCachedStreamForCategoryIdCalledOnlyAndOnce: Bool {
        return fetchCachedStreamForCategoryIdCalledOnly && fetchCachedStreamForCategoryIdCallsCount == 1
    }

    var fetchCachedStreamForCategoryIdReceivedArguments: (section: String, categoryId: String)?
    var fetchCachedStreamForCategoryIdReturnValue: [Stream]!
    var fetchCachedStreamForCategoryIdClosure: ((String, String) -> [Stream])?

    // MARK: - fetchFilteredCategories

    lazy var fetchFilteredCategoriesForExpectation: XCTestExpectation = .init(description: "fetchFilteredCategoriesFor")
    var fetchFilteredCategoriesForCallsCount: Int = 0
    var fetchFilteredCategoriesForCalledOnQueueLabel: String?
    var fetchFilteredCategoriesForCalled: Bool {
        return fetchFilteredCategoriesForCallsCount > 0
    }

    var fetchFilteredCategoriesForCalledOnly: Bool {
        return objectDidNotCallAnyMethod(self, except: "fetchFilteredCategoriesFor")
    }

    var fetchFilteredCategoriesForCalledOnlyAndOnce: Bool {
        return fetchFilteredCategoriesForCalledOnly && fetchFilteredCategoriesForCallsCount == 1
    }

    var fetchFilteredCategoriesForReceivedSection: String?
    var fetchFilteredCategoriesForReturnValue: [CategoryEntity]!
    var fetchFilteredCategoriesForClosure: ((String) -> [CategoryEntity])?

    enum MockedMethods: String {
        case cacheCategoriesFor
        case cacheStreamsFor
        case cacheSeriesFor
        case fetchCachedCategoriesFor
        case fetchCachedStreamForCategoryId
        case fetchFilteredCategoriesFor
    }

    // MARK: - calledOnlyMethods

    func calledOnlyMethods(_ methods: [MockedMethods]) -> Bool {
        objectDidNotCallAnyMethod(self, except: methods.map(\.rawValue))
    }

    // MARK: - noMethodCalled

    var noMethodCalled: Bool {
        return objectDidNotCallAnyMethod(self)
    }
}

extension CacheManagerProtocolMock: CacheManagerProtocol {
    func cacheCategories(_ categories: [Category], for section: String) {
        defer {
            cacheCategoriesForExpectation.fulfill()
        }
        cacheCategoriesForCallsCount += 1
        cacheCategoriesForCalledOnQueueLabel = String(cString: __dispatch_queue_get_label(nil))
        cacheCategoriesForReceivedArguments = (categories: categories, section: section)
        cacheCategoriesForClosure?(categories, section)
    }

    func cacheStreams(_ streams: [Stream], for section: String) {
        defer {
            cacheStreamsForExpectation.fulfill()
        }
        cacheStreamsForCallsCount += 1
        cacheStreamsForCalledOnQueueLabel = String(cString: __dispatch_queue_get_label(nil))
        cacheStreamsForReceivedArguments = (streams: streams, section: section)
        cacheStreamsForClosure?(streams, section)
    }

    func cacheSeries(_ series: [Series], for section: String) {
        defer {
            cacheSeriesForExpectation.fulfill()
        }
        cacheSeriesForCallsCount += 1
        cacheSeriesForCalledOnQueueLabel = String(cString: __dispatch_queue_get_label(nil))
        cacheSeriesForReceivedArguments = (series: series, section: section)
        cacheSeriesForClosure?(series, section)
    }

    func fetchCachedCategories(for section: String) -> [CategoryEntity] {
        defer {
            fetchCachedCategoriesForExpectation.fulfill()
        }
        fetchCachedCategoriesForCallsCount += 1
        fetchCachedCategoriesForCalledOnQueueLabel = String(cString: __dispatch_queue_get_label(nil))
        fetchCachedCategoriesForReceivedSection = section
        return fetchCachedCategoriesForClosure.map { $0(section) } ?? fetchCachedCategoriesForReturnValue
    }

    func fetchCachedStream(for section: String, categoryId: String) -> [Stream] {
        defer {
            fetchCachedStreamForCategoryIdExpectation.fulfill()
        }
        fetchCachedStreamForCategoryIdCallsCount += 1
        fetchCachedStreamForCategoryIdCalledOnQueueLabel = String(cString: __dispatch_queue_get_label(nil))
        fetchCachedStreamForCategoryIdReceivedArguments = (section: section, categoryId: categoryId)
        return fetchCachedStreamForCategoryIdClosure.map { $0(section, categoryId) } ?? fetchCachedStreamForCategoryIdReturnValue
    }

    func fetchFilteredCategories(for section: String) -> [CategoryEntity] {
        defer {
            fetchFilteredCategoriesForExpectation.fulfill()
        }
        fetchFilteredCategoriesForCallsCount += 1
        fetchFilteredCategoriesForCalledOnQueueLabel = String(cString: __dispatch_queue_get_label(nil))
        fetchFilteredCategoriesForReceivedSection = section
        return fetchFilteredCategoriesForClosure.map { $0(section) } ?? fetchFilteredCategoriesForReturnValue
    }
}


